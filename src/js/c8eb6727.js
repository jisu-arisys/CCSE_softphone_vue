(self.webpackChunkcrm = self.webpackChunkcrm || []).push([[883], {
    50771: pn => {
        pn.exports = {
            name: "SvgComponent",
            functional: !0,
            render(E, a) {
                const {_c: Y, _v: J, data: $, children: k=[]} = a
                    , {class: P, staticClass: M, style: Q, staticStyle: O, attrs: F={}, ...D} = $;
                return Y("svg", {
                    class: [P, M],
                    style: [Q, O],
                    attrs: Object.assign({
                        width: "200",
                        height: "200",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                    }, F),
                    ...D
                }, k.concat([Y("g", {
                    attrs: {
                        "clip-path": "url(#clip0_2839_418831)"
                    }
                }, [Y("path", {
                    attrs: {
                        opacity: ".25",
                        d: "M144.185 120.682c-6.193 24.554 46.255 20.227 33.676 38.445-12.58 18.218-31.438 9.583-76.555 4.967-45.117-4.616-81.517 33.422-75.414 0 6.103-33.423 26.806-29.906 10.553-49.998-16.252-20.092-26.957-92.496 0-92.496 21.742 0 60.476 54.422 110.177 45.443 49.702-8.98 3.756 29.084-2.437 53.639Z",
                        fill: "#A8CCF8"
                    }
                })]), Y("path", {
                    attrs: {
                        d: "M1.544 83.314a4.25 4.25 0 0 1 3.632-4.816l52.49-7.153 55.963-8.47a4.249 4.249 0 0 1 4.841 3.596l9.546 66.273a4.25 4.25 0 0 1-3.6 4.812L15.901 153.185a4.249 4.249 0 0 1-4.812-3.6l-9.545-66.27Z",
                        fill: "#2538BF"
                    }
                }), Y("path", {
                    attrs: {
                        d: "M5.256 79.32a4.25 4.25 0 0 1 3.62-4.826l52.47-7.294 55.939-8.62a4.249 4.249 0 0 1 4.851 3.583l9.724 66.247a4.248 4.248 0 0 1-3.587 4.821L19.801 149.153a4.25 4.25 0 0 1-4.822-3.588L5.256 79.32Z",
                        fill: "#648CFE"
                    }
                }), Y("path", {
                    attrs: {
                        d: "m131.34 124.869-9.622-65.556a.85.85 0 0 0-1.398-.519l-49.405 42.919a1.7 1.7 0 0 0 .406 2.828l54.042 24.807c3.064 1.406 6.467-1.144 5.977-4.479ZM14.46 142.023 4.838 76.467a.85.85 0 0 1 1.19-.898l59.654 26.911a1.7 1.7 0 0 1 .424 2.826l-44.634 39.29c-2.53 2.227-6.523.763-7.012-2.573Z",
                        fill: "#A8CCF8"
                    }
                }), Y("path", {
                    attrs: {
                        d: "m128.725 118.911-47.84-25.869-2.846 1.737 49.482 26.727 1.204-2.595ZM14.147 136.783l39.189-39.928 3.157 1.51-40.306 39.22-2.04-.802Z",
                        fill: "#2538BF"
                    }
                }), Y("path", {
                    attrs: {
                        d: "m20.005 148.522 108.472-15.921a4.249 4.249 0 0 0 3.587-4.821l-1.171-7.979a1.701 1.701 0 0 0-.949-1.287L68.622 89.228a3.4 3.4 0 0 0-3.75.55l-50.32 45.673a1.7 1.7 0 0 0-.54 1.506l1.171 7.978a4.249 4.249 0 0 0 4.822 3.587Z",
                        fill: "#648CFE"
                    }
                }), Y("path", {
                    attrs: {
                        d: "m7.795 73.547 110.392-16.203a3.277 3.277 0 0 1 3.718 2.766c.065.448-.105.898-.451 1.19L71.33 103.698a6.007 6.007 0 0 1-6.319.903L5.791 78.28a1.313 1.313 0 0 1-.766-1.01 3.282 3.282 0 0 1 2.77-3.723Z",
                        fill: "#648CFE"
                    }
                }), Y("mask", {
                    staticStyle: {
                        "mask-type": "alpha"
                    },
                    attrs: {
                        id: "mask0_2839_418831",
                        maskUnits: "userSpaceOnUse",
                        x: "4",
                        y: "57",
                        width: "118",
                        height: "49"
                    }
                }, [Y("path", {
                    attrs: {
                        d: "m7.795 73.547 110.392-16.203a3.276 3.276 0 0 1 3.717 2.766 1.31 1.31 0 0 1-.45 1.19L71.33 103.698a6.007 6.007 0 0 1-6.319.903L5.79 78.28a1.313 1.313 0 0 1-.766-1.01 3.282 3.282 0 0 1 2.77-3.723Z",
                        fill: "#446FE2"
                    }
                })]), Y("g", {
                    attrs: {
                        mask: "url(#mask0_2839_418831)"
                    }
                }, [Y("path", {
                    attrs: {
                        d: "M67.872 102.167c-2.506.368-27.692-9.427-39.556-14.43l.436 2.97 34.34 20.257 41.825-21.823-1.818-12.381c-8.115 6.756-32.255 24.971-35.227 25.407Z",
                        fill: "#2538BF"
                    }
                })]), Y("path", {
                    attrs: {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d: "M192.571 159.299c2.035-.372 4.248-2.254 4.942-4.202.695-1.948-.391-3.226-2.426-2.853l-3.684.674-77.891 14.256-2.516 7.055 77.892-14.255v-.001l3.683-.674Zm-91.896 13.521 10.321 1.408 2.516-7.055-12.837 5.647Z",
                        fill: "#2538BF"
                    }
                }), Y("path", {
                    attrs: {
                        fill: "#FFBF39",
                        d: "m188.715 156.439-77.822 14.629-1.384-7.362 77.822-14.63z"
                    }
                }), Y("path", {
                    attrs: {
                        d: "m98.633 169.563 12.26 1.507c1.57-3.325.925-4.862-1.384-7.362l-10.876 5.855Z",
                        fill: "#C28030"
                    }
                }), Y("path", {
                    attrs: {
                        d: "M195.385 151.376a3.746 3.746 0 0 1-2.989 4.373l-3.681.691-1.383-7.361 3.68-.692a3.745 3.745 0 0 1 4.373 2.989Z",
                        fill: "#fff"
                    }
                }), Y("defs", [Y("clipPath", {
                    attrs: {
                        id: "clip0_2839_418831"
                    }
                }, [Y("path", {
                    attrs: {
                        fill: "#fff",
                        transform: "translate(20 21.6)",
                        d: "M0 0h160v156.209H0z"
                    }
                })])])]))
            }
        }
    }
    ,
    68135: pn => {
        pn.exports = {
            name: "SvgComponent",
            functional: !0,
            render(E, a) {
                const {_c: Y, _v: J, data: $, children: k=[]} = a
                    , {class: P, staticClass: M, style: Q, staticStyle: O, attrs: F={}, ...D} = $;
                return Y("svg", {
                    class: [P, M],
                    style: [Q, O],
                    attrs: Object.assign({
                        width: "28",
                        height: "28",
                        viewBox: "0 0 32 32",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                    }, F),
                    ...D
                }, k.concat([Y("path", {
                    attrs: {
                        opacity: ".1",
                        d: "M0 16C0 7.163 7.163 0 16 0s16 7.163 16 16-7.163 16-16 16S0 24.837 0 16Z",
                        fill: "#0E72ED"
                    }
                }), Y("path", {
                    attrs: {
                        opacity: ".1",
                        d: "M28 16c0 6.627-5.373 12-12 12S4 22.627 4 16 9.373 4 16 4s12 5.373 12 12Z",
                        fill: "#0E72ED"
                    }
                }), Y("mask", {
                    staticStyle: {
                        "mask-type": "alpha"
                    },
                    attrs: {
                        id: "mask0_1885_316166",
                        maskUnits: "userSpaceOnUse",
                        x: "9",
                        y: "10",
                        width: "14",
                        height: "14"
                    }
                }, [Y("path", {
                    attrs: {
                        d: "M11.45 10.2A2.45 2.45 0 0 0 9 12.65v5.201a2.45 2.45 0 0 0 2.45 2.45.15.15 0 0 1 .15.15v2.599a.5.5 0 0 0 .854.354l2.486-2.487a2.1 2.1 0 0 1 1.485-.616h4.125a2.45 2.45 0 0 0 2.45-2.45V12.65a2.45 2.45 0 0 0-2.45-2.45h-9.1Z",
                        fill: "#000001"
                    }
                })]), Y("g", {
                    attrs: {
                        mask: "url(#mask0_1885_316166)"
                    }
                }, [Y("path", {
                    attrs: {
                        fill: "#0E72ED",
                        d: "M8 8.2h16v16H8z"
                    }
                })])]))
            }
        }
    }
    ,
    14174: pn => {
        pn.exports = {
            name: "SvgComponent",
            functional: !0,
            render(E, a) {
                const {_c: Y, _v: J, data: $, children: k=[]} = a
                    , {class: P, staticClass: M, style: Q, staticStyle: O, attrs: F={}, ...D} = $;
                return Y("svg", {
                    class: [P, M],
                    style: [Q, O],
                    attrs: Object.assign({
                        width: "28",
                        height: "28",
                        viewBox: "0 0 32 32",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                    }, F),
                    ...D
                }, k.concat([Y("path", {
                    attrs: {
                        opacity: ".1",
                        d: "M0 16C0 7.163 7.163 0 16 0s16 7.163 16 16-7.163 16-16 16S0 24.837 0 16Z",
                        fill: "#0E72ED"
                    }
                }), Y("path", {
                    attrs: {
                        opacity: ".1",
                        d: "M28 16c0 6.627-5.373 12-12 12S4 22.627 4 16 9.373 4 16 4s12 5.373 12 12Z",
                        fill: "#0E72ED"
                    }
                }), Y("mask", {
                    staticStyle: {
                        "mask-type": "alpha"
                    },
                    attrs: {
                        id: "mask0_1885_316262",
                        maskUnits: "userSpaceOnUse",
                        x: "9",
                        y: "9",
                        width: "15",
                        height: "14"
                    }
                }, [Y("path", {
                    attrs: {
                        d: "M21.25 17.313h-1.025a1.75 1.75 0 0 0-1.238.512l-.918.918a.654.654 0 0 1-.707.15 7.888 7.888 0 0 1-4.255-4.255.654.654 0 0 1 .15-.707l.918-.918a1.75 1.75 0 0 0 .512-1.238V10.75A1.75 1.75 0 0 0 12.938 9h-1.312A2.625 2.625 0 0 0 9 11.625C9 17.901 14.082 22.989 20.355 23A2.635 2.635 0 0 0 23 20.375v-1.313a1.75 1.75 0 0 0-1.75-1.75Z",
                        fill: "#000001"
                    }
                })]), Y("g", {
                    attrs: {
                        mask: "url(#mask0_1885_316262)"
                    }
                }, [Y("path", {
                    attrs: {
                        fill: "#0E72ED",
                        d: "M8 8h16v16H8z"
                    }
                })])]))
            }
        }
    }
    ,
    40441: pn => {
        pn.exports = {
            name: "SvgComponent",
            functional: !0,
            render(E, a) {
                const {_c: Y, _v: J, data: $, children: k=[]} = a
                    , {class: P, staticClass: M, style: Q, staticStyle: O, attrs: F={}, ...D} = $;
                return Y("svg", {
                    class: [P, M],
                    style: [Q, O],
                    attrs: Object.assign({
                        width: "28",
                        height: "28",
                        viewBox: "0 0 32 33",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                    }, F),
                    ...D
                }, k.concat([Y("path", {
                    attrs: {
                        opacity: ".1",
                        d: "M32 17c0 8.837-7.163 16-16 16S0 25.837 0 17 7.163 1 16 1s16 7.163 16 16Z",
                        fill: "#0E72ED"
                    }
                }), Y("path", {
                    attrs: {
                        opacity: ".1",
                        d: "M28 17c0 6.627-5.373 12-12 12S4 23.627 4 17 9.373 5 16 5s12 5.373 12 12Z",
                        fill: "#0E72ED"
                    }
                }), Y("mask", {
                    staticStyle: {
                        "mask-type": "alpha"
                    },
                    attrs: {
                        id: "mask0_1885_316317",
                        maskUnits: "userSpaceOnUse",
                        x: "9",
                        y: "9",
                        width: "15",
                        height: "15"
                    }
                }, [Y("path", {
                    attrs: {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d: "M23.5 16.5a7 7 0 0 1-7 7h-5.908A1.091 1.091 0 0 1 9.5 22.408V16.5a7 7 0 1 1 14 0Zm-11.375-1.313c0-.241.196-.437.438-.437h7.874a.438.438 0 0 1 0 .875h-7.875a.438.438 0 0 1-.437-.438Zm.438 3.063a.438.438 0 0 0 0 .875h5.25a.438.438 0 0 0 0-.875h-5.25Z",
                        fill: "#000001"
                    }
                })]), Y("g", {
                    attrs: {
                        mask: "url(#mask0_1885_316317)"
                    }
                }, [Y("path", {
                    attrs: {
                        fill: "#0E72ED",
                        d: "M9.5 9.5h14v14h-14z"
                    }
                })])]))
            }
        }
    }
    ,
    81955: pn => {
        pn.exports = {
            name: "SvgComponent",
            functional: !0,
            render(E, a) {
                const {_c: Y, _v: J, data: $, children: k=[]} = a
                    , {class: P, staticClass: M, style: Q, staticStyle: O, attrs: F={}, ...D} = $;
                return Y("svg", {
                    class: [P, M],
                    style: [Q, O],
                    attrs: Object.assign({
                        width: "28",
                        height: "28",
                        viewBox: "0 0 32 32",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                    }, F),
                    ...D
                }, k.concat([Y("path", {
                    attrs: {
                        opacity: ".1",
                        d: "M0 16C0 7.163 7.163 0 16 0s16 7.163 16 16-7.163 16-16 16S0 24.837 0 16Z",
                        fill: "#0E72ED"
                    }
                }), Y("path", {
                    attrs: {
                        opacity: ".1",
                        d: "M28 16c0 6.627-5.373 12-12 12S4 22.627 4 16 9.373 4 16 4s12 5.373 12 12Z",
                        fill: "#0E72ED"
                    }
                }), Y("mask", {
                    staticStyle: {
                        "mask-type": "alpha"
                    },
                    attrs: {
                        id: "mask0_1885_316284",
                        maskUnits: "userSpaceOnUse",
                        x: "8",
                        y: "11",
                        width: "17",
                        height: "10"
                    }
                }, [Y("path", {
                    attrs: {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d: "M9.7 11a1.5 1.5 0 0 0-1.5 1.5V18a3 3 0 0 0 3 3h7.5a1.5 1.5 0 0 0 1.5-1.5V18l2.8 2.1a.75.75 0 0 0 1.2-.6v-7a.75.75 0 0 0-1.2-.6L20.2 14a3 3 0 0 0-3-3H9.7Z",
                        fill: "#0E72ED"
                    }
                })]), Y("g", {
                    attrs: {
                        mask: "url(#mask0_1885_316284)"
                    }
                }, [Y("path", {
                    attrs: {
                        d: "M8.2 8h16v16h-16V8Z",
                        fill: "#0E72ED"
                    }
                })])]))
            }
        }
    }
    ,
    97508: (pn, E, a) => {
        "use strict";
        a.d(E, {
            kK: () => k
        });
        var Y = a(97951);
        function J(G) {
            return request({
                url: "/contact/query",
                method: "get",
                params: G
            })
        }
        function $(G) {
            var V = G.contactId
                , K = V === void 0 ? "" : V;
            return request({
                url: "/contact/".concat(K),
                method: "get"
            })
        }
        function k(G) {
            return (0,
                Y.default)({
                url: "/contact/query",
                method: "get",
                params: G
            })
        }
        function P(G) {
            return request({
                url: "/contact",
                method: "post",
                data: G
            })
        }
        function M(G) {
            return request({
                url: "/contact",
                method: "put",
                data: G
            })
        }
        function Q(G) {
            return request({
                url: "/contact",
                method: "delete",
                params: G
            })
        }
        function O(G) {
            return request({
                url: "/call/history",
                method: "get",
                params: G
            })
        }
        function F(G) {
            return request({
                url: "/unit/list",
                method: "get",
                params: G
            })
        }
        function D(G) {
            return request({
                url: "/contact/engagement",
                method: "post",
                data: G
            })
        }
        function z(G) {
            return request({
                url: "/analytics/engagement/update",
                method: "post",
                apiVersion: "/v2",
                data: G
            })
        }
    }
    ,
    74204: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                getEngagement: () => J,
                getMembers: () => $
            });
        var Y = a(97951);
        function J(k) {
            return (0,
                Y.default)({
                url: "/engagement",
                method: "get",
                params: k
            })
        }
        function $(k) {
            return (0,
                Y.default)({
                url: "/engagement/participants",
                method: "get",
                params: k
            })
        }
    }
    ,
    10393: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                CRMIntegraionInit: () => pe,
                checkIntegration: () => G,
                checkIntegrationAndFetchConfig: () => V,
                createIntegration: () => D,
                deleteIntegration: () => O,
                editIntegration: () => F,
                getIntegration: () => Q,
                getIntegrationConfigurationSettings: () => ne,
                getIntegrationConnectionSettings: () => X,
                getIntegrationOAuthConfig: () => ee,
                getIntegrations: () => M,
                getRedirectUrlWithClient: () => te,
                getSalesforceIVRConfig: () => K,
                getZecoIntegrationById: () => _e,
                getZecoIntegrationsByType: () => ie,
                getZecoServiceUrls: () => q,
                getZecoToken: () => H,
                updateIntegration: () => z,
                updateIntegrationConfigurationSettings: () => x
            });
        var Y = a(59814)
            , J = a.n(Y)
            , $ = a(69761)
            , k = a.n($)
            , P = a(97951);
        function M(ze) {
            return (0,
                P.default)({
                url: "/account/integration/conf/query",
                method: "get",
                params: ze
            })
        }
        function Q(ze) {
            return (0,
                P.default)({
                url: "/account/integration/conf/get/".concat(ze),
                method: "get"
            })
        }
        function O(ze) {
            return (0,
                P.default)({
                url: "/account/integration/conf/delete/".concat(ze),
                method: "DELETE"
            })
        }
        function F(ze) {
            return (0,
                P.default)({
                url: "/account/integration/conf/salesforce/oauth",
                method: "put",
                data: ze
            })
        }
        function D(ze) {
            return (0,
                P.default)({
                url: "/account/integration/conf/".concat(ze.type),
                method: "post",
                data: ze.configs
            })
        }
        function z(ze) {
            return (0,
                P.default)({
                url: "/account/integration/conf/".concat(ze.type),
                method: "put",
                data: ze.configs
            })
        }
        function G() {
            var ze = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "salesforce";
            return (0,
                P.default)({
                url: "/account/integration/conf/checkIntegration/".concat(ze),
                method: "get"
            })
        }
        function V(ze) {
            return (0,
                P.default)({
                url: "/account/integration/configurations/checkIntegration/".concat(ze.type),
                method: "get",
                params: ze.params
            })
        }
        function K() {
            var ze = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "salesforce";
            return (0,
                P.default)({
                url: "/account/integration/conf/call-bar/configuration/".concat(ze),
                method: "get"
            })
        }
        function te() {
            return (0,
                P.default)({
                url: "/account/integration/conf/redirectUrlWithClient",
                method: "get"
            })
        }
        function ee(ze) {
            return (0,
                P.default)({
                url: "/account/integration/conf/integrationOAuthRedirect",
                method: "get",
                params: {
                    integrationType: ze
                }
            })
        }
        function pe(ze) {
            return (0,
                P.default)({
                url: "/CRMIntegraion/init/".concat(ze),
                method: "post"
            })
        }
        function ne(ze) {
            return (0,
                P.default)({
                url: "/account/integration/conf/".concat(ze, "/configuration"),
                method: "get"
            })
        }
        function X(ze) {
            return (0,
                P.default)({
                url: "/account/integration/conf/".concat(ze, "/OAuth"),
                method: "get"
            })
        }
        function x(ze, Oe, Cn, at, Sn) {
            return (0,
                P.default)({
                url: "/account/integration/conf/".concat(ze, "/configuration"),
                method: "put",
                data: {
                    applicationType: Oe,
                    screenPopObject: Cn,
                    searchCriteria: at,
                    noMatchCreateSetting: Sn
                }
            })
        }
        function H() {
            return (0,
                P.default)({
                url: "/zeco/auth/token",
                method: "get"
            })
        }
        function q() {
            return (0,
                P.default)({
                url: "/zeco/endpoints",
                method: "get"
            })
        }
        function _e(ze) {
            return (0,
                P.default)({
                url: "/accounts/integrations/".concat(ze),
                method: "get",
                zecoPath: !0
            })
        }
        function ie(ze) {
            return (0,
                P.default)({
                url: "/accounts/integrations/filter",
                method: "get",
                params: {
                    integrationName: ze
                },
                zecoPath: !0
            }).then(function(Oe) {
                var Cn;
                return Oe.data.result.integrations = J()(Cn = Oe.data.result.integrations).call(Cn, function(at) {
                    var Sn;
                    return k()(Sn = at.allowedInternalProducts).call(Sn, "cci")
                }),
                    Oe
            })
        }
    }
    ,
    42436: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                getEngagementLiveLog: () => je,
                getEngagementLog: () => pt,
                getHistoryList: () => ve,
                getSessionCompleteEngagement: () => or,
                getSessionHistory: () => jn
            });
        var Y = a(69761)
            , J = a.n(Y)
            , $ = a(84653)
            , k = a.n($)
            , P = a(39084)
            , M = a.n(P)
            , Q = a(61849)
            , O = a.n(Q)
            , F = a(81352)
            , D = a.n(F)
            , z = a(59814)
            , G = a.n(z)
            , V = a(89099)
            , K = a.n(V)
            , te = a(44987)
            , ee = a.n(te)
            , pe = a(34622)
            , ne = a.n(pe)
            , X = a(27785)
            , x = a.n(X)
            , H = a(83030)
            , q = a.n(H)
            , _e = a(5339)
            , ie = a.n(_e)
            , ze = a(97951);
        function Oe(Ke) {
            "@babel/helpers - typeof";
            return Oe = typeof q() == "function" && typeof ie() == "symbol" ? function(it) {
                    return typeof it
                }
                : function(it) {
                    return it && typeof q() == "function" && it.constructor === q() && it !== q().prototype ? "symbol" : typeof it
                }
                ,
                Oe(Ke)
        }
        var Cn = ["id"];
        function at(Ke, it) {
            var Ne = D()(Ke);
            if (k()) {
                var Gt = k()(Ke);
                it && (Gt = G()(Gt).call(Gt, function(en) {
                    return K()(Ke, en).enumerable
                })),
                    Ne.push.apply(Ne, Gt)
            }
            return Ne
        }
        function Sn(Ke) {
            for (var it = 1; it < arguments.length; it++) {
                var Ne, Gt, en = arguments[it] != null ? arguments[it] : {};
                it % 2 ? ee()(Ne = at(Object(en), !0)).call(Ne, function(rn) {
                    Ce(Ke, rn, en[rn])
                }) : ne() ? x()(Ke, ne()(en)) : ee()(Gt = at(Object(en))).call(Gt, function(rn) {
                    O()(Ke, rn, K()(en, rn))
                })
            }
            return Ke
        }
        function Ce(Ke, it, Ne) {
            return (it = wn(it))in Ke ? O()(Ke, it, {
                value: Ne,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : Ke[it] = Ne,
                Ke
        }
        function wn(Ke) {
            var it = Ae(Ke, "string");
            return Oe(it) == "symbol" ? it : it + ""
        }
        function Ae(Ke, it) {
            if (Oe(Ke) != "object" || !Ke)
                return Ke;
            var Ne = Ke[M()];
            if (Ne !== void 0) {
                var Gt = Ne.call(Ke, it || "default");
                if (Oe(Gt) != "object")
                    return Gt;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (it === "string" ? String : Number)(Ke)
        }
        function nr(Ke, it) {
            if (Ke == null)
                return {};
            var Ne, Gt, en = mt(Ke, it);
            if (k()) {
                var rn = k()(Ke);
                for (Gt = 0; Gt < rn.length; Gt++)
                    Ne = rn[Gt],
                    J()(it).call(it, Ne) || {}.propertyIsEnumerable.call(Ke, Ne) && (en[Ne] = Ke[Ne])
            }
            return en
        }
        function mt(Ke, it) {
            if (Ke == null)
                return {};
            var Ne = {};
            for (var Gt in Ke)
                if ({}.hasOwnProperty.call(Ke, Gt)) {
                    if (J()(it).call(it, Gt))
                        continue;
                    Ne[Gt] = Ke[Gt]
                }
            return Ne
        }
        function jn(Ke) {
            return (0,
                ze.default)({
                url: "/analytics/session/history",
                method: "get",
                apiVersion: "/v2",
                params: Ke
            })
        }
        function ve(Ke) {
            return (0,
                ze.default)({
                url: "/analytics/historical/completeEngagement/report",
                method: "get",
                apiVersion: "/v2",
                params: Ke
            })
        }
        function or(Ke) {
            return (0,
                ze.default)({
                url: "/analytics/historical/completeEngagement/recent",
                method: "get",
                apiVersion: "/v2",
                params: Ke
            })
        }
        function pt(Ke) {
            var it = Ke.id;
            return (0,
                ze.default)({
                url: "/analytics/engagement/log/one",
                method: "get",
                apiVersion: "/v2",
                params: {
                    engagementId: it
                }
            })
        }
        function je(Ke) {
            var it = Ke.id
                , Ne = nr(Ke, Cn);
            return (0,
                ze.default)({
                url: "/analytics/engagement/log/live/one",
                method: "get",
                apiVersion: "/v2",
                params: Sn({
                    engagementId: it
                }, Ne)
            })
        }
    }
    ,
    38236: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                deleteUserPhoto: () => Sn,
                endWorkSession: () => K,
                getQueueList: () => x,
                getQueueListWithParams: () => H,
                getSkillCateList: () => ie,
                getSkillList: () => q,
                getSkillQueryList: () => _e,
                getTrasferTagetList: () => ze,
                getUserBoundQueues: () => Ce,
                getUserInboxes: () => wn,
                getUserInfo: () => ee,
                getUserProfile: () => pe,
                getUsersQueueList: () => Oe,
                getWorkSessionStatus: () => G,
                logout: () => X,
                profileUpload: () => Cn,
                saveUserPhoto: () => at,
                startWorkSession: () => V,
                supervisorEndWorkSession: () => te,
                userStatusHeartbeatConfirm: () => ne
            });
        var Y = a(69761)
            , J = a.n(Y)
            , $ = a(84653)
            , k = a.n($)
            , P = a(56405)
            , M = a.n(P)
            , Q = a(97951)
            , O = ["userId"]
            , F = ["userId"];
        function D(Ae, nr) {
            if (Ae == null)
                return {};
            var mt, jn, ve = z(Ae, nr);
            if (k()) {
                var or = k()(Ae);
                for (jn = 0; jn < or.length; jn++)
                    mt = or[jn],
                    J()(nr).call(nr, mt) || {}.propertyIsEnumerable.call(Ae, mt) && (ve[mt] = Ae[mt])
            }
            return ve
        }
        function z(Ae, nr) {
            if (Ae == null)
                return {};
            var mt = {};
            for (var jn in Ae)
                if ({}.hasOwnProperty.call(Ae, jn)) {
                    if (J()(nr).call(nr, jn))
                        continue;
                    mt[jn] = Ae[jn]
                }
            return mt
        }
        function G() {
            return (0,
                Q.default)({
                url: "user/session/status",
                method: "get"
            })
        }
        function V(Ae) {
            return (0,
                Q.default)({
                url: "user/session/start",
                method: "post",
                data: Ae
            })
        }
        function K(Ae) {
            return (0,
                Q.default)({
                url: "user/session/end",
                method: "post",
                data: Ae
            })
        }
        function te(Ae) {
            return (0,
                Q.default)({
                url: "analytics/supervisor/agents/end-work-sessions",
                method: "post",
                data: Ae
            })
        }
        function ee() {
            return (0,
                Q.default)({
                url: "user/me",
                method: "get",
                params: {
                    device: (0,
                        P.getPlatform)()
                }
            })
        }
        function pe() {
            return (0,
                Q.default)({
                url: "user/profile",
                method: "get"
            })
        }
        function ne(Ae) {
            return (0,
                Q.default)({
                url: "agent-status/heartbeat",
                method: "get",
                params: Ae
            })
        }
        function X() {
            return (0,
                Q.default)({
                url: "/vcc-vue-admin/user/logout",
                method: "post"
            })
        }
        function x(Ae) {
            return (0,
                Q.default)({
                url: "user/list/queues",
                method: "get",
                params: Ae
            })
        }
        function H(Ae) {
            return (0,
                Q.default)({
                url: "user/pageQueryQueues",
                method: "get",
                params: Ae
            })
        }
        function q(Ae) {
            return (0,
                Q.default)({
                url: "account/skill-category/search",
                method: "get",
                params: Ae
            })
        }
        function _e(Ae) {
            return (0,
                Q.default)({
                url: "user/skill/query",
                method: "get",
                params: Ae
            })
        }
        function ie(Ae) {
            return (0,
                Q.default)({
                url: "user/skill-category/list",
                method: "get",
                params: Ae
            })
        }
        function ze(Ae) {
            return (0,
                Q.default)({
                url: "/user/queryUserAndQueue",
                method: "get",
                params: Ae
            })
        }
        function Oe(Ae) {
            return (0,
                Q.default)({
                url: "/user/usersQueueList",
                method: "get",
                params: Ae
            })
        }
        function Cn(Ae) {
            return Q.default.post("/user/profile/photo/upload", Ae)
        }
        function at(Ae) {
            return (0,
                Q.default)({
                url: "/user/profile/photo",
                method: "put",
                params: Ae
            })
        }
        function Sn(Ae) {
            return (0,
                Q.default)({
                url: "/user/profile/photo",
                method: "delete",
                params: Ae
            })
        }
        function Ce(Ae) {
            var nr = Ae.userId
                , mt = D(Ae, O);
            return (0,
                Q.default)({
                url: "/user/".concat(nr, "/outbound/queues"),
                method: "get",
                params: mt
            })
        }
        function wn(Ae) {
            var nr = Ae.userId
                , mt = D(Ae, F);
            return (0,
                Q.default)({
                url: "/user/".concat(nr, "/inboxes"),
                method: "get",
                params: mt
            })
        }
    }
    ,
    27313: (pn, E, a) => {
        "use strict";
        a.d(E, {
            I9: () => Zn
        });
        var Y = a(83537)
            , J = a.n(Y)
            , $ = a(27425)
            , k = a.n($)
            , P = a(39084)
            , M = a.n(P)
            , Q = a(61849)
            , O = a.n(Q)
            , F = a(81352)
            , D = a.n(F)
            , z = a(84653)
            , G = a.n(z)
            , V = a(59814)
            , K = a.n(V)
            , te = a(89099)
            , ee = a.n(te)
            , pe = a(44987)
            , ne = a.n(pe)
            , X = a(34622)
            , x = a.n(X)
            , H = a(27785)
            , q = a.n(H)
            , _e = a(83030)
            , ie = a.n(_e)
            , ze = a(65888)
            , Oe = a.n(ze)
            , Cn = a(34187)
            , at = a.n(Cn)
            , Sn = a(73007)
            , Ce = a.n(Sn)
            , wn = a(23716)
            , Ae = a.n(wn)
            , nr = a(2208)
            , mt = a.n(nr)
            , jn = a(5339)
            , ve = a.n(jn)
            , or = a(97951);
        function pt($e) {
            "@babel/helpers - typeof";
            return pt = typeof _Symbol == "function" && typeof _Symbol$iterator == "symbol" ? function(tt) {
                    return typeof tt
                }
                : function(tt) {
                    return tt && typeof _Symbol == "function" && tt.constructor === _Symbol && tt !== _Symbol.prototype ? "symbol" : typeof tt
                }
                ,
                pt($e)
        }
        function je() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            je = function() {
                return tt
            }
            ;
            var $e, tt = {}, ot = Object.prototype, on = ot.hasOwnProperty, Fe = _Object$defineProperty || function(mr, Je, qt) {
                mr[Je] = qt.value
            }
                , Mr = typeof _Symbol == "function" ? _Symbol : {}, Jt = Mr.iterator || "@@iterator", Dt = Mr.asyncIterator || "@@asyncIterator", an = Mr.toStringTag || "@@toStringTag";
            function Bn(mr, Je, qt) {
                return _Object$defineProperty(mr, Je, {
                    value: qt,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    mr[Je]
            }
            try {
                Bn({}, "")
            } catch {
                Bn = function(qt, bn, br) {
                    return qt[bn] = br
                }
            }
            function vn(mr, Je, qt, bn) {
                var br = Je && Je.prototype instanceof Ft ? Je : Ft
                    , xr = _Object$create(br.prototype)
                    , ir = new Hr(bn || []);
                return Fe(xr, "_invoke", {
                    value: lr(mr, qt, ir)
                }),
                    xr
            }
            function nn(mr, Je, qt) {
                try {
                    return {
                        type: "normal",
                        arg: mr.call(Je, qt)
                    }
                } catch (bn) {
                    return {
                        type: "throw",
                        arg: bn
                    }
                }
            }
            tt.wrap = vn;
            var tr = "suspendedStart"
                , Ve = "suspendedYield"
                , R = "executing"
                , ce = "completed"
                , gt = {};
            function Ft() {}
            function Kt() {}
            function St() {}
            var Xt = {};
            Bn(Xt, Jt, function() {
                return this
            });
            var Rn = _Object$getPrototypeOf
                , kn = Rn && Rn(Rn(Yr([])));
            kn && kn !== ot && on.call(kn, Jt) && (Xt = kn);
            var pr = St.prototype = Ft.prototype = _Object$create(Xt);
            function Or(mr) {
                var Je;
                _forEachInstanceProperty(Je = ["next", "throw", "return"]).call(Je, function(qt) {
                    Bn(mr, qt, function(bn) {
                        return this._invoke(qt, bn)
                    })
                })
            }
            function we(mr, Je) {
                function qt(br, xr, ir, Gr) {
                    var Zr = nn(mr[br], mr, xr);
                    if (Zr.type !== "throw") {
                        var na = Zr.arg
                            , Xr = na.value;
                        return Xr && pt(Xr) == "object" && on.call(Xr, "__await") ? Je.resolve(Xr.__await).then(function(aa) {
                            qt("next", aa, ir, Gr)
                        }, function(aa) {
                            qt("throw", aa, ir, Gr)
                        }) : Je.resolve(Xr).then(function(aa) {
                            na.value = aa,
                                ir(na)
                        }, function(aa) {
                            return qt("throw", aa, ir, Gr)
                        })
                    }
                    Gr(Zr.arg)
                }
                var bn;
                Fe(this, "_invoke", {
                    value: function(xr, ir) {
                        function Gr() {
                            return new Je(function(Zr, na) {
                                    qt(xr, ir, Zr, na)
                                }
                            )
                        }
                        return bn = bn ? bn.then(Gr, Gr) : Gr()
                    }
                })
            }
            function lr(mr, Je, qt) {
                var bn = tr;
                return function(br, xr) {
                    if (bn === R)
                        throw Error("Generator is already running");
                    if (bn === ce) {
                        if (br === "throw")
                            throw xr;
                        return {
                            value: $e,
                            done: !0
                        }
                    }
                    for (qt.method = br,
                             qt.arg = xr; ; ) {
                        var ir = qt.delegate;
                        if (ir) {
                            var Gr = Tr(ir, qt);
                            if (Gr) {
                                if (Gr === gt)
                                    continue;
                                return Gr
                            }
                        }
                        if (qt.method === "next")
                            qt.sent = qt._sent = qt.arg;
                        else if (qt.method === "throw") {
                            if (bn === tr)
                                throw bn = ce,
                                    qt.arg;
                            qt.dispatchException(qt.arg)
                        } else
                            qt.method === "return" && qt.abrupt("return", qt.arg);
                        bn = R;
                        var Zr = nn(mr, Je, qt);
                        if (Zr.type === "normal") {
                            if (bn = qt.done ? ce : Ve,
                            Zr.arg === gt)
                                continue;
                            return {
                                value: Zr.arg,
                                done: qt.done
                            }
                        }
                        Zr.type === "throw" && (bn = ce,
                            qt.method = "throw",
                            qt.arg = Zr.arg)
                    }
                }
            }
            function Tr(mr, Je) {
                var qt = Je.method
                    , bn = mr.iterator[qt];
                if (bn === $e)
                    return Je.delegate = null,
                    qt === "throw" && mr.iterator.return && (Je.method = "return",
                        Je.arg = $e,
                        Tr(mr, Je),
                    Je.method === "throw") || qt !== "return" && (Je.method = "throw",
                        Je.arg = new TypeError("The iterator does not provide a '" + qt + "' method")),
                        gt;
                var br = nn(bn, mr.iterator, Je.arg);
                if (br.type === "throw")
                    return Je.method = "throw",
                        Je.arg = br.arg,
                        Je.delegate = null,
                        gt;
                var xr = br.arg;
                return xr ? xr.done ? (Je[mr.resultName] = xr.value,
                    Je.next = mr.nextLoc,
                Je.method !== "return" && (Je.method = "next",
                    Je.arg = $e),
                    Je.delegate = null,
                    gt) : xr : (Je.method = "throw",
                    Je.arg = new TypeError("iterator result is not an object"),
                    Je.delegate = null,
                    gt)
            }
            function Lr(mr) {
                var Je = {
                    tryLoc: mr[0]
                };
                1 in mr && (Je.catchLoc = mr[1]),
                2 in mr && (Je.finallyLoc = mr[2],
                    Je.afterLoc = mr[3]),
                    this.tryEntries.push(Je)
            }
            function Ur(mr) {
                var Je = mr.completion || {};
                Je.type = "normal",
                    delete Je.arg,
                    mr.completion = Je
            }
            function Hr(mr) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    _forEachInstanceProperty(mr).call(mr, Lr, this),
                    this.reset(!0)
            }
            function Yr(mr) {
                if (mr || mr === "") {
                    var Je = mr[Jt];
                    if (Je)
                        return Je.call(mr);
                    if (typeof mr.next == "function")
                        return mr;
                    if (!isNaN(mr.length)) {
                        var qt = -1
                            , bn = function br() {
                            for (; ++qt < mr.length; )
                                if (on.call(mr, qt))
                                    return br.value = mr[qt],
                                        br.done = !1,
                                        br;
                            return br.value = $e,
                                br.done = !0,
                                br
                        };
                        return bn.next = bn
                    }
                }
                throw new TypeError(pt(mr) + " is not iterable")
            }
            return Kt.prototype = St,
                Fe(pr, "constructor", {
                    value: St,
                    configurable: !0
                }),
                Fe(St, "constructor", {
                    value: Kt,
                    configurable: !0
                }),
                Kt.displayName = Bn(St, an, "GeneratorFunction"),
                tt.isGeneratorFunction = function(mr) {
                    var Je = typeof mr == "function" && mr.constructor;
                    return !!Je && (Je === Kt || (Je.displayName || Je.name) === "GeneratorFunction")
                }
                ,
                tt.mark = function(mr) {
                    return _Object$setPrototypeOf ? _Object$setPrototypeOf(mr, St) : (mr.__proto__ = St,
                        Bn(mr, an, "GeneratorFunction")),
                        mr.prototype = _Object$create(pr),
                        mr
                }
                ,
                tt.awrap = function(mr) {
                    return {
                        __await: mr
                    }
                }
                ,
                Or(we.prototype),
                Bn(we.prototype, Dt, function() {
                    return this
                }),
                tt.AsyncIterator = we,
                tt.async = function(mr, Je, qt, bn, br) {
                    br === void 0 && (br = _Promise);
                    var xr = new we(vn(mr, Je, qt, bn),br);
                    return tt.isGeneratorFunction(Je) ? xr : xr.next().then(function(ir) {
                        return ir.done ? ir.value : xr.next()
                    })
                }
                ,
                Or(pr),
                Bn(pr, an, "Generator"),
                Bn(pr, Jt, function() {
                    return this
                }),
                Bn(pr, "toString", function() {
                    return "[object Generator]"
                }),
                tt.keys = function(mr) {
                    var Je = Object(mr)
                        , qt = [];
                    for (var bn in Je)
                        qt.push(bn);
                    return _reverseInstanceProperty(qt).call(qt),
                        function br() {
                            for (; qt.length; ) {
                                var xr = qt.pop();
                                if (xr in Je)
                                    return br.value = xr,
                                        br.done = !1,
                                        br
                            }
                            return br.done = !0,
                                br
                        }
                }
                ,
                tt.values = Yr,
                Hr.prototype = {
                    constructor: Hr,
                    reset: function(Je) {
                        var qt;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = $e,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = $e,
                            _forEachInstanceProperty(qt = this.tryEntries).call(qt, Ur),
                            !Je)
                            for (var bn in this)
                                bn.charAt(0) === "t" && on.call(this, bn) && !isNaN(+_sliceInstanceProperty(bn).call(bn, 1)) && (this[bn] = $e)
                    },
                    stop: function() {
                        this.done = !0;
                        var Je = this.tryEntries[0].completion;
                        if (Je.type === "throw")
                            throw Je.arg;
                        return this.rval
                    },
                    dispatchException: function(Je) {
                        if (this.done)
                            throw Je;
                        var qt = this;
                        function bn(na, Xr) {
                            return ir.type = "throw",
                                ir.arg = Je,
                                qt.next = na,
                            Xr && (qt.method = "next",
                                qt.arg = $e),
                                !!Xr
                        }
                        for (var br = this.tryEntries.length - 1; br >= 0; --br) {
                            var xr = this.tryEntries[br]
                                , ir = xr.completion;
                            if (xr.tryLoc === "root")
                                return bn("end");
                            if (xr.tryLoc <= this.prev) {
                                var Gr = on.call(xr, "catchLoc")
                                    , Zr = on.call(xr, "finallyLoc");
                                if (Gr && Zr) {
                                    if (this.prev < xr.catchLoc)
                                        return bn(xr.catchLoc, !0);
                                    if (this.prev < xr.finallyLoc)
                                        return bn(xr.finallyLoc)
                                } else if (Gr) {
                                    if (this.prev < xr.catchLoc)
                                        return bn(xr.catchLoc, !0)
                                } else {
                                    if (!Zr)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < xr.finallyLoc)
                                        return bn(xr.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(Je, qt) {
                        for (var bn = this.tryEntries.length - 1; bn >= 0; --bn) {
                            var br = this.tryEntries[bn];
                            if (br.tryLoc <= this.prev && on.call(br, "finallyLoc") && this.prev < br.finallyLoc) {
                                var xr = br;
                                break
                            }
                        }
                        xr && (Je === "break" || Je === "continue") && xr.tryLoc <= qt && qt <= xr.finallyLoc && (xr = null);
                        var ir = xr ? xr.completion : {};
                        return ir.type = Je,
                            ir.arg = qt,
                            xr ? (this.method = "next",
                                this.next = xr.finallyLoc,
                                gt) : this.complete(ir)
                    },
                    complete: function(Je, qt) {
                        if (Je.type === "throw")
                            throw Je.arg;
                        return Je.type === "break" || Je.type === "continue" ? this.next = Je.arg : Je.type === "return" ? (this.rval = this.arg = Je.arg,
                            this.method = "return",
                            this.next = "end") : Je.type === "normal" && qt && (this.next = qt),
                            gt
                    },
                    finish: function(Je) {
                        for (var qt = this.tryEntries.length - 1; qt >= 0; --qt) {
                            var bn = this.tryEntries[qt];
                            if (bn.finallyLoc === Je)
                                return this.complete(bn.completion, bn.afterLoc),
                                    Ur(bn),
                                    gt
                        }
                    },
                    catch: function(Je) {
                        for (var qt = this.tryEntries.length - 1; qt >= 0; --qt) {
                            var bn = this.tryEntries[qt];
                            if (bn.tryLoc === Je) {
                                var br = bn.completion;
                                if (br.type === "throw") {
                                    var xr = br.arg;
                                    Ur(bn)
                                }
                                return xr
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(Je, qt, bn) {
                        return this.delegate = {
                            iterator: Yr(Je),
                            resultName: qt,
                            nextLoc: bn
                        },
                        this.method === "next" && (this.arg = $e),
                            gt
                    }
                },
                tt
        }
        function Ke($e, tt) {
            var ot = _Object$keys($e);
            if (_Object$getOwnPropertySymbols) {
                var on = _Object$getOwnPropertySymbols($e);
                tt && (on = _filterInstanceProperty(on).call(on, function(Fe) {
                    return _Object$getOwnPropertyDescriptor($e, Fe).enumerable
                })),
                    ot.push.apply(ot, on)
            }
            return ot
        }
        function it($e) {
            for (var tt = 1; tt < arguments.length; tt++) {
                var ot, on, Fe = arguments[tt] != null ? arguments[tt] : {};
                tt % 2 ? _forEachInstanceProperty(ot = Ke(Object(Fe), !0)).call(ot, function(Mr) {
                    Ne($e, Mr, Fe[Mr])
                }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties($e, _Object$getOwnPropertyDescriptors(Fe)) : _forEachInstanceProperty(on = Ke(Object(Fe))).call(on, function(Mr) {
                    _Object$defineProperty($e, Mr, _Object$getOwnPropertyDescriptor(Fe, Mr))
                })
            }
            return $e
        }
        function Ne($e, tt, ot) {
            return (tt = Gt(tt))in $e ? _Object$defineProperty($e, tt, {
                value: ot,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : $e[tt] = ot,
                $e
        }
        function Gt($e) {
            var tt = en($e, "string");
            return pt(tt) == "symbol" ? tt : tt + ""
        }
        function en($e, tt) {
            if (pt($e) != "object" || !$e)
                return $e;
            var ot = $e[_Symbol$toPrimitive];
            if (ot !== void 0) {
                var on = ot.call($e, tt || "default");
                if (pt(on) != "object")
                    return on;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (tt === "string" ? String : Number)($e)
        }
        function rn($e, tt, ot, on, Fe, Mr, Jt) {
            try {
                var Dt = $e[Mr](Jt)
                    , an = Dt.value
            } catch (Bn) {
                return void ot(Bn)
            }
            Dt.done ? tt(an) : _Promise.resolve(an).then(on, Fe)
        }
        function Tt($e) {
            return function() {
                var tt = this
                    , ot = arguments;
                return new _Promise(function(on, Fe) {
                        var Mr = $e.apply(tt, ot);
                        function Jt(an) {
                            rn(Mr, on, Fe, Jt, Dt, "next", an)
                        }
                        function Dt(an) {
                            rn(Mr, on, Fe, Jt, Dt, "throw", an)
                        }
                        Jt(void 0)
                    }
                )
            }
        }
        function vr($e) {
            return rr.apply(this, arguments)
        }
        function rr() {
            return rr = Tt(je().mark(function $e(tt) {
                var ot, on, Fe;
                return je().wrap(function(Jt) {
                    for (; ; )
                        switch (Jt.prev = Jt.next) {
                            case 0:
                                return on = "/call/transfer/acceptCall",
                                    Jt.next = 3,
                                    request({
                                        url: on,
                                        method: "post",
                                        data: tt,
                                        headers: {
                                            "x-zm-client-ts": _Date$now()
                                        }
                                    });
                            case 3:
                                return Fe = Jt.sent,
                                    Jt.abrupt("return", it(it({}, Fe == null || (ot = Fe.data) === null || ot === void 0 ? void 0 : ot.result), {}, {
                                        traceId: Fe?.headers["x-zm-trackingid"]
                                    }));
                            case 5:
                            case "end":
                                return Jt.stop()
                        }
                }, $e)
            })),
                rr.apply(this, arguments)
        }
        function kr($e) {
            return Re.apply(this, arguments)
        }
        function Re() {
            return Re = Tt(je().mark(function $e(tt) {
                var ot, on;
                return je().wrap(function(Mr) {
                    for (; ; )
                        switch (Mr.prev = Mr.next) {
                            case 0:
                                return ot = "/call/callback/acceptCall",
                                    Mr.next = 3,
                                    request({
                                        url: ot,
                                        method: "post",
                                        data: tt,
                                        headers: {
                                            "x-zm-client-ts": _Date$now()
                                        }
                                    });
                            case 3:
                                return on = Mr.sent,
                                    Mr.abrupt("return", on.data.result);
                            case 5:
                            case "end":
                                return Mr.stop()
                        }
                }, $e)
            })),
                Re.apply(this, arguments)
        }
        function Et($e) {
            return An.apply(this, arguments)
        }
        function An() {
            return An = Tt(je().mark(function $e(tt) {
                var ot, on, Fe;
                return je().wrap(function(Jt) {
                    for (; ; )
                        switch (Jt.prev = Jt.next) {
                            case 0:
                                return ot = {
                                    task_id: tt.taskSid,
                                    call_from: tt.callFrom,
                                    call_to: tt.callTo,
                                    reservation_id: tt.reservationSid,
                                    instance_id: tt.instance_id,
                                    conference_id: tt.conferenceId,
                                    acceptCallGrayFlag: tt.acceptCallGrayFlag
                                },
                                    on = "/call/conference/acceptCall",
                                    Jt.next = 4,
                                    request({
                                        url: on,
                                        method: "post",
                                        data: ot,
                                        headers: {
                                            "x-zm-client-ts": _Date$now()
                                        }
                                    });
                            case 4:
                                return Fe = Jt.sent,
                                    Jt.abrupt("return", Fe.data.result);
                            case 6:
                            case "end":
                                return Jt.stop()
                        }
                }, $e)
            })),
                An.apply(this, arguments)
        }
        function Yt($e) {
            return gn.apply(this, arguments)
        }
        function gn() {
            return gn = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/routingengine/task/rejectReservation",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", it(it({}, ot), {}, {
                                        traceId: ot?.headers["x-zm-trackingid"]
                                    }));
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                gn.apply(this, arguments)
        }
        function Qe($e) {
            return ar.apply(this, arguments)
        }
        function ar() {
            return ar = Tt(je().mark(function $e(tt) {
                var ot, on;
                return je().wrap(function(Mr) {
                    for (; ; )
                        switch (Mr.prev = Mr.next) {
                            case 0:
                                return ot = "/call/transfer/updateCallStatus",
                                    Mr.next = 3,
                                    request({
                                        url: ot,
                                        method: "post",
                                        data: tt
                                    });
                            case 3:
                                return on = Mr.sent,
                                    Mr.abrupt("return", on.data.result);
                            case 5:
                            case "end":
                                return Mr.stop()
                        }
                }, $e)
            })),
                ar.apply(this, arguments)
        }
        function zt($e) {
            return Zt.apply(this, arguments)
        }
        function Zt() {
            return Zt = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return ot = "/call/mute/updateStatus",
                                    Fe.abrupt("return", request({
                                        url: ot,
                                        method: "post",
                                        data: tt
                                    }));
                            case 2:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                Zt.apply(this, arguments)
        }
        function Lt($e) {
            return gr.apply(this, arguments)
        }
        function gr() {
            return gr = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return ot = "/call/mute/event",
                                    Fe.abrupt("return", request({
                                        url: ot,
                                        method: "post",
                                        data: tt
                                    }));
                            case 2:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                gr.apply(this, arguments)
        }
        function Mn($e) {
            return U.apply(this, arguments)
        }
        function U() {
            return U = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return ot = "/call/hold/updateStatus",
                                    Fe.abrupt("return", request({
                                        url: ot,
                                        method: "post",
                                        data: tt
                                    }));
                            case 2:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                U.apply(this, arguments)
        }
        function Mt($e) {
            return Kn.apply(this, arguments)
        }
        function Kn() {
            return Kn = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return ot = "/call/hold/event",
                                    Fe.abrupt("return", request({
                                        url: ot,
                                        method: "post",
                                        data: tt
                                    }));
                            case 2:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                Kn.apply(this, arguments)
        }
        function In($e) {
            return tn.apply(this, arguments)
        }
        function tn() {
            return tn = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return ot = "/call/sendDtmf",
                                    Fe.abrupt("return", request({
                                        url: ot,
                                        method: "post",
                                        data: tt
                                    }));
                            case 2:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                tn.apply(this, arguments)
        }
        function Ot($e) {
            return Pt.apply(this, arguments)
        }
        function Pt() {
            return Pt = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return ot = "/call/record/updateStatus",
                                    Fe.abrupt("return", request({
                                        url: ot,
                                        method: "post",
                                        data: tt
                                    }));
                            case 2:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                Pt.apply(this, arguments)
        }
        function $n($e) {
            return dt.apply(this, arguments)
        }
        function dt() {
            return dt = Tt(je().mark(function $e(tt) {
                return je().wrap(function(on) {
                    for (; ; )
                        switch (on.prev = on.next) {
                            case 0:
                                return on.abrupt("return", request({
                                    url: "/call/recordingUrl",
                                    method: "get",
                                    params: tt
                                }));
                            case 1:
                            case "end":
                                return on.stop()
                        }
                }, $e)
            })),
                dt.apply(this, arguments)
        }
        function Xe($e) {
            return ht.apply(this, arguments)
        }
        function ht() {
            return ht = Tt(je().mark(function $e(tt) {
                return je().wrap(function(on) {
                    for (; ; )
                        switch (on.prev = on.next) {
                            case 0:
                                return on.abrupt("return", request({
                                    url: "/call/coachAgent",
                                    method: "post",
                                    data: tt
                                }));
                            case 1:
                            case "end":
                                return on.stop()
                        }
                }, $e)
            })),
                ht.apply(this, arguments)
        }
        function yn($e) {
            return dn.apply(this, arguments)
        }
        function dn() {
            return dn = Tt(je().mark(function $e(tt) {
                return je().wrap(function(on) {
                    for (; ; )
                        switch (on.prev = on.next) {
                            case 0:
                                return on.abrupt("return", request({
                                    url: "/call/monitorAgent",
                                    method: "post",
                                    data: tt
                                }));
                            case 1:
                            case "end":
                                return on.stop()
                        }
                }, $e)
            })),
                dn.apply(this, arguments)
        }
        function Gn($e) {
            return sr.apply(this, arguments)
        }
        function sr() {
            return sr = Tt(je().mark(function $e(tt) {
                return je().wrap(function(on) {
                    for (; ; )
                        switch (on.prev = on.next) {
                            case 0:
                                return on.abrupt("return", request({
                                    url: "/call/monitorAgent/updateStatus",
                                    method: "post",
                                    data: tt
                                }));
                            case 1:
                            case "end":
                                return on.stop()
                        }
                }, $e)
            })),
                sr.apply(this, arguments)
        }
        function Zn($e) {
            var tt = "/account/numbers/outbound";
            return (0,
                or.default)({
                url: tt,
                method: "get",
                params: $e
            })
        }
        function _r($e) {
            var tt = "/account/outbound/".concat($e, "/queues");
            return request({
                url: tt,
                method: "get"
            })
        }
        function Pn($e) {
            return Ze.apply(this, arguments)
        }
        function Ze() {
            return Ze = Tt(je().mark(function $e(tt) {
                var ot, on, Fe;
                return je().wrap(function(Jt) {
                    for (; ; )
                        switch (Jt.prev = Jt.next) {
                            case 0:
                                return on = "/call/outbound",
                                    Jt.next = 3,
                                    request({
                                        url: on,
                                        method: "post",
                                        data: tt,
                                        headers: {
                                            "x-zm-client-ts": _Date$now()
                                        }
                                    });
                            case 3:
                                if (Fe = Jt.sent,
                                    Fe.data.status) {
                                    Jt.next = 6;
                                    break
                                }
                                throw new Error(Fe.data.errorMessage);
                            case 6:
                                return Jt.abrupt("return", it(it({}, Fe == null || (ot = Fe.data) === null || ot === void 0 ? void 0 : ot.result), {}, {
                                    traceId: Fe?.headers["x-zm-trackingid"]
                                }));
                            case 7:
                            case "end":
                                return Jt.stop()
                        }
                }, $e)
            })),
                Ze.apply(this, arguments)
        }
        function Vn($e) {
            return Se.apply(this, arguments)
        }
        function Se() {
            return Se = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/transfer",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", it(it({}, ot), {}, {
                                        traceId: ot?.headers["x-zm-trackingid"]
                                    }));
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                Se.apply(this, arguments)
        }
        function Ue($e) {
            return yt.apply(this, arguments)
        }
        function yt() {
            return yt = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/transfer/cancel",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", it(it({}, ot), {}, {
                                        traceId: ot?.headers["x-zm-trackingid"]
                                    }));
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                yt.apply(this, arguments)
        }
        function Qt($e) {
            return Hn.apply(this, arguments)
        }
        function Hn() {
            return Hn = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/transfer/complete",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", it(it({}, ot), {}, {
                                        traceId: ot?.headers["x-zm-trackingid"]
                                    }));
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                Hn.apply(this, arguments)
        }
        function cr($e) {
            return Rr.apply(this, arguments)
        }
        function Rr() {
            return Rr = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/transferToQueue",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", it(it({}, ot), {}, {
                                        traceId: ot?.headers["x-zm-trackingid"]
                                    }));
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                Rr.apply(this, arguments)
        }
        function Pr($e) {
            return rt.apply(this, arguments)
        }
        function rt() {
            return rt = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/transferToFlow",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", it(it({}, ot), {}, {
                                        traceId: ot?.headers["x-zm-trackingid"]
                                    }));
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                rt.apply(this, arguments)
        }
        function ae($e) {
            return de.apply(this, arguments)
        }
        function de() {
            return de = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/transfer/voicemail",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", it(it({}, ot), {}, {
                                        traceId: ot?.headers["x-zm-trackingid"]
                                    }));
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                de.apply(this, arguments)
        }
        function ye($e) {
            return Le.apply(this, arguments)
        }
        function Le() {
            return Le = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/transfer/directly/did",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", it(it({}, ot), {}, {
                                        traceId: ot?.headers["x-zm-trackingid"]
                                    }));
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                Le.apply(this, arguments)
        }
        function Te($e) {
            return be.apply(this, arguments)
        }
        function be() {
            return be = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/transfer/warm/did",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", it(it({}, ot), {}, {
                                        traceId: ot?.headers["x-zm-trackingid"]
                                    }));
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                be.apply(this, arguments)
        }
        function me($e) {
            return request({
                url: "user/agentLeg/updateStatus",
                method: "post",
                data: $e
            })
        }
        function He($e) {
            return Ct.apply(this, arguments)
        }
        function Ct() {
            return Ct = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/monitor",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", it(it({}, ot), {}, {
                                        traceId: ot?.headers["x-zm-trackingid"]
                                    }));
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                Ct.apply(this, arguments)
        }
        function wt($e) {
            return Bt.apply(this, arguments)
        }
        function Bt() {
            return Bt = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/monitor/updateStatus",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", it(it({}, ot), {}, {
                                        traceId: ot?.headers["x-zm-trackingid"]
                                    }));
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                Bt.apply(this, arguments)
        }
        function En($e) {
            return Pe.apply(this, arguments)
        }
        function Pe() {
            return Pe = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/monitor/endCallForAll",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", it(it({}, ot), {}, {
                                        traceId: ot?.headers["x-zm-trackingid"]
                                    }));
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                Pe.apply(this, arguments)
        }
        function W($e) {
            return request({
                url: "/call/monitorSwitch",
                method: "post",
                data: $e
            })
        }
        function Ee($e) {
            return nt.apply(this, arguments)
        }
        function nt() {
            return nt = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/takeOver",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", ot.data.result);
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                nt.apply(this, arguments)
        }
        function Ie($e) {
            return request({
                url: "/call/outbound/cancel",
                method: "post",
                data: $e
            })
        }
        function Be($e) {
            return st.apply(this, arguments)
        }
        function st() {
            return st = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/getCallDetail",
                                        params: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", ot.data.result);
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                st.apply(this, arguments)
        }
        function jt($e) {
            return _t.apply(this, arguments)
        }
        function _t() {
            return _t = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/getConferenceAgentStatus",
                                        params: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", ot.data.result);
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                _t.apply(this, arguments)
        }
        function Ge($e) {
            return It.apply(this, arguments)
        }
        function It() {
            return It = Tt(je().mark(function $e(tt) {
                var ot, on, Fe;
                return je().wrap(function(Jt) {
                    for (; ; )
                        switch (Jt.prev = Jt.next) {
                            case 0:
                                return on = "/call/takeOver/updateStatus",
                                    Jt.next = 3,
                                    request({
                                        url: on,
                                        method: "post",
                                        data: tt
                                    });
                            case 3:
                                if (Fe = Jt.sent,
                                    Fe.data.status) {
                                    Jt.next = 6;
                                    break
                                }
                                throw new Error(Fe.data.errorMessage);
                            case 6:
                                return Jt.abrupt("return", it(it({}, Fe == null || (ot = Fe.data) === null || ot === void 0 ? void 0 : ot.result), {}, {
                                    traceId: Fe?.headers["x-zm-trackingid"]
                                }));
                            case 7:
                            case "end":
                                return Jt.stop()
                        }
                }, $e)
            })),
                It.apply(this, arguments)
        }
        function cn($e) {
            return ct.apply(this, arguments)
        }
        function ct() {
            return ct = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/conference/invite",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", ot.data.result);
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                ct.apply(this, arguments)
        }
        function De($e) {
            return bt.apply(this, arguments)
        }
        function bt() {
            return bt = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/conference/cancel",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", ot.data.result);
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                bt.apply(this, arguments)
        }
        function un($e) {
            return ur.apply(this, arguments)
        }
        function ur() {
            return ur = Tt(je().mark(function $e(tt) {
                return je().wrap(function(on) {
                    for (; ; )
                        switch (on.prev = on.next) {
                            case 0:
                                return on.abrupt("return", request({
                                    url: "/call/cherry_pick/release",
                                    method: "post",
                                    data: tt
                                }));
                            case 1:
                            case "end":
                                return on.stop()
                        }
                }, $e)
            })),
                ur.apply(this, arguments)
        }
        function _n($e) {
            return Jn.apply(this, arguments)
        }
        function Jn() {
            return Jn = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/getConferenceJoiners",
                                        method: "get",
                                        params: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", ot.data.result);
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                Jn.apply(this, arguments)
        }
        function Ut($e) {
            return xe.apply(this, arguments)
        }
        function xe() {
            return xe = Tt(je().mark(function $e(tt) {
                var ot;
                return je().wrap(function(Fe) {
                    for (; ; )
                        switch (Fe.prev = Fe.next) {
                            case 0:
                                return Fe.next = 2,
                                    request({
                                        url: "/call/conference/merge",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return ot = Fe.sent,
                                    Fe.abrupt("return", ot.data.result);
                            case 4:
                            case "end":
                                return Fe.stop()
                        }
                }, $e)
            })),
                xe.apply(this, arguments)
        }
        function We($e) {
            return Nt.apply(this, arguments)
        }
        function Nt() {
            return Nt = Tt(je().mark(function $e(tt) {
                var ot, on;
                return je().wrap(function(Mr) {
                    for (; ; )
                        switch (Mr.prev = Mr.next) {
                            case 0:
                                return Mr.next = 2,
                                    request({
                                        url: "/call/client/event",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return on = Mr.sent,
                                    Mr.abrupt("return", on == null || (ot = on.data) === null || ot === void 0 ? void 0 : ot.result);
                            case 4:
                            case "end":
                                return Mr.stop()
                        }
                }, $e)
            })),
                Nt.apply(this, arguments)
        }
        function hn($e) {
            return Ln.apply(this, arguments)
        }
        function Ln() {
            return Ln = Tt(je().mark(function $e(tt) {
                var ot, on;
                return je().wrap(function(Mr) {
                    for (; ; )
                        switch (Mr.prev = Mr.next) {
                            case 0:
                                return Mr.next = 2,
                                    request({
                                        url: "/call/reject",
                                        method: "post",
                                        data: tt
                                    });
                            case 2:
                                return on = Mr.sent,
                                    Mr.abrupt("return", on == null || (ot = on.data) === null || ot === void 0 ? void 0 : ot.result);
                            case 4:
                            case "end":
                                return Mr.stop()
                        }
                }, $e)
            })),
                Ln.apply(this, arguments)
        }
        function fn($e) {
            return request({
                url: "/contact/search",
                method: "get",
                params: $e
            })
        }
    }
    ,
    28484: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => nr
            });
        var Y = a(39084)
            , J = a.n(Y)
            , $ = a(61849)
            , k = a.n($)
            , P = a(81352)
            , M = a.n(P)
            , Q = a(84653)
            , O = a.n(Q)
            , F = a(59814)
            , D = a.n(F)
            , z = a(89099)
            , G = a.n(z)
            , V = a(44987)
            , K = a.n(V)
            , te = a(34622)
            , ee = a.n(te)
            , pe = a(27785)
            , ne = a.n(pe)
            , X = a(83030)
            , x = a.n(X)
            , H = a(5339)
            , q = a.n(H)
            , _e = a(74061)
            , ie = a.n(_e)
            , ze = a(56405)
            , Oe = a.n(ze);
        function Cn(mt) {
            "@babel/helpers - typeof";
            return Cn = typeof x() == "function" && typeof q() == "symbol" ? function(jn) {
                    return typeof jn
                }
                : function(jn) {
                    return jn && typeof x() == "function" && jn.constructor === x() && jn !== x().prototype ? "symbol" : typeof jn
                }
                ,
                Cn(mt)
        }
        function at(mt, jn) {
            var ve = M()(mt);
            if (O()) {
                var or = O()(mt);
                jn && (or = D()(or).call(or, function(pt) {
                    return G()(mt, pt).enumerable
                })),
                    ve.push.apply(ve, or)
            }
            return ve
        }
        function Sn(mt) {
            for (var jn = 1; jn < arguments.length; jn++) {
                var ve, or, pt = arguments[jn] != null ? arguments[jn] : {};
                jn % 2 ? K()(ve = at(Object(pt), !0)).call(ve, function(je) {
                    Ce(mt, je, pt[je])
                }) : ee() ? ne()(mt, ee()(pt)) : K()(or = at(Object(pt))).call(or, function(je) {
                    k()(mt, je, G()(pt, je))
                })
            }
            return mt
        }
        function Ce(mt, jn, ve) {
            return (jn = wn(jn))in mt ? k()(mt, jn, {
                value: ve,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : mt[jn] = ve,
                mt
        }
        function wn(mt) {
            var jn = Ae(mt, "string");
            return Cn(jn) == "symbol" ? jn : jn + ""
        }
        function Ae(mt, jn) {
            if (Cn(mt) != "object" || !mt)
                return mt;
            var ve = mt[J()];
            if (ve !== void 0) {
                var or = ve.call(mt, jn || "default");
                if (Cn(or) != "object")
                    return or;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (jn === "string" ? String : Number)(mt)
        }
        const nr = {
            name: "cciLabel",
            functional: !0,
            props: {
                label: {
                    type: String,
                    default: ""
                },
                staticClass: {
                    type: String,
                    default: ""
                },
                type: {
                    type: String,
                    default: void 0
                },
                color: {
                    type: String,
                    default: (0,
                        ze.getThemeMode)() === "dark" ? "#7ab1f4" : "#0e72ed"
                },
                width: {
                    type: String,
                    default: void 0
                },
                labelStyle: {
                    type: Object,
                    default: function() {
                        return {}
                    }
                },
                nowrap: {
                    type: Boolean,
                    default: !1
                },
                tooltip: {
                    type: Boolean,
                    default: !1
                },
                placement: {
                    type: String,
                    default: "top"
                },
                ariaLabel: {
                    type: String,
                    default: ""
                },
                popperClass: {
                    type: String,
                    default: ""
                }
            },
            render: function(jn, ve) {
                var or = function() {
                    ve.listeners.click && ve.listeners.click()
                }
                    , pt = function(zt) {
                    switch (zt.code) {
                        case "Enter":
                            or();
                            break;
                        case "Space":
                            or();
                            break;
                        default:
                    }
                }
                    , je = ve.props
                    , Ke = je.ariaLabel
                    , it = je.type
                    , Ne = je.tooltip
                    , Gt = je.placement
                    , en = je.label
                    , rn = je.nowrap
                    , Tt = je.labelStyle
                    , vr = je.color
                    , rr = ve.slots()
                    , kr = it === "link"
                    , Re = it === "button"
                    , Et = !!Ne
                    , An = ve.props.width ? ve.props.width : void 0
                    , Yt = Sn({
                    whiteSpace: rn ? "nowrap" : "normal",
                    width: An || (rn ? "100%" : void 0),
                    overflow: "hidden",
                    textOverflow: "ellipsis",
                    maxWidth: "100%",
                    display: "inline-block",
                    verticalAlign: "top"
                }, Tt)
                    , gn = Sn({
                    color: vr,
                    cursor: "pointer"
                }, Yt)
                    , Qe = {
                    functional: !0,
                    render: function(zt) {
                        return kr ? zt("span", {
                            attrs: {
                                tabIndex: "0",
                                role: "link",
                                "aria-label": Ke || en
                            },
                            style: gn,
                            class: ve.props.staticClass,
                            on: {
                                click: function() {
                                    return or()
                                },
                                keydown: function(Lt) {
                                    return pt(Lt)
                                }
                            }
                        }, [en || ve.children]) : Re ? zt("span", {
                            attrs: {
                                tabIndex: "0",
                                role: "button",
                                "aria-label": Ke || en
                            },
                            style: gn,
                            class: ve.props.staticClass,
                            on: {
                                click: function() {
                                    return or()
                                },
                                keydown: function(Lt) {
                                    return pt(Lt)
                                }
                            }
                        }, [en || ve.children]) : zt("span", {
                            style: Yt,
                            class: ve.props.staticClass,
                            attrs: {
                                tabIndex: "-1"
                            }
                        }, [en || ve.children])
                    }
                };
                return Et ? jn("zm-tooltip", {
                    props: {
                        "append-to-body": !0,
                        "break-word": !0,
                        placement: Gt,
                        "popper-class": ve.props.popperClass
                    }
                }, [jn("span", {
                    slot: "content"
                }, rr.tooltip || en || ve.children), jn(Qe)]) : jn(Qe)
            }
        }
    }
    ,
    84795: (pn, E, a) => {
        "use strict";
        a.d(E, {
            A: () => it
        });
        var Y = a(69279)
            , J = a.n(Y)
            , $ = a(65770)
            , k = a.n($)
            , P = a(69761)
            , M = a.n(P)
            , Q = a(39084)
            , O = a.n(Q)
            , F = a(61849)
            , D = a.n(F)
            , z = a(81352)
            , G = a.n(z)
            , V = a(84653)
            , K = a.n(V)
            , te = a(59814)
            , ee = a.n(te)
            , pe = a(89099)
            , ne = a.n(pe)
            , X = a(44987)
            , x = a.n(X)
            , H = a(34622)
            , q = a.n(H)
            , _e = a(27785)
            , ie = a.n(_e)
            , ze = a(83030)
            , Oe = a.n(ze)
            , Cn = a(5339)
            , at = a.n(Cn)
            , Sn = a(53578)
            , Ce = a(56405)
            , wn = a.n(Ce)
            , Ae = a(50010);
        function nr(Ne) {
            "@babel/helpers - typeof";
            return nr = typeof Oe() == "function" && typeof at() == "symbol" ? function(Gt) {
                    return typeof Gt
                }
                : function(Gt) {
                    return Gt && typeof Oe() == "function" && Gt.constructor === Oe() && Gt !== Oe().prototype ? "symbol" : typeof Gt
                }
                ,
                nr(Ne)
        }
        function mt(Ne, Gt) {
            var en = G()(Ne);
            if (K()) {
                var rn = K()(Ne);
                Gt && (rn = ee()(rn).call(rn, function(Tt) {
                    return ne()(Ne, Tt).enumerable
                })),
                    en.push.apply(en, rn)
            }
            return en
        }
        function jn(Ne) {
            for (var Gt = 1; Gt < arguments.length; Gt++) {
                var en, rn, Tt = arguments[Gt] != null ? arguments[Gt] : {};
                Gt % 2 ? x()(en = mt(Object(Tt), !0)).call(en, function(vr) {
                    ve(Ne, vr, Tt[vr])
                }) : q() ? ie()(Ne, q()(Tt)) : x()(rn = mt(Object(Tt))).call(rn, function(vr) {
                    D()(Ne, vr, ne()(Tt, vr))
                })
            }
            return Ne
        }
        function ve(Ne, Gt, en) {
            return (Gt = or(Gt))in Ne ? D()(Ne, Gt, {
                value: en,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : Ne[Gt] = en,
                Ne
        }
        function or(Ne) {
            var Gt = pt(Ne, "string");
            return nr(Gt) == "symbol" ? Gt : Gt + ""
        }
        function pt(Ne, Gt) {
            if (nr(Ne) != "object" || !Ne)
                return Ne;
            var en = Ne[O()];
            if (en !== void 0) {
                var rn = en.call(Ne, Gt || "default");
                if (nr(rn) != "object")
                    return rn;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (Gt === "string" ? String : Number)(Ne)
        }
        var je = Ce.phoneUtils.Call
            , Ke = Ce.phoneUtils.isSameError;
        const it = {
            mixins: [Ae.A],
            data: function() {
                return {
                    leg: "main",
                    preMessageInstance: null,
                    preMessage: ""
                }
            },
            computed: jn(jn(jn(jn({}, (0,
                Sn.mapState)("coreVoice", ["calls"])), (0,
                Sn.mapGetters)("coreVoice", ["callReservation"])), (0,
                Sn.mapGetters)({
                account: "account",
                nacosConfig: "nacosConfig"
            })), {}, {
                enableCTIWarmConferenceRecording: function() {
                    var Gt, en, rn;
                    return (this.callState.conferenceType === "warm" && !((Gt = this.callState) !== null && Gt !== void 0 && Gt.merged) || ((en = this.callState) === null || en === void 0 ? void 0 : en.hasTwoLegs) && ((rn = this.callState) === null || rn === void 0 || (rn = rn.minorLegState) === null || rn === void 0 ? void 0 : rn.type) === "warmConference") && this.account.enableWarmConferenceAllLegsRecording && this.nacosConfig.disableWarmConferenceAllLegsRecording !== "true"
                },
                callState: function() {
                    var Gt, en = this, rn = J()(Gt = this.calls).call(Gt, function(vr) {
                        return en.$callId() === vr.id
                    }) || {}, Tt = rn.state;
                    return Tt || {}
                },
                isMainLeg: function() {
                    return this.callState.leg === "main"
                },
                currentLegRecordState: function() {
                    return this.currentLegState.recordStates
                },
                currentLegState: function() {
                    return this.isMainLeg ? this.callState.mainLegState : this.callState.minorLegState
                },
                isWarmConferenceTwoLegs: function() {
                    return this.callState.hasTwoLegs && this.callState.minorLegState.type === "warmConference"
                },
                isWarmTransferTwoLegs: function() {
                    return this.callState.hasTwoLegs && this.callState.minorLegState.type === "warmTransfer"
                }
            }),
            methods: jn(jn({}, (0,
                Sn.mapActions)("coreVoice", ["setCallState", "setCallLegState", "addSubCallLeg", "setCallUIState"])), {}, {
                setCurrentLegState: function(Gt) {
                    this.setCallLegState({
                        id: this.$callId(),
                        newState: Gt,
                        legType: this.callState.leg
                    })
                },
                setMainLegState: function(Gt) {
                    this.setCallLegState({
                        id: this.$callId(),
                        newState: Gt,
                        legType: "main"
                    })
                },
                setSubLegState: function(Gt) {
                    this.setCallLegState({
                        id: this.$callId(),
                        newState: Gt,
                        legType: "sub"
                    })
                },
                addSubLeg: function(Gt) {
                    var en = Gt.inviteeName;
                    this.addSubCallLeg({
                        id: this.$callId(),
                        inviteeName: en
                    })
                },
                removeSubLeg: function() {
                    this.setCallState({
                        id: this.$callId(),
                        newState: {
                            leg: "main",
                            hasTwoLegs: !1
                        }
                    })
                },
                setUIState: function(Gt) {
                    this.setCallUIState({
                        id: this.$callId(),
                        newState: Gt
                    })
                },
                clearPermissionCache: function() {
                    var Gt;
                    (Gt = window.zoomSdk) === null || Gt === void 0 || Gt.postJsMessage({
                        functionName: "CCIUIAPI_ResetMediaDevicePermission",
                        params: {}
                    }),
                        k()(function() {
                            location.reload()
                        }, 1e3)
                },
                useAxMessage: function(Gt, en) {
                    var rn = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1
                        , Tt = this.$createElement;
                    this.preMessageInstance && this.preMessage === Gt && this.preMessageInstance.close(),
                        this.preMessageInstance = this.$message({
                            type: en,
                            message: Tt("p", {
                                attrs: {
                                    role: "alert"
                                }
                            }, [Tt("span", null, Gt)]),
                            showClose: rn
                        }),
                        this.preMessage = Gt
                },
                showCallError: function(Gt) {
                    var en, rn, Tt, vr, rr, kr, Re, Et, An, Yt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
                    Ke(Gt, je.ERRORS.NOTALLOWED) ? this.chatNotify(this.$t("callbar.phone.error.permissionDenied"), "error", {
                        text: this.$t("cci.common.grantAccessToMicrophone"),
                        callback: this.clearPermissionCache
                    }, -1) : Ke(Gt, je.ERRORS.NOTFOUND) ? this.chatNotify(this.$t("callbar.phone.error.noDevice"), "error", {}, -1) : (Gt == null || (en = Gt.data) === null || en === void 0 ? void 0 : en.errorCode) === "100017" ? this.useAxMessage(this.$t("callbar.acceptCall.unable"), "warning", Yt) : M()(rn = je.ACCEPT_ERROR_SCENARIO.CUSTOMER_CANCEL).call(rn, Gt == null || (Tt = Gt.data) === null || Tt === void 0 ? void 0 : Tt.errorCode) || Ke(Gt, je.ERRORS.CANCEL) ? this.chatNotify(this.$t("callbar.acceptCall.customer.cancel"), "icon-warn", {}, 8e3) : M()(vr = je.ACCEPT_ERROR_SCENARIO.TASK_TIME_OUT).call(vr, Gt == null || (rr = Gt.data) === null || rr === void 0 ? void 0 : rr.errorCode) || Ke(Gt, je.ERRORS.TIMEOUT) ? this.chatNotify(this.$t("callbar.acceptCall.task.timeout"), "icon-warn", {}, 8e3) : M()(kr = je.ACCEPT_ERROR_SCENARIO.SIMULTANEOUS_ANSWER).call(kr, Gt == null || (Re = Gt.data) === null || Re === void 0 ? void 0 : Re.errorCode) || Ke(Gt, je.ERRORS.RESCINDED) ? this.chatNotify(this.$t("callbar.acceptCall.simultaneous.answer"), "icon-warn", {}, 8e3) : Ke(Gt, je.ERRORS.ACCEPTTIMEOUT) ? this.useAxMessage(this.$t("callbar.acceptCall.timeout", {
                        errorCode: "0"
                    }), "warning", Yt) : Ke(Gt, je.ERRORS.UNABLE) ? this.useAxMessage(this.$t("callbar.acceptCall.unable"), "warning", Yt) : (Gt == null || (Et = Gt.data) === null || Et === void 0 ? void 0 : Et.errorCode) === "141303" ? this.useAxMessage(this.$t("callbar.rejectCall.unable"), "warning", Yt) : Ke(Gt, je.ERRORS.HANGUPWHENACCEPT) || (Gt?.reason === "call.accept.timeout" ? this.useAxMessage(this.$t("callbar.acceptCall.timeout", {
                        errorCode: Gt?.errorCode
                    }), "warning", Yt) : (Gt == null || (An = Gt.data) === null || An === void 0 ? void 0 : An.errorCode) === "100011" ? this.useAxMessage(this.$t("callbar.outboundCall.failed.noCallOutLicense"), "warning", Yt) : this.useAxMessage(Gt?.message, "error", Yt))
                }
            }),
            inject: ["$callId"]
        }
    }
    ,
    50010: (pn, E, a) => {
        "use strict";
        a.d(E, {
            A: () => $
        });
        var Y = a(83266)
            , J = a.n(Y);
        const $ = Y.notificationMixin
    }
    ,
    71487: (pn, E, a) => {
        "use strict";
        a.d(E, {
            U: () => je
        });
        var Y = a(39864)
            , J = a.n(Y)
            , $ = a(53584)
            , k = a.n($)
            , P = a(69761)
            , M = a.n(P)
            , Q = a(39084)
            , O = a.n(Q)
            , F = a(61849)
            , D = a.n(F)
            , z = a(83030)
            , G = a.n(z)
            , V = a(5339)
            , K = a.n(V)
            , te = a(83266)
            , ee = a.n(te)
            , pe = a(6372)
            , ne = a(76709)
            , X = a.n(ne)
            , x = a(56405)
            , H = a.n(x)
            , q = a(5866)
            , _e = a.n(q)
            , ie = a(73680);
        function ze(Ke) {
            "@babel/helpers - typeof";
            return ze = typeof G() == "function" && typeof K() == "symbol" ? function(it) {
                    return typeof it
                }
                : function(it) {
                    return it && typeof G() == "function" && it.constructor === G() && it !== G().prototype ? "symbol" : typeof it
                }
                ,
                ze(Ke)
        }
        function Oe(Ke, it, Ne) {
            return (it = Cn(it))in Ke ? D()(Ke, it, {
                value: Ne,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : Ke[it] = Ne,
                Ke
        }
        function Cn(Ke) {
            var it = at(Ke, "string");
            return ze(it) == "symbol" ? it : it + ""
        }
        function at(Ke, it) {
            if (ze(Ke) != "object" || !Ke)
                return Ke;
            var Ne = Ke[O()];
            if (Ne !== void 0) {
                var Gt = Ne.call(Ke, it || "default");
                if (ze(Gt) != "object")
                    return Gt;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (it === "string" ? String : Number)(Ke)
        }
        var Sn = function(it) {
            var Ne, Gt = (0,
                ne.useStore)(), en = (Ne = Gt.getters.user) === null || Ne === void 0 ? void 0 : Ne.countryOrRegion;
            return (0,
                ie.phoneNumber)(it, en)
        }
            , Ce = function(it) {
            var Ne = it ?? 0;
            return Ne ? (0,
                x.secsToHHMMSS)(Math.abs(Ne)) : "--"
        }
            , wn = function(it) {
            return it ? _e()(it).format("h:mm A   MM/DD/YYYY") : "--"
        }
            , Ae = function(it) {
            return J()(it) && it.length > 0 ? it.join(",") : "-"
        }
            , nr = function(it) {
            return J()(it) && it.length > 0 ? k()(it).call(it, function(Ne) {
                return Ne?.flowName
            }).join(",") : "-"
        }
            , mt = ["engagementId", "disposition", "queueName"]
            , jn = Oe(Oe(Oe(Oe(Oe(Oe(Oe(Oe(Oe({}, -2, "callback"), -1, "ringing"), 0, "inactive"), 1, "inFlow"), 2, "inQueue"), 3, "assigned"), 4, "hold"), 5, "end"), 6, "disposition")
            , ve = function(it) {
            var Ne;
            it = (Ne = it) !== null && Ne !== void 0 ? Ne : 0;
            var Gt = pe.i18n.t("cci.common.engagements.status.".concat(jn[it]));
            return Gt
        }
            , or = function(it, Ne) {
            var Gt = (0,
                te.useCrmUser)()
                , en = Gt.getCrmName
                , rn = Ne || {}
                , Tt = rn.customerName
                , vr = Tt === void 0 ? "" : Tt
                , rr = rn.email
                , kr = rn.customerNumber
                , Re = rn.engagementId
                , Et = x.CachedEngagementUsers.getInstance().getName(Re)
                , An = en(Re, vr, rr, kr)
                , Yt = Ne != null && Ne.customerNumber ? Sn(Ne.customerNumber) : "";
            return Et || An || vr || Yt || ""
        }
            , pt = function(it) {
            return it ? it === "IN" || it === "I" || it === 1 ? pe.i18n.t("cci.common.label.inbound") : pe.i18n.t("cci.common.label.outbound") : "-"
        }
            , je = function(it) {
            var Ne, Gt = it.item, en = it.key, rn = it.isNewMessaging;
            if (!Gt)
                return "-";
            if (rn && en === "source") {
                var Tt = {
                    chat: 1,
                    "in-app-chat": 2,
                    sms: 4,
                    "facebook-messenger": 8,
                    "whats-app": 16,
                    instagram: 32,
                    "team-chat": 64,
                    32: pe.i18n.t("cci.analytics.channel.instagram"),
                    64: pe.i18n.t("cci.common.label.zoomTeamChat"),
                    1: pe.i18n.t("cci.analytics.channel.webChat"),
                    2: pe.i18n.t("cci.analytics.channel.inAppChat"),
                    4: pe.i18n.t("cci.common.label.sms"),
                    8: pe.i18n.t("cci.common.label.facebook_messenger"),
                    16: pe.i18n.t("cci.common.label.whats_app")
                };
                return Tt[Gt[en]] || "-"
            }
            if (M()(mt).call(mt, en))
                return Gt[en] || "-";
            var vr = (0,
                te.useCloseEngagement)()
                , rr = vr.formatSource
                , kr = {
                queueNames: Ae,
                agentNames: Ae,
                customerNames: or,
                customerName: or,
                customerNumber: Sn,
                startTime: wn,
                endTime: wn,
                duration: x.formatDuration,
                wrapUpTime: Ce,
                flows: nr,
                status: ve,
                direction: pt,
                source: rr
            };
            return ((Ne = kr[en]) === null || Ne === void 0 ? void 0 : Ne.call(kr, Gt[en], Gt)) || "-"
        }
    }
    ,
    5412: (pn, E, a) => {
        "use strict";
        a.d(E, {
            Jp: () => V,
            WX: () => ee,
            _J: () => te
        });
        var Y = a(69761)
            , J = a.n(Y)
            , $ = a(81352)
            , k = a.n($)
            , P = a(6372)
            , M = a(56405)
            , Q = a.n(M)
            , O = a(64234)
            , F = a.n(O)
            , D = "messaging"
            , z = {
            0: "voice",
            1: "chat",
            2: "sms",
            3: "zr",
            4: "video",
            7: "messaging",
            8: "email",
            11: "app_chat",
            voice: 0,
            chat: 1,
            sms: 2,
            zr: 3,
            video: 4,
            messaging: 7,
            email: 8,
            app_chat: 11
        }
            , G = {
            0: "voice",
            1: "chat",
            2: "sms",
            3: "zr",
            4: "video",
            7: "messaging",
            8: "email",
            11: "app_chat",
            voice: 0,
            chat: 1,
            sms: 2,
            zr: 3,
            video: 4,
            messaging: 7,
            email: 8,
            app_chat: 11
        };
        function V(pe) {
            var ne = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "true"
                , X = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "true"
                , x = pe.enableVoiceChannel
                , H = pe.enableVideoChannel
                , q = pe.enableMessageChannel
                , _e = pe.enableSmsChannel
                , ie = pe.enableChatChannel
                , ze = []
                , Oe = [];
            return x && ze.push({
                value: G.voice,
                key: z[z.voice],
                label: P.i18n.t("cci.common.label.voice"),
                beta: K(G.voice)
            }),
            H && ze.push({
                value: G.video,
                key: z[z.video],
                label: P.i18n.t("cci.common.label.video"),
                beta: K(G.video)
            }),
                q && ne === "true" ? ze.push({
                    value: G.messaging,
                    key: z[z.messaging],
                    label: P.i18n.t("cci.common.label.messaging")
                }) : (_e && Oe.push({
                    value: G.sms,
                    key: z[z.sms],
                    label: P.i18n.t("cci.common.label.sms"),
                    beta: K(G.sms)
                }),
                ie && Oe.push({
                    value: G.chat,
                    key: z[z.chat],
                    label: P.i18n.t("cci.common.label.commonChat"),
                    beta: K(G.chat)
                }),
                Oe.length && ze.push({
                    value: D,
                    key: D,
                    label: P.i18n.t("cci.common.label.messaging"),
                    children: Oe
                })),
            pe.enableEmailChannel && X === "true" && ze.push({
                value: G.email,
                key: z[z.email],
                label: P.i18n.t("cci.common.label.email")
            }),
                ze
        }
        function K(pe) {
            var ne;
            return J()(ne = [G.zr]).call(ne, pe)
        }
        function te(pe) {
            var ne, X = pe ?? {}, x = X.channelType;
            return J()(ne = k()(F()(M.MessageChannelType, "SMS"))).call(ne, x)
        }
        function ee(pe) {
            var ne;
            return J()(ne = ["chat", "app_chat", "facebook_messenger", "whats_app"]).call(ne, pe)
        }
    }
    ,
    90981: (pn, E, a) => {
        "use strict";
        a.d(E, {
            A: () => $
        });
        var Y = a(83266)
            , J = a.n(Y);
        const $ = Y.historyMixin
    }
    ,
    33063: (pn, E, a) => {
        "use strict";
        a.r(E);
        var Y = a(56405)
            , J = a.n(Y)
            , $ = (0,
            Y.getStaticCDNPath)();
        a.p = "".concat($, "/"),
            window.localStorage.setItem("CCI_DOMAIN", "".concat($))
    }
    ,
    83314: (pn, E, a) => {
        "use strict";
        a.d(E, {
            A: () => $
        });
        var Y = a(83266)
            , J = a.n(Y);
        const $ = Y.AccountMixin
    }
    ,
    72785: (pn, E, a) => {
        "use strict";
        a.d(E, {
            A: () => $
        });
        var Y = a(83266)
            , J = a.n(Y);
        const $ = Y.axMixin
    }
    ,
    20537: (pn, E, a) => {
        "use strict";
        a.d(E, {
            A: () => J
        });
        var Y = a(83314);
        const J = {
            mixins: [Y.A],
            computed: {
                readLogPermission: function() {
                    return this.getPermissionEnabled("VecLog:Read") || this.getPermissionEnabled("VecReportHistory:Read")
                }
            },
            methods: {
                destroyEngagementEvents: function() {
                    var k = this.$refs.engagementEvents;
                    k && k.destroyPopover && k.destroyPopover()
                }
            },
            deactivated: function() {
                this.destroyEngagementEvents()
            },
            beforeDestroy: function() {
                this.destroyEngagementEvents()
            }
        }
    }
    ,
    77753: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => dt
            });
        var Y = a(70184)
            , J = a.n(Y)
            , $ = a(27425)
            , k = a.n($)
            , P = a(69761)
            , M = a.n(P)
            , Q = a(39084)
            , O = a.n(Q)
            , F = a(61849)
            , D = a.n(F)
            , z = a(81352)
            , G = a.n(z)
            , V = a(84653)
            , K = a.n(V)
            , te = a(59814)
            , ee = a.n(te)
            , pe = a(89099)
            , ne = a.n(pe)
            , X = a(44987)
            , x = a.n(X)
            , H = a(34622)
            , q = a.n(H)
            , _e = a(27785)
            , ie = a.n(_e)
            , ze = a(83537)
            , Oe = a.n(ze)
            , Cn = a(83030)
            , at = a.n(Cn)
            , Sn = a(65888)
            , Ce = a.n(Sn)
            , wn = a(34187)
            , Ae = a.n(wn)
            , nr = a(73007)
            , mt = a.n(nr)
            , jn = a(23716)
            , ve = a.n(jn)
            , or = a(2208)
            , pt = a.n(or)
            , je = a(5339)
            , Ke = a.n(je)
            , it = a(53578)
            , Ne = a(56405)
            , Gt = a.n(Ne)
            , en = a(46699)
            , rn = a(98608)
            , Tt = a(50010)
            , vr = a(6301)
            , rr = a(4439)
            , kr = a(61367)
            , Re = a.n(kr)
            , Et = a(35878)
            , An = a.n(Et)
            , Yt = a(30824)
            , gn = a.n(Yt)
            , Qe = a(19e3)
            , ar = a(76642)
            , zt = a(20125);
        function Zt(Xe) {
            "@babel/helpers - typeof";
            return Zt = typeof at() == "function" && typeof Ke() == "symbol" ? function(ht) {
                    return typeof ht
                }
                : function(ht) {
                    return ht && typeof at() == "function" && ht.constructor === at() && ht !== at().prototype ? "symbol" : typeof ht
                }
                ,
                Zt(Xe)
        }
        function Lt() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Lt = function() {
                return ht
            }
            ;
            var Xe, ht = {}, yn = Object.prototype, dn = yn.hasOwnProperty, Gn = D() || function(Pe, W, Ee) {
                Pe[W] = Ee.value
            }
                , sr = typeof at() == "function" ? at() : {}, Zn = sr.iterator || "@@iterator", _r = sr.asyncIterator || "@@asyncIterator", Pn = sr.toStringTag || "@@toStringTag";
            function Ze(Pe, W, Ee) {
                return D()(Pe, W, {
                    value: Ee,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    Pe[W]
            }
            try {
                Ze({}, "")
            } catch {
                Ze = function(Ee, nt, Ie) {
                    return Ee[nt] = Ie
                }
            }
            function Vn(Pe, W, Ee, nt) {
                var Ie = W && W.prototype instanceof Rr ? W : Rr
                    , Be = Ce()(Ie.prototype)
                    , st = new Bt(nt || []);
                return Gn(Be, "_invoke", {
                    value: me(Pe, Ee, st)
                }),
                    Be
            }
            function Se(Pe, W, Ee) {
                try {
                    return {
                        type: "normal",
                        arg: Pe.call(W, Ee)
                    }
                } catch (nt) {
                    return {
                        type: "throw",
                        arg: nt
                    }
                }
            }
            ht.wrap = Vn;
            var Ue = "suspendedStart"
                , yt = "suspendedYield"
                , Qt = "executing"
                , Hn = "completed"
                , cr = {};
            function Rr() {}
            function Pr() {}
            function rt() {}
            var ae = {};
            Ze(ae, Zn, function() {
                return this
            });
            var de = Ae()
                , ye = de && de(de(En([])));
            ye && ye !== yn && dn.call(ye, Zn) && (ae = ye);
            var Le = rt.prototype = Rr.prototype = Ce()(ae);
            function Te(Pe) {
                var W;
                x()(W = ["next", "throw", "return"]).call(W, function(Ee) {
                    Ze(Pe, Ee, function(nt) {
                        return this._invoke(Ee, nt)
                    })
                })
            }
            function be(Pe, W) {
                function Ee(Ie, Be, st, jt) {
                    var _t = Se(Pe[Ie], Pe, Be);
                    if (_t.type !== "throw") {
                        var Ge = _t.arg
                            , It = Ge.value;
                        return It && Zt(It) == "object" && dn.call(It, "__await") ? W.resolve(It.__await).then(function(cn) {
                            Ee("next", cn, st, jt)
                        }, function(cn) {
                            Ee("throw", cn, st, jt)
                        }) : W.resolve(It).then(function(cn) {
                            Ge.value = cn,
                                st(Ge)
                        }, function(cn) {
                            return Ee("throw", cn, st, jt)
                        })
                    }
                    jt(_t.arg)
                }
                var nt;
                Gn(this, "_invoke", {
                    value: function(Be, st) {
                        function jt() {
                            return new W(function(_t, Ge) {
                                    Ee(Be, st, _t, Ge)
                                }
                            )
                        }
                        return nt = nt ? nt.then(jt, jt) : jt()
                    }
                })
            }
            function me(Pe, W, Ee) {
                var nt = Ue;
                return function(Ie, Be) {
                    if (nt === Qt)
                        throw Error("Generator is already running");
                    if (nt === Hn) {
                        if (Ie === "throw")
                            throw Be;
                        return {
                            value: Xe,
                            done: !0
                        }
                    }
                    for (Ee.method = Ie,
                             Ee.arg = Be; ; ) {
                        var st = Ee.delegate;
                        if (st) {
                            var jt = He(st, Ee);
                            if (jt) {
                                if (jt === cr)
                                    continue;
                                return jt
                            }
                        }
                        if (Ee.method === "next")
                            Ee.sent = Ee._sent = Ee.arg;
                        else if (Ee.method === "throw") {
                            if (nt === Ue)
                                throw nt = Hn,
                                    Ee.arg;
                            Ee.dispatchException(Ee.arg)
                        } else
                            Ee.method === "return" && Ee.abrupt("return", Ee.arg);
                        nt = Qt;
                        var _t = Se(Pe, W, Ee);
                        if (_t.type === "normal") {
                            if (nt = Ee.done ? Hn : yt,
                            _t.arg === cr)
                                continue;
                            return {
                                value: _t.arg,
                                done: Ee.done
                            }
                        }
                        _t.type === "throw" && (nt = Hn,
                            Ee.method = "throw",
                            Ee.arg = _t.arg)
                    }
                }
            }
            function He(Pe, W) {
                var Ee = W.method
                    , nt = Pe.iterator[Ee];
                if (nt === Xe)
                    return W.delegate = null,
                    Ee === "throw" && Pe.iterator.return && (W.method = "return",
                        W.arg = Xe,
                        He(Pe, W),
                    W.method === "throw") || Ee !== "return" && (W.method = "throw",
                        W.arg = new TypeError("The iterator does not provide a '" + Ee + "' method")),
                        cr;
                var Ie = Se(nt, Pe.iterator, W.arg);
                if (Ie.type === "throw")
                    return W.method = "throw",
                        W.arg = Ie.arg,
                        W.delegate = null,
                        cr;
                var Be = Ie.arg;
                return Be ? Be.done ? (W[Pe.resultName] = Be.value,
                    W.next = Pe.nextLoc,
                W.method !== "return" && (W.method = "next",
                    W.arg = Xe),
                    W.delegate = null,
                    cr) : Be : (W.method = "throw",
                    W.arg = new TypeError("iterator result is not an object"),
                    W.delegate = null,
                    cr)
            }
            function Ct(Pe) {
                var W = {
                    tryLoc: Pe[0]
                };
                1 in Pe && (W.catchLoc = Pe[1]),
                2 in Pe && (W.finallyLoc = Pe[2],
                    W.afterLoc = Pe[3]),
                    this.tryEntries.push(W)
            }
            function wt(Pe) {
                var W = Pe.completion || {};
                W.type = "normal",
                    delete W.arg,
                    Pe.completion = W
            }
            function Bt(Pe) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    x()(Pe).call(Pe, Ct, this),
                    this.reset(!0)
            }
            function En(Pe) {
                if (Pe || Pe === "") {
                    var W = Pe[Zn];
                    if (W)
                        return W.call(Pe);
                    if (typeof Pe.next == "function")
                        return Pe;
                    if (!isNaN(Pe.length)) {
                        var Ee = -1
                            , nt = function Ie() {
                            for (; ++Ee < Pe.length; )
                                if (dn.call(Pe, Ee))
                                    return Ie.value = Pe[Ee],
                                        Ie.done = !1,
                                        Ie;
                            return Ie.value = Xe,
                                Ie.done = !0,
                                Ie
                        };
                        return nt.next = nt
                    }
                }
                throw new TypeError(Zt(Pe) + " is not iterable")
            }
            return Pr.prototype = rt,
                Gn(Le, "constructor", {
                    value: rt,
                    configurable: !0
                }),
                Gn(rt, "constructor", {
                    value: Pr,
                    configurable: !0
                }),
                Pr.displayName = Ze(rt, Pn, "GeneratorFunction"),
                ht.isGeneratorFunction = function(Pe) {
                    var W = typeof Pe == "function" && Pe.constructor;
                    return !!W && (W === Pr || (W.displayName || W.name) === "GeneratorFunction")
                }
                ,
                ht.mark = function(Pe) {
                    return mt() ? mt()(Pe, rt) : (Pe.__proto__ = rt,
                        Ze(Pe, Pn, "GeneratorFunction")),
                        Pe.prototype = Ce()(Le),
                        Pe
                }
                ,
                ht.awrap = function(Pe) {
                    return {
                        __await: Pe
                    }
                }
                ,
                Te(be.prototype),
                Ze(be.prototype, _r, function() {
                    return this
                }),
                ht.AsyncIterator = be,
                ht.async = function(Pe, W, Ee, nt, Ie) {
                    Ie === void 0 && (Ie = Oe());
                    var Be = new be(Vn(Pe, W, Ee, nt),Ie);
                    return ht.isGeneratorFunction(W) ? Be : Be.next().then(function(st) {
                        return st.done ? st.value : Be.next()
                    })
                }
                ,
                Te(Le),
                Ze(Le, Pn, "Generator"),
                Ze(Le, Zn, function() {
                    return this
                }),
                Ze(Le, "toString", function() {
                    return "[object Generator]"
                }),
                ht.keys = function(Pe) {
                    var W = Object(Pe)
                        , Ee = [];
                    for (var nt in W)
                        Ee.push(nt);
                    return ve()(Ee).call(Ee),
                        function Ie() {
                            for (; Ee.length; ) {
                                var Be = Ee.pop();
                                if (Be in W)
                                    return Ie.value = Be,
                                        Ie.done = !1,
                                        Ie
                            }
                            return Ie.done = !0,
                                Ie
                        }
                }
                ,
                ht.values = En,
                Bt.prototype = {
                    constructor: Bt,
                    reset: function(W) {
                        var Ee;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = Xe,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = Xe,
                            x()(Ee = this.tryEntries).call(Ee, wt),
                            !W)
                            for (var nt in this)
                                nt.charAt(0) === "t" && dn.call(this, nt) && !isNaN(+pt()(nt).call(nt, 1)) && (this[nt] = Xe)
                    },
                    stop: function() {
                        this.done = !0;
                        var W = this.tryEntries[0].completion;
                        if (W.type === "throw")
                            throw W.arg;
                        return this.rval
                    },
                    dispatchException: function(W) {
                        if (this.done)
                            throw W;
                        var Ee = this;
                        function nt(Ge, It) {
                            return st.type = "throw",
                                st.arg = W,
                                Ee.next = Ge,
                            It && (Ee.method = "next",
                                Ee.arg = Xe),
                                !!It
                        }
                        for (var Ie = this.tryEntries.length - 1; Ie >= 0; --Ie) {
                            var Be = this.tryEntries[Ie]
                                , st = Be.completion;
                            if (Be.tryLoc === "root")
                                return nt("end");
                            if (Be.tryLoc <= this.prev) {
                                var jt = dn.call(Be, "catchLoc")
                                    , _t = dn.call(Be, "finallyLoc");
                                if (jt && _t) {
                                    if (this.prev < Be.catchLoc)
                                        return nt(Be.catchLoc, !0);
                                    if (this.prev < Be.finallyLoc)
                                        return nt(Be.finallyLoc)
                                } else if (jt) {
                                    if (this.prev < Be.catchLoc)
                                        return nt(Be.catchLoc, !0)
                                } else {
                                    if (!_t)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < Be.finallyLoc)
                                        return nt(Be.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(W, Ee) {
                        for (var nt = this.tryEntries.length - 1; nt >= 0; --nt) {
                            var Ie = this.tryEntries[nt];
                            if (Ie.tryLoc <= this.prev && dn.call(Ie, "finallyLoc") && this.prev < Ie.finallyLoc) {
                                var Be = Ie;
                                break
                            }
                        }
                        Be && (W === "break" || W === "continue") && Be.tryLoc <= Ee && Ee <= Be.finallyLoc && (Be = null);
                        var st = Be ? Be.completion : {};
                        return st.type = W,
                            st.arg = Ee,
                            Be ? (this.method = "next",
                                this.next = Be.finallyLoc,
                                cr) : this.complete(st)
                    },
                    complete: function(W, Ee) {
                        if (W.type === "throw")
                            throw W.arg;
                        return W.type === "break" || W.type === "continue" ? this.next = W.arg : W.type === "return" ? (this.rval = this.arg = W.arg,
                            this.method = "return",
                            this.next = "end") : W.type === "normal" && Ee && (this.next = Ee),
                            cr
                    },
                    finish: function(W) {
                        for (var Ee = this.tryEntries.length - 1; Ee >= 0; --Ee) {
                            var nt = this.tryEntries[Ee];
                            if (nt.finallyLoc === W)
                                return this.complete(nt.completion, nt.afterLoc),
                                    wt(nt),
                                    cr
                        }
                    },
                    catch: function(W) {
                        for (var Ee = this.tryEntries.length - 1; Ee >= 0; --Ee) {
                            var nt = this.tryEntries[Ee];
                            if (nt.tryLoc === W) {
                                var Ie = nt.completion;
                                if (Ie.type === "throw") {
                                    var Be = Ie.arg;
                                    wt(nt)
                                }
                                return Be
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(W, Ee, nt) {
                        return this.delegate = {
                            iterator: En(W),
                            resultName: Ee,
                            nextLoc: nt
                        },
                        this.method === "next" && (this.arg = Xe),
                            cr
                    }
                },
                ht
        }
        function gr(Xe, ht, yn, dn, Gn, sr, Zn) {
            try {
                var _r = Xe[sr](Zn)
                    , Pn = _r.value
            } catch (Ze) {
                return void yn(Ze)
            }
            _r.done ? ht(Pn) : Oe().resolve(Pn).then(dn, Gn)
        }
        function Mn(Xe) {
            return function() {
                var ht = this
                    , yn = arguments;
                return new (Oe())(function(dn, Gn) {
                        var sr = Xe.apply(ht, yn);
                        function Zn(Pn) {
                            gr(sr, dn, Gn, Zn, _r, "next", Pn)
                        }
                        function _r(Pn) {
                            gr(sr, dn, Gn, Zn, _r, "throw", Pn)
                        }
                        Zn(void 0)
                    }
                )
            }
        }
        function U(Xe, ht) {
            var yn = G()(Xe);
            if (K()) {
                var dn = K()(Xe);
                ht && (dn = ee()(dn).call(dn, function(Gn) {
                    return ne()(Xe, Gn).enumerable
                })),
                    yn.push.apply(yn, dn)
            }
            return yn
        }
        function Mt(Xe) {
            for (var ht = 1; ht < arguments.length; ht++) {
                var yn, dn, Gn = arguments[ht] != null ? arguments[ht] : {};
                ht % 2 ? x()(yn = U(Object(Gn), !0)).call(yn, function(sr) {
                    Kn(Xe, sr, Gn[sr])
                }) : q() ? ie()(Xe, q()(Gn)) : x()(dn = U(Object(Gn))).call(dn, function(sr) {
                    D()(Xe, sr, ne()(Gn, sr))
                })
            }
            return Xe
        }
        function Kn(Xe, ht, yn) {
            return (ht = In(ht))in Xe ? D()(Xe, ht, {
                value: yn,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : Xe[ht] = yn,
                Xe
        }
        function In(Xe) {
            var ht = tn(Xe, "string");
            return Zt(ht) == "symbol" ? ht : ht + ""
        }
        function tn(Xe, ht) {
            if (Zt(Xe) != "object" || !Xe)
                return Xe;
            var yn = Xe[O()];
            if (yn !== void 0) {
                var dn = yn.call(Xe, ht || "default");
                if (Zt(dn) != "object")
                    return dn;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (ht === "string" ? String : Number)(Xe)
        }
        var Ot = null
            , Pt = null
            , $n = Ne.phoneUtils.CORE_EVENT_LIST;
        const dt = {
            mixins: [Tt.A],
            data: function() {
                return {
                    thirdLoginWin: null,
                    autoRefreshTokenTimer: null,
                    autoRefreshTip: null,
                    tokenExpireTip: null,
                    notifyVm: null
                }
            },
            mounted: function() {
                zt.ctiBus.$on("CCI_TOKEN_EXPIRED", this.handleTokenExpired),
                    zt.ctiBus.$on("CCI_TOKEN_VALID", this.handleTokenValid),
                    Ne.eventBus.$on("CCI_REFRESH_TOKEN_BY_LOGIN", this.refreshTokenExpired),
                    Ne.eventBus.$on("CLEAR_REFRESH_TOKEN_NOTIFY", this.clearNotify)
            },
            beforeDestroy: function() {
                zt.ctiBus.$off("CCI_TOKEN_EXPIRED", this.handleTokenExpired),
                    zt.ctiBus.$off("CCI_TOKEN_VALID", this.handleTokenValid),
                    Ne.eventBus.$off("CCI_REFRESH_TOKEN_BY_LOGIN", this.refreshTokenExpired),
                    Ne.eventBus.$off("CLEAR_REFRESH_TOKEN_NOTIFY", this.clearNotify),
                    this.clearRefreshTimer(),
                    this.closeRefreshTip(),
                    this.clearNotify()
            },
            methods: Mt(Mt({}, (0,
                it.mapActions)("cti", ["setRefreshTokenExpireTime", "setShowTokenExpireInBell"])), {}, {
                onReload: function() {
                    (0,
                        Ne.reloadPage)()
                },
                handleErrorLogout: function() {
                    (0,
                        vr.Jx)(),
                        (0,
                            vr.Ew)(),
                        window.location.reload()
                },
                openRefreshTip: function() {
                    var ht = this;
                    this.closeRefreshTip();
                    var yn = this.$createElement;
                    this.autoRefreshTip = this.$message({
                        showClose: !0,
                        duration: 0,
                        type: "warning",
                        message: yn("p", null, [yn("span", null, "Refresh token... "), yn("i", {
                            style: "color: teal;cursor: pointer;",
                            on: {
                                click: function() {
                                    ht.thirdLoginWin && !ht.thirdLoginWin.closed && ht.thirdLoginWin.focus()
                                }
                            }
                        }, "Click"), yn("span", null, " to view.")])
                    })
                },
                closeRefreshTip: function() {
                    this.autoRefreshTip && (this.autoRefreshTip.close(),
                        this.autoRefreshTip = null)
                },
                clearRefreshTimer: function() {
                    console.log("clearRefreshTimer called"),
                    this.autoRefreshTokenTimer && clearInterval(this.autoRefreshTokenTimer)
                },
                autoRefreshToken: function() {
                    this.autoRefreshTokenTimer || (this.autoRefreshTokenTimer = J()(this.refreshCtiToken, 3 * 60 * 1e3))
                },
                refreshCtiToken: function() {
                    var ht = this;
                    if (console.log("refreshCtiToken called", k()()),
                        this.pageStatus = kr.PageStatus.AutoRefresh,
                    this.thirdLoginWin && !this.thirdLoginWin.closed) {
                        this.thirdLoginWin.focus();
                        return
                    }
                    var yn = "".concat(window.location.origin, "/cci/multi/third-login");
                    this.thirdLoginWin = window.open(yn, "CCI_AUTH_PAGE", "location=no,resizable=no,toolbar=no");
                    var dn = function(sr) {
                        if (sr.data && sr.data.type === "login") {
                            var Zn = sr.data.data
                                , _r = Zn.access_token
                                , Pn = Zn.refreshToken
                                , Ze = Zn.x_zm_aid
                                , Vn = Zn.x_zm_haid
                                , Se = Zn.x_zm_client_cluster_id;
                            console.log("old token:", Ne.ZCache.getToken()),
                                console.log("new refreshed token:", _r),
                                en.A.Authorization = _r,
                                Ne.ZCache.setToken(_r),
                                Ne.ZCache.setClusterId(Se),
                                Ne.ZCache.setRefreshToken(Pn),
                                Ne.ZCache.setAid(Ze),
                                Ne.ZCache.setHaid(Vn),
                                window.localStorage.setItem("CCI_THIRD_TOKEN", _r),
                                window.localStorage.setItem("CCI_REFESH_TOKEN", Pn),
                                window.localStorage.setItem("CCI_THIRD_CLUSTER_ID", Se),
                                window.localStorage.setItem("CCI_THIRD_AID", Ze),
                                window.localStorage.setItem("CCI_THIRD_HAID", Vn),
                                ht.pageStatus = kr.PageStatus.RefreshSuccess;
                            try {
                                ht.tokenExpireTip && (ht.tokenExpireTip.close(),
                                    ht.tokenExpireTip = null),
                                    ht.$message.success("Token refreshed successfully."),
                                (!ht.needShowThirdLogin && !ht.ready && !ht.loading || ht.loading) && zt.ctiBus.$emit("refreshedInLoadingProgress")
                            } catch (Ue) {
                                ht.$message.error(Ue.message || "Token refresh failed")
                            } finally {
                                window.removeEventListener("message", dn, !1),
                                    ht.closeRefreshTip()
                            }
                        }
                    };
                    window.addEventListener("message", dn, !1)
                },
                handleTokenExpired: function() {
                    var ht = this;
                    if (console.log("handleTokenExpired called"),
                    this.pageStatus === kr.PageStatus.LoginSuccess || this.pageStatus === kr.PageStatus.AuthTokenValidationRequired || this.pageStatus === kr.PageStatus.RefreshSuccess || this.pageStatus === kr.PageStatus.Refresh) {
                        var yn = (0,
                            Yt.getCRM)();
                        if (yn === rr.CRMS.SalesforceServiceCloud) {
                            (0,
                                Qe.letServiceCloudLogout)();
                            return
                        }
                        this.tokenExpireTip && (this.tokenExpireTip.close(),
                            this.tokenExpireTip = null);
                        var dn = this.$createElement;
                        this.tokenExpireTip = this.$message({
                            showClose: !0,
                            duration: 0,
                            type: "warning",
                            message: dn("p", null, [dn("span", null, "Token expired. "), dn("i", {
                                style: "color: teal",
                                on: {
                                    click: function() {
                                        ht.refreshCtiToken()
                                    }
                                }
                            }, "Click"), dn("span", null, " to log in again.")])
                        })
                    }
                    if (window.__subBroadcast__) {
                        var Gn, sr;
                        (Gn = window.__subBroadcast__) === null || Gn === void 0 || (sr = Gn.sendMessageToCore) === null || sr === void 0 || sr.call(Gn, {
                            eventType: $n.CLOSE_SELF
                        })
                    }
                },
                handleTokenValid: function() {
                    this.tokenExpireTip && (this.tokenExpireTip.close(),
                        this.tokenExpireTip = null)
                },
                handleThirdLogin: function() {
                    var ht = this;
                    return Mn(Lt().mark(function yn() {
                        var dn, Gn, sr, Zn;
                        return Lt().wrap(function(Pn) {
                            for (; ; )
                                switch (Pn.prev = Pn.next) {
                                    case 0:
                                        return Pn.next = 2,
                                            (0,
                                                Et.getCRMInstance)();
                                    case 2:
                                        if (dn = Pn.sent,
                                            !(dn != null && dn.authenticationInterceptor)) {
                                            Pn.next = 9;
                                            break
                                        }
                                        return Pn.next = 6,
                                            dn.authenticationInterceptor();
                                    case 6:
                                        if (Gn = Pn.sent,
                                            Gn) {
                                            Pn.next = 9;
                                            break
                                        }
                                        return Pn.abrupt("return");
                                    case 9:
                                        if (ht.pageStatus = kr.PageStatus.LoggingIn,
                                            !(ht.thirdLoginWin && !ht.thirdLoginWin.closed)) {
                                            Pn.next = 13;
                                            break
                                        }
                                        return ht.thirdLoginWin.focus(),
                                            Pn.abrupt("return");
                                    case 13:
                                        (0,
                                            vr.Jx)(),
                                            (0,
                                                vr.Ew)(),
                                            (0,
                                                ar.releaseAllLock)(),
                                            sr = "/cci/multi/third-login",
                                            ht.thirdLoginWin = window.open(sr, "CCI_AUTH_PAGE", "location=no,resizable=no,toolbar=no"),
                                            Zn = function() {
                                                var Ze = Mn(Lt().mark(function Vn(Se) {
                                                    var Ue, yt, Qt, Hn, cr, Rr, Pr, rt;
                                                    return Lt().wrap(function(de) {
                                                        for (; ; )
                                                            switch (de.prev = de.next) {
                                                                case 0:
                                                                    if (console.log("receiveMessage res:", Se),
                                                                        !(Se.data && Se.data.type === "login")) {
                                                                        de.next = 21;
                                                                        break
                                                                    }
                                                                    if (yt = Se.data.data,
                                                                        Qt = yt.access_token,
                                                                        Hn = yt.refreshToken,
                                                                        cr = yt.x_zm_aid,
                                                                        Rr = yt.x_zm_haid,
                                                                        Pr = yt.x_zm_client_cluster_id,
                                                                        en.A.Authorization = Qt,
                                                                        Ne.ZCache.setToken(Qt),
                                                                        Ne.ZCache.setClusterId(Pr),
                                                                        Ne.ZCache.setRefreshToken(Hn),
                                                                        Ne.ZCache.setAid(cr),
                                                                        Ne.ZCache.setHaid(Rr),
                                                                        window.localStorage.setItem("CCI_THIRD_TOKEN", Qt),
                                                                        window.localStorage.setItem("CCI_REFESH_TOKEN", Hn),
                                                                        window.localStorage.setItem("CCI_THIRD_CLUSTER_ID", Pr),
                                                                        window.localStorage.setItem("CCI_THIRD_AID", cr),
                                                                        window.localStorage.setItem("CCI_THIRD_HAID", Rr),
                                                                        window.removeEventListener("message", Zn, !1),
                                                                    (Ue = ht.bcChannel) === null || Ue === void 0 || Ue.postMessage({
                                                                        event: "syncLogin"
                                                                    }),
                                                                        rt = (0,
                                                                            Yt.getCRM)(),
                                                                    rt !== rr.CRMS.SalesforceServiceCloud) {
                                                                        de.next = 20;
                                                                        break
                                                                    }
                                                                    return (0,
                                                                        Qe.letServiceCloudLogin)(),
                                                                        de.abrupt("return");
                                                                case 20:
                                                                    window.location.reload();
                                                                case 21:
                                                                case "end":
                                                                    return de.stop()
                                                            }
                                                    }, Vn)
                                                }));
                                                return function(Se) {
                                                    return Ze.apply(this, arguments)
                                                }
                                            }(),
                                            window.addEventListener("message", Zn, !1);
                                    case 21:
                                    case "end":
                                        return Pn.stop()
                                }
                        }, yn)
                    }))()
                },
                refreshLogin: function() {
                    var ht = this;
                    return Mn(Lt().mark(function yn() {
                        var dn, Gn, sr, Zn;
                        return Lt().wrap(function(Pn) {
                            for (; ; )
                                switch (Pn.prev = Pn.next) {
                                    case 0:
                                        return console.log("refreshLogin"),
                                            Pn.next = 3,
                                            (0,
                                                Et.getCRMInstance)();
                                    case 3:
                                        if (dn = Pn.sent,
                                            !(dn != null && dn.authenticationInterceptor)) {
                                            Pn.next = 10;
                                            break
                                        }
                                        return Pn.next = 7,
                                            dn.authenticationInterceptor();
                                    case 7:
                                        if (Gn = Pn.sent,
                                            Gn) {
                                            Pn.next = 10;
                                            break
                                        }
                                        return Pn.abrupt("return");
                                    case 10:
                                        if (ht.pageStatus = kr.PageStatus.Refresh,
                                            !(ht.thirdLoginWin && !ht.thirdLoginWin.closed)) {
                                            Pn.next = 14;
                                            break
                                        }
                                        return ht.thirdLoginWin.focus(),
                                            Pn.abrupt("return");
                                    case 14:
                                        sr = "/cci/multi/third-login",
                                            ht.thirdLoginWin = window.open(sr, "CCI_AUTH_PAGE", "location=no,resizable=no,toolbar=no"),
                                            Zn = function() {
                                                var Ze = Mn(Lt().mark(function Vn(Se) {
                                                    var Ue, yt, Qt, Hn, cr, Rr, Pr, rt;
                                                    return Lt().wrap(function(de) {
                                                        for (; ; )
                                                            switch (de.prev = de.next) {
                                                                case 0:
                                                                    if (de.prev = 0,
                                                                        console.log("receiveMessage res:", Se),
                                                                        !(Se.data && Se.data.type === "login")) {
                                                                        de.next = 29;
                                                                        break
                                                                    }
                                                                    if (Ue = Se.data.data,
                                                                        yt = Ue.access_token,
                                                                        Qt = Ue.refreshToken,
                                                                        Hn = Ue.x_zm_aid,
                                                                        cr = Ue.x_zm_haid,
                                                                        Rr = Ue.x_zm_client_cluster_id,
                                                                        ht.isSameUser(Qt)) {
                                                                        de.next = 10;
                                                                        break
                                                                    }
                                                                    return ht.$message.error(ht.$t("cci.client.isNotSameUser")),
                                                                        ht.pageStatus = kr.PageStatus.LoginSuccess,
                                                                        de.abrupt("return");
                                                                case 10:
                                                                    ht.setShowTokenExpireInBell(!1),
                                                                        Pr = ht.decodedTokenInfo(Qt),
                                                                        rt = "session-expire-".concat(Pr.uid),
                                                                        ht.deleteNotification(rt),
                                                                        Ot = null,
                                                                        ht.$message.success(ht.$t("cci.client.LoginIn") + ht.$t("cci.client.successfully"));
                                                                case 16:
                                                                    en.A.Authorization = yt,
                                                                        Ne.ZCache.setToken(yt),
                                                                        Ne.ZCache.setClusterId(Rr),
                                                                        Ne.ZCache.setRefreshToken(Qt),
                                                                        Ne.ZCache.setAid(Hn),
                                                                        Ne.ZCache.setHaid(cr),
                                                                        window.localStorage.setItem("CCI_THIRD_TOKEN", yt),
                                                                        window.localStorage.setItem("CCI_REFESH_TOKEN", Qt),
                                                                        window.localStorage.setItem("CCI_THIRD_CLUSTER_ID", Rr),
                                                                        window.localStorage.setItem("CCI_THIRD_AID", Hn),
                                                                        window.localStorage.setItem("CCI_THIRD_HAID", cr),
                                                                        ht.pageStatus = kr.PageStatus.LoginSuccess,
                                                                        window.removeEventListener("message", Zn, !1);
                                                                case 29:
                                                                    de.next = 34;
                                                                    break;
                                                                case 31:
                                                                    de.prev = 31,
                                                                        de.t0 = de.catch(0),
                                                                        ht.$message.error(ht.$t("cci.client.LoginIn") + ht.$t('"cci.client.failed'));
                                                                case 34:
                                                                case "end":
                                                                    return de.stop()
                                                            }
                                                    }, Vn, null, [[0, 31]])
                                                }));
                                                return function(Se) {
                                                    return Ze.apply(this, arguments)
                                                }
                                            }(),
                                            window.addEventListener("message", Zn, !1);
                                    case 19:
                                    case "end":
                                        return Pn.stop()
                                }
                        }, yn)
                    }))()
                },
                decodedTokenInfo: function(ht) {
                    try {
                        var yn = ht || window.localStorage.getItem("CCI_REFESH_TOKEN");
                        if (!yn)
                            return console.log("DECODED_REFRESH_TOKEN_EMPTY"),
                                {};
                        var dn = (0,
                            rn.s)(yn);
                        return console.log(dn, "DECODED_REFRESH_TOKEN"),
                            dn
                    } catch (Gn) {
                        console.error(Gn)
                    }
                    return {}
                },
                isSameUser: function(ht) {
                    var yn = this.decodedTokenInfo()
                        , dn = this.decodedTokenInfo(ht)
                        , Gn = yn.uid && dn.uid && yn.uid === dn.uid;
                    return console.log("isSameUser", Gn),
                        Gn
                },
                tokenIsExp: function() {
                    var ht = this.decodedTokenInfo();
                    if (!ht.exp)
                        return !1;
                    var yn = ht.exp
                        , dn = ht.uid;
                    this.setRefreshTokenExpireTime({
                        exp: yn,
                        uid: dn
                    });
                    var Gn = Math.floor(k()() / 1e3)
                        , sr = ht.exp - Gn
                        , Zn = sr / 3600;
                    Pt = Math.ceil(Zn);
                    var _r = null;
                    return Zn <= 1 ? _r = "1" : Zn > 1 && Zn <= 2 ? _r = "2" : Zn > 2 && Zn <= 8 ? _r = "8" : Zn > 8 && Zn <= 12 ? _r = "12" : localStorage.getItem("testToken") && (_r = Zn,
                        localStorage.removeItem("testToken")),
                        _r && _r !== Ot ? (Ot = _r,
                            this.setShowTokenExpireInBell(!0),
                            this.checkSessionExpiration(),
                            !0) : !1
                },
                refreshTokenExpired: function() {
                    var ht, yn = this, dn = this.tokenIsExp();
                    localStorage.getItem("ignoreRefreshTokenExpired") || !M()(ht = [kr.PageStatus.LoginSuccess, kr.PageStatus.AuthTokenValidationRequired]).call(ht, this.pageStatus) || !dn || (this.clearNotify(),
                        this.notifyVm = this.chatNotify(this.$t("cci.client.refreshTokenExpired", {
                            hour: Pt
                        }), "", {
                            text: this.$t("cci.client.LoginIn"),
                            ariaLabel: this.$t("cci.client.LoginIn"),
                            callback: function() {
                                yn.refreshLogin(),
                                    yn.clearNotify()
                            }
                        }, 0, !0, function() {
                            yn.clearNotify()
                        }))
                },
                clearNotify: function() {
                    if (this.notifyVm) {
                        var ht;
                        Ne.eventBus.$emit("CCI_REFRESH_TOKEN_CLEAR_NOTIFY"),
                        (ht = this.notifyVm) === null || ht === void 0 || ht.close(),
                            this.notifyVm = null
                    }
                }
            })
        }
    }
    ,
    29500: (pn, E, a) => {
        "use strict";
        a.d(E, {
            A: () => $
        });
        var Y = a(83266)
            , J = a.n(Y);
        const $ = Y.nativeNotifyMixin
    }
    ,
    13447: (pn, E, a) => {
        "use strict";
        a.d(E, {
            A: () => $
        });
        var Y = a(83266)
            , J = a.n(Y);
        const $ = Y.piiMixin
    }
    ,
    4285: (pn, E, a) => {
        "use strict";
        a.d(E, {
            A: () => $
        });
        var Y = a(83266)
            , J = a.n(Y);
        const $ = Y.themeMixin
    }
    ,
    79917: (pn, E, a) => {
        "use strict";
        a.d(E, {
            A: () => gr
        });
        var Y = a(83537)
            , J = a.n(Y)
            , $ = a(39864)
            , k = a.n($)
            , P = a(83030)
            , M = a.n(P)
            , Q = a(8233)
            , O = a.n(Q)
            , F = a(2208)
            , D = a.n(F)
            , z = a(92336)
            , G = a.n(z)
            , V = a(39084)
            , K = a.n(V)
            , te = a(61849)
            , ee = a.n(te)
            , pe = a(81352)
            , ne = a.n(pe)
            , X = a(84653)
            , x = a.n(X)
            , H = a(59814)
            , q = a.n(H)
            , _e = a(89099)
            , ie = a.n(_e)
            , ze = a(44987)
            , Oe = a.n(ze)
            , Cn = a(34622)
            , at = a.n(Cn)
            , Sn = a(27785)
            , Ce = a.n(Sn)
            , wn = a(65888)
            , Ae = a.n(wn)
            , nr = a(34187)
            , mt = a.n(nr)
            , jn = a(73007)
            , ve = a.n(jn)
            , or = a(23716)
            , pt = a.n(or)
            , je = a(5339)
            , Ke = a.n(je)
            , it = a(56405)
            , Ne = a.n(it)
            , Gt = a(97508)
            , en = a(53019);
        function rn(Mn) {
            "@babel/helpers - typeof";
            return rn = typeof M() == "function" && typeof Ke() == "symbol" ? function(U) {
                    return typeof U
                }
                : function(U) {
                    return U && typeof M() == "function" && U.constructor === M() && U !== M().prototype ? "symbol" : typeof U
                }
                ,
                rn(Mn)
        }
        function Tt() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Tt = function() {
                return U
            }
            ;
            var Mn, U = {}, Mt = Object.prototype, Kn = Mt.hasOwnProperty, In = ee() || function(ye, Le, Te) {
                ye[Le] = Te.value
            }
                , tn = typeof M() == "function" ? M() : {}, Ot = tn.iterator || "@@iterator", Pt = tn.asyncIterator || "@@asyncIterator", $n = tn.toStringTag || "@@toStringTag";
            function dt(ye, Le, Te) {
                return ee()(ye, Le, {
                    value: Te,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    ye[Le]
            }
            try {
                dt({}, "")
            } catch {
                dt = function(Te, be, me) {
                    return Te[be] = me
                }
            }
            function Xe(ye, Le, Te, be) {
                var me = Le && Le.prototype instanceof _r ? Le : _r
                    , He = Ae()(me.prototype)
                    , Ct = new ae(be || []);
                return In(He, "_invoke", {
                    value: cr(ye, Te, Ct)
                }),
                    He
            }
            function ht(ye, Le, Te) {
                try {
                    return {
                        type: "normal",
                        arg: ye.call(Le, Te)
                    }
                } catch (be) {
                    return {
                        type: "throw",
                        arg: be
                    }
                }
            }
            U.wrap = Xe;
            var yn = "suspendedStart"
                , dn = "suspendedYield"
                , Gn = "executing"
                , sr = "completed"
                , Zn = {};
            function _r() {}
            function Pn() {}
            function Ze() {}
            var Vn = {};
            dt(Vn, Ot, function() {
                return this
            });
            var Se = mt()
                , Ue = Se && Se(Se(de([])));
            Ue && Ue !== Mt && Kn.call(Ue, Ot) && (Vn = Ue);
            var yt = Ze.prototype = _r.prototype = Ae()(Vn);
            function Qt(ye) {
                var Le;
                Oe()(Le = ["next", "throw", "return"]).call(Le, function(Te) {
                    dt(ye, Te, function(be) {
                        return this._invoke(Te, be)
                    })
                })
            }
            function Hn(ye, Le) {
                function Te(me, He, Ct, wt) {
                    var Bt = ht(ye[me], ye, He);
                    if (Bt.type !== "throw") {
                        var En = Bt.arg
                            , Pe = En.value;
                        return Pe && rn(Pe) == "object" && Kn.call(Pe, "__await") ? Le.resolve(Pe.__await).then(function(W) {
                            Te("next", W, Ct, wt)
                        }, function(W) {
                            Te("throw", W, Ct, wt)
                        }) : Le.resolve(Pe).then(function(W) {
                            En.value = W,
                                Ct(En)
                        }, function(W) {
                            return Te("throw", W, Ct, wt)
                        })
                    }
                    wt(Bt.arg)
                }
                var be;
                In(this, "_invoke", {
                    value: function(He, Ct) {
                        function wt() {
                            return new Le(function(Bt, En) {
                                    Te(He, Ct, Bt, En)
                                }
                            )
                        }
                        return be = be ? be.then(wt, wt) : wt()
                    }
                })
            }
            function cr(ye, Le, Te) {
                var be = yn;
                return function(me, He) {
                    if (be === Gn)
                        throw Error("Generator is already running");
                    if (be === sr) {
                        if (me === "throw")
                            throw He;
                        return {
                            value: Mn,
                            done: !0
                        }
                    }
                    for (Te.method = me,
                             Te.arg = He; ; ) {
                        var Ct = Te.delegate;
                        if (Ct) {
                            var wt = Rr(Ct, Te);
                            if (wt) {
                                if (wt === Zn)
                                    continue;
                                return wt
                            }
                        }
                        if (Te.method === "next")
                            Te.sent = Te._sent = Te.arg;
                        else if (Te.method === "throw") {
                            if (be === yn)
                                throw be = sr,
                                    Te.arg;
                            Te.dispatchException(Te.arg)
                        } else
                            Te.method === "return" && Te.abrupt("return", Te.arg);
                        be = Gn;
                        var Bt = ht(ye, Le, Te);
                        if (Bt.type === "normal") {
                            if (be = Te.done ? sr : dn,
                            Bt.arg === Zn)
                                continue;
                            return {
                                value: Bt.arg,
                                done: Te.done
                            }
                        }
                        Bt.type === "throw" && (be = sr,
                            Te.method = "throw",
                            Te.arg = Bt.arg)
                    }
                }
            }
            function Rr(ye, Le) {
                var Te = Le.method
                    , be = ye.iterator[Te];
                if (be === Mn)
                    return Le.delegate = null,
                    Te === "throw" && ye.iterator.return && (Le.method = "return",
                        Le.arg = Mn,
                        Rr(ye, Le),
                    Le.method === "throw") || Te !== "return" && (Le.method = "throw",
                        Le.arg = new TypeError("The iterator does not provide a '" + Te + "' method")),
                        Zn;
                var me = ht(be, ye.iterator, Le.arg);
                if (me.type === "throw")
                    return Le.method = "throw",
                        Le.arg = me.arg,
                        Le.delegate = null,
                        Zn;
                var He = me.arg;
                return He ? He.done ? (Le[ye.resultName] = He.value,
                    Le.next = ye.nextLoc,
                Le.method !== "return" && (Le.method = "next",
                    Le.arg = Mn),
                    Le.delegate = null,
                    Zn) : He : (Le.method = "throw",
                    Le.arg = new TypeError("iterator result is not an object"),
                    Le.delegate = null,
                    Zn)
            }
            function Pr(ye) {
                var Le = {
                    tryLoc: ye[0]
                };
                1 in ye && (Le.catchLoc = ye[1]),
                2 in ye && (Le.finallyLoc = ye[2],
                    Le.afterLoc = ye[3]),
                    this.tryEntries.push(Le)
            }
            function rt(ye) {
                var Le = ye.completion || {};
                Le.type = "normal",
                    delete Le.arg,
                    ye.completion = Le
            }
            function ae(ye) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Oe()(ye).call(ye, Pr, this),
                    this.reset(!0)
            }
            function de(ye) {
                if (ye || ye === "") {
                    var Le = ye[Ot];
                    if (Le)
                        return Le.call(ye);
                    if (typeof ye.next == "function")
                        return ye;
                    if (!isNaN(ye.length)) {
                        var Te = -1
                            , be = function me() {
                            for (; ++Te < ye.length; )
                                if (Kn.call(ye, Te))
                                    return me.value = ye[Te],
                                        me.done = !1,
                                        me;
                            return me.value = Mn,
                                me.done = !0,
                                me
                        };
                        return be.next = be
                    }
                }
                throw new TypeError(rn(ye) + " is not iterable")
            }
            return Pn.prototype = Ze,
                In(yt, "constructor", {
                    value: Ze,
                    configurable: !0
                }),
                In(Ze, "constructor", {
                    value: Pn,
                    configurable: !0
                }),
                Pn.displayName = dt(Ze, $n, "GeneratorFunction"),
                U.isGeneratorFunction = function(ye) {
                    var Le = typeof ye == "function" && ye.constructor;
                    return !!Le && (Le === Pn || (Le.displayName || Le.name) === "GeneratorFunction")
                }
                ,
                U.mark = function(ye) {
                    return ve() ? ve()(ye, Ze) : (ye.__proto__ = Ze,
                        dt(ye, $n, "GeneratorFunction")),
                        ye.prototype = Ae()(yt),
                        ye
                }
                ,
                U.awrap = function(ye) {
                    return {
                        __await: ye
                    }
                }
                ,
                Qt(Hn.prototype),
                dt(Hn.prototype, Pt, function() {
                    return this
                }),
                U.AsyncIterator = Hn,
                U.async = function(ye, Le, Te, be, me) {
                    me === void 0 && (me = J());
                    var He = new Hn(Xe(ye, Le, Te, be),me);
                    return U.isGeneratorFunction(Le) ? He : He.next().then(function(Ct) {
                        return Ct.done ? Ct.value : He.next()
                    })
                }
                ,
                Qt(yt),
                dt(yt, $n, "Generator"),
                dt(yt, Ot, function() {
                    return this
                }),
                dt(yt, "toString", function() {
                    return "[object Generator]"
                }),
                U.keys = function(ye) {
                    var Le = Object(ye)
                        , Te = [];
                    for (var be in Le)
                        Te.push(be);
                    return pt()(Te).call(Te),
                        function me() {
                            for (; Te.length; ) {
                                var He = Te.pop();
                                if (He in Le)
                                    return me.value = He,
                                        me.done = !1,
                                        me
                            }
                            return me.done = !0,
                                me
                        }
                }
                ,
                U.values = de,
                ae.prototype = {
                    constructor: ae,
                    reset: function(Le) {
                        var Te;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = Mn,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = Mn,
                            Oe()(Te = this.tryEntries).call(Te, rt),
                            !Le)
                            for (var be in this)
                                be.charAt(0) === "t" && Kn.call(this, be) && !isNaN(+D()(be).call(be, 1)) && (this[be] = Mn)
                    },
                    stop: function() {
                        this.done = !0;
                        var Le = this.tryEntries[0].completion;
                        if (Le.type === "throw")
                            throw Le.arg;
                        return this.rval
                    },
                    dispatchException: function(Le) {
                        if (this.done)
                            throw Le;
                        var Te = this;
                        function be(En, Pe) {
                            return Ct.type = "throw",
                                Ct.arg = Le,
                                Te.next = En,
                            Pe && (Te.method = "next",
                                Te.arg = Mn),
                                !!Pe
                        }
                        for (var me = this.tryEntries.length - 1; me >= 0; --me) {
                            var He = this.tryEntries[me]
                                , Ct = He.completion;
                            if (He.tryLoc === "root")
                                return be("end");
                            if (He.tryLoc <= this.prev) {
                                var wt = Kn.call(He, "catchLoc")
                                    , Bt = Kn.call(He, "finallyLoc");
                                if (wt && Bt) {
                                    if (this.prev < He.catchLoc)
                                        return be(He.catchLoc, !0);
                                    if (this.prev < He.finallyLoc)
                                        return be(He.finallyLoc)
                                } else if (wt) {
                                    if (this.prev < He.catchLoc)
                                        return be(He.catchLoc, !0)
                                } else {
                                    if (!Bt)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < He.finallyLoc)
                                        return be(He.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(Le, Te) {
                        for (var be = this.tryEntries.length - 1; be >= 0; --be) {
                            var me = this.tryEntries[be];
                            if (me.tryLoc <= this.prev && Kn.call(me, "finallyLoc") && this.prev < me.finallyLoc) {
                                var He = me;
                                break
                            }
                        }
                        He && (Le === "break" || Le === "continue") && He.tryLoc <= Te && Te <= He.finallyLoc && (He = null);
                        var Ct = He ? He.completion : {};
                        return Ct.type = Le,
                            Ct.arg = Te,
                            He ? (this.method = "next",
                                this.next = He.finallyLoc,
                                Zn) : this.complete(Ct)
                    },
                    complete: function(Le, Te) {
                        if (Le.type === "throw")
                            throw Le.arg;
                        return Le.type === "break" || Le.type === "continue" ? this.next = Le.arg : Le.type === "return" ? (this.rval = this.arg = Le.arg,
                            this.method = "return",
                            this.next = "end") : Le.type === "normal" && Te && (this.next = Te),
                            Zn
                    },
                    finish: function(Le) {
                        for (var Te = this.tryEntries.length - 1; Te >= 0; --Te) {
                            var be = this.tryEntries[Te];
                            if (be.finallyLoc === Le)
                                return this.complete(be.completion, be.afterLoc),
                                    rt(be),
                                    Zn
                        }
                    },
                    catch: function(Le) {
                        for (var Te = this.tryEntries.length - 1; Te >= 0; --Te) {
                            var be = this.tryEntries[Te];
                            if (be.tryLoc === Le) {
                                var me = be.completion;
                                if (me.type === "throw") {
                                    var He = me.arg;
                                    rt(be)
                                }
                                return He
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(Le, Te, be) {
                        return this.delegate = {
                            iterator: de(Le),
                            resultName: Te,
                            nextLoc: be
                        },
                        this.method === "next" && (this.arg = Mn),
                            Zn
                    }
                },
                U
        }
        function vr(Mn, U) {
            var Mt = ne()(Mn);
            if (x()) {
                var Kn = x()(Mn);
                U && (Kn = q()(Kn).call(Kn, function(In) {
                    return ie()(Mn, In).enumerable
                })),
                    Mt.push.apply(Mt, Kn)
            }
            return Mt
        }
        function rr(Mn) {
            for (var U = 1; U < arguments.length; U++) {
                var Mt, Kn, In = arguments[U] != null ? arguments[U] : {};
                U % 2 ? Oe()(Mt = vr(Object(In), !0)).call(Mt, function(tn) {
                    kr(Mn, tn, In[tn])
                }) : at() ? Ce()(Mn, at()(In)) : Oe()(Kn = vr(Object(In))).call(Kn, function(tn) {
                    ee()(Mn, tn, ie()(In, tn))
                })
            }
            return Mn
        }
        function kr(Mn, U, Mt) {
            return (U = Re(U))in Mn ? ee()(Mn, U, {
                value: Mt,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : Mn[U] = Mt,
                Mn
        }
        function Re(Mn) {
            var U = Et(Mn, "string");
            return rn(U) == "symbol" ? U : U + ""
        }
        function Et(Mn, U) {
            if (rn(Mn) != "object" || !Mn)
                return Mn;
            var Mt = Mn[K()];
            if (Mt !== void 0) {
                var Kn = Mt.call(Mn, U || "default");
                if (rn(Kn) != "object")
                    return Kn;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (U === "string" ? String : Number)(Mn)
        }
        function An(Mn, U) {
            return zt(Mn) || ar(Mn, U) || gn(Mn, U) || Yt()
        }
        function Yt() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function gn(Mn, U) {
            if (Mn) {
                var Mt;
                if (typeof Mn == "string")
                    return Qe(Mn, U);
                var Kn = D()(Mt = {}.toString.call(Mn)).call(Mt, 8, -1);
                return Kn === "Object" && Mn.constructor && (Kn = Mn.constructor.name),
                    Kn === "Map" || Kn === "Set" ? G()(Mn) : Kn === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(Kn) ? Qe(Mn, U) : void 0
            }
        }
        function Qe(Mn, U) {
            (U == null || U > Mn.length) && (U = Mn.length);
            for (var Mt = 0, Kn = Array(U); Mt < U; Mt++)
                Kn[Mt] = Mn[Mt];
            return Kn
        }
        function ar(Mn, U) {
            var Mt = Mn == null ? null : typeof M() < "u" && O()(Mn) || Mn["@@iterator"];
            if (Mt != null) {
                var Kn, In, tn, Ot, Pt = [], $n = !0, dt = !1;
                try {
                    if (tn = (Mt = Mt.call(Mn)).next,
                    U === 0) {
                        if (Object(Mt) !== Mt)
                            return;
                        $n = !1
                    } else
                        for (; !($n = (Kn = tn.call(Mt)).done) && (Pt.push(Kn.value),
                        Pt.length !== U); $n = !0)
                            ;
                } catch (Xe) {
                    dt = !0,
                        In = Xe
                } finally {
                    try {
                        if (!$n && Mt.return != null && (Ot = Mt.return(),
                        Object(Ot) !== Ot))
                            return
                    } finally {
                        if (dt)
                            throw In
                    }
                }
                return Pt
            }
        }
        function zt(Mn) {
            if (k()(Mn))
                return Mn
        }
        function Zt(Mn, U, Mt, Kn, In, tn, Ot) {
            try {
                var Pt = Mn[tn](Ot)
                    , $n = Pt.value
            } catch (dt) {
                return void Mt(dt)
            }
            Pt.done ? U($n) : J().resolve($n).then(Kn, In)
        }
        function Lt(Mn) {
            return function() {
                var U = this
                    , Mt = arguments;
                return new (J())(function(Kn, In) {
                        var tn = Mn.apply(U, Mt);
                        function Ot($n) {
                            Zt(tn, Kn, In, Ot, Pt, "next", $n)
                        }
                        function Pt($n) {
                            Zt(tn, Kn, In, Ot, Pt, "throw", $n)
                        }
                        Ot(void 0)
                    }
                )
            }
        }
        const gr = {
            methods: {
                updateShowInNotificationName: function(U, Mt, Kn) {
                    return Lt(Tt().mark(function In() {
                        var tn, Ot, Pt, $n, dt, Xe, ht, yn, dn, Gn, sr;
                        return Tt().wrap(function(_r) {
                            for (; ; )
                                switch (_r.prev = _r.next) {
                                    case 0:
                                        if (!(!(Mt != null && Mt.phoneNumber) && !(Mt != null && Mt.email) || !Kn)) {
                                            _r.next = 2;
                                            break
                                        }
                                        return _r.abrupt("return");
                                    case 2:
                                        return _r.next = 4,
                                            (0,
                                                it.tryApiCatch)(Gt.kK, Mt);
                                    case 4:
                                        if (Ot = _r.sent,
                                            Pt = An(Ot, 2),
                                            $n = Pt[0],
                                            dt = Pt[1],
                                            !$n) {
                                            _r.next = 10;
                                            break
                                        }
                                        return _r.abrupt("return");
                                    case 10:
                                        Xe = dt || {},
                                            ht = Xe.items,
                                            yn = ht === void 0 ? [] : ht,
                                        yn.length === 1 && (tn = yn[0]) !== null && tn !== void 0 && tn.name && ((0,
                                            en.Log)("CCIUIAPI_UpdateIncomingCall", rr(rr({}, U), {}, {
                                            fromName: (dn = yn[0]) === null || dn === void 0 ? void 0 : dn.name
                                        })),
                                        (Gn = window.zoomSdk) === null || Gn === void 0 || Gn.postJsMessage({
                                            functionName: "CCIUIAPI_UpdateIncomingCall",
                                            params: rr(rr({}, U), {}, {
                                                fromName: (sr = yn[0]) === null || sr === void 0 ? void 0 : sr.name
                                            })
                                        }));
                                    case 12:
                                    case "end":
                                        return _r.stop()
                                }
                        }, In)
                    }))()
                }
            }
        }
    }
    ,
    63290: (pn, E, a) => {
        "use strict";
        a.d(E, {
            z: () => Y.eventBus
        });
        var Y = a(56405)
            , J = a.n(Y)
    }
    ,
    49161: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => J
            });
        var Y = {
            nofuncNameErr: "params not include funcs",
            notifcationCalednarChange: "ZMCalendarUINotifCalendarChanged"
        };
        const J = Y
    }
    ,
    73680: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                CheckNumber: () => O,
                E164Number: () => Q,
                default: () => z,
                formateE164Number: () => F,
                isoCode: () => M,
                phoneNumber: () => P
            });
        var Y = a(59814)
            , J = a.n(Y)
            , $ = a(56405)
            , k = a.n($)
            , P = $.phoneNumberFilter.phoneNumber
            , M = $.phoneNumberFilter.isoCode
            , Q = $.phoneNumberFilter.E164Number
            , O = $.phoneNumberFilter.CheckNumber
            , F = $.phoneNumberFilter.formateE164Number
            , D = function(V) {
            J()(V).call(V, "phoneNumber", P),
                J()(V).call(V, "isoCode", M),
                J()(V).call(V, "E164Number", Q),
                J()(V).call(V, "CheckNumber", O)
        };
        const z = {
            install: D
        }
    }
    ,
    54251: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                getTimezone: () => $,
                hasZmUrl: () => k,
                removeZmUrl: () => P,
                throttle: () => M
            });
        var Y = a(27425)
            , J = a.n(Y);
        function $() {
            return new Intl.DateTimeFormat().resolvedOptions().timeZone
        }
        function k(Q) {
            return Q.match(/[ ,;]?https:\/\/[\w\-.]*\/(pac\/join|[jswm])\/([\w\-.]{8,})(\?\w+=[^ ,;]*)?/g, "")
        }
        function P(Q) {
            return Q = Q.replace(/[ ,;]?https:\/\/[\w\-.]*\/(pac\/join|[jswm])\/([\w\-.]{8,})(\?\w+=[^ ,;]*)?/g, ""),
            Q && (Q = Q.replace(/[ ,;]$/, "")),
                Q
        }
        function M(Q) {
            var O = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 200
                , F = J()();
            return function() {
                var D = J()();
                D - F > O && (Q(),
                    F = J()())
            }
        }
    }
    ,
    24466: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => Ot
            });
        var Y = a(39864)
            , J = a.n(Y)
            , $ = a(83030)
            , k = a.n($)
            , P = a(8233)
            , M = a.n(P)
            , Q = a(92336)
            , O = a.n(Q)
            , F = a(2208)
            , D = a.n(F)
            , z = a(83537)
            , G = a.n(z)
            , V = a(61849)
            , K = a.n(V)
            , te = a(65888)
            , ee = a.n(te)
            , pe = a(34187)
            , ne = a.n(pe)
            , X = a(44987)
            , x = a.n(X)
            , H = a(73007)
            , q = a.n(H)
            , _e = a(23716)
            , ie = a.n(_e)
            , ze = a(5339)
            , Oe = a.n(ze)
            , Cn = a(12608)
            , at = a.n(Cn)
            , Sn = a(74061)
            , Ce = a.n(Sn)
            , wn = a(42767)
            , Ae = a(6372)
            , nr = function() {
            var $n = this
                , dt = $n._self._c
                , Xe = $n._self._setupProxy;
            return dt(Xe.Login, [dt(Xe.CrmWorkSession, [dt(Xe.CallbarCti)], 1)], 1)
        }
            , mt = []
            , jn = a(57533)
            , ve = a.n(jn);
        const or = ve();
        var pt = a(50855)
            , je = (0,
            pt.A)(or, nr, mt, !1, null, null, null);
        const Ke = je.exports;
        var it = a(12168)
            , Ne = function() {
            return a.e(480).then(a.bind(a, 38433))
        };
        const Gt = [{
            path: "/ai-select-detail",
            name: "aiDetail",
            component: Ne,
            meta: {
                title: "ai-detail"
            }
        }];
        var en = function() {
            return a.e(809).then(a.bind(a, 31550))
        };
        const rn = [{
            path: "/kb-detail-enhance",
            name: "kbDetailEnhance",
            component: en,
            meta: {
                title: "article detail"
            }
        }]
            , Tt = [{
            path: "/response-detail",
            name: "responseDetail",
            component: function() {
                return Promise.resolve().then(a.t.bind(a, 83266, 23)).then(function($n) {
                    return $n.responseDetail
                })
            },
            meta: {
                title: "response detail"
            }
        }];
        function vr(Pt) {
            "@babel/helpers - typeof";
            return vr = typeof k() == "function" && typeof Oe() == "symbol" ? function($n) {
                    return typeof $n
                }
                : function($n) {
                    return $n && typeof k() == "function" && $n.constructor === k() && $n !== k().prototype ? "symbol" : typeof $n
                }
                ,
                vr(Pt)
        }
        var rr, kr;
        function Re() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Re = function() {
                return $n
            }
            ;
            var Pt, $n = {}, dt = Object.prototype, Xe = dt.hasOwnProperty, ht = K() || function(wt, Bt, En) {
                wt[Bt] = En.value
            }
                , yn = typeof k() == "function" ? k() : {}, dn = yn.iterator || "@@iterator", Gn = yn.asyncIterator || "@@asyncIterator", sr = yn.toStringTag || "@@toStringTag";
            function Zn(wt, Bt, En) {
                return K()(wt, Bt, {
                    value: En,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    wt[Bt]
            }
            try {
                Zn({}, "")
            } catch {
                Zn = function(En, Pe, W) {
                    return En[Pe] = W
                }
            }
            function _r(wt, Bt, En, Pe) {
                var W = Bt && Bt.prototype instanceof Qt ? Bt : Qt
                    , Ee = ee()(W.prototype)
                    , nt = new He(Pe || []);
                return ht(Ee, "_invoke", {
                    value: Le(wt, En, nt)
                }),
                    Ee
            }
            function Pn(wt, Bt, En) {
                try {
                    return {
                        type: "normal",
                        arg: wt.call(Bt, En)
                    }
                } catch (Pe) {
                    return {
                        type: "throw",
                        arg: Pe
                    }
                }
            }
            $n.wrap = _r;
            var Ze = "suspendedStart"
                , Vn = "suspendedYield"
                , Se = "executing"
                , Ue = "completed"
                , yt = {};
            function Qt() {}
            function Hn() {}
            function cr() {}
            var Rr = {};
            Zn(Rr, dn, function() {
                return this
            });
            var Pr = ne()
                , rt = Pr && Pr(Pr(Ct([])));
            rt && rt !== dt && Xe.call(rt, dn) && (Rr = rt);
            var ae = cr.prototype = Qt.prototype = ee()(Rr);
            function de(wt) {
                var Bt;
                x()(Bt = ["next", "throw", "return"]).call(Bt, function(En) {
                    Zn(wt, En, function(Pe) {
                        return this._invoke(En, Pe)
                    })
                })
            }
            function ye(wt, Bt) {
                function En(W, Ee, nt, Ie) {
                    var Be = Pn(wt[W], wt, Ee);
                    if (Be.type !== "throw") {
                        var st = Be.arg
                            , jt = st.value;
                        return jt && vr(jt) == "object" && Xe.call(jt, "__await") ? Bt.resolve(jt.__await).then(function(_t) {
                            En("next", _t, nt, Ie)
                        }, function(_t) {
                            En("throw", _t, nt, Ie)
                        }) : Bt.resolve(jt).then(function(_t) {
                            st.value = _t,
                                nt(st)
                        }, function(_t) {
                            return En("throw", _t, nt, Ie)
                        })
                    }
                    Ie(Be.arg)
                }
                var Pe;
                ht(this, "_invoke", {
                    value: function(Ee, nt) {
                        function Ie() {
                            return new Bt(function(Be, st) {
                                    En(Ee, nt, Be, st)
                                }
                            )
                        }
                        return Pe = Pe ? Pe.then(Ie, Ie) : Ie()
                    }
                })
            }
            function Le(wt, Bt, En) {
                var Pe = Ze;
                return function(W, Ee) {
                    if (Pe === Se)
                        throw Error("Generator is already running");
                    if (Pe === Ue) {
                        if (W === "throw")
                            throw Ee;
                        return {
                            value: Pt,
                            done: !0
                        }
                    }
                    for (En.method = W,
                             En.arg = Ee; ; ) {
                        var nt = En.delegate;
                        if (nt) {
                            var Ie = Te(nt, En);
                            if (Ie) {
                                if (Ie === yt)
                                    continue;
                                return Ie
                            }
                        }
                        if (En.method === "next")
                            En.sent = En._sent = En.arg;
                        else if (En.method === "throw") {
                            if (Pe === Ze)
                                throw Pe = Ue,
                                    En.arg;
                            En.dispatchException(En.arg)
                        } else
                            En.method === "return" && En.abrupt("return", En.arg);
                        Pe = Se;
                        var Be = Pn(wt, Bt, En);
                        if (Be.type === "normal") {
                            if (Pe = En.done ? Ue : Vn,
                            Be.arg === yt)
                                continue;
                            return {
                                value: Be.arg,
                                done: En.done
                            }
                        }
                        Be.type === "throw" && (Pe = Ue,
                            En.method = "throw",
                            En.arg = Be.arg)
                    }
                }
            }
            function Te(wt, Bt) {
                var En = Bt.method
                    , Pe = wt.iterator[En];
                if (Pe === Pt)
                    return Bt.delegate = null,
                    En === "throw" && wt.iterator.return && (Bt.method = "return",
                        Bt.arg = Pt,
                        Te(wt, Bt),
                    Bt.method === "throw") || En !== "return" && (Bt.method = "throw",
                        Bt.arg = new TypeError("The iterator does not provide a '" + En + "' method")),
                        yt;
                var W = Pn(Pe, wt.iterator, Bt.arg);
                if (W.type === "throw")
                    return Bt.method = "throw",
                        Bt.arg = W.arg,
                        Bt.delegate = null,
                        yt;
                var Ee = W.arg;
                return Ee ? Ee.done ? (Bt[wt.resultName] = Ee.value,
                    Bt.next = wt.nextLoc,
                Bt.method !== "return" && (Bt.method = "next",
                    Bt.arg = Pt),
                    Bt.delegate = null,
                    yt) : Ee : (Bt.method = "throw",
                    Bt.arg = new TypeError("iterator result is not an object"),
                    Bt.delegate = null,
                    yt)
            }
            function be(wt) {
                var Bt = {
                    tryLoc: wt[0]
                };
                1 in wt && (Bt.catchLoc = wt[1]),
                2 in wt && (Bt.finallyLoc = wt[2],
                    Bt.afterLoc = wt[3]),
                    this.tryEntries.push(Bt)
            }
            function me(wt) {
                var Bt = wt.completion || {};
                Bt.type = "normal",
                    delete Bt.arg,
                    wt.completion = Bt
            }
            function He(wt) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    x()(wt).call(wt, be, this),
                    this.reset(!0)
            }
            function Ct(wt) {
                if (wt || wt === "") {
                    var Bt = wt[dn];
                    if (Bt)
                        return Bt.call(wt);
                    if (typeof wt.next == "function")
                        return wt;
                    if (!isNaN(wt.length)) {
                        var En = -1
                            , Pe = function W() {
                            for (; ++En < wt.length; )
                                if (Xe.call(wt, En))
                                    return W.value = wt[En],
                                        W.done = !1,
                                        W;
                            return W.value = Pt,
                                W.done = !0,
                                W
                        };
                        return Pe.next = Pe
                    }
                }
                throw new TypeError(vr(wt) + " is not iterable")
            }
            return Hn.prototype = cr,
                ht(ae, "constructor", {
                    value: cr,
                    configurable: !0
                }),
                ht(cr, "constructor", {
                    value: Hn,
                    configurable: !0
                }),
                Hn.displayName = Zn(cr, sr, "GeneratorFunction"),
                $n.isGeneratorFunction = function(wt) {
                    var Bt = typeof wt == "function" && wt.constructor;
                    return !!Bt && (Bt === Hn || (Bt.displayName || Bt.name) === "GeneratorFunction")
                }
                ,
                $n.mark = function(wt) {
                    return q() ? q()(wt, cr) : (wt.__proto__ = cr,
                        Zn(wt, sr, "GeneratorFunction")),
                        wt.prototype = ee()(ae),
                        wt
                }
                ,
                $n.awrap = function(wt) {
                    return {
                        __await: wt
                    }
                }
                ,
                de(ye.prototype),
                Zn(ye.prototype, Gn, function() {
                    return this
                }),
                $n.AsyncIterator = ye,
                $n.async = function(wt, Bt, En, Pe, W) {
                    W === void 0 && (W = G());
                    var Ee = new ye(_r(wt, Bt, En, Pe),W);
                    return $n.isGeneratorFunction(Bt) ? Ee : Ee.next().then(function(nt) {
                        return nt.done ? nt.value : Ee.next()
                    })
                }
                ,
                de(ae),
                Zn(ae, sr, "Generator"),
                Zn(ae, dn, function() {
                    return this
                }),
                Zn(ae, "toString", function() {
                    return "[object Generator]"
                }),
                $n.keys = function(wt) {
                    var Bt = Object(wt)
                        , En = [];
                    for (var Pe in Bt)
                        En.push(Pe);
                    return ie()(En).call(En),
                        function W() {
                            for (; En.length; ) {
                                var Ee = En.pop();
                                if (Ee in Bt)
                                    return W.value = Ee,
                                        W.done = !1,
                                        W
                            }
                            return W.done = !0,
                                W
                        }
                }
                ,
                $n.values = Ct,
                He.prototype = {
                    constructor: He,
                    reset: function(Bt) {
                        var En;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = Pt,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = Pt,
                            x()(En = this.tryEntries).call(En, me),
                            !Bt)
                            for (var Pe in this)
                                Pe.charAt(0) === "t" && Xe.call(this, Pe) && !isNaN(+D()(Pe).call(Pe, 1)) && (this[Pe] = Pt)
                    },
                    stop: function() {
                        this.done = !0;
                        var Bt = this.tryEntries[0].completion;
                        if (Bt.type === "throw")
                            throw Bt.arg;
                        return this.rval
                    },
                    dispatchException: function(Bt) {
                        if (this.done)
                            throw Bt;
                        var En = this;
                        function Pe(st, jt) {
                            return nt.type = "throw",
                                nt.arg = Bt,
                                En.next = st,
                            jt && (En.method = "next",
                                En.arg = Pt),
                                !!jt
                        }
                        for (var W = this.tryEntries.length - 1; W >= 0; --W) {
                            var Ee = this.tryEntries[W]
                                , nt = Ee.completion;
                            if (Ee.tryLoc === "root")
                                return Pe("end");
                            if (Ee.tryLoc <= this.prev) {
                                var Ie = Xe.call(Ee, "catchLoc")
                                    , Be = Xe.call(Ee, "finallyLoc");
                                if (Ie && Be) {
                                    if (this.prev < Ee.catchLoc)
                                        return Pe(Ee.catchLoc, !0);
                                    if (this.prev < Ee.finallyLoc)
                                        return Pe(Ee.finallyLoc)
                                } else if (Ie) {
                                    if (this.prev < Ee.catchLoc)
                                        return Pe(Ee.catchLoc, !0)
                                } else {
                                    if (!Be)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < Ee.finallyLoc)
                                        return Pe(Ee.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(Bt, En) {
                        for (var Pe = this.tryEntries.length - 1; Pe >= 0; --Pe) {
                            var W = this.tryEntries[Pe];
                            if (W.tryLoc <= this.prev && Xe.call(W, "finallyLoc") && this.prev < W.finallyLoc) {
                                var Ee = W;
                                break
                            }
                        }
                        Ee && (Bt === "break" || Bt === "continue") && Ee.tryLoc <= En && En <= Ee.finallyLoc && (Ee = null);
                        var nt = Ee ? Ee.completion : {};
                        return nt.type = Bt,
                            nt.arg = En,
                            Ee ? (this.method = "next",
                                this.next = Ee.finallyLoc,
                                yt) : this.complete(nt)
                    },
                    complete: function(Bt, En) {
                        if (Bt.type === "throw")
                            throw Bt.arg;
                        return Bt.type === "break" || Bt.type === "continue" ? this.next = Bt.arg : Bt.type === "return" ? (this.rval = this.arg = Bt.arg,
                            this.method = "return",
                            this.next = "end") : Bt.type === "normal" && En && (this.next = En),
                            yt
                    },
                    finish: function(Bt) {
                        for (var En = this.tryEntries.length - 1; En >= 0; --En) {
                            var Pe = this.tryEntries[En];
                            if (Pe.finallyLoc === Bt)
                                return this.complete(Pe.completion, Pe.afterLoc),
                                    me(Pe),
                                    yt
                        }
                    },
                    catch: function(Bt) {
                        for (var En = this.tryEntries.length - 1; En >= 0; --En) {
                            var Pe = this.tryEntries[En];
                            if (Pe.tryLoc === Bt) {
                                var W = Pe.completion;
                                if (W.type === "throw") {
                                    var Ee = W.arg;
                                    me(Pe)
                                }
                                return Ee
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(Bt, En, Pe) {
                        return this.delegate = {
                            iterator: Ct(Bt),
                            resultName: En,
                            nextLoc: Pe
                        },
                        this.method === "next" && (this.arg = Pt),
                            yt
                    }
                },
                $n
        }
        function Et(Pt, $n, dt, Xe, ht, yn, dn) {
            try {
                var Gn = Pt[yn](dn)
                    , sr = Gn.value
            } catch (Zn) {
                return void dt(Zn)
            }
            Gn.done ? $n(sr) : G().resolve(sr).then(Xe, ht)
        }
        function An(Pt) {
            return function() {
                var $n = this
                    , dt = arguments;
                return new (G())(function(Xe, ht) {
                        var yn = Pt.apply($n, dt);
                        function dn(sr) {
                            Et(yn, Xe, ht, dn, Gn, "next", sr)
                        }
                        function Gn(sr) {
                            Et(yn, Xe, ht, dn, Gn, "throw", sr)
                        }
                        dn(void 0)
                    }
                )
            }
        }
        function Yt(Pt) {
            return zt(Pt) || ar(Pt) || Qe(Pt) || gn()
        }
        function gn() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Qe(Pt, $n) {
            if (Pt) {
                var dt;
                if (typeof Pt == "string")
                    return Zt(Pt, $n);
                var Xe = D()(dt = {}.toString.call(Pt)).call(dt, 8, -1);
                return Xe === "Object" && Pt.constructor && (Xe = Pt.constructor.name),
                    Xe === "Map" || Xe === "Set" ? O()(Pt) : Xe === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(Xe) ? Zt(Pt, $n) : void 0
            }
        }
        function ar(Pt) {
            if (typeof k() < "u" && M()(Pt) != null || Pt["@@iterator"] != null)
                return O()(Pt)
        }
        function zt(Pt) {
            if (J()(Pt))
                return Zt(Pt)
        }
        function Zt(Pt, $n) {
            ($n == null || $n > Pt.length) && ($n = Pt.length);
            for (var dt = 0, Xe = Array($n); dt < $n; dt++)
                Xe[dt] = Pt[dt];
            return Xe
        }
        var Lt = function() {
            return a.e(327).then(a.bind(a, 68325))
        };
        Ce().use(wn.Ay);
        var gr = wn.Ay.prototype.push;
        wn.Ay.prototype.push = function($n) {
            return gr.call(this, $n).catch(function(dt) {
                return dt
            })
        }
        ;
        var Mn = wn.Ay.prototype.replace;
        wn.Ay.prototype.replace = function($n) {
            return Mn.call(this, $n).catch(function(dt) {
                return dt
            })
        }
        ;
        var U = [{
            path: "/",
            name: "Home",
            component: Ke,
            children: at()(rr = []).call(rr, Yt(rn), Yt(Gt), Yt(Tt))
        }, {
            path: "/coreTab",
            name: "coreTab",
            component: Lt
        }, {
            path: "/cloud-login",
            name: "CloudLogin",
            component: function() {
                return a.e(437).then(a.bind(a, 62437))
            }
        }, {
            path: "/cloud-service",
            name: "CloudService",
            component: Ke
        }]
            , Mt = ((kr = window.ContactConfig) === null || kr === void 0 || (kr = kr.CciConfig) === null || kr === void 0 ? void 0 : kr.nacos) || {}
            , Kn = (0,
            it.FE)(Mt)
            , In = {
            routes: U
        };
        console.log("cti shouldUseHistory:", Kn),
        Kn && (In.base = "/cci/callbar/crm",
            In.mode = "history");
        var tn = new wn.Ay(In);
        tn.beforeEach(function() {
            var Pt = An(Re().mark(function $n(dt, Xe, ht) {
                var yn, dn, Gn;
                return Re().wrap(function(Zn) {
                    for (; ; )
                        switch (Zn.prev = Zn.next) {
                            case 0:
                                if (Zn.prev = 0,
                                    dn = "en-US",
                                (yn = window) !== null && yn !== void 0 && (yn = yn.i18nJson) !== null && yn !== void 0 && yn.lang)
                                    try {
                                        dn = (Gn = window) === null || Gn === void 0 || (Gn = Gn.i18nJson) === null || Gn === void 0 || (Gn = Gn.lang) === null || Gn === void 0 ? void 0 : Gn.replace("_", "-")
                                    } catch (_r) {
                                        console.log("i18nJson is not exist", _r)
                                    }
                                return Zn.next = 5,
                                    (0,
                                        Ae.loadLangMessages)(dn);
                            case 5:
                                return Zn.next = 7,
                                    (0,
                                        Ae.loadDayjsLangMessage)(dn);
                            case 7:
                                Zn.next = 12;
                                break;
                            case 9:
                                Zn.prev = 9,
                                    Zn.t0 = Zn.catch(0),
                                    console.log("load i18n error", Zn.t0);
                            case 12:
                                return Zn.prev = 12,
                                    ht(),
                                    Zn.finish(12);
                            case 15:
                            case "end":
                                return Zn.stop()
                        }
                }, $n, null, [[0, 9, 12, 15]])
            }));
            return function($n, dt, Xe) {
                return Pt.apply(this, arguments)
            }
        }());
        const Ot = tn
    }
    ,
    53019: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                CrmErrorLogger: () => K,
                CrmLogger: () => V,
                HubspotErrorLogger: () => q,
                HubspotLogger: () => H,
                Log: () => F,
                MSDErrorLogger: () => ee,
                MSDLogger: () => te,
                ServiceNowErrorLogger: () => x,
                ServiceNowLogger: () => X,
                SmartEmbedErrorLogger: () => ne,
                SmartEmbedLogger: () => pe,
                initLogger: () => O,
                safelog: () => D
            });
        var Y = a(53584)
            , J = a.n(Y)
            , $ = a(12608)
            , k = a.n($)
            , P = a(56405)
            , M = a.n(P)
            , Q = a(84670)
            , O = P.clientLogger.initLogger
            , F = P.clientLogger.Log
            , D = P.clientLogger.safelog
            , z = P.clientLogger.error;
        (0,
            Q.Br)({
            log: F,
            error: z
        });
        function G(_e) {
            var ie = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
            return function() {
                for (var Oe = J()(_e).call(_e, function(Ae) {
                    return "[".concat(Ae, "]")
                }).join(" "), Cn = arguments.length, at = new Array(Cn), Sn = 0; Sn < Cn; Sn++)
                    at[Sn] = arguments[Sn];
                if (ie) {
                    var Ce;
                    z.apply(void 0, k()(Ce = ["".concat(Oe)]).call(Ce, at))
                } else {
                    var wn;
                    F.apply(void 0, k()(wn = ["".concat(Oe)]).call(wn, at))
                }
            }
        }
        var V = G(["CRM"])
            , K = G(["CRM"], !0)
            , te = G(["CRM", "MSDynamics"])
            , ee = G(["CRM", "MSDynamics"], !0)
            , pe = G(["CRM", "SmartEmbed"])
            , ne = G(["CRM", "SmartEmbed"], !0)
            , X = G(["CRM", "ServiceNow"])
            , x = G(["CRM", "ServiceNow"], !0)
            , H = G(["CRM", "Hubspot"])
            , q = G(["CRM", "Hubspot"], !0)
    }
    ,
    7287: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                AGENT_OPT_STATUS: () => Ce,
                AGENT_STATUS: () => ne,
                AISource: () => te,
                API_LANGUAGE_MAP: () => Et,
                ASSET_FILE_NAME_LIMIT: () => rr,
                ASSET_NAME_LIMIT: () => vr,
                AgentIconMenu: () => H,
                BOT_STATUS: () => ee,
                BOT_TYPE: () => K,
                CARRIERS_DICT: () => Tt,
                CHANNEL_TYPES: () => at,
                CHANNEL_TYPES_BY_BLOCK: () => U,
                CHANNEL_TYPES_MAP: () => Sn,
                CHAT_EMOJI: () => q,
                CHAT_STATUS: () => _e,
                CSV_URL: () => Cn,
                DEFAULT_COUNTRY_ISO_CODE: () => Mt,
                DEFAULT_ERROR_MESSAGE: () => D.DEFAULT_ERROR_MESSAGE,
                DEFAULT_LANGUAGE_CODE: () => Kn,
                DEFAULT_MAX_WAIT_TIME: () => kr,
                DEFAULT_ROLE_TYPE: () => Ae,
                DISTRIBUTION_TYPE: () => wn,
                HIDE_LOCK_MESSAGE: () => or,
                HIDE_RESET_MESSAGE: () => pt,
                HIDE_TRANSCRIPTION_DISABLE_MESSSAGE: () => je,
                INBOUND_AND_OUTBOUND_BLOCK: () => ar,
                INBOUND_BLOCK: () => gn,
                INTERRUPT_TYPES: () => Re,
                LINK_CONTACT_PARAMS: () => D.LINK_CONTACT_PARAMS,
                MAX_ASSETS_SIZE: () => ve,
                MAX_NORMAL_FILE_SIZE: () => ze,
                MAX_NORMAL_FILE_SIZE_30: () => Oe,
                MAX_QUEUE_ASSETS_SIZE: () => jn,
                MatchType: () => gr,
                NOT_READY_ID: () => x,
                OUTBOUND_BLOCK: () => Qe,
                OVERFLOW_OPTIONS: () => rn,
                PHONE_DIRECTION: () => Mn,
                PHONE_MATCH: () => An,
                PREFIX_MATCH: () => Yt,
                PRODUCTS: () => en,
                QUEUE_ERROR_CODE: () => nr,
                READY_ID: () => X,
                RECORDING_PERMISSION: () => it,
                RECORD_CHOICE: () => Ne,
                RECORD_FILE_TYPE_CHOICE: () => Gt,
                SFDCNAMESPACE: () => Ke,
                SMS_BLOCK: () => Lt,
                SMS_STATUS: () => ie,
                STATUS_ERROR_CODE: () => mt,
                THRID_STATUS: () => pe,
                VOICE_AND_SMS_BLOCK: () => zt,
                VOICE_BLOCK: () => Zt
            });
        var Y = a(22795), J = a.n(Y), $ = a(53720), k = a.n($), P = a(44987), M = a.n(P), Q = a(15094), O = a.n(Q), F = a(6372), D = a(56405), z = a.n(D), G, V = window.ContactConfig.Domain, K = J()({
            Chatbot: 1,
            Voicebot: 2,
            OutboundVoicebot: 3,
            1: "Chatbot",
            2: "Voicebot",
            3: "OutboundVoicebot"
        }), te = J()({
            1: "Zoom Chat Bot",
            2: "Google Chat Bot",
            4: "Solvvy Chat Bot",
            8: "Amazon Lex Chat Bot"
        }), ee = J()({
            Draft: 1,
            Training: 2,
            Ready: 3,
            Processing: 4,
            Running: 5,
            1: "Draft",
            2: "Training",
            3: "Ready",
            4: "Processing",
            5: "Running"
        }), pe = J()({
            Unauthenticated: 3,
            Authenticated: 5,
            3: "Unauthenticated",
            5: "Authenticated"
        }), ne = J()({
            OFFLINE: 0,
            AVAILABLE: 1,
            NOT_READY: 2,
            OCCUPIED: 3,
            0: "Offline",
            1: "Ready",
            2: "Not Ready",
            3: "Occupied"
        }), X = "1", x = "2", H = [{
            category: 0,
            icon: "icon-offline"
        }, {
            category: 1,
            icon: "icon-dot"
        }, {
            category: 2,
            icon: "zm-icon-time"
        }, {
            category: 3,
            icon: "zm-icon-minus"
        }], q = [], _e = {
            UNACCPET: 1,
            ING: 4,
            END: 8
        }, ie = {
            UNACCPET: 1,
            ING: 4,
            END: 8
        }, ze = 1024 * 1024 * 20, Oe = 1024 * 1024 * 30, Cn = {
            USER: "".concat(V, "/v1/user/userCsvImport"),
            CONTACT: "".concat(V, "/v1/addressBook"),
            CAMPAIGN_CONTACT: "".concat(V, "/v1/campaignContactList/uploadContactsCSV"),
            CAMPAIGN_DNC_CONTACT: "".concat(V, "/v1/campaignDncList/uploadContactsCSV")
        }, at = J()(k()(G = [{
            key: "in-app-chat",
            value: "In-app Chat"
        }, {
            key: "in-app-video",
            value: "In-app Video"
        }, {
            key: "kiosk",
            value: "Kiosk"
        }, {
            key: "sms",
            value: "SMS"
        }, {
            key: "video",
            value: "Video"
        }, {
            key: "phone",
            value: "Voice"
        }, {
            key: "chat",
            value: "Web Chat"
        }]).call(G)), Sn = {
            IN_APP_CHAT: "In-app Chat"
        };
        M()(at).call(at, function(In) {
            Sn[In.key.toLocaleUpperCase()] = In.value
        });
        var Ce = {
            OPT_IN: 0,
            FORCED: 1,
            TASK_COMPLETION: 2,
            0: "OPT_IN",
            1: "FORCED",
            2: "TASK_COMPLETION"
        }
            , wn = {
            LONGEST_IDLE: 0,
            SEQUENTIAL: 1,
            ROTATING: 2,
            SIMULTANEOUS: 3,
            MOST_AVAILABLE: 4,
            DONT_DISTRIBUTE: 5,
            LONGEST_IDLE_WHILE_READY: 6
        }
            , Ae = {
            ADMIN: "Admin",
            SUPERVISOR: "Supervisor",
            AGENT: "Agent"
        }
            , nr = {
            UNABLE_DELETE: 140011,
            UNABLE_CHANGE_CHANNEL: 140005
        }
            , mt = {
            NOT_FOUND: 90001
        }
            , jn = 2 * 1024 * 1024
            , ve = 10 * 1024 * 1024
            , or = "HIDE_LOCK_MESSAGE"
            , pt = "HIDE_RESET_MESSAGE"
            , je = "HIDE_TRANSCRIPTION_DISABLE_MESSSAGE"
            , Ke = "ZVC."
            , it = {
            ACCESS: "Access",
            PLAY: "Play",
            DOWNLOAD: "Download",
            DELETE: "Delete"
        }
            , Ne = {
            INBOUND: 1,
            OUTBOUND: 2,
            INBOUND_OUTBOUND: 3
        }
            , Gt = {
            VIDEO_ONLY: 1,
            AUDIO_ONLY: 2,
            VIDEO_AND_AUDIO: 3
        }
            , en = {
            ZoomContactCenter: "Zoom_Contact_Center"
        }
            , rn = {
            GOODBYE_MESSAGE_DISCONNECT: 0,
            ROUTE_TO_QUEUE: 1,
            VOICEMAIL: 2,
            ROUTE_TO_FLOW: 3,
            VIDEOMAIL: 4,
            DISCONNECT_ENGAGEMENT: 5
        }
            , Tt = function(tn) {
            return {
                11: tn?.$t("numbers.BYOC.CarrierBYOC")
            }
        }
            , vr = 100
            , rr = 36
            , kr = 86400
            , Re = {
            MENU: "menu",
            AUDIO: "audio"
        }
            , Et = {
            "cmn-CN": "zh-CN",
            "zh-CN": "cmn-CN",
            "ja-JP": "jp-JP",
            "jp-JP": "ja-JP",
            "ko-KR": "ko-KO",
            "ko-KO": "ko-KR"
        }
            , An = 0
            , Yt = 1
            , gn = 0
            , Qe = 1
            , ar = 2
            , zt = 0
            , Zt = 1
            , Lt = 2
            , gr = [{
            label: F.i18n.t("cci.preference.blockList.phone.match"),
            value: An
        }, {
            label: F.i18n.t("cci.preference.blockList.prefix.match"),
            value: Yt
        }]
            , Mn = new (O())([[gn, [{
            label: F.i18n.t("cci.common.label.inbound"),
            id: gn
        }]], [Qe, [{
            label: F.i18n.t("cci.common.label.outbound"),
            id: Qe
        }]], [ar, [{
            label: F.i18n.t("cci.common.label.outbound"),
            id: Qe
        }, {
            label: F.i18n.t("cci.common.label.inbound"),
            id: gn
        }]]])
            , U = new (O())([[zt, [{
            label: F.i18n.t("cci.common.label.voice"),
            id: Zt
        }, {
            label: F.i18n.t("cci.common.label.sms"),
            id: Lt
        }]], [Zt, [{
            label: F.i18n.t("cci.common.label.voice"),
            id: Zt
        }]], [Lt, [{
            label: F.i18n.t("cci.common.label.sms"),
            id: Lt
        }]]])
            , Mt = "US"
            , Kn = "en-US"
    }
    ,
    20125: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                ctiBus: () => Tt,
                debounceRefreshToken: () => kr,
                refeshCrmTokenWithRefreshToken: () => rr,
                setTokenHandler: () => vr
            });
        var Y = a(83537)
            , J = a.n(Y)
            , $ = a(39864)
            , k = a.n($)
            , P = a(83030)
            , M = a.n(P)
            , Q = a(8233)
            , O = a.n(Q)
            , F = a(2208)
            , D = a.n(F)
            , z = a(92336)
            , G = a.n(z)
            , V = a(61849)
            , K = a.n(V)
            , te = a(65888)
            , ee = a.n(te)
            , pe = a(34187)
            , ne = a.n(pe)
            , X = a(44987)
            , x = a.n(X)
            , H = a(73007)
            , q = a.n(H)
            , _e = a(23716)
            , ie = a.n(_e)
            , ze = a(5339)
            , Oe = a.n(ze)
            , Cn = a(74061)
            , at = a.n(Cn)
            , Sn = a(76856)
            , Ce = a.n(Sn)
            , wn = a(56405)
            , Ae = a.n(wn)
            , nr = a(46699)
            , mt = a(67918)
            , jn = a.n(mt);
        function ve(Re) {
            "@babel/helpers - typeof";
            return ve = typeof M() == "function" && typeof Oe() == "symbol" ? function(Et) {
                    return typeof Et
                }
                : function(Et) {
                    return Et && typeof M() == "function" && Et.constructor === M() && Et !== M().prototype ? "symbol" : typeof Et
                }
                ,
                ve(Re)
        }
        function or() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            or = function() {
                return Et
            }
            ;
            var Re, Et = {}, An = Object.prototype, Yt = An.hasOwnProperty, gn = K() || function(Se, Ue, yt) {
                Se[Ue] = yt.value
            }
                , Qe = typeof M() == "function" ? M() : {}, ar = Qe.iterator || "@@iterator", zt = Qe.asyncIterator || "@@asyncIterator", Zt = Qe.toStringTag || "@@toStringTag";
            function Lt(Se, Ue, yt) {
                return K()(Se, Ue, {
                    value: yt,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    Se[Ue]
            }
            try {
                Lt({}, "")
            } catch {
                Lt = function(yt, Qt, Hn) {
                    return yt[Qt] = Hn
                }
            }
            function gr(Se, Ue, yt, Qt) {
                var Hn = Ue && Ue.prototype instanceof Ot ? Ue : Ot
                    , cr = ee()(Hn.prototype)
                    , Rr = new Ze(Qt || []);
                return gn(cr, "_invoke", {
                    value: sr(Se, yt, Rr)
                }),
                    cr
            }
            function Mn(Se, Ue, yt) {
                try {
                    return {
                        type: "normal",
                        arg: Se.call(Ue, yt)
                    }
                } catch (Qt) {
                    return {
                        type: "throw",
                        arg: Qt
                    }
                }
            }
            Et.wrap = gr;
            var U = "suspendedStart"
                , Mt = "suspendedYield"
                , Kn = "executing"
                , In = "completed"
                , tn = {};
            function Ot() {}
            function Pt() {}
            function $n() {}
            var dt = {};
            Lt(dt, ar, function() {
                return this
            });
            var Xe = ne()
                , ht = Xe && Xe(Xe(Vn([])));
            ht && ht !== An && Yt.call(ht, ar) && (dt = ht);
            var yn = $n.prototype = Ot.prototype = ee()(dt);
            function dn(Se) {
                var Ue;
                x()(Ue = ["next", "throw", "return"]).call(Ue, function(yt) {
                    Lt(Se, yt, function(Qt) {
                        return this._invoke(yt, Qt)
                    })
                })
            }
            function Gn(Se, Ue) {
                function yt(Hn, cr, Rr, Pr) {
                    var rt = Mn(Se[Hn], Se, cr);
                    if (rt.type !== "throw") {
                        var ae = rt.arg
                            , de = ae.value;
                        return de && ve(de) == "object" && Yt.call(de, "__await") ? Ue.resolve(de.__await).then(function(ye) {
                            yt("next", ye, Rr, Pr)
                        }, function(ye) {
                            yt("throw", ye, Rr, Pr)
                        }) : Ue.resolve(de).then(function(ye) {
                            ae.value = ye,
                                Rr(ae)
                        }, function(ye) {
                            return yt("throw", ye, Rr, Pr)
                        })
                    }
                    Pr(rt.arg)
                }
                var Qt;
                gn(this, "_invoke", {
                    value: function(cr, Rr) {
                        function Pr() {
                            return new Ue(function(rt, ae) {
                                    yt(cr, Rr, rt, ae)
                                }
                            )
                        }
                        return Qt = Qt ? Qt.then(Pr, Pr) : Pr()
                    }
                })
            }
            function sr(Se, Ue, yt) {
                var Qt = U;
                return function(Hn, cr) {
                    if (Qt === Kn)
                        throw Error("Generator is already running");
                    if (Qt === In) {
                        if (Hn === "throw")
                            throw cr;
                        return {
                            value: Re,
                            done: !0
                        }
                    }
                    for (yt.method = Hn,
                             yt.arg = cr; ; ) {
                        var Rr = yt.delegate;
                        if (Rr) {
                            var Pr = Zn(Rr, yt);
                            if (Pr) {
                                if (Pr === tn)
                                    continue;
                                return Pr
                            }
                        }
                        if (yt.method === "next")
                            yt.sent = yt._sent = yt.arg;
                        else if (yt.method === "throw") {
                            if (Qt === U)
                                throw Qt = In,
                                    yt.arg;
                            yt.dispatchException(yt.arg)
                        } else
                            yt.method === "return" && yt.abrupt("return", yt.arg);
                        Qt = Kn;
                        var rt = Mn(Se, Ue, yt);
                        if (rt.type === "normal") {
                            if (Qt = yt.done ? In : Mt,
                            rt.arg === tn)
                                continue;
                            return {
                                value: rt.arg,
                                done: yt.done
                            }
                        }
                        rt.type === "throw" && (Qt = In,
                            yt.method = "throw",
                            yt.arg = rt.arg)
                    }
                }
            }
            function Zn(Se, Ue) {
                var yt = Ue.method
                    , Qt = Se.iterator[yt];
                if (Qt === Re)
                    return Ue.delegate = null,
                    yt === "throw" && Se.iterator.return && (Ue.method = "return",
                        Ue.arg = Re,
                        Zn(Se, Ue),
                    Ue.method === "throw") || yt !== "return" && (Ue.method = "throw",
                        Ue.arg = new TypeError("The iterator does not provide a '" + yt + "' method")),
                        tn;
                var Hn = Mn(Qt, Se.iterator, Ue.arg);
                if (Hn.type === "throw")
                    return Ue.method = "throw",
                        Ue.arg = Hn.arg,
                        Ue.delegate = null,
                        tn;
                var cr = Hn.arg;
                return cr ? cr.done ? (Ue[Se.resultName] = cr.value,
                    Ue.next = Se.nextLoc,
                Ue.method !== "return" && (Ue.method = "next",
                    Ue.arg = Re),
                    Ue.delegate = null,
                    tn) : cr : (Ue.method = "throw",
                    Ue.arg = new TypeError("iterator result is not an object"),
                    Ue.delegate = null,
                    tn)
            }
            function _r(Se) {
                var Ue = {
                    tryLoc: Se[0]
                };
                1 in Se && (Ue.catchLoc = Se[1]),
                2 in Se && (Ue.finallyLoc = Se[2],
                    Ue.afterLoc = Se[3]),
                    this.tryEntries.push(Ue)
            }
            function Pn(Se) {
                var Ue = Se.completion || {};
                Ue.type = "normal",
                    delete Ue.arg,
                    Se.completion = Ue
            }
            function Ze(Se) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    x()(Se).call(Se, _r, this),
                    this.reset(!0)
            }
            function Vn(Se) {
                if (Se || Se === "") {
                    var Ue = Se[ar];
                    if (Ue)
                        return Ue.call(Se);
                    if (typeof Se.next == "function")
                        return Se;
                    if (!isNaN(Se.length)) {
                        var yt = -1
                            , Qt = function Hn() {
                            for (; ++yt < Se.length; )
                                if (Yt.call(Se, yt))
                                    return Hn.value = Se[yt],
                                        Hn.done = !1,
                                        Hn;
                            return Hn.value = Re,
                                Hn.done = !0,
                                Hn
                        };
                        return Qt.next = Qt
                    }
                }
                throw new TypeError(ve(Se) + " is not iterable")
            }
            return Pt.prototype = $n,
                gn(yn, "constructor", {
                    value: $n,
                    configurable: !0
                }),
                gn($n, "constructor", {
                    value: Pt,
                    configurable: !0
                }),
                Pt.displayName = Lt($n, Zt, "GeneratorFunction"),
                Et.isGeneratorFunction = function(Se) {
                    var Ue = typeof Se == "function" && Se.constructor;
                    return !!Ue && (Ue === Pt || (Ue.displayName || Ue.name) === "GeneratorFunction")
                }
                ,
                Et.mark = function(Se) {
                    return q() ? q()(Se, $n) : (Se.__proto__ = $n,
                        Lt(Se, Zt, "GeneratorFunction")),
                        Se.prototype = ee()(yn),
                        Se
                }
                ,
                Et.awrap = function(Se) {
                    return {
                        __await: Se
                    }
                }
                ,
                dn(Gn.prototype),
                Lt(Gn.prototype, zt, function() {
                    return this
                }),
                Et.AsyncIterator = Gn,
                Et.async = function(Se, Ue, yt, Qt, Hn) {
                    Hn === void 0 && (Hn = J());
                    var cr = new Gn(gr(Se, Ue, yt, Qt),Hn);
                    return Et.isGeneratorFunction(Ue) ? cr : cr.next().then(function(Rr) {
                        return Rr.done ? Rr.value : cr.next()
                    })
                }
                ,
                dn(yn),
                Lt(yn, Zt, "Generator"),
                Lt(yn, ar, function() {
                    return this
                }),
                Lt(yn, "toString", function() {
                    return "[object Generator]"
                }),
                Et.keys = function(Se) {
                    var Ue = Object(Se)
                        , yt = [];
                    for (var Qt in Ue)
                        yt.push(Qt);
                    return ie()(yt).call(yt),
                        function Hn() {
                            for (; yt.length; ) {
                                var cr = yt.pop();
                                if (cr in Ue)
                                    return Hn.value = cr,
                                        Hn.done = !1,
                                        Hn
                            }
                            return Hn.done = !0,
                                Hn
                        }
                }
                ,
                Et.values = Vn,
                Ze.prototype = {
                    constructor: Ze,
                    reset: function(Ue) {
                        var yt;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = Re,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = Re,
                            x()(yt = this.tryEntries).call(yt, Pn),
                            !Ue)
                            for (var Qt in this)
                                Qt.charAt(0) === "t" && Yt.call(this, Qt) && !isNaN(+D()(Qt).call(Qt, 1)) && (this[Qt] = Re)
                    },
                    stop: function() {
                        this.done = !0;
                        var Ue = this.tryEntries[0].completion;
                        if (Ue.type === "throw")
                            throw Ue.arg;
                        return this.rval
                    },
                    dispatchException: function(Ue) {
                        if (this.done)
                            throw Ue;
                        var yt = this;
                        function Qt(ae, de) {
                            return Rr.type = "throw",
                                Rr.arg = Ue,
                                yt.next = ae,
                            de && (yt.method = "next",
                                yt.arg = Re),
                                !!de
                        }
                        for (var Hn = this.tryEntries.length - 1; Hn >= 0; --Hn) {
                            var cr = this.tryEntries[Hn]
                                , Rr = cr.completion;
                            if (cr.tryLoc === "root")
                                return Qt("end");
                            if (cr.tryLoc <= this.prev) {
                                var Pr = Yt.call(cr, "catchLoc")
                                    , rt = Yt.call(cr, "finallyLoc");
                                if (Pr && rt) {
                                    if (this.prev < cr.catchLoc)
                                        return Qt(cr.catchLoc, !0);
                                    if (this.prev < cr.finallyLoc)
                                        return Qt(cr.finallyLoc)
                                } else if (Pr) {
                                    if (this.prev < cr.catchLoc)
                                        return Qt(cr.catchLoc, !0)
                                } else {
                                    if (!rt)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < cr.finallyLoc)
                                        return Qt(cr.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(Ue, yt) {
                        for (var Qt = this.tryEntries.length - 1; Qt >= 0; --Qt) {
                            var Hn = this.tryEntries[Qt];
                            if (Hn.tryLoc <= this.prev && Yt.call(Hn, "finallyLoc") && this.prev < Hn.finallyLoc) {
                                var cr = Hn;
                                break
                            }
                        }
                        cr && (Ue === "break" || Ue === "continue") && cr.tryLoc <= yt && yt <= cr.finallyLoc && (cr = null);
                        var Rr = cr ? cr.completion : {};
                        return Rr.type = Ue,
                            Rr.arg = yt,
                            cr ? (this.method = "next",
                                this.next = cr.finallyLoc,
                                tn) : this.complete(Rr)
                    },
                    complete: function(Ue, yt) {
                        if (Ue.type === "throw")
                            throw Ue.arg;
                        return Ue.type === "break" || Ue.type === "continue" ? this.next = Ue.arg : Ue.type === "return" ? (this.rval = this.arg = Ue.arg,
                            this.method = "return",
                            this.next = "end") : Ue.type === "normal" && yt && (this.next = yt),
                            tn
                    },
                    finish: function(Ue) {
                        for (var yt = this.tryEntries.length - 1; yt >= 0; --yt) {
                            var Qt = this.tryEntries[yt];
                            if (Qt.finallyLoc === Ue)
                                return this.complete(Qt.completion, Qt.afterLoc),
                                    Pn(Qt),
                                    tn
                        }
                    },
                    catch: function(Ue) {
                        for (var yt = this.tryEntries.length - 1; yt >= 0; --yt) {
                            var Qt = this.tryEntries[yt];
                            if (Qt.tryLoc === Ue) {
                                var Hn = Qt.completion;
                                if (Hn.type === "throw") {
                                    var cr = Hn.arg;
                                    Pn(Qt)
                                }
                                return cr
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(Ue, yt, Qt) {
                        return this.delegate = {
                            iterator: Vn(Ue),
                            resultName: yt,
                            nextLoc: Qt
                        },
                        this.method === "next" && (this.arg = Re),
                            tn
                    }
                },
                Et
        }
        function pt(Re, Et) {
            return Gt(Re) || Ne(Re, Et) || Ke(Re, Et) || je()
        }
        function je() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Ke(Re, Et) {
            if (Re) {
                var An;
                if (typeof Re == "string")
                    return it(Re, Et);
                var Yt = D()(An = {}.toString.call(Re)).call(An, 8, -1);
                return Yt === "Object" && Re.constructor && (Yt = Re.constructor.name),
                    Yt === "Map" || Yt === "Set" ? G()(Re) : Yt === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(Yt) ? it(Re, Et) : void 0
            }
        }
        function it(Re, Et) {
            (Et == null || Et > Re.length) && (Et = Re.length);
            for (var An = 0, Yt = Array(Et); An < Et; An++)
                Yt[An] = Re[An];
            return Yt
        }
        function Ne(Re, Et) {
            var An = Re == null ? null : typeof M() < "u" && O()(Re) || Re["@@iterator"];
            if (An != null) {
                var Yt, gn, Qe, ar, zt = [], Zt = !0, Lt = !1;
                try {
                    if (Qe = (An = An.call(Re)).next,
                    Et === 0) {
                        if (Object(An) !== An)
                            return;
                        Zt = !1
                    } else
                        for (; !(Zt = (Yt = Qe.call(An)).done) && (zt.push(Yt.value),
                        zt.length !== Et); Zt = !0)
                            ;
                } catch (gr) {
                    Lt = !0,
                        gn = gr
                } finally {
                    try {
                        if (!Zt && An.return != null && (ar = An.return(),
                        Object(ar) !== ar))
                            return
                    } finally {
                        if (Lt)
                            throw gn
                    }
                }
                return zt
            }
        }
        function Gt(Re) {
            if (k()(Re))
                return Re
        }
        function en(Re, Et, An, Yt, gn, Qe, ar) {
            try {
                var zt = Re[Qe](ar)
                    , Zt = zt.value
            } catch (Lt) {
                return void An(Lt)
            }
            zt.done ? Et(Zt) : J().resolve(Zt).then(Yt, gn)
        }
        function rn(Re) {
            return function() {
                var Et = this
                    , An = arguments;
                return new (J())(function(Yt, gn) {
                        var Qe = Re.apply(Et, An);
                        function ar(Zt) {
                            en(Qe, Yt, gn, ar, zt, "next", Zt)
                        }
                        function zt(Zt) {
                            en(Qe, Yt, gn, ar, zt, "throw", Zt)
                        }
                        ar(void 0)
                    }
                )
            }
        }
        var Tt = new (at());
        function vr(Re) {
            var Et = Re.access_token
                , An = Re.x_zm_aid
                , Yt = Re.x_zm_haid
                , gn = Re.x_zm_client_cluster_id;
            nr.A.Authorization = Et,
                window.localStorage.setItem("CCI_THIRD_TOKEN", Et),
                window.localStorage.setItem("CCI_THIRD_AID", An),
                window.localStorage.setItem("CCI_THIRD_HAID", Yt),
                window.localStorage.setItem("CCI_THIRD_CLUSTER_ID", gn),
                wn.ZCache.setToken(Et),
                wn.ZCache.setClusterId(gn),
                wn.ZCache.setAid(An),
                wn.ZCache.setHaid(Yt)
        }
        var rr = function() {
            var Re = rn(or().mark(function Et() {
                var An, Yt, gn, Qe, ar, zt, Zt;
                return or().wrap(function(gr) {
                    for (; ; )
                        switch (gr.prev = gr.next) {
                            case 0:
                                return An = wn.ZCache.getRefreshToken() || localStorage.getItem("CCI_REFESH_TOKEN"),
                                    gr.next = 3,
                                    (0,
                                        wn.tryWebApiCatch)(Sn.appApi.refreshCrmToken, {
                                        headers: {
                                            "x-zcc-refresh-token": An
                                        }
                                    });
                            case 3:
                                return Yt = gr.sent,
                                    gn = pt(Yt, 2),
                                    Qe = gn[0],
                                    ar = gn[1],
                                    !Qe && ar ? vr(ar) : (Qe && (zt = ar || {},
                                        Zt = zt.errorCode,
                                    Zt === -1 && (wn.ZCache.clearRefreshToken(),
                                        localStorage.removeItem("CCI_REFESH_TOKEN"))),
                                        Tt.$emit("CCI_TOKEN_EXPIRED")),
                                    gr.abrupt("return", {
                                        err: Qe,
                                        refreshTkRes: ar
                                    });
                            case 9:
                            case "end":
                                return gr.stop()
                        }
                }, Et)
            }));
            return function() {
                return Re.apply(this, arguments)
            }
        }()
            , kr = (0,
            mt.debounce)(function() {
            var Re = wn.ZCache.getRefreshToken() || localStorage.getItem("CCI_REFESH_TOKEN");
            if (Re && Re !== "undefined")
                return rr()
        }, 2e3)
    }
    ,
    19598: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                checkVersion: () => Ee,
                debounce: () => In.debounce,
                delay: () => Pn,
                dict: () => me,
                downloadFile: () => Ze,
                downloadFileFromUrl: () => In.downloadFileFromUrl,
                emptyVal: () => Se,
                formatE164Number: () => nt,
                formatPermission: () => de,
                getAppMarketUrl: () => wt,
                getBase64: () => He,
                getExt: () => Te,
                getFlowEditorPageUrl: () => En,
                httpOK: () => In.httpOK,
                invertObjKeyValue: () => Pe,
                once: () => Pr,
                param2Obj: () => Zn,
                parseJWTToken: () => _r,
                parsePermission: () => ye,
                patch: () => be,
                postOneWayMessage: () => Bt,
                randomColor: () => In.randomColor,
                requestAnimFrame: () => Ue,
                requestConfigValidate: () => sr,
                resetPageAfterDelete: () => ae,
                screenReaderAlert: () => W,
                secsToHHMMSS: () => In.secsToHHMMSS,
                sleep: () => In.sleep,
                startsWith: () => yt,
                stringToColor: () => Vn,
                timeFormatYMDHS: () => In.timeFormatYMDHS,
                timeFormatYMDHSS: () => In.timeFormatYMDHSS,
                trim: () => rt,
                tryApiCatch: () => In.tryApiCatch,
                tryApiCatchEnhanced: () => In.tryApiCatchEnhanced,
                tryApiCatchOnlyData: () => In.tryApiCatchOnlyData,
                tryParseJson: () => Ct,
                tryWebApiCatch: () => In.tryWebApiCatch,
                tsToHHMMSS: () => In.tsToHHMMSS,
                uploadFile: () => Qt,
                uploadImage: () => cr,
                waitPromise: () => Le
            });
        var Y = a(83537)
            , J = a.n(Y)
            , $ = a(65770)
            , k = a.n($)
            , P = a(17877)
            , M = a.n(P)
            , Q = a(69761)
            , O = a.n(Q)
            , F = a(2208)
            , D = a.n(F)
            , z = a(44987)
            , G = a.n(z)
            , V = a(93752)
            , K = a.n(V)
            , te = a(53584)
            , ee = a.n(te)
            , pe = a(59814)
            , ne = a.n(pe)
            , X = a(12608)
            , x = a.n(X)
            , H = a(27598)
            , q = a.n(H)
            , _e = a(91304)
            , ie = a.n(_e)
            , ze = a(41214)
            , Oe = a.n(ze)
            , Cn = a(81352)
            , at = a.n(Cn)
            , Sn = a(78639)
            , Ce = a.n(Sn)
            , wn = a(72798)
            , Ae = a.n(wn)
            , nr = a(39084)
            , mt = a.n(nr)
            , jn = a(61849)
            , ve = a.n(jn)
            , or = a(84653)
            , pt = a.n(or)
            , je = a(89099)
            , Ke = a.n(je)
            , it = a(34622)
            , Ne = a.n(it)
            , Gt = a(27785)
            , en = a.n(Gt)
            , rn = a(83030)
            , Tt = a.n(rn)
            , vr = a(65888)
            , rr = a.n(vr)
            , kr = a(34187)
            , Re = a.n(kr)
            , Et = a(73007)
            , An = a.n(Et)
            , Yt = a(23716)
            , gn = a.n(Yt)
            , Qe = a(5339)
            , ar = a.n(Qe)
            , zt = a(6372)
            , Zt = a(76709)
            , Lt = a.n(Zt)
            , gr = a(27668)
            , Mn = a.n(gr)
            , U = a(84108)
            , Mt = a.n(U)
            , Kn = a(7287)
            , In = a(56405)
            , tn = a.n(In);
        function Ot(Ie) {
            "@babel/helpers - typeof";
            return Ot = typeof Tt() == "function" && typeof ar() == "symbol" ? function(Be) {
                    return typeof Be
                }
                : function(Be) {
                    return Be && typeof Tt() == "function" && Be.constructor === Tt() && Be !== Tt().prototype ? "symbol" : typeof Be
                }
                ,
                Ot(Ie)
        }
        function Pt() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Pt = function() {
                return Be
            }
            ;
            var Ie, Be = {}, st = Object.prototype, jt = st.hasOwnProperty, _t = ve() || function(vn, nn, tr) {
                vn[nn] = tr.value
            }
                , Ge = typeof Tt() == "function" ? Tt() : {}, It = Ge.iterator || "@@iterator", cn = Ge.asyncIterator || "@@asyncIterator", ct = Ge.toStringTag || "@@toStringTag";
            function De(vn, nn, tr) {
                return ve()(vn, nn, {
                    value: tr,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    vn[nn]
            }
            try {
                De({}, "")
            } catch {
                De = function(tr, Ve, R) {
                    return tr[Ve] = R
                }
            }
            function bt(vn, nn, tr, Ve) {
                var R = nn && nn.prototype instanceof We ? nn : We
                    , ce = rr()(R.prototype)
                    , gt = new an(Ve || []);
                return _t(ce, "_invoke", {
                    value: Fe(vn, tr, gt)
                }),
                    ce
            }
            function un(vn, nn, tr) {
                try {
                    return {
                        type: "normal",
                        arg: vn.call(nn, tr)
                    }
                } catch (Ve) {
                    return {
                        type: "throw",
                        arg: Ve
                    }
                }
            }
            Be.wrap = bt;
            var ur = "suspendedStart"
                , _n = "suspendedYield"
                , Jn = "executing"
                , Ut = "completed"
                , xe = {};
            function We() {}
            function Nt() {}
            function hn() {}
            var Ln = {};
            De(Ln, It, function() {
                return this
            });
            var fn = Re()
                , $e = fn && fn(fn(Bn([])));
            $e && $e !== st && jt.call($e, It) && (Ln = $e);
            var tt = hn.prototype = We.prototype = rr()(Ln);
            function ot(vn) {
                var nn;
                G()(nn = ["next", "throw", "return"]).call(nn, function(tr) {
                    De(vn, tr, function(Ve) {
                        return this._invoke(tr, Ve)
                    })
                })
            }
            function on(vn, nn) {
                function tr(R, ce, gt, Ft) {
                    var Kt = un(vn[R], vn, ce);
                    if (Kt.type !== "throw") {
                        var St = Kt.arg
                            , Xt = St.value;
                        return Xt && Ot(Xt) == "object" && jt.call(Xt, "__await") ? nn.resolve(Xt.__await).then(function(Rn) {
                            tr("next", Rn, gt, Ft)
                        }, function(Rn) {
                            tr("throw", Rn, gt, Ft)
                        }) : nn.resolve(Xt).then(function(Rn) {
                            St.value = Rn,
                                gt(St)
                        }, function(Rn) {
                            return tr("throw", Rn, gt, Ft)
                        })
                    }
                    Ft(Kt.arg)
                }
                var Ve;
                _t(this, "_invoke", {
                    value: function(ce, gt) {
                        function Ft() {
                            return new nn(function(Kt, St) {
                                    tr(ce, gt, Kt, St)
                                }
                            )
                        }
                        return Ve = Ve ? Ve.then(Ft, Ft) : Ft()
                    }
                })
            }
            function Fe(vn, nn, tr) {
                var Ve = ur;
                return function(R, ce) {
                    if (Ve === Jn)
                        throw Error("Generator is already running");
                    if (Ve === Ut) {
                        if (R === "throw")
                            throw ce;
                        return {
                            value: Ie,
                            done: !0
                        }
                    }
                    for (tr.method = R,
                             tr.arg = ce; ; ) {
                        var gt = tr.delegate;
                        if (gt) {
                            var Ft = Mr(gt, tr);
                            if (Ft) {
                                if (Ft === xe)
                                    continue;
                                return Ft
                            }
                        }
                        if (tr.method === "next")
                            tr.sent = tr._sent = tr.arg;
                        else if (tr.method === "throw") {
                            if (Ve === ur)
                                throw Ve = Ut,
                                    tr.arg;
                            tr.dispatchException(tr.arg)
                        } else
                            tr.method === "return" && tr.abrupt("return", tr.arg);
                        Ve = Jn;
                        var Kt = un(vn, nn, tr);
                        if (Kt.type === "normal") {
                            if (Ve = tr.done ? Ut : _n,
                            Kt.arg === xe)
                                continue;
                            return {
                                value: Kt.arg,
                                done: tr.done
                            }
                        }
                        Kt.type === "throw" && (Ve = Ut,
                            tr.method = "throw",
                            tr.arg = Kt.arg)
                    }
                }
            }
            function Mr(vn, nn) {
                var tr = nn.method
                    , Ve = vn.iterator[tr];
                if (Ve === Ie)
                    return nn.delegate = null,
                    tr === "throw" && vn.iterator.return && (nn.method = "return",
                        nn.arg = Ie,
                        Mr(vn, nn),
                    nn.method === "throw") || tr !== "return" && (nn.method = "throw",
                        nn.arg = new TypeError("The iterator does not provide a '" + tr + "' method")),
                        xe;
                var R = un(Ve, vn.iterator, nn.arg);
                if (R.type === "throw")
                    return nn.method = "throw",
                        nn.arg = R.arg,
                        nn.delegate = null,
                        xe;
                var ce = R.arg;
                return ce ? ce.done ? (nn[vn.resultName] = ce.value,
                    nn.next = vn.nextLoc,
                nn.method !== "return" && (nn.method = "next",
                    nn.arg = Ie),
                    nn.delegate = null,
                    xe) : ce : (nn.method = "throw",
                    nn.arg = new TypeError("iterator result is not an object"),
                    nn.delegate = null,
                    xe)
            }
            function Jt(vn) {
                var nn = {
                    tryLoc: vn[0]
                };
                1 in vn && (nn.catchLoc = vn[1]),
                2 in vn && (nn.finallyLoc = vn[2],
                    nn.afterLoc = vn[3]),
                    this.tryEntries.push(nn)
            }
            function Dt(vn) {
                var nn = vn.completion || {};
                nn.type = "normal",
                    delete nn.arg,
                    vn.completion = nn
            }
            function an(vn) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    G()(vn).call(vn, Jt, this),
                    this.reset(!0)
            }
            function Bn(vn) {
                if (vn || vn === "") {
                    var nn = vn[It];
                    if (nn)
                        return nn.call(vn);
                    if (typeof vn.next == "function")
                        return vn;
                    if (!isNaN(vn.length)) {
                        var tr = -1
                            , Ve = function R() {
                            for (; ++tr < vn.length; )
                                if (jt.call(vn, tr))
                                    return R.value = vn[tr],
                                        R.done = !1,
                                        R;
                            return R.value = Ie,
                                R.done = !0,
                                R
                        };
                        return Ve.next = Ve
                    }
                }
                throw new TypeError(Ot(vn) + " is not iterable")
            }
            return Nt.prototype = hn,
                _t(tt, "constructor", {
                    value: hn,
                    configurable: !0
                }),
                _t(hn, "constructor", {
                    value: Nt,
                    configurable: !0
                }),
                Nt.displayName = De(hn, ct, "GeneratorFunction"),
                Be.isGeneratorFunction = function(vn) {
                    var nn = typeof vn == "function" && vn.constructor;
                    return !!nn && (nn === Nt || (nn.displayName || nn.name) === "GeneratorFunction")
                }
                ,
                Be.mark = function(vn) {
                    return An() ? An()(vn, hn) : (vn.__proto__ = hn,
                        De(vn, ct, "GeneratorFunction")),
                        vn.prototype = rr()(tt),
                        vn
                }
                ,
                Be.awrap = function(vn) {
                    return {
                        __await: vn
                    }
                }
                ,
                ot(on.prototype),
                De(on.prototype, cn, function() {
                    return this
                }),
                Be.AsyncIterator = on,
                Be.async = function(vn, nn, tr, Ve, R) {
                    R === void 0 && (R = J());
                    var ce = new on(bt(vn, nn, tr, Ve),R);
                    return Be.isGeneratorFunction(nn) ? ce : ce.next().then(function(gt) {
                        return gt.done ? gt.value : ce.next()
                    })
                }
                ,
                ot(tt),
                De(tt, ct, "Generator"),
                De(tt, It, function() {
                    return this
                }),
                De(tt, "toString", function() {
                    return "[object Generator]"
                }),
                Be.keys = function(vn) {
                    var nn = Object(vn)
                        , tr = [];
                    for (var Ve in nn)
                        tr.push(Ve);
                    return gn()(tr).call(tr),
                        function R() {
                            for (; tr.length; ) {
                                var ce = tr.pop();
                                if (ce in nn)
                                    return R.value = ce,
                                        R.done = !1,
                                        R
                            }
                            return R.done = !0,
                                R
                        }
                }
                ,
                Be.values = Bn,
                an.prototype = {
                    constructor: an,
                    reset: function(nn) {
                        var tr;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = Ie,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = Ie,
                            G()(tr = this.tryEntries).call(tr, Dt),
                            !nn)
                            for (var Ve in this)
                                Ve.charAt(0) === "t" && jt.call(this, Ve) && !isNaN(+D()(Ve).call(Ve, 1)) && (this[Ve] = Ie)
                    },
                    stop: function() {
                        this.done = !0;
                        var nn = this.tryEntries[0].completion;
                        if (nn.type === "throw")
                            throw nn.arg;
                        return this.rval
                    },
                    dispatchException: function(nn) {
                        if (this.done)
                            throw nn;
                        var tr = this;
                        function Ve(St, Xt) {
                            return gt.type = "throw",
                                gt.arg = nn,
                                tr.next = St,
                            Xt && (tr.method = "next",
                                tr.arg = Ie),
                                !!Xt
                        }
                        for (var R = this.tryEntries.length - 1; R >= 0; --R) {
                            var ce = this.tryEntries[R]
                                , gt = ce.completion;
                            if (ce.tryLoc === "root")
                                return Ve("end");
                            if (ce.tryLoc <= this.prev) {
                                var Ft = jt.call(ce, "catchLoc")
                                    , Kt = jt.call(ce, "finallyLoc");
                                if (Ft && Kt) {
                                    if (this.prev < ce.catchLoc)
                                        return Ve(ce.catchLoc, !0);
                                    if (this.prev < ce.finallyLoc)
                                        return Ve(ce.finallyLoc)
                                } else if (Ft) {
                                    if (this.prev < ce.catchLoc)
                                        return Ve(ce.catchLoc, !0)
                                } else {
                                    if (!Kt)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < ce.finallyLoc)
                                        return Ve(ce.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(nn, tr) {
                        for (var Ve = this.tryEntries.length - 1; Ve >= 0; --Ve) {
                            var R = this.tryEntries[Ve];
                            if (R.tryLoc <= this.prev && jt.call(R, "finallyLoc") && this.prev < R.finallyLoc) {
                                var ce = R;
                                break
                            }
                        }
                        ce && (nn === "break" || nn === "continue") && ce.tryLoc <= tr && tr <= ce.finallyLoc && (ce = null);
                        var gt = ce ? ce.completion : {};
                        return gt.type = nn,
                            gt.arg = tr,
                            ce ? (this.method = "next",
                                this.next = ce.finallyLoc,
                                xe) : this.complete(gt)
                    },
                    complete: function(nn, tr) {
                        if (nn.type === "throw")
                            throw nn.arg;
                        return nn.type === "break" || nn.type === "continue" ? this.next = nn.arg : nn.type === "return" ? (this.rval = this.arg = nn.arg,
                            this.method = "return",
                            this.next = "end") : nn.type === "normal" && tr && (this.next = tr),
                            xe
                    },
                    finish: function(nn) {
                        for (var tr = this.tryEntries.length - 1; tr >= 0; --tr) {
                            var Ve = this.tryEntries[tr];
                            if (Ve.finallyLoc === nn)
                                return this.complete(Ve.completion, Ve.afterLoc),
                                    Dt(Ve),
                                    xe
                        }
                    },
                    catch: function(nn) {
                        for (var tr = this.tryEntries.length - 1; tr >= 0; --tr) {
                            var Ve = this.tryEntries[tr];
                            if (Ve.tryLoc === nn) {
                                var R = Ve.completion;
                                if (R.type === "throw") {
                                    var ce = R.arg;
                                    Dt(Ve)
                                }
                                return ce
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(nn, tr, Ve) {
                        return this.delegate = {
                            iterator: Bn(nn),
                            resultName: tr,
                            nextLoc: Ve
                        },
                        this.method === "next" && (this.arg = Ie),
                            xe
                    }
                },
                Be
        }
        function $n(Ie, Be) {
            var st = at()(Ie);
            if (pt()) {
                var jt = pt()(Ie);
                Be && (jt = ne()(jt).call(jt, function(_t) {
                    return Ke()(Ie, _t).enumerable
                })),
                    st.push.apply(st, jt)
            }
            return st
        }
        function dt(Ie) {
            for (var Be = 1; Be < arguments.length; Be++) {
                var st, jt, _t = arguments[Be] != null ? arguments[Be] : {};
                Be % 2 ? G()(st = $n(Object(_t), !0)).call(st, function(Ge) {
                    Xe(Ie, Ge, _t[Ge])
                }) : Ne() ? en()(Ie, Ne()(_t)) : G()(jt = $n(Object(_t))).call(jt, function(Ge) {
                    ve()(Ie, Ge, Ke()(_t, Ge))
                })
            }
            return Ie
        }
        function Xe(Ie, Be, st) {
            return (Be = ht(Be))in Ie ? ve()(Ie, Be, {
                value: st,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : Ie[Be] = st,
                Ie
        }
        function ht(Ie) {
            var Be = yn(Ie, "string");
            return Ot(Be) == "symbol" ? Be : Be + ""
        }
        function yn(Ie, Be) {
            if (Ot(Ie) != "object" || !Ie)
                return Ie;
            var st = Ie[mt()];
            if (st !== void 0) {
                var jt = st.call(Ie, Be || "default");
                if (Ot(jt) != "object")
                    return jt;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (Be === "string" ? String : Number)(Ie)
        }
        function dn(Ie, Be, st, jt, _t, Ge, It) {
            try {
                var cn = Ie[Ge](It)
                    , ct = cn.value
            } catch (De) {
                return void st(De)
            }
            cn.done ? Be(ct) : J().resolve(ct).then(jt, _t)
        }
        function Gn(Ie) {
            return function() {
                var Be = this
                    , st = arguments;
                return new (J())(function(jt, _t) {
                        var Ge = Ie.apply(Be, st);
                        function It(ct) {
                            dn(Ge, jt, _t, It, cn, "next", ct)
                        }
                        function cn(ct) {
                            dn(Ge, jt, _t, It, cn, "throw", ct)
                        }
                        It(void 0)
                    }
                )
            }
        }
        function sr(Ie) {
            return Ie
        }
        function Zn(Ie) {
            var Be = Ie.split("?")[1];
            return Be ? JSON.parse('{"' + decodeURIComponent(Be).replace(/"/g, '\\"').replace(/&/g, '","').replace(/=/g, '":"').replace(/\+/g, " ") + '"}') : {}
        }
        var _r = function(Be) {
            try {
                var st = decodeURIComponent(escape(window.atob(Be.split(".")[1])));
                return JSON.parse(st)
            } catch (jt) {
                return console.log(jt),
                    ""
            }
        }
            , Pn = function(Be) {
            return new (J())(function(st) {
                    k()(st, Be)
                }
            )
        };
        function Ze(Ie, Be) {
            var st = new Blob([Ie])
                , jt = document.createElement("a")
                , _t = M().createObjectURL(st);
            jt.href = _t,
                jt.download = Be,
                document.body.appendChild(jt),
                jt.click(),
                document.body.removeChild(jt),
                M().revokeObjectURL(_t)
        }
        function Vn(Ie) {
            var Be = 0, st, jt = "#";
            for (st = 0; st < Ie.length; st += 1)
                Be = Ie.charCodeAt(st) + ((Be << 5) - Be);
            for (st = 0; st < 3; st += 1) {
                var _t = Be >> st * 8 & 255;
                jt += "00".concat(_t.toString(16)).substr(-2)
            }
            return jt
        }
        function Se(Ie) {
            var Be;
            return O()(Be = ["", void 0, null]).call(Be, Ie) ? "" : Ie
        }
        var Ue = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(Ie) {
                k()(Ie, 1e3 / 60)
            }
        ;
        function yt(Ie, Be) {
            return D()(Ie).call(Ie, 0, Be.length) === Be
        }
        function Qt() {
            return Hn.apply(this, arguments)
        }
        function Hn() {
            return Hn = Gn(Pt().mark(function Ie() {
                var Be, st = arguments;
                return Pt().wrap(function(_t) {
                    for (; ; )
                        switch (_t.prev = _t.next) {
                            case 0:
                                return Be = st.length > 0 && st[0] !== void 0 ? st[0] : "*/*",
                                    _t.abrupt("return", new (J())(function(Ge) {
                                            var It = document.createElement("input");
                                            It.style.display = "none",
                                                It.setAttribute("type", "file"),
                                                It.setAttribute("accept", Be);
                                            var cn = function(De) {
                                                console.log("[Chat] uploadFile - addEventListener > files:", De.target.files);
                                                var bt = De.target.files[0];
                                                if (It.removeEventListener("change", cn),
                                                    !bt)
                                                    return Ge(null);
                                                Ge({
                                                    name: bt.name,
                                                    file: bt
                                                })
                                            };
                                            It.addEventListener("change", cn),
                                                It.click()
                                        }
                                    ));
                            case 2:
                            case "end":
                                return _t.stop()
                        }
                }, Ie)
            })),
                Hn.apply(this, arguments)
        }
        function cr() {
            return Rr.apply(this, arguments)
        }
        function Rr() {
            return Rr = Gn(Pt().mark(function Ie() {
                var Be, st;
                return Pt().wrap(function(_t) {
                    for (; ; )
                        switch (_t.prev = _t.next) {
                            case 0:
                                return _t.next = 2,
                                    Qt("image/png,image/jpeg,image/gif");
                            case 2:
                                if (Be = _t.sent,
                                    Be) {
                                    _t.next = 5;
                                    break
                                }
                                return _t.abrupt("return", J().resolve(null));
                            case 5:
                                return st = new FileReader,
                                    _t.abrupt("return", new (J())(function(Ge) {
                                            st.addEventListener("load", function() {
                                                Ge(dt({
                                                    url: st.result
                                                }, Be))
                                            }),
                                                st.readAsDataURL(Be.file)
                                        }
                                    ));
                            case 7:
                            case "end":
                                return _t.stop()
                        }
                }, Ie)
            })),
                Rr.apply(this, arguments)
        }
        function Pr(Ie, Be, st) {
            var jt, _t, Ge = new (J())(function(bt, un) {
                    jt = bt,
                        _t = un
                }
            ), It = function() {
                Ie.off(Be, De),
                    Ie.off("error", ct),
                    _t(Pr.TIMEOUT_ERROR)
            }, cn = k()(It, st), ct = function(un) {
                Ie.off(Be, De),
                    _t(un),
                    clearTimeout(cn)
            }, De = function(un) {
                jt(un),
                    Ie.off("error", ct),
                    clearTimeout(cn)
            };
            return Ie.once(Be, De),
                Ie.once("error", ct),
                Ge
        }
        Pr.TIMEOUT_ERROR = new Error("timeout");
        function rt(Ie) {
            for (var Be = arguments.length, st = new Array(Be > 1 ? Be - 1 : 0), jt = 1; jt < Be; jt++)
                st[jt - 1] = arguments[jt];
            G()(st).call(st, function(_t) {
                try {
                    var Ge;
                    Ie[_t] = K()(Ge = Ie[_t]).call(Ge)
                } catch {}
            })
        }
        function ae(Ie, Be, st, jt) {
            var _t = Math.ceil((st - jt) / Be);
            return _t = Ie > _t ? _t : Ie,
                _t < 1 ? 1 : _t
        }
        function de(Ie, Be) {
            var st, jt = Ie.enableRecordAccess, _t = Ie.enableRecordPlay, Ge = Ie.enableRecordDelete, It = Ie.enableRecordDownload, cn = [{
                key: "ACCESS",
                value: jt,
                label: zt.i18n.t("cci.queue.policy.recording.dialog.access.permission.Access")
            }, {
                key: "PLAY",
                value: _t,
                label: zt.i18n.t("cci.queue.policy.recording.dialog.access.permission.Play")
            }, {
                key: "DOWNLOAD",
                value: It,
                label: zt.i18n.t("cci.queue.policy.recording.dialog.access.permission.Download")
            }, {
                key: "DELETE",
                value: Ge,
                label: zt.i18n.t("cci.queue.policy.recording.dialog.access.permission.Delete")
            }];
            return ee()(st = ne()(cn).call(cn, function(ct) {
                var De = ct.value;
                return De
            })).call(st, function(ct) {
                return Be ? ct[Be] : Kn.RECORDING_PERMISSION[ct.key]
            }).join(", ")
        }
        function ye(Ie) {
            var Be = {
                enableRecordAccess: !0,
                enableRecordPlay: !1,
                enableRecordDelete: !1,
                enableRecordDownload: !1
            };
            return G()(Ie).call(Ie, function(st) {
                st === Kn.RECORDING_PERMISSION.PLAY && (Be.enableRecordPlay = !0),
                st === Kn.RECORDING_PERMISSION.DOWNLOAD && (Be.enableRecordDownload = !0),
                st === Kn.RECORDING_PERMISSION.DELETE && (Be.enableRecordDelete = !0)
            }),
            Be || {}
        }
        function Le(Ie) {
            var Be = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1
                , st = null
                , jt = null
                , _t = null
                , Ge = null
                , It = null
                , cn = !1
                , ct = {
                wait: function() {
                    if (cn) {
                        if (It)
                            throw It;
                        if (Ge)
                            return Ge
                    }
                    return st || (st = new (J())(function(bt, un) {
                            jt = bt,
                                _t = un
                        }
                    )),
                        st
                },
                done: function(bt) {
                    cn || (Be && (cn = !0),
                        Ge = bt,
                    jt && jt(Ge),
                    !Be && (st = null))
                },
                fail: function(bt) {
                    cn || (Be && (cn = !0),
                        It = bt,
                    _t && _t(It),
                    !Be && (st = null))
                }
            };
            return function() {
                if (!st) {
                    for (var De, bt = {
                        done: ct.done,
                        fail: ct.fail
                    }, un = arguments.length, ur = new Array(un), _n = 0; _n < un; _n++)
                        ur[_n] = arguments[_n];
                    Ie.apply(void 0, x()(De = [bt]).call(De, ur))
                }
                return ct.wait()
            }
        }
        function Te(Ie) {
            return "." + Ie.toLowerCase().split(".").pop()
        }
        function be(Ie, Be, st) {
            return G()(Be).call(Be, function(jt) {
                var _t = q()(Ie).call(Ie, function(Ge) {
                    return st(Ge) === st(jt)
                });
                _t !== -1 ? ie()(Ie).call(Ie, _t, 1, jt) : Ie.push(jt)
            }),
                Ie
        }
        function me(Ie, Be) {
            return Oe()(Ie).call(Ie, function(st, jt) {
                return st[Be(jt)] = jt,
                    st
            }, {})
        }
        function He(Ie) {
            return new (J())(function(Be, st) {
                    var jt = new FileReader;
                    jt.readAsDataURL(Ie),
                        jt.onload = function() {
                            Be(jt.result)
                        }
                        ,
                        jt.onerror = function(_t) {
                            st(_t)
                        }
                }
            )
        }
        function Ct(Ie) {
            var Be = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            try {
                return dt(dt({}, Be), JSON.parse(Ie))
            } catch {
                return Be
            }
        }
        function wt() {
            switch ("production") {
                case "development":
                    return "https://devmp.zoomdev.us/";
                case "production":
                default:
                    return "https://marketplace.zoom.us/"
            }
        }
        function Bt(Ie) {
            var Be = window.zoomSdk.postJsMessage(Ie);
            Be && Be.catch(function() {})
        }
        function En(Ie, Be) {
            var st = "id=".concat(Ie);
            return Be && (st += "&initialVersion=".concat(Be)),
                window.__inPuppeteer,
                "/cci/multi/flow?".concat(st)
        }
        function Pe(Ie) {
            if (Mt()(Ie)) {
                var Be;
                return Oe()(Be = at()(Ie)).call(Be, function(st, jt) {
                    return st[Ie[jt]] = jt,
                        st
                }, {})
            }
            return Ie
        }
        function W(Ie) {
            var Be = document.createElement("div");
            Be.textContent = Ie,
                Be.classList.add("zm-sr-only"),
                Be.setAttribute("role", "alert");
            var st = document.getElementById("cci-app");
            st.appendChild(Be),
                k()(function() {
                    return st.removeChild(Be)
                }, 3e3)
        }
        function Ee(Ie, Be) {
            if (Ie === Be)
                return 0;
            for (var st = Ie.split("."), jt = Be.split("."), _t = Math.min(st.length, jt.length), Ge = 0; Ge < _t; Ge++) {
                if (Ce()(st[Ge]) > Ce()(jt[Ge]))
                    return 1;
                if (Ce()(st[Ge]) < Ce()(jt[Ge]))
                    return -1
            }
            return st.length > jt.length ? 1 : st.length < jt.length ? -1 : 0
        }
        var nt = function(Be, st) {
            var jt = Lt().getters.user
                , _t = jt.countryOrRegion
                , Ge = st || _t || "US";
            try {
                var It = gr.PhoneNumberUtil.getInstance()
                    , cn = It.parseAndKeepRawInput(Be, Ge);
                if (It.isValidNumber(cn))
                    return It.format(cn, gr.PhoneNumberFormat.E164);
                var ct = Ae()(Be).call(Be, "+");
                if (!ct) {
                    var De = It.parseAndKeepRawInput("+".concat(Be), Ge);
                    if (It.isValidNumber(De))
                        return It.format(De, gr.PhoneNumberFormat.E164)
                }
                return Be
            } catch {
                return Be
            }
        }
    }
    ,
    97951: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => $,
                defaultApiVersion: () => Y.defaultApiVersion,
                isAbsoluteURL: () => Y.isAbsoluteURL
            });
        var Y = a(56405)
            , J = a.n(Y);
        const $ = Y.request
    }
    ,
    85913: (pn, E, a) => {
        "use strict";
        a.r(E)
    }
    ,
    91635: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(ne) {
                return ne && ne.__esModule ? ne : {
                    default: ne
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.ServiceNowAdapter = void 0;
        const J = a(6372)
            , $ = Y(a(76709))
            , k = a(56405)
            , P = a(4439)
            , M = a(61367)
            , Q = a(30824)
            , O = a(53019)
            , F = a(14535)
            , D = a(19598)
            , z = a(28532)
            , G = a(68622)
            , V = a(80100)
            , K = a(5608)
            , te = Y(a(62940))
            , ee = $.default.getters["crm/getEngagement"];
        class pe {
            static myInstance;
            integrationCheckVersion = "v2";
            client = {};
            defaultConfig = {};
            bus = {};
            isVideoChannelEnabled = !0;
            videoChannelDisabledTips = "";
            smsChannelDisabledTips = "";
            isChatChannelEnabled = !0;
            performSearchResults = null;
            sizeConfig = V.snPanelSizeConfig;
            constructor() {}
            isScreenSharingEnabled;
            static async getInstance() {
                return pe.myInstance || (pe.myInstance = new pe),
                    pe.myInstance
            }
            init = async ({crmBus: X}) => {
                const x = this;
                this.bus = X,
                    pe.myInstance = this,
                    (0,
                        Q.setInitialDimensions)(x, M.PanelSizes.sm, [M.PanelSizes.md, M.PanelSizes.sm]),
                    this.getAgentInfo(),
                    window.addEventListener("message", x.listenEventsFromServiceNow),
                    window.addEventListener("beforeunload", function() {
                        window.removeEventListener("message", x.listenEventsFromServiceNow)
                    })
            }
            ;
            async listenEventsFromServiceNow(X) {
                try {
                    const x = await pe.getInstance()
                        , H = JSON.parse(X.data);
                    if (H.type && H.type === "OUTGOING_CALL") {
                        if ((0,
                            Q.getClickToDialInProgress)()) {
                            (0,
                                O.ServiceNowLogger)("[click-to-dial] already in progress, returning....");
                            return
                        }
                        if ((0,
                            Q.isInActiveEngagement)()) {
                            x.openDialPanel(),
                                (0,
                                    O.ServiceNowLogger)("[click-to-dial] isInActiveCall, returning..."),
                                x?.bus?.emit("notify", J.i18n.t("cci.crm.error.clickToDial"), "info");
                            return
                        }
                        (0,
                            Q.setClickToDialInProgress)(!0),
                            setTimeout( () => {
                                    (0,
                                        Q.setClickToDialInProgress)(!1)
                                }
                                , 1e4),
                            x.handleCommunicationEvent(H)
                    } else if (H.type === "AGENT_INFO") {
                        const q = {
                            id: H.agentInfo.agentId,
                            name: H.agentInfo.agentName,
                            email: H.agentInfo.agentEmail
                        };
                        $.default.commit("servicenow/setAgentInfo", q)
                    } else if (H.type === "WINDOW_DIMENSIONS") {
                        const q = {
                            width: H.dimensions.width,
                            height: H.dimensions.height
                        };
                        let _e = x.sizeConfig[M.PanelSizes.lg].baseWidth + V.SidebarWidths.COLLAPSED
                            , ie = x.sizeConfig[M.PanelSizes.lg].height;
                        q.width > M.AppWidthState.FULL && (ie = q.height - 150,
                            _e = q.width - 50),
                            x.resize(_e, ie)
                    }
                } catch (x) {
                    (0,
                        O.ServiceNowErrorLogger)("Error in listenEventsFromServiceNow ", x)
                }
            }
            async handleCommunicationEvent(X) {
                const x = await pe.getInstance();
                let H = "";
                if (X.p_num && X.p_num != "" && (H = X.p_num),
                X.type && X.type == "OUTGOING_CALL") {
                    H = X.data.metaData.phoneNumber;
                    const q = X?.data?.data
                        , {entity: _e, sysUserId: ie, interactionId: ze, interactionIMS: Oe} = this.extractEntityInfo(q);
                    if (ie != "" && _e != "") {
                        const at = (await this.findUserByEntitySysId(_e, ie))?.[0] || {}
                            , Sn = {
                            clickToDialInfo: {
                                interaction: {
                                    interactionId: ze,
                                    interactionIMS: Oe,
                                    entity: _e,
                                    sysUserId: ie
                                },
                                userInfo: {
                                    id: at?.id,
                                    entity: at.entity,
                                    userName: at.name || `${at.first_name ?? ""} ${at.last_name ?? ""}`.trim(),
                                    phoneNumber: H
                                }
                            }
                        };
                        (0,
                            Q.setAdditionalData)(Sn);
                        const Ce = {
                            id: at?.id,
                            name: at.name || `${at.first_name ?? ""} ${at.last_name ?? ""}`.trim(),
                            email: at?.email ?? "",
                            phone: (0,
                                D.formatE164Number)(H)
                        };
                        this.onDialOut(Ce, H),
                            this.openDialPanel()
                    }
                }
            }
            getAgentInfo() {
                const X = JSON.stringify({
                    event: "retreiveAgentInfo"
                });
                return window.parent.postMessage(X, "*"),
                    Promise.resolve({
                        agentId: "",
                        agentName: ""
                    })
            }
            async screenPopInteractionOutboundEngagement(X) {
                const {interactionId: x, entity: H, sysUserId: q} = X;
                this.screenPop({
                    query: `sysparm_query=sys_id=${x}`,
                    entity: "interaction",
                    interactionId: x
                });
                const _e = $.default.getters["servicenow/getAgentInfo"]
                    , ie = {
                    entity: H,
                    sysUserId: q,
                    interactionId: x,
                    contact: q,
                    assignedTo: _e?.id
                };
                await (0,
                    k.tryApiCatch)(z.updateInteraction, ie),
                    await (0,
                        D.delay)(1e3)
            }
            async beforeMakingOutBoundCall(X) {
                const x = await pe.getInstance()
                    , H = (0,
                    Q.getAdditionalData)();
                if (H?.clickToDialInfo?.interaction?.interactionId) {
                    await this.screenPopInteractionOutboundEngagement(H?.clickToDialInfo?.interaction);
                    const ie = H?.clickToDialInfo
                        , ze = {
                        engagement: {
                            engagementId: X?.engagementId
                        },
                        interaction: {
                            ...ie?.interaction
                        }
                    };
                    localStorage.setItem(X?.engagementId, JSON.stringify(ze)),
                        (0,
                            Q.resetAdditionalData)();
                    const Oe = `sysparm_query=sys_id=${ie?.userInfo?.id}`;
                    setTimeout( () => {
                            this.screenPop({
                                query: Oe,
                                entity: ie?.userInfo?.entity,
                                interactionId: ie?.interaction?.interactionId
                            })
                        }
                        , 3e3);
                    return
                }
                if (X.isSMS)
                    return;
                const _e = {};
                X.callTo ? (_e.phoneNumber = X.callTo,
                    _e.type = "Phone") : (_e.email = X.email,
                    _e.type = "zcc_video");
                try {
                    const [,ie] = await (0,
                        k.tryApiCatch)(z.createInteraction, _e)
                        , ze = ie
                        , {interactionId: Oe, interactionIMS: Cn} = ze
                        , Sn = (ze.searchQueryList || "").split(",")[0];
                    x.screenPop({
                        query: `sysparm_query=sys_id=${Oe}`,
                        entity: "interaction",
                        interactionId: Oe
                    });
                    let Ce = `sysparm_query=sys_id=-1^${Sn}=${X.callTo}`
                        , wn = [];
                    if (!ze?.users && (X.email || X.callTo))
                        wn = X.email ? await this.findUserByEmail(X.email) : await this.findUserByPhoneNumber(X.callTo || "");
                    else {
                        const it = en => en.name ? en.name : en.last_name ? en.last_name : en.phone || en.mobile_phone
                            , Ne = ze?.users || {}
                            , Gt = [];
                        Object.keys(Ne).forEach(en => {
                                (Ne[en] || []).forEach(Tt => {
                                        const vr = {
                                            ...Tt,
                                            id: Tt.sys_id,
                                            interactionId: Oe,
                                            entity: en,
                                            userEntity: en,
                                            name: it(Tt)
                                        };
                                        Gt.push(vr)
                                    }
                                )
                            }
                        ),
                            wn = Gt
                    }
                    const Ae = X.callTo ? k.QUEUE_CHANNEL_TYPE.VOICE : k.QUEUE_CHANNEL_TYPE.LIVE_VIDEO
                        , nr = (0,
                        Q.getCrmStoreConfig)(Ae)
                        , mt = {
                        interaction: {
                            interactionId: Oe,
                            interactionIMS: Cn
                        },
                        outboundCallOrigin: !0,
                        engagement: {
                            engagementId: X?.engagementId
                        }
                    }
                        , {noMatch: jn} = nr?.searchConfigs || {};
                    let ve = jn?.entity;
                    ve = ve === "contact" ? "customer_contact" : ve;
                    const or = $.default.getters["crm/getEngagementPropertyValue"]({
                        engagementId: X?.engagementId,
                        property: "contactsMap"
                    })?.selectedUser || {}
                        , pt = or?.id;
                    if (pt && wn.length > 0 && (wn = wn.filter(it => it.id === pt),
                    wn.length === 0)) {
                        const it = or?.entity ? await this.findUserByEntitySysId(or?.entity, pt) : await this.findBySysId(pt);
                        it.length && (wn = [{
                            ...it[0]
                        }])
                    }
                    switch (wn.length) {
                        case 0:
                            Ce = this.getQueryByEntity({
                                searchQuery: Sn,
                                email: X.email,
                                phoneNum: X.callTo
                            }),
                                setTimeout( () => {
                                        x.screenPop({
                                            entity: ve || "sys_user",
                                            query: Ce,
                                            interactionId: Oe
                                        })
                                    }
                                    , 3e3);
                            break;
                        case 1:
                            Ce = `sysparm_query=sys_id=${wn[0].id}`,
                                setTimeout( () => {
                                        x.screenPop({
                                            entity: wn[0].entity || "sys_user",
                                            query: Ce,
                                            interactionId: Oe
                                        })
                                    }
                                    , 3e3);
                            break;
                        default:
                            this.bus.emit("add-users", wn, X?.engagementId);
                            break
                    }
                    localStorage.setItem(X.engagementId, JSON.stringify(mt));
                    const Ke = {
                        assignedTo: $.default.getters["servicenow/getAgentInfo"]?.id
                    };
                    wn.length === 1 && (Ke.entity = wn[0].entity || "sys_user",
                        Ke.contact = wn[0].id,
                        Ke.sysUserId = wn[0].id),
                        x.updateInteractionFields(Oe, Ke),
                        this.getTicketCreationDetailsAndProcessTicketCreationFormScreenpop({
                            engagementId: X?.engagementId,
                            channelType: X?.channelType
                        })
                } catch (ie) {
                    console.error("Error on making outbound call >>>", ie)
                }
            }
            async handleOutboundVideo({engagementId: X, email: x, phoneNumber: H}) {
                if (!x) {
                    console.log("No email for outbound video, handleOutboundVideo return");
                    return
                }
                this.beforeMakingOutBoundCall({
                    engagementId: X,
                    email: x,
                    contact: "",
                    assignedTo: "",
                    channelType: "Video"
                })
            }
            async handleNoMatchScenario({phoneNumber: X, email: x, channel: H, engagementId: q}) {
                if (!X)
                    return;
                const _e = (0,
                    Q.getCrmStoreConfig)(H)?.searchConfigs?.noMatch || {};
                return await (0,
                    K.processNoMatchScenario)(_e, X),
                    Promise.resolve()
            }
            handleIncomingCall({incomingPhoneNumber: X, engagementId: x}) {
                this.openDialPanel()
            }
            handleIncomingWebChat({email: X, engagementId: x}) {
                this.openDialPanel()
            }
            handleIncomingVideo({email: X, engagementId: x}) {
                this.openDialPanel()
            }
            handleIncomingSmsChat({incomingPhoneNumber: X, engagementId: x}) {
                this.openDialPanel()
            }
            async handleOutboundSmsChat({engagementId: X, fromNumber: x}) {
                const H = await pe.getInstance()
                    , q = (0,
                    Q.getAdditionalData)();
                if (q?.clickToDialInfo?.interaction?.interactionId) {
                    await this.screenPopInteractionOutboundEngagement(q?.clickToDialInfo?.interaction);
                    const ze = q?.clickToDialInfo
                        , Oe = {
                        engagement: {
                            engagementId: X
                        },
                        interaction: {
                            ...ze?.interaction
                        }
                    };
                    localStorage.setItem(X, JSON.stringify(Oe)),
                        (0,
                            Q.resetAdditionalData)();
                    const Cn = `sysparm_query=sys_id=${ze?.userInfo?.id}`;
                    this.screenPop({
                        query: Cn,
                        entity: ze?.userInfo?.entity,
                        interactionId: ze?.interaction?.interactionId
                    });
                    return
                }
                const _e = $.default.getters["crm/getEngagementPropertyValue"]({
                    engagementId: X,
                    property: "contactsMap"
                })?.selectedUser || {}
                    , ie = {
                    phoneNumber: x,
                    email: _e?.email,
                    type: "zcc_sms"
                };
                try {
                    const [,ze] = await (0,
                        k.tryApiCatch)(z.createInteraction, ie)
                        , Oe = ze
                        , {interactionId: Cn, interactionIMS: at} = Oe
                        , Sn = {
                        interaction: {
                            interactionId: Cn,
                            interactionIMS: at
                        },
                        engagement: {
                            engagementId: X
                        }
                    };
                    localStorage.setItem(X, JSON.stringify(Sn)),
                        this.screenPop({
                            interactionId: Cn,
                            entity: "interaction",
                            query: `sysparm_query=sys_id=${Cn}`
                        }),
                        setTimeout( () => {
                                this.screenPop({
                                    interactionId: Cn,
                                    entity: _e?.entity || "sys_user",
                                    query: _e?.id ? `sysparm_query=sys_id=${_e?.id}` : `sysparm_query=sys_id=-1^mobile_phone=${x}`
                                })
                            }
                            , 3e3);
                    const wn = {
                        assignedTo: $.default.getters["servicenow/getAgentInfo"]?.id
                    };
                    _e?.id && (wn.entity = _e?.entity || "sys_user",
                        wn.contact = _e?.id,
                        wn.sysUserId = _e?.id),
                        H.updateInteractionFields(Cn, wn),
                        this.getTicketCreationDetailsAndProcessTicketCreationFormScreenpop({
                            engagementId: X,
                            channelType: "Sms"
                        })
                } catch (ze) {
                    console.error(ze)
                }
            }
            async getWindowDimentions() {
                const X = JSON.stringify({
                    event: "getWindowDimensions"
                });
                window.parent.postMessage(X, "*")
            }
            resize(X, x) {
                const H = JSON.stringify({
                    event: "resize",
                    height: x,
                    width: X
                });
                window.parent.postMessage(H, "*")
            }
            toggleWidth() {
                return (0,
                    Q.toggleWidthUtil)(this),
                    Promise.resolve()
            }
            onDialOut(X, x) {
                (pe.myInstance || this).bus.emit("voice-dialout", X, `${x}`)
            }
            openDialPanel() {
                const X = JSON.stringify({
                    event: "showCTI"
                });
                window.parent.postMessage(X, "*")
            }
            async searchByUser(X={}) {
                let x = [];
                const [H,q] = await (0,
                    k.tryApiCatch)(z.searchUser, X);
                if (q) {
                    const _e = q
                        , ie = []
                        , ze = Oe => Oe.name ? Oe.name : Oe.last_name ? Oe.last_name : Oe.phone || Oe.mobile_phone;
                    Object.keys(_e).forEach(Oe => {
                            const Cn = _e[Oe] || [];
                            Array.isArray(Cn) && Cn.forEach(at => {
                                    const Sn = {
                                        ...at,
                                        entity: Oe,
                                        userEntity: Oe,
                                        name: ze(at)
                                    };
                                    ie.push(Sn)
                                }
                            )
                        }
                    ),
                        x = await (0,
                            K.convertSNUserToCRMUser)(ie)
                }
                return H && console.error("Error on searchByUser >>>> ", H),
                    x?.length > 0 ? x : []
            }
            async findUserByPhoneNumber(X, x) {
                return await this.findByPhone(X)
            }
            async findUserByEmail(X, x) {
                return await this.searchByUser({
                    email: X
                })
            }
            async findUserByName(X, x) {
                const H = {
                    name: X
                };
                return await this.searchByUser(H)
            }
            findBy(X) {
                throw new Error("Method not implemented.")
            }
            async findBySysId(X) {
                const x = {
                    sysId: X
                };
                return await this.searchByUser(x)
            }
            async findUserByEntitySysId(X, x) {
                const H = {
                    entity: X,
                    sysId: x
                };
                return this.searchByUser(H)
            }
            async findByPhone(X) {
                const x = {
                    phone: X
                };
                return await this.searchByUser(x)
            }
            static getView(X) {
                switch (X) {
                    case "Engagement":
                        return te.default;
                    default:
                        return null
                }
            }
            getQueryByEntity(X) {
                let x = "";
                const H = this.getConfigByChannelType(X?.engagement?.channelType)
                    , {noMatch: q} = H?.searchConfigs || {}
                    , _e = q?.entity;
                if (X.phoneNum)
                    x = `sysparm_query=sys_id=-1^${X.searchQuery}=${X.phoneNum}`;
                else if (X.email) {
                    const ie = X.email.split("@")[0];
                    x = `sysparm_query=sys_id=-1^email=${X.email}^last_name=${ie}`
                }
                return x
            }
            getConfigByChannelType(X) {
                X = typeof X == "string" ? X.toLowerCase() : X;
                const x = {
                    [F.ChannelTypes.VOICE]: k.QUEUE_CHANNEL_TYPE.VOICE,
                    [F.ChannelTypes.VIDEO]: k.QUEUE_CHANNEL_TYPE.LIVE_VIDEO,
                    [F.ChannelTypes.CHAT]: k.QUEUE_CHANNEL_TYPE.CHAT,
                    [F.ChannelTypes.SMS]: k.QUEUE_CHANNEL_TYPE.SMS
                };
                return (0,
                    Q.getCrmStoreConfig)(x[X])
            }
            processScreenPopMatching(X) {
                const x = X.interaction.interactionId
                    , H = X.ivrMatchList || []
                    , q = X.usersMatchList || [];
                this.screenPop({
                    interactionId: x,
                    entity: "interaction",
                    query: `sysparm_query=sys_id=${x}`
                }),
                H.length === 1 && setTimeout( () => {
                        this.screenPop({
                            entity: H[0].entity,
                            query: `sysparm_query=sys_id=${H[0].id}`,
                            interactionId: x
                        })
                    }
                    , 5e3);
                const _e = X?.engagement?.engagementId
                    , ie = this.getConfigByChannelType(X?.engagement?.channelType)
                    , {noMatch: ze} = ie?.searchConfigs || {};
                let Oe = ze?.entity;
                const Cn = ze?.noMatchTimeOfAction || "nomatch_caller_search";
                Oe = Oe === "contact" ? "customer_contact" : Oe;
                const at = ee(_e);
                switch (q.length) {
                    case 0:
                        Oe !== "no_action" && (Cn === "nomatch_caller_search" || Cn === "nomatch_both" && H.length === 0 || Cn === "nomatch_caller_match_context" && H.length > 0) && setTimeout( () => {
                                this.screenPop({
                                    interactionId: x,
                                    entity: Oe || "sys_user",
                                    query: this.getQueryByEntity(X)
                                })
                            }
                            , 3e3);
                        break;
                    case 1:
                        const wn = q[0];
                        setTimeout( () => {
                                this.screenPop({
                                    interactionId: x,
                                    entity: wn.entity,
                                    query: `sysparm_query=sys_id=${wn.id}`
                                })
                            }
                            , 3e3),
                            $.default.dispatch("crm/setSelectedUser", {
                                engagementId: _e,
                                userId: wn.id
                            }),
                            $.default.dispatch("crm/setCrmUsersDataCache", {
                                engagementId: _e,
                                screenPopUser: wn
                            });
                        break;
                    default:
                        if (this.bus.emit("add-users", q, _e),
                            $.default.dispatch("crm/setCrmUsersDataCache", {
                                engagementId: _e,
                                screenPopUser: q[0]
                            }),
                        H.length === 1 && H[0]?.caller_id) {
                            const Ae = q.filter(nr => nr.id === H[0]?.caller_id);
                            if (Ae.length > 0) {
                                const nr = Ae[0].id
                                    , mt = "sys_user";
                                setTimeout( () => {
                                        this.screenPop({
                                            entity: mt,
                                            query: `sysparm_query=sys_id=${nr}`,
                                            interactionId: x
                                        })
                                    }
                                    , 3e3),
                                    $.default.dispatch("crm/setSelectedUser", {
                                        engagementId: _e,
                                        user_sys_id: nr
                                    }),
                                    at.setSelectedUser(nr),
                                    $.default.dispatch("crm/setCrmUsersDataCache", Ae[0])
                            }
                        }
                        break
                }
                const Ce = {
                    assignedTo: $.default.getters["servicenow/getAgentInfo"]?.id
                };
                q.length === 1 && (Ce.entity = "sys_user",
                    Ce.contact = q[0].id,
                    Ce.sysUserId = q[0].id),
                    this.updateInteractionFields(x, Ce)
            }
            async updateInteractionData(X) {
                const x = X?.engagementId || X?.engagement?.engagementId
                    , H = X?.channelType || X?.engagement?.channelType
                    , q = {
                    engagement: {
                        engagementId: x,
                        channelType: H
                    },
                    interaction: {
                        interactionId: X.interaction_sys_id || X.interaction.interaction_sys_id,
                        interactionIMS: X.interaction_ims || X.interaction.interaction_ims,
                        interactionState: X.interaction_state || X.interaction.interaction_state
                    }
                };
                if (X.users) {
                    const _e = X.users || {};
                    let ie = [];
                    Object.keys(_e).length && (ie = await (0,
                        K.formatEntityRecords)(_e),
                        this.bus.emit("add-users", ie, x))
                }
                q?.engagement?.engagementId && localStorage.setItem(q?.engagement?.engagementId, JSON.stringify(q))
            }
            async updateInteractionFields(X, x) {
                const H = {
                    ...x,
                    interactionId: X
                };
                await (0,
                    k.tryApiCatch)(z.updateInteraction, H)
            }
            async updatePopupCreateData(X) {
                const x = X.phoneNum
                    , H = X.email
                    , _e = (X.searchQueryList || "").split(",")[0]
                    , ie = X?.engagementId || X?.engagement?.engagementId
                    , ze = X.ivrMatchList || {};
                let Oe = [];
                Object.keys(ze).length && (Oe = await (0,
                    K.formatEntityRecords)(ze));
                const Cn = X.users || {};
                let at = [];
                Object.keys(Cn).length && (at = await (0,
                    K.formatEntityRecords)(Cn));
                const Sn = JSON.parse(localStorage.getItem(ie) || "{}");
                if (Sn?.interaction?.interactionId) {
                    const Ce = {
                        ivrMatchList: Oe,
                        usersMatchList: at,
                        phoneNum: x,
                        email: H,
                        searchQuery: _e,
                        engagement: Sn?.engagement,
                        interaction: Sn?.interaction
                    };
                    this.processScreenPopMatching(Ce)
                }
            }
            async getTicketCreationDetailsAndProcessTicketCreationFormScreenpop({engagementId: X, channelType: x}) {
                (0,
                    O.ServiceNowLogger)("getTicketCreationDetails", {
                    engagementId: X,
                    channelType: x
                });
                try {
                    const H = {
                        engagementId: X,
                        channelType: x
                    }
                        , [,q] = await (0,
                        k.tryApiCatch)(z.getCaseScreenPopData, H);
                    (0,
                        O.ServiceNowLogger)("getTicketCreationDetails response", q),
                        this.processTicketCreationFormScreenpop(q, M.EngagementDirections.OUTBOUND)
                } catch (H) {
                    (0,
                        O.ServiceNowErrorLogger)("Error while getting Ticket creation details ", H)
                }
            }
            async processTicketCreationFormScreenpop(X, x=M.EngagementDirections.INBOUND) {
                const H = X?.ticket || {}
                    , q = this.getConfigByChannelType(X?.engagement?.channelType)
                    , {enableTicketCreation: _e, ticketCreationTrigger: ie} = q?.ticketConfigs || {}
                    , ze = (0,
                    K.generateCaseCreationQuery)(H?.ticketFields)
                    , Oe = _e && ie && (ie === V.AUTO_TICKET_CREATION_EVENTS.INBOUND_OUTBOUND || x === ie);
                (0,
                    O.ServiceNowLogger)("processTicketCreationFormScreenpop", H?.entity, ze, Oe, ie, x),
                H?.entity && ze && Oe && this.screenPop({
                    entity: H?.entity,
                    query: ze
                })
            }
            async updateUserForInteraction(X, x) {
                const H = JSON.parse(localStorage.getItem(x) || "{}")
                    , q = $.default.getters["servicenow/getAgentInfo"];
                if (console.log("updateUserForInteraction >>> ", x, q, H, X),
                    H?.interaction?.interactionId) {
                    const _e = H?.interaction?.interactionId
                        , ie = {
                        sysUserId: X.id,
                        entity: X.entity,
                        interactionId: _e,
                        contact: X.id,
                        assignedTo: q?.id
                    };
                    await (0,
                        k.tryApiCatch)(z.updateInteraction, ie);
                    const ze = `sysparm_query=sys_id=${X.id}`;
                    this.screenPop({
                        interactionId: _e,
                        entity: X.entity,
                        query: ze
                    })
                }
            }
            processScreenPop(X) {
                throw new Error("Method not implemented.")
            }
            extractEntityInfo(X) {
                let x = ""
                    , H = ""
                    , q = ""
                    , _e = "";
                if (X.length > 0) {
                    const ie = X[X.length - 1];
                    ie.entity === "interaction" && (_e = ie.value,
                        q = ie.query.slice(7));
                    const ze = X[0];
                    x = ze.entity,
                        H = ze.query.slice(7)
                }
                return {
                    entity: x,
                    sysUserId: H,
                    interactionId: q,
                    interactionIMS: _e
                }
            }
            async processWrapup(X) {
                await (0,
                    G.processWrapup)(X)
            }
            async addNoteToTicket(X, x) {
                await this.saveNotes(X, [], x)
            }
            async saveNotes(X, x, H) {
                const q = {
                    notes: X,
                    smartNotes: x,
                    interactionId: H
                }
                    , _e = []
                    , ie = []
                    , [ze,Oe] = await (0,
                    k.tryApiCatch)(z.addNotes, q);
                _e.push(ze),
                    ie.push(Oe)
            }
            async createWrapUpObjectRecord(X) {
                const x = X.record
                    , H = {
                    agent: x?.agentName,
                    agent_id: x?.agentId,
                    agent_name: x?.agentName,
                    agent_extension: x?.agentExtension,
                    customer: x?.callerName,
                    customer_phone_number: x?.customer_phone_number,
                    call_start_time: x?.callStartTime,
                    call_end_time: x?.callEndTime,
                    call_duration: x?.callDuration,
                    call_queue: x?.callQueue,
                    call_type: x?.callType,
                    recording_url: x?.callRecordingURL,
                    disposition_code: x?.dispositionCode,
                    wrap_up_duration: x?.wrapUpTimeDuration,
                    interaction: X?.interactionId,
                    engagement_id: X?.engagementId,
                    channel: x.type,
                    email: x.email
                }
                    , q = []
                    , _e = []
                    , [ie,ze] = await (0,
                    k.tryApiCatch)(z.addCallLog, H);
                return q.push(ie),
                    _e.push(ze),
                    {
                        dataContainer: _e,
                        errorMessages: q
                    }
            }
            screenPop(X) {
                const {entity: x, query: H, interactionId: q} = X;
                if ((0,
                    O.ServiceNowLogger)(" screenPop ", {
                    entity: x,
                    query: H,
                    interactionId: q
                }),
                x && x !== "" && x !== "no_action")
                    if (q) {
                        const _e = JSON.stringify({
                            entity: x,
                            interaction_sys_id: q,
                            query: H,
                            event: "openServiceNowForm"
                        });
                        window.parent.postMessage(_e, "*")
                    } else {
                        const _e = JSON.stringify({
                            entity: x,
                            query: H,
                            event: "openServiceNowForm"
                        });
                        window.parent.postMessage(_e, "*")
                    }
            }
            screenPopUser(X) {}
            getScreenSizes() {
                return this.sizeConfig
            }
            async setSize(X, x) {
                try {
                    const H = this.sizeConfig[X].baseWidth
                        , q = this.sizeConfig[X].height;
                    let _e, ie = M.RightBarAieaWith.CLOSE;
                    x === M.AppWidthState.FULL ? _e = V.SidebarWidths.EXPANDED : x === M.AppWidthState.COLLAPSED ? _e = V.SidebarWidths.COLLAPSED : x === M.AppWidthState.FULL_WITH_AIEA ? (_e = V.SidebarWidths.EXPANDED,
                        ie = M.RightBarAieaWith.OPEN) : (_e = V.SidebarWidths.COLLAPSED,
                        ie = M.RightBarAieaWith.OPEN),
                    X === M.PanelSizes.lg && (_e = V.SidebarWidths.COLLAPSED,
                        ie = M.RightBarAieaWith.CLOSE);
                    const ze = H + _e + ie;
                    X === M.PanelSizes.lg ? this.getWindowDimentions() : this.resize(ze, q),
                        this.bus.emit("set-panel-size", X)
                } catch (H) {
                    console.error("Error setting size", X, H)
                }
            }
            getEngagementContext(X) {
                const x = $.default.getters["crm/getEngagementPropertyValue"]({
                    engagementId: X,
                    property: "contactsMap"
                }) || {}
                    , {selectedUser: H} = x
                    , q = []
                    , _e = [];
                H?.id && q.push({
                    id: H.id,
                    entity: H.userEntity
                });
                const ie = JSON.parse(localStorage.getItem(X) || "{}");
                return ie?.interaction?.interactionId && _e.push({
                    crm_id: ie.interaction.interactionId,
                    value: "",
                    field: "",
                    entity: "interaction",
                    type: P.EngagementFields.RelateTo
                }),
                    {
                        crmType: P.CRMS.ServiceNow,
                        callerSearch: q,
                        contextSearch: _e
                    }
            }
            async setEngagementContext(X, x) {
                const {crmType: H, callerSearch: q, contextSearch: _e} = x || {};
                if (console.log("setEngagementContext call", X, x),
                H !== P.CRMS.ServiceNow) {
                    console.error("Error while setting context, CRM mismatch", H);
                    return
                }
                if (Array.isArray(q) && q.length && q[0]?.id) {
                    const ie = await this.findBySysId(q[0].id)
                        , ze = Array.isArray(ie) && ie.length ? ie[0] : null
                        , Oe = $.default.getters["crm/getEngagementPropertyValue"]({
                        engagementId: X,
                        property: "contactsMap"
                    })?.users || [];
                    ze?.id && (Oe.find(at => at.id === ze.id) || $.default.dispatch("crm/setContactsMap", {
                        users: [...Oe, ze],
                        engagementId: X
                    }),
                        $.default.dispatch("crm/setSelectedUser", {
                            engagementId: X,
                            userId: ze.id
                        }))
                }
                if (Array.isArray(_e) && _e.length && _e[0]?.crm_id) {
                    const ie = _e[0].crm_id;
                    this.screenPop({
                        query: `sysparm_query=sys_id=${ie}`,
                        entity: "interaction",
                        interactionId: ie
                    })
                }
            }
        }
        E.ServiceNowAdapter = pe
    },
    28532: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(D) {
                return D && D.__esModule ? D : {
                    default: D
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.HTTP_METHODS = void 0,
            E.addCallLog = k,
            E.addNotes = P,
            E.createInteraction = M,
            E.updateInteraction = Q,
            E.searchUser = O,
            E.getCaseScreenPopData = F;
        const J = Y(a(97951));
        var $;
        (function(D) {
                D.GET = "get",
                    D.POST = "post",
                    D.PUT = "put",
                    D.DELETE = "delete"
            }
        )($ || (E.HTTP_METHODS = $ = {}));
        function k(D) {
            return (0,
                J.default)({
                url: "/service-now/activitylog",
                method: $.POST,
                data: D
            })
        }
        function P(D) {
            return (0,
                J.default)({
                url: "/service-now/interaction/" + D.interactionId + "/addNotes",
                method: $.POST,
                data: {
                    notes: D.notes,
                    smartNotes: D.smartNotes
                }
            })
        }
        function M(D) {
            return (0,
                J.default)({
                url: "/service-now/interaction",
                method: $.POST,
                data: D
            })
        }
        function Q(D) {
            return (0,
                J.default)({
                url: "/service-now/interaction",
                method: $.PUT,
                data: D
            })
        }
        function O(D) {
            return (0,
                J.default)({
                url: "/service-now/users",
                method: $.GET,
                params: D
            })
        }
        function F(D) {
            return (0,
                J.default)({
                url: "/service-now/case/screen-pop-data",
                method: $.GET,
                params: D
            })
        }
    },
    68622: function(pn, E, a) {
        "use strict";
        var Y = this && this.__createBinding || (Object.create ? function(V, K, te, ee) {
                    ee === void 0 && (ee = te);
                    var pe = Object.getOwnPropertyDescriptor(K, te);
                    (!pe || ("get"in pe ? !K.__esModule : pe.writable || pe.configurable)) && (pe = {
                        enumerable: !0,
                        get: function() {
                            return K[te]
                        }
                    }),
                        Object.defineProperty(V, ee, pe)
                }
                : function(V, K, te, ee) {
                    ee === void 0 && (ee = te),
                        V[ee] = K[te]
                }
        )
            , J = this && this.__setModuleDefault || (Object.create ? function(V, K) {
                    Object.defineProperty(V, "default", {
                        enumerable: !0,
                        value: K
                    })
                }
                : function(V, K) {
                    V.default = K
                }
        )
            , $ = this && this.__importStar || function() {
            var V = function(K) {
                return V = Object.getOwnPropertyNames || function(te) {
                    var ee = [];
                    for (var pe in te)
                        Object.prototype.hasOwnProperty.call(te, pe) && (ee[ee.length] = pe);
                    return ee
                }
                    ,
                    V(K)
            };
            return function(K) {
                if (K && K.__esModule)
                    return K;
                var te = {};
                if (K != null)
                    for (var ee = V(K), pe = 0; pe < ee.length; pe++)
                        ee[pe] !== "default" && Y(te, K, ee[pe]);
                return J(te, K),
                    te
            }
        }();
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.processWrapup = void 0;
        const k = $(a(76709))
            , P = a(56405)
            , M = a(67918)
            , Q = a(2117)
            , O = a(33332)
            , F = a(35878)
            , D = a(30824);
        function z(V) {
            switch (V) {
                case "phone":
                    return P.QUEUE_CHANNEL_TYPE.VOICE;
                case "chat":
                    return P.QUEUE_CHANNEL_TYPE.CHAT;
                case "sms":
                    return P.QUEUE_CHANNEL_TYPE.SMS;
                case "video":
                    return P.QUEUE_CHANNEL_TYPE.LIVE_VIDEO;
                default:
                    console.log(`processWrapup no match for channel: ${V}`);
                    break
            }
            return null
        }
        const G = async V => {
                const K = await (0,
                    F.getCRMInstance)();
                if (!K) {
                    console.error("Failed to retrieve client in processWrapup");
                    return
                }
                const te = k.default.getters["servicenow/getAgentInfo"]
                    , ee = k.default.getters["crm/getEngagementPropertyValue"]
                    , pe = V.engagementId
                    , {interaction: ne} = JSON.parse(localStorage.getItem(pe) || "{}")
                    , X = ne?.interactionId
                    , x = () => {
                    (0,
                        D.resetAdditionalData)(),
                        console.log("resetStore engagementId >>> ", pe),
                    pe && localStorage.removeItem(pe)
                }
                    , H = ee({
                    engagementId: pe,
                    property: "contactsMap"
                })
                    , q = H?.selectedUser || {}
                    , _e = H?.currentPhoneNumber
                    , ie = te?.name
                    , ze = te?.id
                    , Oe = q?.name
                    , Cn = q?.id
                    , at = q?.phone;
                let Sn = q?.email || "";
                const Ce = ee({
                    engagementId: V.engagementId,
                    property: "notes"
                }) || []
                    , wn = (0,
                    O.generateSmartNotesString)(pe);
                if (wn) {
                    const U = `
[ Generated by Zoom AI Expert Assist ]

`
                        , Mt = `

[ End of Note Generated by Zoom AI Expert Assist]
`
                        , Kn = k.default.getters.profiles?.timezone || void 0;
                    for (let In = 0; In < Ce.length; In++)
                        if (Ce[In].type && Ce[In].modifyTime === Ce[In].createTime)
                            Ce[In].notes = U + Ce[In].notes + Mt;
                        else {
                            const tn = `${(0,
                                P.toLocaleDate)(Ce[In].createTime, (0,
                                P.getFormatStr)(!1, " \xB7 "), Kn)} - ${Ce[In].createByUserName}
`;
                            Ce[In].notes = tn + Ce[In].notes
                        }
                }
                Ce.length && await K?.saveNotes(Ce.map(U => U.notes), [wn], X);
                const Ae = ee({
                    engagementId: pe,
                    property: "selectedDisposition"
                }) || {}
                    , nr = ee({
                    engagementId: pe,
                    property: "skipDisposition"
                }) || ""
                    , mt = ee({
                    engagementId: pe,
                    property: "isVoiceManuallyRecorded"
                }) || !1
                    , jn = ee({
                    engagementId: pe,
                    property: "isAutomaticCallRecordingEnabled"
                }) || !1
                    , ve = Math.abs(Date.now() - V?.completeTs) / 1e3
                    , or = ["outbound", "OUT_BOUND"].includes(V?.direction) ? "outbound" : "inbound"
                    , pt = V.from
                    , je = V.to;
                console.log("onwrapup currentActiveTask >>> ", V);
                let Ke = "";
                V?.tkType === "sms" && (Ke = V?.customerName);
                const it = or === "outbound" && V?.tkType !== "sms" ? pt : je
                    , Ne = or === "outbound" && V?.tkType !== "sms" ? je : pt
                    , Gt = (V?.completeTs - V?.acceptTs) / 1e3
                    , en = encodeURI(window.location.hostname)
                    , rn = V?.callId ? `https://${en}/cci/multi/recording-cli?sid=${V.callId}` : ""
                    , Tt = z(V.tkType);
                if (Tt === null)
                    return;
                const vr = (0,
                    D.getCrmStoreConfig)(Tt || P.QUEUE_CHANNEL_TYPE.VOICE)
                    , rr = !!vr?.callLogConfigs?.autoUpdateCallURL
                    , kr = !!vr?.callLogConfigs?.autoLog;
                let Re = !!vr?.callLogConfigs?.autoSaveTranscript;
                const An = (mt || jn) && rr
                    , gn = (V?.autoCloseInfo?.defaultDisposition || k.storeUtils.crm.getDefaultDisposition())?.name || "-"
                    , Qe = V?.autoCloseInfo?.selectedDispositionName
                    , ar = (0,
                    D.getUpgradeInfo)();
                let zt = V?.tkType === "video" ? "zcc_video" : (0,
                    M.upperFirst)(V?.tkType || "");
                ar && (zt = ar),
                    V?.tkType === "chat" ? Sn = V?.task?.userInfo?.email : V?.tkType === "video" && !Sn && (Sn = V?.customerName);
                const Zt = {
                    agentName: ie,
                    agentId: ze,
                    agentExtension: it || "",
                    callerNumber: Ne || _e || "",
                    callerName: Oe || Ne || _e || Sn,
                    callerId: Cn,
                    type: zt,
                    email: Sn || "",
                    custemer: Oe,
                    interactionId: X,
                    callType: or,
                    callDuration: Gt,
                    callStartTime: V?.acceptTs ? new Date(V?.acceptTs) : "",
                    callEndTime: V?.completeTs ? new Date(V?.completeTs) : "",
                    callRecordingURL: An && rn || "",
                    callQueue: V?.queueName || "",
                    customer_phone_number: Ne || at || _e || Ke,
                    wrapUpTimeDuration: ve,
                    notes: Ce,
                    dispositionCode: nr ? "" : Qe || Ae?.label || gn
                };
                kr && await K?.createWrapUpObjectRecord({
                    record: Zt,
                    engagementId: pe,
                    interactionId: X
                });
                const Lt = {
                    entity: "sys_user",
                    status: "closed_complete",
                    sysUserId: Cn || "",
                    contact: Cn,
                    assignedTo: te?.id
                };
                let gr = Tt === P.QUEUE_CHANNEL_TYPE.CHAT || Tt === P.QUEUE_CHANNEL_TYPE.SMS;
                if (!gr) {
                    const {originalChatChannel: U, autoSaveTranscriptEnabled: Mt} = await (0,
                        Q.detectSource)({
                        engagementId: pe,
                        currentChannel: Tt
                    });
                    U && (gr = !0,
                        Re = Mt)
                }
                gr && Re && (Lt.engagementId = pe,
                    Lt.saveTranscript = !0);
                const Mn = Tt === P.QUEUE_CHANNEL_TYPE.LIVE_VIDEO && gr;
                (or === "outbound" || Mn) && await K?.updateInteractionFields(X, Lt),
                    x()
            }
        ;
        E.processWrapup = G
    },
    80100: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.AUTO_TICKET_CREATION_EVENTS = E.snPanelSizeConfig = E.SidebarWidths = E.ServiceNowSessionMenuActions = void 0;
        const Y = a(61367);
        var J;
        (function(P) {
                P.ENGAGEMENT = "Engagement"
            }
        )(J || (E.ServiceNowSessionMenuActions = J = {}));
        var $;
        (function(P) {
                P[P.EXPANDED = 240] = "EXPANDED",
                    P[P.COLLAPSED = 48] = "COLLAPSED"
            }
        )($ || (E.SidebarWidths = $ = {})),
            E.snPanelSizeConfig = {
                [Y.PanelSizes.sm]: {
                    isSizeEnabled: !0,
                    baseWidth: 448,
                    height: 600
                },
                [Y.PanelSizes.md]: {
                    isSizeEnabled: !0,
                    baseWidth: 448,
                    height: 700
                },
                [Y.PanelSizes.lg]: {
                    isSizeEnabled: !0,
                    baseWidth: 1104,
                    height: 700
                }
            };
        var k;
        (function(P) {
                P.OUTBOUND = "outbound",
                    P.INBOUND = "inbound",
                    P.INBOUND_OUTBOUND = "inbound_outbound"
            }
        )(k || (E.AUTO_TICKET_CREATION_EVENTS = k = {}))
    }
    ,
    5608: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.generateCaseCreationQuery = E.processNoMatchScenario = E.getPhoneFieldValue = E.getPhoneFieldsFromConfig = E.formatEntityRecords = E.convertSNUserToCRMUser = void 0;
        const Y = a(56405)
            , J = a(42807)
            , $ = a(30824)
            , k = async D => {
                const G = (0,
                    $.getCrmStoreConfig)(Y.QUEUE_CHANNEL_TYPE.VOICE)?.searchConfigs?.phoneConfigs || []
                    , V = (0,
                    E.getPhoneFieldsFromConfig)(G);
                return D.map(te => ({
                    id: te.sys_id || te.id,
                    name: te.name || `${te.first_name || ""} ${te.last_name || ""}`.trim(),
                    phone: (0,
                        E.getPhoneFieldValue)(te, V),
                    email: te.email,
                    entity: te.entity,
                    userEntity: te.userEntity || te.entity
                }))
            }
        ;
        E.convertSNUserToCRMUser = k;
        const P = async D => {
                const G = (0,
                    $.getCrmStoreConfig)(Y.QUEUE_CHANNEL_TYPE.VOICE)?.searchConfigs?.phoneConfigs || []
                    , V = (0,
                    E.getPhoneFieldsFromConfig)(G);
                let K = [];
                for (const [te,ee] of Object.entries(D))
                    if (Array.isArray(ee)) {
                        const pe = ee.map(ne => {
                                let X = `${ne?.first_name ?? ""} ${ne?.last_name ?? ""}`.trim();
                                return !X && ne.email && (X = ne.email.split("@")[0]),
                                    {
                                        id: ne.sys_id,
                                        phone: (0,
                                            E.getPhoneFieldValue)(ne, V),
                                        email: ne.email,
                                        name: X,
                                        entity: te,
                                        userEntity: te,
                                        caller_id: ne?.caller_id?.value
                                    }
                            }
                        );
                        K = [...K, ...pe]
                    }
                return K
            }
        ;
        E.formatEntityRecords = P;
        const M = D => Array.from(new Set(D.map(G => G.field)));
        E.getPhoneFieldsFromConfig = M;
        const Q = (D, z) => {
                let G = "";
                return z.forEach(V => {
                        D[V] !== "" && G === "" && (G = D[V])
                    }
                ),
                G === "" && (G = D?.mobile_phone || D?.phone),
                    (0,
                        J.formatE164Number)(G)
            }
        ;
        E.getPhoneFieldValue = Q;
        const O = async (D, z) => {
                const G = D?.entity;
                console.log("processNoMatchScenario >>>", z, G),
                    D?.operation
            }
        ;
        E.processNoMatchScenario = O;
        const F = D => {
                let z = "sys_id=-1";
                return D && typeof D == "object" && Object.keys(D)?.length && Object.keys(D).forEach( (G, V, K) => {
                        V === 0 && (z += "&sysparm_query="),
                        D[G] && (z += `${G}=${D[G]}`),
                        V !== K.length - 1 && (z += "^")
                    }
                ),
                    z
            }
        ;
        E.generateCaseCreationQuery = F
    }
    ,
    99031: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.OUTBOUND_NOT_CONNECTED_REASONS = E.INBOUND_NOT_CONNECTED_REASONS = E.VendorToCTIEvents = E.CTIToVendorEvents = E.edPanelSizeConfig = E.EmbedSessionMenuActions = E.smartEmbedDefaultConfig = void 0;
        const Y = a(61367);
        E.smartEmbedDefaultConfig = {
            screenPopEvent: "ANSWER",
            searchConfigs: {
                phoneConfigs: [{
                    entity: "contact",
                    field: "telephone1"
                }, {
                    entity: "contact",
                    field: "mobilephone"
                }],
                noMatch: {
                    operation: "SCREENPOP",
                    entity: "contact"
                }
            }
        };
        var J;
        (function(Q) {
                Q.TICKET = "Ticket",
                    Q.ENGAGEMENT = "Engagement",
                    Q.WRAP_UP = "WrapUp"
            }
        )(J || (E.EmbedSessionMenuActions = J = {})),
            E.edPanelSizeConfig = {
                [Y.PanelSizes.sm]: {
                    isSizeEnabled: !0,
                    baseWidth: 650,
                    height: 600
                },
                [Y.PanelSizes.md]: {
                    isSizeEnabled: !0,
                    baseWidth: 800,
                    height: 700
                },
                [Y.PanelSizes.lg]: {
                    isSizeEnabled: !0,
                    baseWidth: 1104,
                    height: 700
                }
            };
        var $;
        (function(Q) {
                Q.GET_VARIABLES_RESPONSE = "zcc-get-variables-response",
                    Q.INIT_CONFIG_REQUEST = "zcc-init-config-request",
                    Q.CONTACT_SEARCH_REQUEST = "zcc-contact-search-event",
                    Q.INCOMING_PHONE_REQUEST = "zcc-incomingPhone-request",
                    Q.INCOMING_EMAIL_REQUEST = "zcc-incomingEmail-request",
                    Q.CALL_RINGING = "zcc-call-ringing",
                    Q.CALL_CONNECTED = "zcc-call-connected",
                    Q.CALL_TRANSFER = "zcc-call-transfer",
                    Q.CALL_ENDED = "zcc-call-ended",
                    Q.CALL_RECORDING = "zcc-call-recording",
                    Q.VIDEO_RINGING = "zcc-video-ringing",
                    Q.VIDEO_STARTED = "zcc-video-started",
                    Q.VIDEO_ENDED = "zcc-video-ended",
                    Q.VIDEO_PARTICIPANT_INFO = "zcc-video-participant-info",
                    Q.CHAT_RINGING = "zcc-chat-ringing",
                    Q.CHAT_STARTED = "zcc-chat-started",
                    Q.CHAT_ENDED = "zcc-chat-ended",
                    Q.SMS_RINGING = "zcc-sms-ringing",
                    Q.SMS_STARTED = "zcc-sms-started",
                    Q.SMS_ENDED = "zcc-sms-ended",
                    Q.CALL_LOG = "zcc-phone-call-log",
                    Q.POST_ENGAGEMENT = "zcc-end-post-engagement",
                    Q.SCREEN_POP = "zcc-screen-pop",
                    Q.RESIZE = "zcc-resize",
                    Q.ADD_NOTE = "zcc-add-note",
                    Q.ERROR = "zcc-error",
                    Q.OB_CALL_STARTED = "zcc-outbound-call-started",
                    Q.AGENT_STATUS_NOTIFY = "zcc-agent-status-notification",
                    Q.OUTBOUND_NOT_CONNECTED = "zcc-outbound-not-connected",
                    Q.INBOUND_NOT_CONNECTED = "zcc-inbound-not-connected",
                    Q.ENGAGEMENT_STATUS_RESPONSE = "zcc-engagement-status-response"
            }
        )($ || (E.CTIToVendorEvents = $ = {}));
        var k;
        (function(Q) {
                Q.INIT_CONFIG_RESPONSE = "zcc-init-config-response",
                    Q.INCOMING_PHONE_RESPONSE = "zcc-incomingPhone-response",
                    Q.INCOMING_EMAIL_RESPONSE = "zcc-incomingEmail-response",
                    Q.CONTACT_SEARCH_RESPONSE = "zcc-contact-search-response",
                    Q.CLICK_TO_ACT = "onclicktoact",
                    Q.GET_VARIABLES = "zcc-get-variables",
                    Q.SET_AGENT_STATUS = "zcc-agent-status-set-request",
                    Q.GET_AGENT_STATUS = "zcc-agent-status-get-request",
                    Q.TERMINATE_ENGAGEMENT = "zcc-terminate-engagement",
                    Q.SET_ENGAGEMENT_DISPOSITION = "zcc-set-engagement-disposition",
                    Q.CLOSE_ENGAGEMENT_WRAPUP = "zcc-close-engagement-wrapup",
                    Q.GET_ENGAGEMENT_STATUS = "zcc-engagement-status-request"
            }
        )(k || (E.VendorToCTIEvents = k = {}));
        var P;
        (function(Q) {
                Q.CANCELLED = "consumer-cancelled",
                    Q.REJECTED = "agent-rejected",
                    Q.RESCINDED = "call-rescinded",
                    Q.TIMEOUT = "call-timeout"
            }
        )(P || (E.INBOUND_NOT_CONNECTED_REASONS = P = {}));
        var M;
        (function(Q) {
                Q.OUTBOUND_CALL_CANCELLED = "outbound-call-canceled",
                    Q.OUTBOUND_CALL_AGENT_FAILED = "outbound-call-agent-failed",
                    Q.OUTBOUND_CALL_CUSTOMER_FAILED = "outbound-call-customer-failed",
                    Q.OUTBOUND_CALL_CUSTOMER_UNREACHABLE = "outbound-call-customer-unreachable",
                    Q.OUTBOUND_CALL_CONSUMER_NOT_ANSWER = "outbound-call-consumer-not-answer",
                    Q.OUTBOUND_CALL_CONSUMER_IS_BUSY = "outbound-call-consumer-is-busy",
                    Q.OUTBOUND_CALL_CONSUMER_DECLINES_CALL = "outbound-call-consumer-declines-call",
                    Q.OUTBOUND_CALL_INVALID_NUMBER = "outbound-call-invalid-number",
                    Q.OUTBOUND_CALL_DEFAULT_HANGUP_CATEGORY = "outbound-call-default-hangup-category"
            }
        )(M || (E.OUTBOUND_NOT_CONNECTED_REASONS = M = {}))
    }
    ,
    58127: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(_e) {
                return _e && _e.__esModule ? _e : {
                    default: _e
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.isOriginMismatch = z,
            E.sendDataToVendor = G,
            E.getDataFromVendor = V,
            E.addVendorEvents = te,
            E.addEventBusReceiveEvents = x,
            E.getEngagementStatus = q;
        const J = Y(a(76709))
            , $ = a(56405)
            , k = a(30824)
            , P = a(53019)
            , M = a(99031)
            , Q = window
            , O = 1e4;
        let F = 0
            , D = 0;
        function z(_e) {
            const ze = (J.default.getters["crm/clientAttributes"] || {})?.wrapperOrigin;
            return ze === "*" && ((0,
                P.SmartEmbedErrorLogger)("wrapper origin not set! ", {
                configuredOrigin: ze,
                originSendingData: _e.origin,
                originWildCardLogCount: D
            }),
            D < 3 && $.monitor.dispatchMonitor({
                name: "smartembed.wrapper_origin_not_set",
                configuredOrigin: ze,
                eventOrigin: _e?.origin,
                engagementId: (0,
                    k.getCurrentEngagementId)()
            }),
                D++),
                ze === "*" || _e?.origin === ze || ze.includes(_e?.origin) ? !1 : ((0,
                    P.SmartEmbedErrorLogger)("Origin mismatch! ", {
                    configuredOrigin: ze,
                    originSendingData: _e.origin,
                    originMismatchLogCount: F
                }),
                F < 3 && $.monitor.dispatchMonitor({
                    name: "smartembed.origin_mismatch",
                    configuredOrigin: ze,
                    eventOrigin: _e?.origin,
                    engagementId: (0,
                        k.getCurrentEngagementId)()
                }),
                    F++,
                    !0)
        }
        function G(_e, ie) {
            const Oe = (J.default.getters["crm/clientAttributes"] || {})?.wrapperOrigin;
            Q.parent.postMessage({
                type: _e,
                data: ie
            }, Oe)
        }
        function V({requestEvent: _e, requestData: ie, expectedResponseEvent: ze, enableTimer: Oe=!0, defaultValue: Cn}) {
            return new Promise( (at, Sn) => {
                    let Ce = null;
                    function wn(Ae) {
                        z(Ae) || Ae.data?.type === ze && Ae.data && (Ce && clearTimeout(Ce),
                            (0,
                                P.SmartEmbedLogger)(`received ${ze}`, Ae.data?.data),
                            Q.removeEventListener("message", wn, !1),
                            at(Ae.data?.data || Cn))
                    }
                    Q.addEventListener("message", wn, !1),
                    Oe && (Ce = setTimeout( () => {
                            (0,
                                P.SmartEmbedLogger)("request expire", {
                                requestEvent: _e,
                                expectedResponseEvent: ze
                            }),
                                Q.removeEventListener("message", wn, !1),
                                Sn(Cn)
                        }
                        , O)),
                        G(_e, ie)
                }
            )
        }
        function K(_e) {
            const {variables: ie} = (0,
                k.getEngagementVariables)(_e)
                , ze = ie?.custom ? ie?.custom : [];
            G(M.CTIToVendorEvents.GET_VARIABLES_RESPONSE, {
                engagementId: _e,
                variables: [...ze]
            })
        }
        function te(_e) {
            window.addEventListener("message", function(ie) {
                if (z(ie))
                    return;
                (0,
                    P.SmartEmbedLogger)("Received Event", ie.data);
                const ze = {
                    [M.VendorToCTIEvents.CLICK_TO_ACT]: Cn => {
                        Cn && _e.onDialOut(Cn)
                    }
                    ,
                    [M.VendorToCTIEvents.GET_VARIABLES]: Cn => {
                        Cn?.engagementId ? K(Cn.engagementId) : _e.sendError({
                            code: "no-engagement-id",
                            message: "Engagement ID is required"
                        })
                    }
                    ,
                    [M.VendorToCTIEvents.SET_AGENT_STATUS]: Cn => {
                        $.eventBus.$emit("CRM_AGENT_STATUS_CHANGE", Cn?.id)
                    }
                    ,
                    [M.VendorToCTIEvents.GET_AGENT_STATUS]: () => {
                        $.eventBus.$emit("CRM_AGENT_STATUS_GET")
                    }
                    ,
                    [M.VendorToCTIEvents.TERMINATE_ENGAGEMENT]: Cn => {
                        const {engagementId: at, channelType: Sn, requestId: Ce} = Cn || {};
                        if (!at || !Sn || !Ce) {
                            _e.sendError({
                                code: "invalid-input",
                                message: "Engagement ID, channel type and request ID are required.",
                                ...Ce && {
                                    requestId: Ce
                                }
                            });
                            return
                        }
                        $.eventBus.$emit("SE_TERMINATE_ENGAGEMENT_REQUEST", {
                            engagementId: at,
                            channelType: Sn,
                            requestId: Ce
                        })
                    }
                    ,
                    [M.VendorToCTIEvents.SET_ENGAGEMENT_DISPOSITION]: Cn => {
                        const {engagementId: at, channelType: Sn, dispositionId: Ce, requestId: wn} = Cn || {};
                        if (!at || !Sn || !wn || !Ce) {
                            _e.sendError({
                                code: "invalid-input",
                                message: "Engagement ID, channel type, disposition ID and request ID are required.",
                                ...wn && {
                                    requestId: wn
                                }
                            });
                            return
                        }
                        $.eventBus.$emit("SE_SELECT_DISPOSITION_REQUEST", {
                            engagementId: at,
                            channelType: Sn,
                            requestId: wn,
                            dispositionId: Ce
                        })
                    }
                    ,
                    [M.VendorToCTIEvents.CLOSE_ENGAGEMENT_WRAPUP]: Cn => {
                        const {engagementId: at, channelType: Sn, requestId: Ce} = Cn || {};
                        if (!at || !Sn || !Ce) {
                            _e.sendError({
                                code: "invalid-input",
                                message: "Engagement ID, channel type and request ID are required.",
                                ...Ce && {
                                    requestId: Ce
                                }
                            });
                            return
                        }
                        $.eventBus.$emit("SE_CLOSE_WRAPUP_REQUEST", {
                            engagementId: at,
                            channelType: Sn,
                            requestId: Ce
                        })
                    }
                    ,
                    [M.VendorToCTIEvents.GET_ENGAGEMENT_STATUS]: Cn => {
                        const {engagementId: at, requestId: Sn} = Cn || {};
                        if (!Sn) {
                            _e.sendError({
                                code: "invalid-input",
                                message: "Request ID is required.",
                                ...Sn && {
                                    requestId: Sn
                                }
                            });
                            return
                        }
                        const Ce = q(at);
                        Ce && G(M.CTIToVendorEvents.ENGAGEMENT_STATUS_RESPONSE, {
                            ...Ce,
                            requestId: Sn
                        })
                    }
                };
                function Oe(Cn) {
                    const at = ze[Cn.data?.type];
                    at && at(Cn.data?.data)
                }
                Oe(ie)
            }, !1)
        }
        function ee(_e) {
            const {status: ie, error: ze, requestId: Oe, code: Cn} = _e;
            if ((0,
                P.SmartEmbedLogger)("response sendErrorToVendor", _e),
                ie)
                return;
            const at = {
                code: Cn
            };
            Oe && (at.requestId = Oe),
            ze && (at.message = ze),
                G(M.CTIToVendorEvents.ERROR, at)
        }
        function pe(_e) {
            ee({
                code: "terminate-engagement-error",
                ..._e
            })
        }
        function ne(_e) {
            ee({
                code: "select-disposition-error",
                ..._e
            })
        }
        function X(_e) {
            ee({
                code: "close-wrapup-error",
                ..._e
            })
        }
        function x() {
            $.eventBus.$on("SE_TERMINATE_ENGAGEMENT_RESPONSE", pe),
                $.eventBus.$on("SE_SELECT_DISPOSITION_RESPONSE", ne),
                $.eventBus.$on("SE_CLOSE_WRAPUP_RESPONSE", X)
        }
        function H(_e, ie) {
            const ze = ie?.task
                , {tkType: Oe, from: Cn, to: at, queueName: Sn, customerName: Ce, customerNumber: wn, outboundQueueId: Ae, queueId: nr, isUpgrade: mt, liveVideoUpgradeFromQueueId: jn, engagementId: ve} = ze || {};
            _e.engagementId = ve,
            ["outbound", "OUT_BOUND"].includes(ze?.direction) && (_e.engagementDirection = "outbound"),
            ["inbound", "IN_BOUND"].includes(ze?.direction) && (_e.engagementDirection = "inbound"),
                Oe === "phone" ? (_e.channel = "voice",
                    _e.from = Cn,
                    _e.to = at,
                    Ae ? _e.queueId = Ae : nr && (_e.queueId = nr)) : Oe === "video" ? (_e.channel = "video",
                    mt && jn ? _e.queueId = jn : Ae ? _e.queueId = Ae : nr && (_e.queueId = nr)) : ["sms", "chat"].includes(Oe) && (_e.channel = Oe,
                    _e.queueId = nr),
            Sn && (_e.queueName = Sn),
            Ce && (_e.customerName = Ce),
            wn && (_e.customerNumber = wn),
            ze?.userInfo?.email && (_e.customerEmail = ze?.userInfo?.email)
        }
        function q(_e) {
            const ie = (0,
                k.getActiveTaskQueue)()
                , ze = (0,
                k.getMessagingWrapupTaskQueue)()
                , Oe = [];
            let Cn = []
                , at = [];
            return _e ? (Cn = Array.isArray(ie) ? ie.filter(Sn => Sn?.engagementId === _e) : [],
                at = Array.isArray(ze) ? ze.filter(Sn => Sn?.engagementId === _e) : []) : (Cn = Array.isArray(ie) ? ie : [],
                at = Array.isArray(ze) ? ze : []),
                !Cn.length && !at.length ? (ee({
                    code: "no-engagements",
                    status: !1,
                    error: "No engagements found."
                }),
                    null) : (Cn.length && Cn.forEach(Sn => {
                        const Ce = {}
                            , wn = ["call.ended", "v.ended"].includes(Sn?.task?.eventType);
                        Ce.state = wn ? "wrapup" : "active",
                            H(Ce, Sn),
                            Oe.push(Ce)
                    }
                ),
                at.length && at.forEach(Sn => {
                        const Ce = {};
                        Ce.state = "wrapup",
                            H(Ce, Sn),
                            Oe.push(Ce)
                    }
                ),
                    {
                        active: Oe.filter(Sn => Sn.state === "active"),
                        wrapup: Oe.filter(Sn => Sn.state === "wrapup")
                    })
        }
    },
    2117: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(O) {
                return O && O.__esModule ? O : {
                    default: O
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.detectSource = Q;
        const J = a(76856)
            , $ = Y(a(76709))
            , k = a(56405)
            , P = a(30824)
            , {getHistoricalInboundJourney: M} = J.dashboardV2Api;
        async function Q({engagementId: O, currentChannel: F}) {
            let D = null
                , z = !1;
            const G = $.default.getters["livechat/getChannelType"](O)
                , V = G ? (0,
                P.getChannelType)(G.toLowerCase()) : null;
            if (V)
                z = !!(0,
                    P.getCrmStoreConfig)(V)?.callLogConfigs?.autoSaveTranscript,
                    D = V;
            else {
                const [K,te] = await (0,
                    k.tryApiCatch)(M, O, F === k.QUEUE_CHANNEL_TYPE.VOICE ? "phone" : "video");
                !K && te && (te.events || []).some(ne => ne.channelType === "sms") && (z = !!(0,
                    P.getCrmStoreConfig)(k.QUEUE_CHANNEL_TYPE.SMS)?.callLogConfigs?.autoSaveTranscript,
                    D = k.QUEUE_CHANNEL_TYPE.SMS)
            }
            return {
                originalChatChannel: D,
                autoSaveTranscriptEnabled: z
            }
        }
    },
    22354: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.isActionContent = J,
            E.getMessageFromAction = $;
        const Y = a(27324);
        function J(k) {
            return k.type === "5"
        }
        function $(k) {
            return (0,
                Y.systemMessage)({
                id: k.eventId,
                message: k.text
            })
        }
    }
    ,
    69061: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getContentFromBotButton = J;
        const Y = a(27324);
        function J($) {
            return (0,
                Y.newSimpleMessage)({
                type: "richText",
                content: {
                    json: $.message
                },
                files: $.fileId && $.fileName && $.fileSize ? [{
                    fileId: $.fileId,
                    name: $.fileName,
                    size: $.fileSize
                }] : [],
                action: {
                    type: "button",
                    options: $.mediaList.map(k => ({
                        label: k.text,
                        value: {
                            type: "quickReplyButton",
                            text: k.text,
                            actionId: k.id
                        }
                    }))
                }
            })
        }
    }
    ,
    94711: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getContentFromBotCard = J,
            E.getContentFromBotCardReply = $;
        const Y = a(27324);
        function J(k) {
            return (0,
                Y.newSimpleMessage)({
                type: "card",
                content: k.mediaList.map(P => ({
                    text: P.text,
                    fileId: P.fileId
                }))
            })
        }
        function $(k) {
            return (0,
                Y.newSimpleMessage)({
                type: "card",
                content: k.mediaList.map(P => ({
                    text: P.text,
                    fileId: P.fileId
                }))
            })
        }
    }
    ,
    31977: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getContentFromBotFaq = J;
        const Y = a(27324);
        function J($) {
            const {url: k, title: P, content: M, answerText: Q} = $.kmResponse;
            return (0,
                Y.newSimpleMessage)({
                type: "textLink",
                content: {
                    url: k,
                    title: P,
                    content: M,
                    answerText: Q ?? "",
                    openNewWindow: !0
                }
            })
        }
    }
    ,
    87616: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getContentFromBotFaqUrl = J;
        const Y = a(27324);
        function J($) {
            return (0,
                Y.newSimpleMessage)({
                type: "link",
                content: {
                    url: $.message,
                    text: "Read more",
                    openNewWindow: !0
                }
            })
        }
    }
    ,
    4524: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getContentFromBotHtml = J;
        const Y = a(27324);
        function J($) {
            return (0,
                Y.newSimpleMessage)({
                type: "html",
                content: {
                    html: $.message
                }
            })
        }
    }
    ,
    10909: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.isBotContent = K,
            E.getMessageFromBot = te,
            E.getSimpleMessageFromBot = pe;
        const Y = a(27324)
            , J = a(4666)
            , $ = a(69061)
            , k = a(94711)
            , P = a(31977)
            , M = a(87616)
            , Q = a(4524)
            , O = a(14341)
            , F = a(53489)
            , D = a(75469)
            , z = a(93192)
            , G = a(55674)
            , V = a(82042);
        function K(ne) {
            return ne.type === "4"
        }
        function te(ne) {
            const X = ee(ne);
            return (0,
                Y.newMessage)({
                ...X,
                id: ne.eventId,
                from: X.type === "system" ? (0,
                    Y.fromSystem)() : (0,
                    Y.newMember)({
                    role: "bot",
                    name: "Bot"
                })
            })
        }
        function ee(ne) {
            const X = ne.content.head.text;
            try {
                const x = JSON.parse(X);
                return x?.messageType ? pe(x) : (0,
                    J.isDelta)(x) ? (0,
                    Y.newSimpleMessage)({
                    type: "richText",
                    content: {
                        json: X
                    }
                }) : (0,
                    Y.newSimpleMessage)({
                    type: "text",
                    content: X
                })
            } catch {
                return (0,
                    Y.newSimpleMessage)({
                    type: "text",
                    content: X
                })
            }
        }
        function pe(ne) {
            return ne?.messageType === "text" ? (0,
                F.getContentFromBotText)(ne) : ne?.messageType === "textAndImage" ? (0,
                D.getContentFromBotTextImage)(ne) : ne?.messageType === "card" ? (0,
                k.getContentFromBotCard)(ne) : ne?.messageType === "quickReplyButton" ? (0,
                $.getContentFromBotButton)(ne) : ne?.messageType === "video" ? (0,
                G.getContentFromBotVideo)(ne) : ne?.messageType === "url" ? (0,
                z.getContentFromBotUrl)(ne) : ne?.messageType === "html" ? (0,
                Q.getContentFromBotHtml)(ne) : ne?.messageType === "faq_url" ? (0,
                M.getContentFromBotFaqUrl)(ne) : ne?.messageType === "faq" ? (0,
                P.getContentFromBotFaq)(ne) : ne?.messageType === "ticket_form" ? (0,
                Y.ignoreMessage)() : ne?.messageType === "submission_form" ? (0,
                V.getContentFromViewTicketForm)(ne) : ne?.messageType === "routeToFlow" ? (0,
                O.getContentFromRouteToFlow)(ne) : (0,
                Y.newSimpleMessage)({
                type: "text",
                content: "Unsupported message"
            })
        }
    }
    ,
    14341: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getContentFromRouteToFlow = J;
        const Y = a(27324);
        function J($) {
            return (0,
                Y.ignoreMessage)()
        }
    }
    ,
    53489: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getContentFromBotText = J;
        const Y = a(27324);
        function J($) {
            return (0,
                Y.newSimpleMessage)({
                type: "richText",
                content: {
                    json: $.message
                }
            })
        }
    }
    ,
    75469: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getContentFromBotTextImage = J;
        const Y = a(27324);
        function J($) {
            return (0,
                Y.newSimpleMessage)({
                type: "richText",
                content: {
                    json: $.message
                },
                files: $.fileId && $.fileName && $.fileSize ? [{
                    fileId: $.fileId,
                    name: $.fileName,
                    size: $.fileSize
                }] : []
            })
        }
    }
    ,
    93192: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getContentFromBotUrl = J;
        const Y = a(27324);
        function J($) {
            return (0,
                Y.newSimpleMessage)({
                type: "link",
                content: {
                    url: $.url,
                    openNewWindow: $.openNewWindow,
                    openNow: !0
                }
            })
        }
    }
    ,
    55674: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getContentFromBotVideo = J;
        const Y = a(27324);
        function J($) {
            return (0,
                Y.newSimpleMessage)({
                type: "richText",
                content: {
                    json: ""
                },
                files: [{
                    fileId: $.fileId,
                    name: $.fileName,
                    size: $.fileSize
                }]
            })
        }
    }
    ,
    82042: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getContentFromViewTicketForm = J;
        const Y = a(27324);
        function J($) {
            return (0,
                Y.newSimpleMessage)({
                type: "system",
                content: $.chatIntegration.status ? "You submitted the form" : "Failed to submit the form, try again later"
            })
        }
    }
    ,
    75641: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.isFileContent = $,
            E.getMessageFromFile = k;
        const Y = a(10141)
            , J = a(27324);
        function $(P) {
            return P.type === "3"
        }
        function k(P) {
            return (0,
                J.newMessage)({
                id: P.eventId,
                type: "text",
                from: (0,
                    J.newMember)({
                    role: (0,
                        Y.getFromRole)(P),
                    name: P.fromName
                }),
                content: "Unsupported Message"
            })
        }
    }
    ,
    50154: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.isRejoinContent = J,
            E.getMessageFromRejoin = $;
        const Y = a(27324);
        function J(k) {
            return k.type === "2" && k.eventType === "REJOIN_LINK"
        }
        function $(k) {
            return (0,
                Y.newMessage)({
                id: k.eventId,
                type: "rejoin",
                from: (0,
                    Y.newMember)({
                    role: "bot",
                    name: "Bot"
                }),
                content: null,
                action: {
                    type: "rejoin",
                    url: k.text
                }
            })
        }
    }
    ,
    57622: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.isSystemContent = J,
            E.getMessageFromSystem = $;
        const Y = a(27324);
        function J(k) {
            return k.type === "2"
        }
        function $(k) {
            return (0,
                Y.systemMessage)({
                id: k.eventId,
                message: k.text
            })
        }
    }
    ,
    25488: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.TYPING_INDICATOR_TYPE = void 0,
            E.isTypingIndicatorExpired = J,
            E.isTypingIndicator2 = $,
            E.getMessageFromTypingIndicator = k;
        const Y = a(27324);
        E.TYPING_INDICATOR_TYPE = "typing_indicator";
        function J(P) {
            return Date.now() - P.timestamp >= 5e3
        }
        function $(P) {
            return P.eventName === "send_typing_indicator_msg"
        }
        function k(P) {
            const M = typeof P.from < "u" ? (0,
                Y.newMember)({
                id: P.from,
                role: "user",
                name: P.fromName
            }) : (0,
                Y.newMember)({
                role: "bot",
                name: "Bot"
            });
            return (0,
                Y.newMessage)({
                id: P.eventId,
                type: E.TYPING_INDICATOR_TYPE,
                from: M,
                content: P.eventName
            })
        }
    }
    ,
    99191: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.isUpgradeContent = $,
            E.getMessageFromUpgrade = k;
        const Y = a(10141)
            , J = a(27324);
        function $(P) {
            return P.type === "2" && P.eventType === "UPGRADE_TO_VIDEO"
        }
        function k(P) {
            return (0,
                J.newMessage)({
                id: P.eventId,
                type: "upgrade",
                from: (0,
                    J.newMember)({
                    id: P.from,
                    role: (0,
                        Y.getFromRole)(P),
                    name: P.fromName
                }),
                content: null,
                action: {
                    type: "upgrade",
                    target: "video",
                    params: {
                        chatId: P.chatId,
                        chatSessionId: P.chatSessionId,
                        engagementId: P.engagementId,
                        taskId: P.taskId
                    }
                }
            })
        }
    }
    ,
    69192: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.isUserContent = $,
            E.getMessageFromUser = k;
        const Y = a(27324)
            , J = a(10141);
        function $(P) {
            return P.type === "1"
        }
        function k(P) {
            return /^{.*}$/.test(P.text) ? (0,
                Y.newMessage)({
                id: P.eventId,
                type: "richText",
                from: (0,
                    Y.newMember)({
                    id: P.from,
                    role: (0,
                        J.getFromRole)(P),
                    name: P.fromName
                }),
                content: {
                    json: P.text
                },
                files: P.files?.map?.(M => ({
                    fileId: M.fileId,
                    name: M.fileName,
                    size: M.fileSize ?? void 0
                }))
            }) : (0,
                Y.newMessage)({
                id: P.eventId,
                type: "text",
                from: (0,
                    Y.newMember)({
                    id: P.from,
                    role: (0,
                        J.getFromRole)(P),
                    name: P.fromName
                }),
                content: P.text,
                files: P.files?.map?.(M => ({
                    fileId: M.fileId,
                    name: M.fileName || "",
                    size: M.fileSize ?? void 0,
                    fileUrl: M.fileUrl,
                    type: M.type,
                    source: M.source,
                    errorCode: M.errorCode || M.asyncFileErrorCode,
                    messageFileId: M.messageFileId
                }))
            })
        }
    }
    ,
    99101: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getTextFromQuillContent = $;
        const Y = a(4666)
            , J = a(25030);
        function $(V) {
            return (0,
                Y.isDelta)(V) ? k({
                ops: V.ops
            }).replace(/\n+$/, "") : V
        }
        function k({ops: V}) {
            return (0,
                J.getGroupedOps)(V).map(P).join("")
        }
        function P(V) {
            if (Array.isArray(V))
                return M({
                    array: V
                });
            {
                let {header: K, blockquote: te} = V?.op?.attributes || {};
                return K ? F({
                    op: V.op,
                    ops: V.ops
                }) : te ? O({
                    op: V.op,
                    ops: V.ops
                }) : Q({
                    op: V.op,
                    ops: V.ops
                })
            }
        }
        function M({array: V}) {
            let K = V[0].op.attributes.list;
            const te = ee => K === "ordered" ? `${ee + 1}.` : "-";
            return V.map( (ee, pe) => {
                    let {indent: ne=0} = ee.op.attributes || {};
                    const X = ee.ops.map( (x, H) => `${D({
                        op: ee.op,
                        ops: ee.ops,
                        index: H
                    })}`).join("");
                    return `${G(ne)}${te(pe)} ${X}`
                }
            ).join(`
`) + `
`
        }
        function Q({op: V={}, ops: K}) {
            let {indent: te=0} = V.attributes || {};
            return `${G(te)}${`${K.map( (ee, pe) => D({
                op: V,
                ops: K,
                index: pe
            })).join("")}`}`
        }
        function O({op: V={}, ops: K}) {
            let {indent: te=0} = V.attributes || {};
            return `${G(te)}\u300C${K.map( (ee, pe) => D({
                op: V,
                ops: K,
                index: pe
            })).join("")}\u300D
`
        }
        function F({op: V={}, ops: K}) {
            const {indent: te=0, header: ee} = V.attributes || {};
            return `${G(te)}${"#".repeat(ee)}${K.map( (pe, ne) => D({
                op: V,
                ops: K,
                index: ne
            })).join("")}
`
        }
        function D({op: V={}, ops: K, index: te=0}) {
            let {link: ee=""} = K[te]?.attributes || {};
            return (0,
                Y.isUrl)(ee) ? `[${z({
                op: V,
                ops: K,
                index: te
            })}](${ee})` : z({
                op: V,
                ops: K,
                index: te
            })
        }
        function z({ops: V, index: K}) {
            if (V[K]?.insert.emoji)
                return V[K]?.insert.emoji;
            let te = V[K]?.insert || "";
            return te === `
` ? `
` : te
        }
        function G(V) {
            let K = "";
            for (let te = 0; te < V; te++)
                K += " ";
            return K
        }
    }
    ,
    25030: (pn, E) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.isContainerBlock = a,
            E.isBlockquote = Y,
            E.isList = J,
            E.isHeader = $,
            E.isBlockAttribute = k,
            E.sliceFromReverseWhile = P,
            E.convert = M,
            E.tokenizeWithNewLines = Q,
            E.pairOpsWithTheirBlock = O,
            E.getGroupedOps = F,
            E.mergeList = D;
        function a(z) {
            return Y(z) || J(z) || $(z) || k(z)
        }
        function Y(z) {
            return !!z.attributes.blockquote
        }
        function J(z) {
            return z.attributes.list === "ordered" || z.attributes.list === "bullet"
        }
        function $(z) {
            return !!z.attributes.header
        }
        function k(z) {
            const G = z.attributes;
            return !!(G.align || G.direction || G.indent)
        }
        function P(z, G, V) {
            let K = {
                elements: [],
                sliceStartsAt: -1
            };
            for (let te = G; te >= 0 && V(z[te]); te--)
                K.sliceStartsAt = te,
                    K.elements.unshift(z[te]);
            return K
        }
        function M(z=[]) {
            return z.map(V => {
                    if (!V || typeof V != "object")
                        return [];
                    if (typeof V.insert == "object" || V.insert === `
`)
                        return [V];
                    let K = Q(`${V.insert}`);
                    if (K.length === 1)
                        return [V];
                    let te = Object.assign({}, V, {
                        insert: `
`
                    });
                    return K.map(ee => ee === `
` ? te : Object.assign({}, V, {
                        insert: ee
                    }))
                }
            ).flat().map(V => ({
                attributes: V.attributes || {},
                insert: V.insert
            }))
        }
        function Q(z) {
            const G = `
`;
            if (z === G)
                return [z];
            let V = z.split(G);
            if (V.length === 1)
                return V;
            let K = V.length - 1;
            return V.reduce( (te, ee, pe) => (pe !== K ? ee !== "" ? te = te.concat(ee, G) : te.push(G) : ee !== "" && te.push(ee),
                te), [])
        }
        function O(z) {
            let G = [];
            const V = pe => !(pe.insert === `
` || a(pe))
                , K = pe => !a(pe);
            let te = z.length - 1, ee;
            for (let pe = te; pe >= 0; pe--) {
                let ne = z[pe];
                a(ne) ? (ee = P(z, pe - 1, V),
                    G.push({
                        op: ne,
                        ops: ee.elements
                    }),
                    pe = ee.sliceStartsAt > -1 ? ee.sliceStartsAt : pe) : (ee = P(z, pe - 1, K),
                    G.push({
                        ops: ee.elements.concat(ne)
                    }),
                    pe = ee.sliceStartsAt > -1 ? ee.sliceStartsAt : pe)
            }
            return G.reverse(),
                G
        }
        function F(z=[]) {
            let G = M(z)
                , V = O(G);
            return D(V)
        }
        function D(z=[]) {
            let G = []
                , V = [];
            for (let K = 0; K < z.length; K++) {
                let te = z[K].op?.attributes;
                te && te.list === "bullet" ? (V.length && V[0].op.attributes.list !== "bullet" && (G.push(V),
                    V = []),
                    V.push(z[K])) : te && te?.list === "ordered" ? (V.length && V[0].op.attributes.list !== "ordered" && (G.push(V),
                    V = []),
                    V.push(z[K])) : (V.length && (G.push(V),
                    V = []),
                    G.push(z[K]))
            }
            return V.length && G.push(V),
                G
        }
    }
    ,
    13121: (pn, E) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getFileExtension = a,
            E.getFileLastExtension = Y,
            E.getFileType = k,
            E.downloadFile = P,
            E.downloadBlob = M,
            E.handleFileWithoutType = Q,
            E.getMediaType = O;
        function a(D="") {
            const z = /\.([^.]+\.)*([^.]+)$/g.exec(D);
            return z ? z[0] : ""
        }
        function Y(D="") {
            const z = /\.([^.]+)$/g.exec(D.toLowerCase());
            return z ? z[0] : ""
        }
        const J = {
            archive: [".zip", ".tar", ".gz", ".rar", ".7z", ".bz2", ".xz", ".tar.gz"],
            audio: [".mp3", ".wav", ".aiff", ".3gp", ".amr", ".3ga", ".m4a", ".m4p", ".m4b", ".m4r"],
            code: [".html", ".js", ".ts", ".json", ".xml", ".htm"],
            doc: [".doc", ".docx"],
            image: [".jpg", ".png", ".gif", ".jpeg", ".bmp", ".dib", ".tif", ".tiff", ".webp"],
            pdf: [".pdf"],
            slide: [".ppt", ".pptx", ".key"],
            table: [".xls", ".xlsx", ".csv"],
            text: [".txt", ".odt", ".pages", ".azw", ".epub", ".svg"],
            video: [".mp4", ".avi", ".3gp", ".h263", ".h264", ".m4v", ".mov", ".mpeg", ".ogv", ".webm", ".3g2"]
        }
            , $ = Object.keys(J).reduce( (D, z) => {
                for (const G of J[z])
                    D[G] = z;
                return D
            }
            , {});
        function k(D) {
            const z = Y(D);
            return $[z] ?? ""
        }
        async function *P(D) {
            const z = await fetch(D)
                , G = Number(z.headers.get("Content-Length"))
                , V = new Uint8Array(G)
                , K = z.headers.get("Content-Type") ?? "";
            let te = 0;
            if (z.body) {
                const ee = z.body.getReader();
                for (; ; ) {
                    const {done: pe, value: ne} = await ee.read();
                    if (pe) {
                        yield{
                            done: pe,
                            blob: new Blob([V],{
                                type: K
                            }),
                            read: te,
                            total: G,
                            progress: 1
                        };
                        break
                    }
                    te += ne?.length ?? 0,
                        V.set(ne, te - ne.length),
                        yield{
                            done: pe,
                            blob: null,
                            read: te,
                            total: G,
                            progress: te / G
                        }
                }
            }
        }
        function M(...[D,z]) {
            const G = document.createElement("a");
            G.href = URL.createObjectURL(D),
                G.download = D instanceof File ? D.name : z ?? "file",
                G.click(),
                G.remove(),
                URL.revokeObjectURL(G.href)
        }
        function Q(D) {
            try {
                const z = D;
                return z.forEach(G => {
                        "type"in G && !G?.type && O(G?.name || "") && Object.defineProperty(G, "type", {
                            value: O(G.name)
                        })
                    }
                ),
                    z
            } catch {
                return D
            }
        }
        function O(D="") {
            const z = D.match(/\.([^.]+)$/)?.[1] || "";
            return z && F[z] || ""
        }
        const F = {
            123: "application/vnd.lotus-1-2-3",
            ez: "application/andrew-inset",
            aw: "application/applixware",
            atom: "application/atom+xml",
            atomcat: "application/atomcat+xml",
            atomdeleted: "application/atomdeleted+xml",
            atomsvc: "application/atomsvc+xml",
            dwd: "application/atsc-dwd+xml",
            held: "application/atsc-held+xml",
            rsat: "application/atsc-rsat+xml",
            bdoc: "application/x-bdoc",
            xcs: "application/calendar+xml",
            ccxml: "application/ccxml+xml",
            cdfx: "application/cdfx+xml",
            cdmia: "application/cdmi-capability",
            cdmic: "application/cdmi-container",
            cdmid: "application/cdmi-domain",
            cdmio: "application/cdmi-object",
            cdmiq: "application/cdmi-queue",
            cpl: "application/cpl+xml",
            cu: "application/cu-seeme",
            mpd: "application/dash+xml",
            mpp: "application/vnd.ms-project",
            davmount: "application/davmount+xml",
            dbk: "application/docbook+xml",
            dssc: "application/dssc+der",
            xdssc: "application/dssc+xml",
            es: "application/ecmascript",
            ecma: "application/ecmascript",
            emma: "application/emma+xml",
            emotionml: "application/emotionml+xml",
            epub: "application/epub+zip",
            exi: "application/exi",
            exp: "application/express",
            fdt: "application/fdt+xml",
            pfr: "application/font-tdpfr",
            geojson: "application/geo+json",
            gml: "application/gml+xml",
            gpx: "application/gpx+xml",
            gxf: "application/gxf",
            gz: "application/gzip",
            hjson: "application/hjson",
            stk: "application/hyperstudio",
            ink: "application/inkml+xml",
            inkml: "application/inkml+xml",
            ipfix: "application/ipfix",
            its: "application/its+xml",
            jar: "application/java-archive",
            war: "application/java-archive",
            ear: "application/java-archive",
            ser: "application/java-serialized-object",
            class: "application/java-vm",
            js: "application/javascript",
            mjs: "application/javascript",
            json: "application/json",
            map: "application/json",
            json5: "application/json5",
            jsonml: "application/jsonml+json",
            jsonld: "application/ld+json",
            lgr: "application/lgr+xml",
            lostxml: "application/lost+xml",
            hqx: "application/mac-binhex40",
            cpt: "application/mac-compactpro",
            mads: "application/mads+xml",
            webmanifest: "application/manifest+json",
            mrc: "application/marc",
            mrcx: "application/marcxml+xml",
            ma: "application/mathematica",
            nb: "application/mathematica",
            mb: "application/mathematica",
            mathml: "application/mathml+xml",
            mbox: "application/mbox",
            mpf: "application/media-policy-dataset+xml",
            mscml: "application/mediaservercontrol+xml",
            metalink: "application/metalink+xml",
            meta4: "application/metalink4+xml",
            mets: "application/mets+xml",
            maei: "application/mmt-aei+xml",
            musd: "application/mmt-usd+xml",
            mods: "application/mods+xml",
            m21: "application/mp21",
            mp21: "application/mp21",
            mp4s: "application/mp4",
            m4p: "application/mp4",
            doc: "application/msword",
            dot: "application/msword",
            mxf: "application/mxf",
            nq: "application/n-quads",
            nt: "application/n-triples",
            cjs: "application/node",
            bin: "application/octet-stream",
            dms: "application/octet-stream",
            lrf: "application/octet-stream",
            mar: "application/octet-stream",
            so: "application/octet-stream",
            dist: "application/octet-stream",
            distz: "application/octet-stream",
            pkg: "application/octet-stream",
            bpk: "application/octet-stream",
            dump: "application/octet-stream",
            elc: "application/octet-stream",
            deploy: "application/octet-stream",
            exe: "application/x-msdownload",
            dll: "application/x-msdownload",
            deb: "application/x-debian-package",
            dmg: "application/x-apple-diskimage",
            iso: "application/x-iso9660-image",
            img: "application/octet-stream",
            msi: "application/x-msdownload",
            msp: "application/octet-stream",
            msm: "application/octet-stream",
            buffer: "application/octet-stream",
            oda: "application/oda",
            opf: "application/oebps-package+xml",
            ogx: "application/ogg",
            omdoc: "application/omdoc+xml",
            onetoc: "application/onenote",
            onetoc2: "application/onenote",
            onetmp: "application/onenote",
            onepkg: "application/onenote",
            oxps: "application/oxps",
            relo: "application/p2p-overlay+xml",
            xer: "application/patch-ops-error+xml",
            pdf: "application/pdf",
            pgp: "application/pgp-encrypted",
            asc: "application/pgp-signature",
            sig: "application/pgp-signature",
            prf: "application/pics-rules",
            p10: "application/pkcs10",
            p7m: "application/pkcs7-mime",
            p7c: "application/pkcs7-mime",
            p7s: "application/pkcs7-signature",
            p8: "application/pkcs8",
            ac: "application/vnd.nokia.n-gage.ac+xml",
            cer: "application/pkix-cert",
            crl: "application/pkix-crl",
            pkipath: "application/pkix-pkipath",
            pki: "application/pkixcmp",
            pls: "application/pls+xml",
            ai: "application/postscript",
            eps: "application/postscript",
            ps: "application/postscript",
            provx: "application/provenance+xml",
            cww: "application/prs.cww",
            pskcxml: "application/pskc+xml",
            raml: "application/raml+yaml",
            rdf: "application/rdf+xml",
            owl: "application/rdf+xml",
            rif: "application/reginfo+xml",
            rnc: "application/relax-ng-compact-syntax",
            rl: "application/resource-lists+xml",
            rld: "application/resource-lists-diff+xml",
            rs: "application/rls-services+xml",
            rapd: "application/route-apd+xml",
            sls: "application/route-s-tsid+xml",
            rusd: "application/route-usd+xml",
            gbr: "application/rpki-ghostbusters",
            mft: "application/rpki-manifest",
            roa: "application/rpki-roa",
            rsd: "application/rsd+xml",
            rss: "application/rss+xml",
            rtf: "text/rtf",
            sbml: "application/sbml+xml",
            scq: "application/scvp-cv-request",
            scs: "application/scvp-cv-response",
            spq: "application/scvp-vp-request",
            spp: "application/scvp-vp-response",
            sdp: "application/sdp",
            senmlx: "application/senml+xml",
            sensmlx: "application/sensml+xml",
            setpay: "application/set-payment-initiation",
            setreg: "application/set-registration-initiation",
            shf: "application/shf+xml",
            siv: "application/sieve",
            sieve: "application/sieve",
            smi: "application/smil+xml",
            smil: "application/smil+xml",
            rq: "application/sparql-query",
            srx: "application/sparql-results+xml",
            gram: "application/srgs",
            grxml: "application/srgs+xml",
            sru: "application/sru+xml",
            ssdl: "application/ssdl+xml",
            ssml: "application/ssml+xml",
            swidtag: "application/swid+xml",
            tei: "application/tei+xml",
            teicorpus: "application/tei+xml",
            tfi: "application/thraud+xml",
            tsd: "application/timestamped-data",
            toml: "application/toml",
            trig: "application/trig",
            ttml: "application/ttml+xml",
            ubj: "application/ubjson",
            rsheet: "application/urc-ressheet+xml",
            td: "application/urc-targetdesc+xml",
            "1km": "application/vnd.1000minds.decision-model+xml",
            plb: "application/vnd.3gpp.pic-bw-large",
            psb: "application/vnd.3gpp.pic-bw-small",
            pvb: "application/vnd.3gpp.pic-bw-var",
            tcap: "application/vnd.3gpp2.tcap",
            pwn: "application/vnd.3m.post-it-notes",
            aso: "application/vnd.accpac.simply.aso",
            imp: "application/vnd.accpac.simply.imp",
            acu: "application/vnd.acucobol",
            atc: "application/vnd.acucorp",
            acutc: "application/vnd.acucorp",
            air: "application/vnd.adobe.air-application-installer-package+zip",
            fcdt: "application/vnd.adobe.formscentral.fcdt",
            fxp: "application/vnd.adobe.fxp",
            fxpl: "application/vnd.adobe.fxp",
            xdp: "application/vnd.adobe.xdp+xml",
            xfdf: "application/vnd.adobe.xfdf",
            age: "application/vnd.age",
            ahead: "application/vnd.ahead.space",
            azf: "application/vnd.airzip.filesecure.azf",
            azs: "application/vnd.airzip.filesecure.azs",
            azw: "application/vnd.amazon.ebook",
            acc: "application/vnd.americandynamics.acc",
            ami: "application/vnd.amiga.ami",
            apk: "application/vnd.android.package-archive",
            cii: "application/vnd.anser-web-certificate-issue-initiation",
            fti: "application/vnd.anser-web-funds-transfer-initiation",
            atx: "application/vnd.antix.game-component",
            mpkg: "application/vnd.apple.installer+xml",
            key: "application/x-iwork-keynote-sffkey",
            m3u8: "application/vnd.apple.mpegurl",
            numbers: "application/x-iwork-numbers-sffnumbers",
            pages: "application/x-iwork-pages-sffpages",
            pkpass: "application/vnd.apple.pkpass",
            swi: "application/vnd.aristanetworks.swi",
            iota: "application/vnd.astraea-software.iota",
            aep: "application/vnd.audiograph",
            bmml: "application/vnd.balsamiq.bmml+xml",
            mpm: "application/vnd.blueice.multipass",
            bmi: "application/vnd.bmi",
            rep: "application/vnd.businessobjects",
            cdxml: "application/vnd.chemdraw+xml",
            mmd: "application/vnd.chipnuts.karaoke-mmd",
            cdy: "application/vnd.cinderella",
            csl: "application/vnd.citationstyles.style+xml",
            cla: "application/vnd.claymore",
            rp9: "application/vnd.cloanto.rp9",
            c4g: "application/vnd.clonk.c4group",
            c4d: "application/vnd.clonk.c4group",
            c4f: "application/vnd.clonk.c4group",
            c4p: "application/vnd.clonk.c4group",
            c4u: "application/vnd.clonk.c4group",
            c11amc: "application/vnd.cluetrust.cartomobile-config",
            c11amz: "application/vnd.cluetrust.cartomobile-config-pkg",
            csp: "application/vnd.commonspace",
            cdbcmsg: "application/vnd.contact.cmsg",
            cmc: "application/vnd.cosmocaller",
            clkx: "application/vnd.crick.clicker",
            clkk: "application/vnd.crick.clicker.keyboard",
            clkp: "application/vnd.crick.clicker.palette",
            clkt: "application/vnd.crick.clicker.template",
            clkw: "application/vnd.crick.clicker.wordbank",
            wbs: "application/vnd.criticaltools.wbs+xml",
            pml: "application/vnd.ctc-posml",
            ppd: "application/vnd.cups-ppd",
            car: "application/vnd.curl.car",
            pcurl: "application/vnd.curl.pcurl",
            dart: "application/vnd.dart",
            rdz: "application/vnd.data-vision.rdz",
            dbf: "application/vnd.dbf",
            uvf: "application/vnd.dece.data",
            uvvf: "application/vnd.dece.data",
            uvd: "application/vnd.dece.data",
            uvvd: "application/vnd.dece.data",
            uvt: "application/vnd.dece.ttml+xml",
            uvvt: "application/vnd.dece.ttml+xml",
            uvx: "application/vnd.dece.unspecified",
            uvvx: "application/vnd.dece.unspecified",
            uvz: "application/vnd.dece.zip",
            uvvz: "application/vnd.dece.zip",
            fe_launch: "application/vnd.denovo.fcselayout-link",
            dna: "application/vnd.dna",
            mlp: "application/vnd.dolby.mlp",
            dpg: "application/vnd.dpgraph",
            dfac: "application/vnd.dreamfactory",
            kpxx: "application/vnd.ds-keypoint",
            ait: "application/vnd.dvb.ait",
            svc: "application/vnd.dvb.service",
            geo: "application/vnd.dynageo",
            mag: "application/vnd.ecowin.chart",
            nml: "application/vnd.enliven",
            esf: "application/vnd.epson.esf",
            msf: "application/vnd.epson.msf",
            qam: "application/vnd.epson.quickanime",
            slt: "application/vnd.epson.salt",
            ssf: "application/vnd.epson.ssf",
            es3: "application/vnd.eszigno3+xml",
            et3: "application/vnd.eszigno3+xml",
            ez2: "application/vnd.ezpix-album",
            ez3: "application/vnd.ezpix-package",
            fdf: "application/vnd.fdf",
            mseed: "application/vnd.fdsn.mseed",
            seed: "application/vnd.fdsn.seed",
            dataless: "application/vnd.fdsn.seed",
            gph: "application/vnd.flographit",
            ftc: "application/vnd.fluxtime.clip",
            fm: "application/vnd.framemaker",
            frame: "application/vnd.framemaker",
            maker: "application/vnd.framemaker",
            book: "application/vnd.framemaker",
            fnc: "application/vnd.frogans.fnc",
            ltf: "application/vnd.frogans.ltf",
            fsc: "application/vnd.fsc.weblaunch",
            oas: "application/vnd.fujitsu.oasys",
            oa2: "application/vnd.fujitsu.oasys2",
            oa3: "application/vnd.fujitsu.oasys3",
            fg5: "application/vnd.fujitsu.oasysgp",
            bh2: "application/vnd.fujitsu.oasysprs",
            ddd: "application/vnd.fujixerox.ddd",
            xdw: "application/vnd.fujixerox.docuworks",
            xbd: "application/vnd.fujixerox.docuworks.binder",
            fzs: "application/vnd.fuzzysheet",
            txd: "application/vnd.genomatix.tuxedo",
            ggb: "application/vnd.geogebra.file",
            ggt: "application/vnd.geogebra.tool",
            gex: "application/vnd.geometry-explorer",
            gre: "application/vnd.geometry-explorer",
            gxt: "application/vnd.geonext",
            g2w: "application/vnd.geoplan",
            g3w: "application/vnd.geospace",
            gmx: "application/vnd.gmx",
            gdoc: "application/vnd.google-apps.document",
            gslides: "application/vnd.google-apps.presentation",
            gsheet: "application/vnd.google-apps.spreadsheet",
            kml: "application/vnd.google-earth.kml+xml",
            kmz: "application/vnd.google-earth.kmz",
            gqf: "application/vnd.grafeq",
            gqs: "application/vnd.grafeq",
            gac: "application/vnd.groove-account",
            ghf: "application/vnd.groove-help",
            gim: "application/vnd.groove-identity-message",
            grv: "application/vnd.groove-injector",
            gtm: "application/vnd.groove-tool-message",
            tpl: "application/vnd.groove-tool-template",
            vcg: "application/vnd.groove-vcard",
            hal: "application/vnd.hal+xml",
            zmm: "application/vnd.handheld-entertainment+xml",
            hbci: "application/vnd.hbci",
            les: "application/vnd.hhe.lesson-player",
            hpgl: "application/vnd.hp-hpgl",
            hpid: "application/vnd.hp-hpid",
            hps: "application/vnd.hp-hps",
            jlt: "application/vnd.hp-jlyt",
            pcl: "application/vnd.hp-pcl",
            pclxl: "application/vnd.hp-pclxl",
            "sfd-hdstx": "application/vnd.hydrostatix.sof-data",
            mpy: "application/vnd.ibm.minipay",
            afp: "application/vnd.ibm.modcap",
            listafp: "application/vnd.ibm.modcap",
            list3820: "application/vnd.ibm.modcap",
            irm: "application/vnd.ibm.rights-management",
            sc: "application/vnd.ibm.secure-container",
            icc: "application/vnd.iccprofile",
            icm: "application/vnd.iccprofile",
            igl: "application/vnd.igloader",
            ivp: "application/vnd.immervision-ivp",
            ivu: "application/vnd.immervision-ivu",
            igm: "application/vnd.insors.igm",
            xpw: "application/vnd.intercon.formnet",
            xpx: "application/vnd.intercon.formnet",
            i2g: "application/vnd.intergeo",
            qbo: "application/vnd.intu.qbo",
            qfx: "application/vnd.intu.qfx",
            rcprofile: "application/vnd.ipunplugged.rcprofile",
            irp: "application/vnd.irepository.package+xml",
            xpr: "application/vnd.is-xpr",
            fcs: "application/vnd.isac.fcs",
            jam: "application/vnd.jam",
            rms: "application/vnd.jcp.javame.midlet-rms",
            jisp: "application/vnd.jisp",
            joda: "application/vnd.joost.joda-archive",
            ktz: "application/vnd.kahootz",
            ktr: "application/vnd.kahootz",
            karbon: "application/vnd.kde.karbon",
            chrt: "application/vnd.kde.kchart",
            kfo: "application/vnd.kde.kformula",
            flw: "application/vnd.kde.kivio",
            kon: "application/vnd.kde.kontour",
            kpr: "application/vnd.kde.kpresenter",
            kpt: "application/vnd.kde.kpresenter",
            ksp: "application/vnd.kde.kspread",
            kwd: "application/vnd.kde.kword",
            kwt: "application/vnd.kde.kword",
            htke: "application/vnd.kenameaapp",
            kia: "application/vnd.kidspiration",
            kne: "application/vnd.kinar",
            knp: "application/vnd.kinar",
            skp: "application/vnd.koan",
            skd: "application/vnd.koan",
            skt: "application/vnd.koan",
            skm: "application/vnd.koan",
            sse: "application/vnd.kodak-descriptor",
            lasxml: "application/vnd.las.las+xml",
            lbd: "application/vnd.llamagraphics.life-balance.desktop",
            lbe: "application/vnd.llamagraphics.life-balance.exchange+xml",
            apr: "application/vnd.lotus-approach",
            pre: "application/vnd.lotus-freelance",
            nsf: "application/vnd.lotus-notes",
            org: "text/x-org",
            scm: "application/vnd.lotus-screencam",
            lwp: "application/vnd.lotus-wordpro",
            portpkg: "application/vnd.macports.portpkg",
            mvt: "application/vnd.mapbox-vector-tile",
            mcd: "application/vnd.mcd",
            mc1: "application/vnd.medcalcdata",
            cdkey: "application/vnd.mediastation.cdkey",
            mwf: "application/vnd.mfer",
            mfm: "application/vnd.mfmp",
            flo: "application/vnd.micrografx.flo",
            igx: "application/vnd.micrografx.igx",
            mif: "application/vnd.mif",
            daf: "application/vnd.mobius.daf",
            dis: "application/vnd.mobius.dis",
            mbk: "application/vnd.mobius.mbk",
            mqy: "application/vnd.mobius.mqy",
            msl: "application/vnd.mobius.msl",
            plc: "application/vnd.mobius.plc",
            txf: "application/vnd.mobius.txf",
            mpn: "application/vnd.mophun.application",
            mpc: "application/vnd.mophun.certificate",
            xul: "application/vnd.mozilla.xul+xml",
            cil: "application/vnd.ms-artgalry",
            cab: "application/vnd.ms-cab-compressed",
            xls: "application/vnd.ms-excel",
            xlm: "application/vnd.ms-excel",
            xla: "application/vnd.ms-excel",
            xlc: "application/vnd.ms-excel",
            xlt: "application/vnd.ms-excel",
            xlw: "application/vnd.ms-excel",
            xlam: "application/vnd.ms-excel.addin.macroenabled.12",
            xlsb: "application/vnd.ms-excel.sheet.binary.macroenabled.12",
            xlsm: "application/vnd.ms-excel.sheet.macroenabled.12",
            xltm: "application/vnd.ms-excel.template.macroenabled.12",
            eot: "application/vnd.ms-fontobject",
            chm: "application/vnd.ms-htmlhelp",
            ims: "application/vnd.ms-ims",
            lrm: "application/vnd.ms-lrm",
            thmx: "application/vnd.ms-officetheme",
            msg: "application/vnd.ms-outlook",
            cat: "application/vnd.ms-pki.seccat",
            stl: "model/stl",
            ppt: "application/vnd.ms-powerpoint",
            pps: "application/vnd.ms-powerpoint",
            pot: "application/vnd.ms-powerpoint",
            ppam: "application/vnd.ms-powerpoint.addin.macroenabled.12",
            pptm: "application/vnd.ms-powerpoint.presentation.macroenabled.12",
            sldm: "application/vnd.ms-powerpoint.slide.macroenabled.12",
            ppsm: "application/vnd.ms-powerpoint.slideshow.macroenabled.12",
            potm: "application/vnd.ms-powerpoint.template.macroenabled.12",
            mpt: "application/vnd.ms-project",
            docm: "application/vnd.ms-word.document.macroenabled.12",
            dotm: "application/vnd.ms-word.template.macroenabled.12",
            wps: "application/vnd.ms-works",
            wks: "application/vnd.ms-works",
            wcm: "application/vnd.ms-works",
            wdb: "application/vnd.ms-works",
            wpl: "application/vnd.ms-wpl",
            xps: "application/vnd.ms-xpsdocument",
            mseq: "application/vnd.mseq",
            mus: "application/vnd.musician",
            msty: "application/vnd.muvee.style",
            taglet: "application/vnd.mynfc",
            nlu: "application/vnd.neurolanguage.nlu",
            ntf: "application/vnd.nitf",
            nitf: "application/vnd.nitf",
            nnd: "application/vnd.noblenet-directory",
            nns: "application/vnd.noblenet-sealer",
            nnw: "application/vnd.noblenet-web",
            ngdat: "application/vnd.nokia.n-gage.data",
            "n-gage": "application/vnd.nokia.n-gage.symbian.install",
            rpst: "application/vnd.nokia.radio-preset",
            rpss: "application/vnd.nokia.radio-presets",
            edm: "application/vnd.novadigm.edm",
            edx: "application/vnd.novadigm.edx",
            ext: "application/vnd.novadigm.ext",
            odc: "application/vnd.oasis.opendocument.chart",
            otc: "application/vnd.oasis.opendocument.chart-template",
            odb: "application/vnd.oasis.opendocument.database",
            odf: "application/vnd.oasis.opendocument.formula",
            odft: "application/vnd.oasis.opendocument.formula-template",
            odg: "application/vnd.oasis.opendocument.graphics",
            otg: "application/vnd.oasis.opendocument.graphics-template",
            odi: "application/vnd.oasis.opendocument.image",
            oti: "application/vnd.oasis.opendocument.image-template",
            odp: "application/vnd.oasis.opendocument.presentation",
            otp: "application/vnd.oasis.opendocument.presentation-template",
            ods: "application/vnd.oasis.opendocument.spreadsheet",
            ots: "application/vnd.oasis.opendocument.spreadsheet-template",
            odt: "application/vnd.oasis.opendocument.text",
            odm: "application/vnd.oasis.opendocument.text-master",
            ott: "application/vnd.oasis.opendocument.text-template",
            oth: "application/vnd.oasis.opendocument.text-web",
            xo: "application/vnd.olpc-sugar",
            dd2: "application/vnd.oma.dd2+xml",
            obgx: "application/vnd.openblox.game+xml",
            oxt: "application/vnd.openofficeorg.extension",
            osm: "application/vnd.openstreetmap.data+xml",
            pptx: "application/vnd.openxmlformats-officedocument.presentationml.presentation",
            sldx: "application/vnd.openxmlformats-officedocument.presentationml.slide",
            ppsx: "application/vnd.openxmlformats-officedocument.presentationml.slideshow",
            potx: "application/vnd.openxmlformats-officedocument.presentationml.template",
            xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            xltx: "application/vnd.openxmlformats-officedocument.spreadsheetml.template",
            docx: "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
            dotx: "application/vnd.openxmlformats-officedocument.wordprocessingml.template",
            mgp: "application/vnd.osgeo.mapguide.package",
            dp: "application/vnd.osgi.dp",
            esa: "application/vnd.osgi.subsystem",
            pdb: "application/x-pilot",
            pqa: "application/vnd.palm",
            oprc: "application/vnd.palm",
            paw: "application/vnd.pawaafile",
            str: "application/vnd.pg.format",
            ei6: "application/vnd.pg.osasli",
            efif: "application/vnd.picsel",
            wg: "application/vnd.pmi.widget",
            plf: "application/vnd.pocketlearn",
            pbd: "application/vnd.powerbuilder6",
            box: "application/vnd.previewsystems.box",
            mgz: "application/vnd.proteus.magazine",
            qps: "application/vnd.publishare-delta-tree",
            ptid: "application/vnd.pvi.ptid1",
            qxd: "application/vnd.quark.quarkxpress",
            qxt: "application/vnd.quark.quarkxpress",
            qwd: "application/vnd.quark.quarkxpress",
            qwt: "application/vnd.quark.quarkxpress",
            qxl: "application/vnd.quark.quarkxpress",
            qxb: "application/vnd.quark.quarkxpress",
            rar: "application/x-rar-compressed",
            bed: "application/vnd.realvnc.bed",
            mxl: "application/vnd.recordare.musicxml",
            musicxml: "application/vnd.recordare.musicxml+xml",
            cryptonote: "application/vnd.rig.cryptonote",
            cod: "application/vnd.rim.cod",
            rm: "application/vnd.rn-realmedia",
            rmvb: "application/vnd.rn-realmedia-vbr",
            link66: "application/vnd.route66.link66+xml",
            st: "application/vnd.sailingtracker.track",
            see: "application/vnd.seemail",
            sema: "application/vnd.sema",
            semd: "application/vnd.semd",
            semf: "application/vnd.semf",
            ifm: "application/vnd.shana.informed.formdata",
            itp: "application/vnd.shana.informed.formtemplate",
            iif: "application/vnd.shana.informed.interchange",
            ipk: "application/vnd.shana.informed.package",
            twd: "application/vnd.simtech-mindmapper",
            twds: "application/vnd.simtech-mindmapper",
            mmf: "application/vnd.smaf",
            teacher: "application/vnd.smart.teacher",
            fo: "application/vnd.software602.filler.form+xml",
            sdkm: "application/vnd.solent.sdkm+xml",
            sdkd: "application/vnd.solent.sdkm+xml",
            dxp: "application/vnd.spotfire.dxp",
            sfs: "application/vnd.spotfire.sfs",
            sdc: "application/vnd.stardivision.calc",
            sda: "application/vnd.stardivision.draw",
            sdd: "application/vnd.stardivision.impress",
            smf: "application/vnd.stardivision.math",
            sdw: "application/vnd.stardivision.writer",
            vor: "application/vnd.stardivision.writer",
            sgl: "application/vnd.stardivision.writer-global",
            smzip: "application/vnd.stepmania.package",
            sm: "application/vnd.stepmania.stepchart",
            wadl: "application/vnd.sun.wadl+xml",
            sxc: "application/vnd.sun.xml.calc",
            stc: "application/vnd.sun.xml.calc.template",
            sxd: "application/vnd.sun.xml.draw",
            std: "application/vnd.sun.xml.draw.template",
            sxi: "application/vnd.sun.xml.impress",
            sti: "application/vnd.sun.xml.impress.template",
            sxm: "application/vnd.sun.xml.math",
            sxw: "application/vnd.sun.xml.writer",
            sxg: "application/vnd.sun.xml.writer.global",
            stw: "application/vnd.sun.xml.writer.template",
            sus: "application/vnd.sus-calendar",
            susp: "application/vnd.sus-calendar",
            svd: "application/vnd.svd",
            sis: "application/vnd.symbian.install",
            sisx: "application/vnd.symbian.install",
            xsm: "application/vnd.syncml+xml",
            bdm: "application/vnd.syncml.dm+wbxml",
            xdm: "application/vnd.syncml.dm+xml",
            ddf: "application/vnd.syncml.dmddf+xml",
            tao: "application/vnd.tao.intent-module-archive",
            pcap: "application/vnd.tcpdump.pcap",
            cap: "application/vnd.tcpdump.pcap",
            dmp: "application/vnd.tcpdump.pcap",
            tmo: "application/vnd.tmobile-livetv",
            tpt: "application/vnd.trid.tpt",
            mxs: "application/vnd.triscape.mxs",
            tra: "application/vnd.trueapp",
            ufd: "application/vnd.ufdl",
            ufdl: "application/vnd.ufdl",
            utz: "application/vnd.uiq.theme",
            umj: "application/vnd.umajin",
            unityweb: "application/vnd.unity",
            uoml: "application/vnd.uoml+xml",
            vcx: "application/vnd.vcx",
            vsd: "application/vnd.visio",
            vst: "application/vnd.visio",
            vss: "application/vnd.visio",
            vsw: "application/vnd.visio",
            vis: "application/vnd.visionary",
            vsf: "application/vnd.vsf",
            wbxml: "application/vnd.wap.wbxml",
            wmlc: "application/vnd.wap.wmlc",
            wmlsc: "application/vnd.wap.wmlscriptc",
            wtb: "application/vnd.webturbo",
            nbp: "application/vnd.wolfram.player",
            wpd: "application/vnd.wordperfect",
            wqd: "application/vnd.wqd",
            stf: "application/vnd.wt.stf",
            xar: "application/vnd.xara",
            xfdl: "application/vnd.xfdl",
            hvd: "application/vnd.yamaha.hv-dic",
            hvs: "application/vnd.yamaha.hv-script",
            hvp: "application/vnd.yamaha.hv-voice",
            osf: "application/vnd.yamaha.openscoreformat",
            osfpvg: "application/vnd.yamaha.openscoreformat.osfpvg+xml",
            saf: "application/vnd.yamaha.smaf-audio",
            spf: "application/vnd.yamaha.smaf-phrase",
            cmp: "application/vnd.yellowriver-custom-menu",
            zir: "application/vnd.zul",
            zirz: "application/vnd.zul",
            zaz: "application/vnd.zzazz.deck+xml",
            vxml: "application/voicexml+xml",
            wasm: "application/wasm",
            wif: "application/watcherinfo+xml",
            wgt: "application/widget",
            hlp: "application/winhlp",
            wsdl: "application/wsdl+xml",
            wspolicy: "application/wspolicy+xml",
            "7z": "application/x-7z-compressed",
            abw: "application/x-abiword",
            ace: "application/x-ace-compressed",
            arj: "application/x-arj",
            aab: "application/x-authorware-bin",
            x32: "application/x-authorware-bin",
            u32: "application/x-authorware-bin",
            vox: "application/x-authorware-bin",
            aam: "application/x-authorware-map",
            aas: "application/x-authorware-seg",
            bcpio: "application/x-bcpio",
            torrent: "application/x-bittorrent",
            blb: "application/x-blorb",
            blorb: "application/x-blorb",
            bz: "application/x-bzip",
            bz2: "application/x-bzip2",
            boz: "application/x-bzip2",
            cbr: "application/x-cbr",
            cba: "application/x-cbr",
            cbt: "application/x-cbr",
            cbz: "application/x-cbr",
            cb7: "application/x-cbr",
            vcd: "application/x-cdlink",
            cfs: "application/x-cfs-compressed",
            chat: "application/x-chat",
            pgn: "application/x-chess-pgn",
            crx: "application/x-chrome-extension",
            cco: "application/x-cocoa",
            nsc: "application/x-conference",
            cpio: "application/x-cpio",
            csh: "application/x-csh",
            udeb: "application/x-debian-package",
            dgc: "application/x-dgc-compressed",
            dir: "application/x-director",
            dcr: "application/x-director",
            dxr: "application/x-director",
            cst: "application/x-director",
            cct: "application/x-director",
            cxt: "application/x-director",
            w3d: "application/x-director",
            fgd: "application/x-director",
            swa: "application/x-director",
            wad: "application/x-doom",
            ncx: "application/x-dtbncx+xml",
            dtb: "application/x-dtbook+xml",
            res: "application/x-dtbresource+xml",
            dvi: "application/x-dvi",
            evy: "application/x-envoy",
            eva: "application/x-eva",
            bdf: "application/x-font-bdf",
            gsf: "application/x-font-ghostscript",
            psf: "application/x-font-linux-psf",
            pcf: "application/x-font-pcf",
            snf: "application/x-font-snf",
            pfa: "application/x-font-type1",
            pfb: "application/x-font-type1",
            pfm: "application/x-font-type1",
            afm: "application/x-font-type1",
            arc: "application/x-freearc",
            spl: "application/x-futuresplash",
            gca: "application/x-gca-compressed",
            ulx: "application/x-glulx",
            gnumeric: "application/x-gnumeric",
            gramps: "application/x-gramps-xml",
            gtar: "application/x-gtar",
            hdf: "application/x-hdf",
            php: "application/x-httpd-php",
            install: "application/x-install-instructions",
            jardiff: "application/x-java-archive-diff",
            jnlp: "application/x-java-jnlp-file",
            kdbx: "application/x-keepass2",
            latex: "application/x-latex",
            luac: "application/x-lua-bytecode",
            lzh: "application/x-lzh-compressed",
            lha: "application/x-lzh-compressed",
            run: "application/x-makeself",
            mie: "application/x-mie",
            prc: "application/x-pilot",
            mobi: "application/x-mobipocket-ebook",
            application: "application/x-ms-application",
            lnk: "application/x-ms-shortcut",
            wmd: "application/x-ms-wmd",
            wmz: "application/x-msmetafile",
            xbap: "application/x-ms-xbap",
            mdb: "application/x-msaccess",
            obd: "application/x-msbinder",
            crd: "application/x-mscardfile",
            clp: "application/x-msclip",
            com: "application/x-msdownload",
            bat: "application/x-msdownload",
            mvb: "application/x-msmediaview",
            m13: "application/x-msmediaview",
            m14: "application/x-msmediaview",
            wmf: "image/wmf",
            emf: "image/emf",
            emz: "application/x-msmetafile",
            mny: "application/x-msmoney",
            pub: "application/x-mspublisher",
            scd: "application/x-msschedule",
            trm: "application/x-msterminal",
            wri: "application/x-mswrite",
            nc: "application/x-netcdf",
            cdf: "application/x-netcdf",
            pac: "application/x-ns-proxy-autoconfig",
            nzb: "application/x-nzb",
            pl: "application/x-perl",
            pm: "application/x-perl",
            p12: "application/x-pkcs12",
            pfx: "application/x-pkcs12",
            p7b: "application/x-pkcs7-certificates",
            spc: "application/x-pkcs7-certificates",
            p7r: "application/x-pkcs7-certreqresp",
            rpm: "application/x-redhat-package-manager",
            ris: "application/x-research-info-systems",
            sea: "application/x-sea",
            sh: "application/x-sh",
            shar: "application/x-shar",
            swf: "application/x-shockwave-flash",
            xap: "application/x-silverlight-app",
            sql: "application/x-sql",
            sit: "application/x-stuffit",
            sitx: "application/x-stuffitx",
            srt: "application/x-subrip",
            sv4cpio: "application/x-sv4cpio",
            sv4crc: "application/x-sv4crc",
            t3: "application/x-t3vm-image",
            gam: "application/x-tads",
            tar: "application/x-tar",
            tcl: "application/x-tcl",
            tk: "application/x-tcl",
            tex: "application/x-tex",
            tfm: "application/x-tex-tfm",
            texinfo: "application/x-texinfo",
            texi: "application/x-texinfo",
            obj: "model/obj",
            ustar: "application/x-ustar",
            hdd: "application/x-virtualbox-hdd",
            ova: "application/x-virtualbox-ova",
            ovf: "application/x-virtualbox-ovf",
            vbox: "application/x-virtualbox-vbox",
            "vbox-extpack": "application/x-virtualbox-vbox-extpack",
            vdi: "application/x-virtualbox-vdi",
            vhd: "application/x-virtualbox-vhd",
            vmdk: "application/x-virtualbox-vmdk",
            src: "application/x-wais-source",
            webapp: "application/x-web-app-manifest+json",
            der: "application/x-x509-ca-cert",
            crt: "application/x-x509-ca-cert",
            pem: "application/x-x509-ca-cert",
            fig: "application/x-xfig",
            xlf: "application/xliff+xml",
            xpi: "application/x-xpinstall",
            xz: "application/x-xz",
            z1: "application/x-zmachine",
            z2: "application/x-zmachine",
            z3: "application/x-zmachine",
            z4: "application/x-zmachine",
            z5: "application/x-zmachine",
            z6: "application/x-zmachine",
            z7: "application/x-zmachine",
            z8: "application/x-zmachine",
            xaml: "application/xaml+xml",
            xav: "application/xcap-att+xml",
            xca: "application/xcap-caps+xml",
            xdf: "application/xcap-diff+xml",
            xel: "application/xcap-el+xml",
            xns: "application/xcap-ns+xml",
            xenc: "application/xenc+xml",
            xhtml: "application/xhtml+xml",
            xht: "application/xhtml+xml",
            xml: "text/xml",
            xsl: "application/xslt+xml",
            xsd: "application/xml",
            rng: "application/xml",
            dtd: "application/xml-dtd",
            xop: "application/xop+xml",
            xpl: "application/xproc+xml",
            xslt: "application/xslt+xml",
            xspf: "application/xspf+xml",
            mxml: "application/xv+xml",
            xhvml: "application/xv+xml",
            xvml: "application/xv+xml",
            xvm: "application/xv+xml",
            yang: "application/yang",
            yin: "application/yin+xml",
            zip: "application/zip",
            "3gpp": "video/3gpp",
            adp: "audio/adpcm",
            amr: "audio/amr",
            au: "audio/basic",
            snd: "audio/basic",
            mid: "audio/midi",
            midi: "audio/midi",
            kar: "audio/midi",
            rmi: "audio/midi",
            mxmf: "audio/mobile-xmf",
            mp3: "audio/mpeg",
            m4a: "audio/x-m4a",
            mp4a: "audio/mp4",
            mpga: "audio/mpeg",
            mp2: "audio/mpeg",
            mp2a: "audio/mpeg",
            m2a: "audio/mpeg",
            m3a: "audio/mpeg",
            oga: "audio/ogg",
            ogg: "audio/ogg",
            spx: "audio/ogg",
            opus: "audio/ogg",
            s3m: "audio/s3m",
            sil: "audio/silk",
            uva: "audio/vnd.dece.audio",
            uvva: "audio/vnd.dece.audio",
            eol: "audio/vnd.digital-winds",
            dra: "audio/vnd.dra",
            dts: "audio/vnd.dts",
            dtshd: "audio/vnd.dts.hd",
            lvp: "audio/vnd.lucent.voice",
            pya: "audio/vnd.ms-playready.media.pya",
            ecelp4800: "audio/vnd.nuera.ecelp4800",
            ecelp7470: "audio/vnd.nuera.ecelp7470",
            ecelp9600: "audio/vnd.nuera.ecelp9600",
            rip: "audio/vnd.rip",
            wav: "audio/x-wav",
            weba: "audio/webm",
            aac: "audio/x-aac",
            aif: "audio/x-aiff",
            aiff: "audio/x-aiff",
            aifc: "audio/x-aiff",
            caf: "audio/x-caf",
            flac: "audio/x-flac",
            mka: "audio/x-matroska",
            m3u: "audio/x-mpegurl",
            wax: "audio/x-ms-wax",
            wma: "audio/x-ms-wma",
            ram: "audio/x-pn-realaudio",
            ra: "audio/x-realaudio",
            rmp: "audio/x-pn-realaudio-plugin",
            xm: "audio/xm",
            cdx: "chemical/x-cdx",
            cif: "chemical/x-cif",
            cmdf: "chemical/x-cmdf",
            cml: "chemical/x-cml",
            csml: "chemical/x-csml",
            xyz: "chemical/x-xyz",
            ttc: "font/collection",
            otf: "font/otf",
            ttf: "font/ttf",
            woff: "font/woff",
            woff2: "font/woff2",
            exr: "image/aces",
            apng: "image/apng",
            avci: "image/avci",
            avcs: "image/avcs",
            avif: "image/avif",
            bmp: "image/x-ms-bmp",
            cgm: "image/cgm",
            drle: "image/dicom-rle",
            fits: "image/fits",
            g3: "image/g3fax",
            gif: "image/gif",
            heic: "image/heic",
            heics: "image/heic-sequence",
            heif: "image/heif",
            heifs: "image/heif-sequence",
            hej2: "image/hej2k",
            hsj2: "image/hsj2",
            ief: "image/ief",
            jls: "image/jls",
            jp2: "image/jp2",
            jpg2: "image/jp2",
            jpeg: "image/jpeg",
            jpg: "image/jpeg",
            jpe: "image/jpeg",
            jph: "image/jph",
            jhc: "image/jphc",
            jpm: "video/jpm",
            jpx: "image/jpx",
            jpf: "image/jpx",
            jxr: "image/jxr",
            jxra: "image/jxra",
            jxrs: "image/jxrs",
            jxs: "image/jxs",
            jxsc: "image/jxsc",
            jxsi: "image/jxsi",
            jxss: "image/jxss",
            ktx: "image/ktx",
            ktx2: "image/ktx2",
            png: "image/png",
            btif: "image/prs.btif",
            pti: "image/prs.pti",
            sgi: "image/sgi",
            svg: "image/svg+xml",
            svgz: "image/svg+xml",
            t38: "image/t38",
            tif: "image/tiff",
            tiff: "image/tiff",
            tfx: "image/tiff-fx",
            psd: "image/vnd.adobe.photoshop",
            azv: "image/vnd.airzip.accelerator.azv",
            uvi: "image/vnd.dece.graphic",
            uvvi: "image/vnd.dece.graphic",
            uvg: "image/vnd.dece.graphic",
            uvvg: "image/vnd.dece.graphic",
            djvu: "image/vnd.djvu",
            djv: "image/vnd.djvu",
            sub: "text/vnd.dvb.subtitle",
            dwg: "image/vnd.dwg",
            dxf: "image/vnd.dxf",
            fbs: "image/vnd.fastbidsheet",
            fpx: "image/vnd.fpx",
            fst: "image/vnd.fst",
            mmr: "image/vnd.fujixerox.edmics-mmr",
            rlc: "image/vnd.fujixerox.edmics-rlc",
            ico: "image/x-icon",
            dds: "image/vnd.ms-dds",
            mdi: "image/vnd.ms-modi",
            wdp: "image/vnd.ms-photo",
            npx: "image/vnd.net-fpx",
            b16: "image/vnd.pco.b16",
            tap: "image/vnd.tencent.tap",
            vtf: "image/vnd.valve.source.texture",
            wbmp: "image/vnd.wap.wbmp",
            xif: "image/vnd.xiff",
            pcx: "image/x-pcx",
            webp: "image/webp",
            "3ds": "image/x-3ds",
            ras: "image/x-cmu-raster",
            cmx: "image/x-cmx",
            fh: "image/x-freehand",
            fhc: "image/x-freehand",
            fh4: "image/x-freehand",
            fh5: "image/x-freehand",
            fh7: "image/x-freehand",
            jng: "image/x-jng",
            sid: "image/x-mrsid-image",
            pic: "image/x-pict",
            pct: "image/x-pict",
            pnm: "image/x-portable-anymap",
            pbm: "image/x-portable-bitmap",
            pgm: "image/x-portable-graymap",
            ppm: "image/x-portable-pixmap",
            rgb: "image/x-rgb",
            tga: "image/x-tga",
            xbm: "image/x-xbitmap",
            xpm: "image/x-xpixmap",
            xwd: "image/x-xwindowdump",
            "disposition-notification": "message/disposition-notification",
            u8msg: "message/global",
            u8dsn: "message/global-delivery-status",
            u8mdn: "message/global-disposition-notification",
            u8hdr: "message/global-headers",
            eml: "message/rfc822",
            mime: "message/rfc822",
            wsc: "message/vnd.wfa.wsc",
            "3mf": "model/3mf",
            gltf: "model/gltf+json",
            glb: "model/gltf-binary",
            igs: "model/iges",
            iges: "model/iges",
            msh: "model/mesh",
            mesh: "model/mesh",
            silo: "model/mesh",
            mtl: "model/mtl",
            stpx: "model/step+xml",
            stpz: "model/step+zip",
            stpxz: "model/step-xml+zip",
            dae: "model/vnd.collada+xml",
            dwf: "model/vnd.dwf",
            gdl: "model/vnd.gdl",
            gtw: "model/vnd.gtw",
            mts: "model/vnd.mts",
            ogex: "model/vnd.opengex",
            x_b: "model/vnd.parasolid.transmit.binary",
            x_t: "model/vnd.parasolid.transmit.text",
            vds: "model/vnd.sap.vds",
            usdz: "model/vnd.usdz+zip",
            bsp: "model/vnd.valve.source.compiled-map",
            vtu: "model/vnd.vtu",
            wrl: "model/vrml",
            vrml: "model/vrml",
            x3db: "model/x3d+fastinfoset",
            x3dbz: "model/x3d+binary",
            x3dv: "model/x3d-vrml",
            x3dvz: "model/x3d+vrml",
            x3d: "model/x3d+xml",
            x3dz: "model/x3d+xml",
            appcache: "text/cache-manifest",
            manifest: "text/cache-manifest",
            ics: "text/calendar",
            ifb: "text/calendar",
            coffee: "text/coffeescript",
            litcoffee: "text/coffeescript",
            css: "text/css",
            csv: "text/csv",
            html: "text/html",
            htm: "text/html",
            shtml: "text/html",
            jade: "text/jade",
            jsx: "text/jsx",
            less: "text/less",
            markdown: "text/markdown",
            md: "text/markdown",
            mml: "text/mathml",
            mdx: "text/mdx",
            n3: "text/n3",
            txt: "text/plain",
            text: "text/plain",
            conf: "text/plain",
            def: "text/plain",
            list: "text/plain",
            log: "text/plain",
            in: "text/plain",
            ini: "text/plain",
            dsc: "text/prs.lines.tag",
            rtx: "text/richtext",
            sgml: "text/sgml",
            sgm: "text/sgml",
            shex: "text/shex",
            slim: "text/slim",
            slm: "text/slim",
            spdx: "text/spdx",
            stylus: "text/stylus",
            styl: "text/stylus",
            tsv: "text/tab-separated-values",
            t: "text/troff",
            tr: "text/troff",
            roff: "text/troff",
            man: "text/troff",
            me: "text/troff",
            ms: "text/troff",
            ttl: "text/turtle",
            uri: "text/uri-list",
            uris: "text/uri-list",
            urls: "text/uri-list",
            vcard: "text/vcard",
            curl: "text/vnd.curl",
            dcurl: "text/vnd.curl.dcurl",
            mcurl: "text/vnd.curl.mcurl",
            scurl: "text/vnd.curl.scurl",
            ged: "text/vnd.familysearch.gedcom",
            fly: "text/vnd.fly",
            flx: "text/vnd.fmi.flexstor",
            gv: "text/vnd.graphviz",
            "3dml": "text/vnd.in3d.3dml",
            spot: "text/vnd.in3d.spot",
            jad: "text/vnd.sun.j2me.app-descriptor",
            wml: "text/vnd.wap.wml",
            wmls: "text/vnd.wap.wmlscript",
            vtt: "text/vtt",
            s: "text/x-asm",
            asm: "text/x-asm",
            c: "text/x-c",
            cc: "text/x-c",
            cxx: "text/x-c",
            cpp: "text/x-c",
            h: "text/x-c",
            hh: "text/x-c",
            dic: "text/x-c",
            htc: "text/x-component",
            f: "text/x-fortran",
            for: "text/x-fortran",
            f77: "text/x-fortran",
            f90: "text/x-fortran",
            hbs: "text/x-handlebars-template",
            java: "text/x-java-source",
            lua: "text/x-lua",
            mkd: "text/x-markdown",
            nfo: "text/x-nfo",
            opml: "text/x-opml",
            p: "text/x-pascal",
            pas: "text/x-pascal",
            pde: "text/x-processing",
            sass: "text/x-sass",
            scss: "text/x-scss",
            etx: "text/x-setext",
            sfv: "text/x-sfv",
            ymp: "text/x-suse-ymp",
            uu: "text/x-uuencode",
            vcs: "text/x-vcalendar",
            vcf: "text/x-vcard",
            yaml: "text/yaml",
            yml: "text/yaml",
            "3gp": "video/3gpp",
            "3g2": "video/3gpp2",
            h261: "video/h261",
            h263: "video/h263",
            h264: "video/h264",
            m4s: "video/iso.segment",
            jpgv: "video/jpeg",
            jpgm: "video/jpm",
            mj2: "video/mj2",
            mjp2: "video/mj2",
            ts: "video/mp2t",
            mp4: "video/mp4",
            mp4v: "video/mp4",
            mpg4: "video/mp4",
            mpeg: "video/mpeg",
            mpg: "video/mpeg",
            mpe: "video/mpeg",
            m1v: "video/mpeg",
            m2v: "video/mpeg",
            ogv: "video/ogg",
            qt: "video/quicktime",
            mov: "video/quicktime",
            uvh: "video/vnd.dece.hd",
            uvvh: "video/vnd.dece.hd",
            uvm: "video/vnd.dece.mobile",
            uvvm: "video/vnd.dece.mobile",
            uvp: "video/vnd.dece.pd",
            uvvp: "video/vnd.dece.pd",
            uvs: "video/vnd.dece.sd",
            uvvs: "video/vnd.dece.sd",
            uvv: "video/vnd.dece.video",
            uvvv: "video/vnd.dece.video",
            dvb: "video/vnd.dvb.file",
            fvt: "video/vnd.fvt",
            mxu: "video/vnd.mpegurl",
            m4u: "video/vnd.mpegurl",
            pyv: "video/vnd.ms-playready.media.pyv",
            uvu: "video/vnd.uvvu.mp4",
            uvvu: "video/vnd.uvvu.mp4",
            viv: "video/vnd.vivo",
            webm: "video/webm",
            f4v: "video/x-f4v",
            fli: "video/x-fli",
            flv: "video/x-flv",
            m4v: "video/x-m4v",
            mkv: "video/x-matroska",
            mk3d: "video/x-matroska",
            mks: "video/x-matroska",
            mng: "video/x-mng",
            asf: "video/x-ms-asf",
            asx: "video/x-ms-asf",
            vob: "video/x-ms-vob",
            wm: "video/x-ms-wm",
            wmv: "video/x-ms-wmv",
            wmx: "video/x-ms-wmx",
            wvx: "video/x-ms-wvx",
            avi: "video/x-msvideo",
            movie: "video/x-sgi-movie",
            smv: "video/x-smv",
            ice: "x-conference/x-cooltalk"
        }
    }
    ,
    27324: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.isMemberSystem = E.isTypingIndicator = E.isTextMessage = void 0,
            E.isButtonAction = J,
            E.isCardAction = $,
            E.isMessageFor = k,
            E.isMemberFor = P,
            E.newMessage = M,
            E.newSimpleMessage = Q,
            E.newMember = O,
            E.fromSystem = F,
            E.ignoreMessage = D,
            E.systemMessage = z,
            E.textMessage = G,
            E.rejoinMessage = V;
        const Y = a(81011);
        function J(K) {
            return K.type === "button"
        }
        function $(K) {
            return K.type === "card"
        }
        function k(K) {
            return te => te.type === K
        }
        function P(...K) {
            return te => K.includes(te.role)
        }
        function M(K) {
            return K.id || (K.id = (0,
                Y.nanoid)()),
            K.timestamp || (K.timestamp = Date.now()),
            K.status || (K.status = "none"),
            K.tip || (K.tip = null),
            K.files || (K.files = []),
                K
        }
        function Q(K) {
            return K
        }
        function O(K) {
            return K.id || (K.id = K.role),
                K
        }
        E.isTextMessage = k("text"),
            E.isTypingIndicator = k("typing_indicator"),
            E.isMemberSystem = P("system");
        function F() {
            return O({
                role: "system"
            })
        }
        function D() {
            return M({
                id: (0,
                    Y.nanoid)(),
                type: "ignore",
                content: null,
                timestamp: Date.now(),
                from: F()
            })
        }
        function z({id: K=(0,
            Y.nanoid)(), message: te, timestamp: ee, hideTimestamp: pe}) {
            return M({
                id: K,
                type: "system",
                content: te,
                timestamp: ee,
                from: F(),
                hideTimestamp: pe
            })
        }
        function G({id: K=(0,
            Y.nanoid)(), ...te}) {
            return M({
                id: K,
                type: "text",
                ...te
            })
        }
        function V(K) {
            return M({
                type: "rejoin",
                from: O({
                    role: "bot",
                    name: "Bot"
                }),
                content: null,
                action: {
                    type: "rejoin",
                    url: K
                }
            })
        }
    }
    ,
    82162: (pn, E) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.sayMany = Y;
        function a(J, $) {
            const k = [...$].filter(P => P.from.id === J.from.id && P.seqid !== void 0 && P.id !== J.id).sort( (P, M) => M.timestamp - P.timestamp)[0];
            k && J.seqid && k.seqid && !isNaN(Number(J.seqid)) && !isNaN(Number(k.seqid)) && (J.timestamp = k.timestamp + (J.seqid - k.seqid))
        }
        function Y(J) {
            for (const $ of J)
                a($, J);
            return J
        }
    }
    ,
    10141: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.isChatMessage = mt,
            E.isTypingIndicatorMessage = jn,
            E.beboolean = ve,
            E.useSentTime = or,
            E.useReceivedTime = pt,
            E.getFromRole = Ke,
            E.transformZpnsMessage = Ne,
            E.isZpnsMessage = Gt,
            E.isZpnsContent = en,
            E.zpnsContent = rn,
            E.transformHistory = rr,
            E.getTranscriptContent = kr;
        const Y = a(32486)
            , J = a(22354)
            , $ = a(10909)
            , k = a(75641)
            , P = a(50154)
            , M = a(57622)
            , Q = a(25488)
            , O = a(99191)
            , F = a(69192)
            , D = a(99101)
            , z = a(13121)
            , G = a(27324);
        function V() {
            return (0,
                G.newMember)({
                role: "system"
            })
        }
        function K() {
            return (0,
                G.newMessage)({
                id: (0,
                    Y.v4)(),
                type: "ignore",
                content: null,
                timestamp: Date.now(),
                from: V()
            })
        }
        function te({id: Re=(0,
            Y.v4)(), message: Et, timestamp: An, hideTimestamp: Yt}) {
            return (0,
                G.newMessage)({
                id: Re,
                type: "system",
                content: Et,
                timestamp: An,
                from: V(),
                hideTimestamp: Yt
            })
        }
        const ee = (0,
            G.isMessageFor)("localBase64File")
            , pe = (0,
            G.isMessageFor)("localFile")
            , ne = (0,
            G.isMessageFor)("remoteFile")
            , X = (0,
            G.isMessageFor)("richText")
            , x = (0,
            G.isMessageFor)("card")
            , H = (0,
            G.isMessageFor)("textImage")
            , q = (0,
            G.isMessageFor)("link")
            , _e = (0,
            G.isMessageFor)("textLink")
            , ie = (0,
            G.isMessageFor)("upgrade")
            , ze = (0,
            G.isMessageFor)("viewTicketForm")
            , Oe = (0,
            G.isMessageFor)("rejoin")
            , Cn = (0,
            G.isMemberFor)("customer", "agent", "supervisor")
            , at = (0,
            G.isMemberFor)("bot");
        function Sn(Re) {
            return {
                id: Re.type === 10 ? "bot" : Re.userId,
                email: Re.email,
                firstName: Re.firstName,
                lastName: Re.lastName,
                displayName: Re.type === 10 ? Re.name : Re.displayName,
                avatar: (Et => {
                        switch (Et.profilePictureSource) {
                            case 1:
                                return {
                                    type: "name",
                                    color: Et.profilePictureBackgroundColor
                                };
                            case 2:
                                return Et.personalProfileAvatar ? {
                                    type: "image",
                                    url: Et.personalProfileAvatar
                                } : void 0;
                            case 3:
                                return Et.profilePicturePreviewUrl ? {
                                    type: "image",
                                    url: Et.profilePicturePreviewUrl,
                                    cacheKey: Et.type === 2 ? `${Et.engagementId ? `${Et.engagementId}:` : ""}${Et.userId || ""}` : void 0
                                } : void 0;
                            default:
                                return
                        }
                    }
                )(Re)
            }
        }
        function Ce(Re, Et, An=[]) {
            const gn = `[${An.find(Qe => Qe.id === Et.from.id)?.displayName ?? Re}@${new Date(Et.timestamp).toISOString()}]`;
            if ((0,
                G.isTextMessage)(Et))
                return `${gn}: ${Et.content}`;
            if (pe(Et) || ne(Et)) {
                try {
                    if (Array.isArray(Et?.files) && Et?.files.length && Et?.files[0]?.name && Et?.content?.name)
                        return `${gn}: [${(0,
                            z.getFileType)(Et?.content?.name) ?? "File"}|${Et?.content?.name}]`
                } catch {}
                return `${gn}: [File]`
            } else if (X(Et))
                try {
                    const Qe = JSON.parse(Et.content.json);
                    return `${gn}: ${(0,
                        D.getTextFromQuillContent)(Qe)}`
                } catch {
                    return `${gn}: ${Et.content.json}`
                }
            else if (H(Et))
                try {
                    const Qe = JSON.parse(Et.content.text);
                    return `${gn}: ${(0,
                        D.getTextFromQuillContent)(Qe)}`
                } catch {
                    return `${gn}: ${Et.content.text}`
                }
            else if (_e(Et))
                try {
                    const {answerText: Qe, url: ar, title: zt} = Et?.content || {};
                    let Zt = "";
                    return zt && (Zt = zt + `
`),
                    Qe && (Zt += Qe + `
`),
                    ar && (Zt += "Link: " + encodeURI(ar) + `
`),
                        Zt ? `${gn}: ${Zt}` : `${gn}: [Unsupported message]`
                } catch {
                    return `${gn}: [Unsupported message]`
                }
            else
                return `${gn}: [Unsupported message]`
        }
        function wn(Re) {
            return Date.now() - Re.timestamp >= 5e3
        }
        function Ae(Re, Et) {
            return Object.entries(Re).reduce( (An, [Yt,gn]) => (gn.timestamp >= Et[Yt] && An.push(gn),
                An), [])
        }
        function nr(Re, Et="") {
            console.log("[Chat] processMessages", Re, Et);
            const An = [];
            let Yt = {}
                , gn = {};
            for (const Qe of Re)
                if (Qe.type !== "ignore") {
                    if ((typeof gn[Qe.from.id] > "u" || Qe.timestamp > gn[Qe.from.id]) && (gn[Qe.from.id] = Qe.timestamp),
                        (0,
                            G.isTypingIndicator)(Qe)) {
                        if (Qe.from.id === Et || wn(Qe) || Yt[Qe.from.id]?.timestamp >= Qe.timestamp)
                            continue;
                        Yt[Qe.from.id] = Qe;
                        continue
                    }
                    if (ie(Qe) || Oe(Qe) || ze(Qe)) {
                        An.push(Qe);
                        continue
                    }
                    Qe.content && (X(Qe) ? (Qe.content.json || Qe.action || Qe.files) && An.push(Qe) : An.push(Qe)),
                        An.push(...(Qe.files ?? []).map( (ar, zt) => (0,
                            G.newMessage)({
                            ...Qe,
                            id: `${Qe.id}__file__${zt}`,
                            type: "remoteFile",
                            content: {
                                ...ar,
                                messageId: Qe.id
                            },
                            action: void 0
                        })))
                }
            return console.log("[Chat] data", An),
            Object.keys(Yt).length > 0 && An.push(...Ae(Yt, gn)),
                An
        }
        function mt(Re) {
            return Re.name === "/chat/message"
        }
        function jn(Re) {
            return Re.name === "/chat/typingIndicator"
        }
        function ve(Re) {
            return typeof Re == "boolean" ? Re : Re === "true" ? !0 : Re === "false" ? !1 : typeof Re == "number" ? Re !== 0 : !!Re
        }
        function or(Re, Et) {
            return Re.timestamp = Et.sendTime,
                Re
        }
        function pt(Re) {
            return Re.timestamp = Date.now(),
                Re
        }
        const je = {
            1: "agent",
            2: "customer",
            3: "supervisor",
            4: "outgoing",
            10: "bot"
        };
        function Ke(Re) {
            return je[Re.fromType]
        }
        function it(Re) {
            if ((0,
                Q.isTypingIndicator2)(Re))
                return (0,
                    Q.getMessageFromTypingIndicator)(Re);
            if ((0,
                F.isUserContent)(Re))
                return (0,
                    F.getMessageFromUser)(Re);
            if ((0,
                O.isUpgradeContent)(Re))
                return (0,
                    O.getMessageFromUpgrade)(Re);
            if ((0,
                P.isRejoinContent)(Re))
                return (0,
                    P.getMessageFromRejoin)(Re);
            if ((0,
                M.isSystemContent)(Re))
                return (0,
                    M.getMessageFromSystem)(Re);
            if ((0,
                k.isFileContent)(Re))
                return (0,
                    k.getMessageFromFile)(Re);
            try {
                if ((0,
                    $.isBotContent)(Re))
                    return (0,
                        $.getMessageFromBot)(Re)
            } catch (Et) {
                console.error("[Chat] error while transforming BOT content", Et)
            }
            return (0,
                J.isActionContent)(Re) ? (0,
                J.getMessageFromAction)(Re) : Re.type === "ACTION" || !Re.type ? K() : te({
                id: Re.eventId,
                message: `Unknown message type: ${Re.type}`
            })
        }
        function Ne(Re) {
            return or(it(Re), Re)
        }
        function Gt(Re) {
            return Object.prototype.hasOwnProperty.call(Re, "name") && Object.prototype.hasOwnProperty.call(Re, "content")
        }
        function en(Re) {
            return Object.prototype.hasOwnProperty.call(Re, "type") && Object.prototype.hasOwnProperty.call(Re, "from") && Object.prototype.hasOwnProperty.call(Re, "sendTime")
        }
        function rn(Re) {
            const Et = vr(Re);
            return Tt(Et, Re),
                Et
        }
        function Tt(Re, Et) {
            Re.eventId || (Re.eventId = Et.event_id)
        }
        function vr(Re) {
            return Re.content ? Re.content : JSON.parse(Re.event)
        }
        function rr(Re) {
            return Re.filter(Et => mt(Et) || jn(Et)).map(Et => {
                    try {
                        const An = rn(Et);
                        !An.eventId && Et.event_id && (An.eventId = Et.event_id);
                        const Yt = Ne(An);
                        return Yt.seqid = An.messageSeqId,
                        Et.extension && (Yt.extension = Object.fromEntries(Object.entries(Et.extension).map( ([gn,Qe]) => [gn, {
                            enabled: ve(Qe),
                            active: !1
                        }]))),
                        q(Yt) && (Yt.content.openNow = !1),
                            Yt
                    } catch (An) {
                        return console.error("Process message failed", Et, An),
                            null
                    }
                }
            ).filter(Et => Et !== null)
        }
        function kr(Re, Et=[]) {
            return nr(Re).filter(An => (0,
                G.isTypingIndicator)(An) ? !1 : Cn(An.from) || (0,
                G.isMemberFor)("bot")(An.from)).map(An => Ce(An.from.name, An, Et)).join(`

`)
        }
    }
    ,
    4666: (pn, E) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.validateURLpattern = void 0,
            E.isDelta = z,
            E.isUrl = V,
            E.isContainerBlock = a,
            E.isBlockquote = Y,
            E.isList = J,
            E.isHeader = $,
            E.isBlockAttribute = k,
            E.sliceFromReverseWhile = P,
            E.convert = M,
            E.tokenizeWithNewLines = Q,
            E.pairOpsWithTheirBlock = O,
            E.getGroupedOps = F,
            E.mergeList = D;
        function a(K) {
            return Y(K) || J(K) || $(K) || k(K)
        }
        function Y(K) {
            return !!K.attributes.blockquote
        }
        function J(K) {
            return K.attributes.list === "ordered" || K.attributes.list === "bullet"
        }
        function $(K) {
            return !!K.attributes.header
        }
        function k(K) {
            const te = K.attributes;
            return !!(te.align || te.direction || te.indent)
        }
        function P(K, te, ee) {
            let pe = {
                elements: [],
                sliceStartsAt: -1
            };
            for (let ne = te; ne >= 0 && ee(K[ne]); ne--)
                pe.sliceStartsAt = ne,
                    pe.elements.unshift(K[ne]);
            return pe
        }
        function M(K=[]) {
            return K.map(ee => {
                    if (!ee || typeof ee != "object")
                        return [];
                    if (typeof ee.insert == "object" || ee.insert === `
`)
                        return [ee];
                    let pe = Q(`${ee.insert}`);
                    if (pe.length === 1)
                        return [ee];
                    let ne = Object.assign({}, ee, {
                        insert: `
`
                    });
                    return pe.map(X => X === `
` ? ne : Object.assign({}, ee, {
                        insert: X
                    }))
                }
            ).flat().map(ee => ({
                attributes: ee.attributes || {},
                insert: ee.insert
            }))
        }
        function Q(K) {
            const te = `
`;
            if (K === te)
                return [K];
            let ee = K.split(te);
            if (ee.length === 1)
                return ee;
            let pe = ee.length - 1;
            return ee.reduce( (ne, X, x) => (x !== pe ? X !== "" ? ne = ne.concat(X, te) : ne.push(te) : X !== "" && ne.push(X),
                ne), [])
        }
        function O(K) {
            let te = [];
            const ee = x => !(x.insert === `
` || a(x))
                , pe = x => !a(x);
            let ne = K.length - 1, X;
            for (let x = ne; x >= 0; x--) {
                let H = K[x];
                a(H) ? (X = P(K, x - 1, ee),
                    te.push({
                        op: H,
                        ops: X.elements
                    }),
                    x = X.sliceStartsAt > -1 ? X.sliceStartsAt : x) : (X = P(K, x - 1, pe),
                    te.push({
                        ops: X.elements.concat(H)
                    }),
                    x = X.sliceStartsAt > -1 ? X.sliceStartsAt : x)
            }
            return te.reverse(),
                te
        }
        function F(K=[]) {
            let te = M(K)
                , ee = O(te);
            return D(ee)
        }
        function D(K=[]) {
            let te = []
                , ee = [];
            for (let pe = 0; pe < K.length; pe++) {
                let ne = K[pe].op?.attributes;
                ne && ne.list === "bullet" ? (ee.length && ee[0].op.attributes.list !== "bullet" && (te.push(ee),
                    ee = []),
                    ee.push(K[pe])) : ne && ne?.list === "ordered" ? (ee.length && ee[0].op.attributes.list !== "ordered" && (te.push(ee),
                    ee = []),
                    ee.push(K[pe])) : (ee.length && (te.push(ee),
                    ee = []),
                    te.push(K[pe]))
            }
            return ee.length && te.push(ee),
                te
        }
        function z(K) {
            return typeof K == "object" && K.ops
        }
        const G = () => /^(?:(?:https?):\/\/)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/\S*)?$/gi;
        E.validateURLpattern = G;
        function V(K) {
            return (0,
                E.validateURLpattern)().test(K)
        }
    }
    ,
    33332: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(pe) {
                return pe && pe.__esModule ? pe : {
                    default: pe
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.generateTranscript = te,
            E.generateSmartNotesString = ee;
        const J = a(76856)
            , $ = Y(a(76709))
            , k = a(56405)
            , P = a(82162)
            , M = a(10141)
            , Q = a(43027)
            , O = a(30824)
            , F = a(53019)
            , {fetchHistoryByEngagement: D} = J.chatApi
            , {getMembers: z} = J.engagementApi;
        async function G(pe) {
            const [ne,X] = await (0,
                k.tryApiCatch)(z, {
                engagementId: pe
            });
            return ne ? [] : X?.result ?? []
        }
        async function V(pe) {
            const [ne,X] = await Promise.allSettled([D(pe), G(pe)])
                , x = X?.value
                , q = ne?.value
                , _e = x;
            return (0,
                M.getTranscriptContent)((0,
                P.sayMany)((0,
                M.transformHistory)(q)).sort( (ze, Oe) => ze.timestamp - Oe.timestamp), _e)
        }
        async function K(pe) {
            const [ne,X] = await (0,
                k.tryApiCatch)(Q.fetchTranscriptMetadataForCrm, {
                engagementId: pe
            });
            if (ne)
                throw console.error("[Messaging] buildTranscriptV2 error", ne),
                    new Error(ne);
            return X.reduce( (x, H) => H.name === "System Message" ? `${x}

${H.message}` : H.name ? `${x}

[${H.name}@${H.time}] : ${H.message}` : x, "")
        }
        async function te(pe, ne=!0) {
            const X = $.default.getters?.["CrmCommonModule/crmCommonFeatures"] || {}
                , {enableCtiTranscriptApiUsage: x} = X;
            console.log("[Messaging] featureFlags", X, x);
            try {
                if (!pe)
                    return console.error("[Messaging] Transcript error while generating transcript - no engagementId"),
                        "";
                let H = "";
                return x ? H = await K(pe) : H = await V(pe),
                H && (H = `${ne ? "Chat" : "SMS"} Transcript: 

${H}`),
                    console.log("[Messaging] Transcript generated", H),
                    H
            } catch (H) {
                console.error("[Messaging] Transcript  error while generating transcript", H)
            }
        }
        function ee(pe) {
            const ne = (0,
                O.getCurrentEngagementNotes)(pe)
                , X = $.default.getters.user;
            if (!Array.isArray(ne))
                return "";
            const H = (ne.filter(ie => ie.createBy === X?.id)?.sort( (ie, ze) => new Date(ie.createTime).valueOf() - new Date(ze.createTime).valueOf())).filter(ie => !!ie.type && ie.modifyTime === ie.createTime);
            if (!H.length)
                return (0,
                    F.CrmLogger)("[generateSmartNotesString] no smart notes", H),
                    "";
            const q = $.default.getters.profiles?.timezone || void 0;
            let _e = `[ Generated by Zoom AI Expert Assist ]

`;
            for (let ie = 0; ie < H.length; ie++) {
                const ze = H[ie];
                _e += `${(0,
                    k.toLocaleDate)(ze.createTime, (0,
                    k.getFormatStr)(!1, " \xB7 "), q)} - ${ze.createByUserName}

${ze.notes} 

`
            }
            return (0,
                F.CrmLogger)("generateSmartNotesString", {
                smartNotes: H,
                str: _e,
                tz: q
            }),
                _e
        }
    },
    43027: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.fetchTranscriptMetadataForCrm = J;
        const Y = a(56405);
        function J($) {
            return (0,
                Y.request)({
                url: "/crm/transcripts",
                method: "get",
                params: $
            })
        }
    }
    ,
    48900: (pn, E) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.VISIBLE_KEY = E.SLOTS_NAMES = void 0,
            E.SLOTS_NAMES = ["default", "title", "footer"],
            E.VISIBLE_KEY = "update:visible"
    }
    ,
    51578: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.dialogFactory = k;
        const Y = a(6372)
            , J = a(5513)
            , $ = a(74111);
        function k(P) {
            return class {
                globalOptions;
                rootOptions;
                options;
                content;
                vm = null;
                constructor(Q={}, O={}) {
                    this.globalOptions = Q,
                        this.rootOptions = O,
                        this.options = {},
                        this.content = {}
                }
                dialog(Q, O={}) {
                    if (!Q || typeof Q != "object" || !Object.keys(Q).length)
                        throw new Error("[vue-element-dialog]: The content shown in 'zm-dialog' component cannot be empty");
                    this.options = Object.assign({}, this.globalOptions, O),
                        this.content = Q,
                    this.vm || (this.vm = this.#e());
                    const F = this.vm;
                    return document.body.appendChild(F.$el),
                        F.$data.visible = this.options.visible,
                        this
                }
                #e() {
                    const Q = this.#t()
                        , O = P.extend(Q);
                    return new O().$mount()
                }
                #t() {
                    const Q = this
                        , O = {
                        i18n: Y.i18n,
                        data() {
                            return {
                                visible: !1
                            }
                        },
                        render(F) {
                            const {props: D, on: z} = (0,
                                $.resolveOptions)(Q, this)
                                , {scopedSlots: G, children: V} = (0,
                                $.resolveSlots)(Q, this);
                            return F(J.ZmDialog, {
                                props: D,
                                on: z,
                                scopedSlots: G
                            }, V)
                        }
                    };
                    return Object.assign({}, this.rootOptions, O)
                }
                destroy() {
                    const {vm: Q} = this;
                    return Q && (Q.$el && Q.$el.parentNode && Q.$el.parentNode.removeChild(Q.$el),
                        Q.$destroy(),
                        this.vm = null),
                        !0
                }
            }
        }
        E.default = {
            install: (P, M) => {
                const Q = k(P)
                    , O = new Q(M);
                P.prototype.$dialog = O.dialog.bind(O)
            }
        }
    }
    ,
    74111: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.resolveSlots = $,
            E.resolveOptions = k;
        const Y = a(48900);
        function J(P) {
            return !Object.keys(P).some(M => Y.SLOTS_NAMES.includes(M))
        }
        function $(P, M) {
            let {content: Q} = P;
            const O = {}
                , F = [];
            if (Q) {
                const D = M.$createElement;
                J(Q) && (Q = {
                    default: {
                        component: Q,
                        propsData: {}
                    }
                }),
                    Object.entries(Q).forEach( ([z,G]) => {
                            G.component || (G = {
                                component: G
                            });
                            const {propsData: V={}, component: K, on: te={}} = G;
                            if (K) {
                                const ee = D(K, {
                                    props: V,
                                    on: te
                                });
                                O[z] = () => [ee],
                                z === "footer" && F.push(D("template", {
                                    slot: z
                                }, [ee]))
                            }
                        }
                    )
            }
            return {
                scopedSlots: O,
                children: F
            }
        }
        function k(P, M) {
            const {options: {open: Q, opened: O, close: F, closed: D, ...z}} = P
                , G = {};
            return Object.entries({
                open: Q,
                opened: O,
                close: F,
                closed: D
            }).filter( ([,K]) => K).forEach( ([K,te]) => G[K] = te),
                {
                    props: {
                        ...z,
                        visible: M.$data.visible
                    },
                    on: {
                        ...G,
                        [Y.VISIBLE_KEY](K) {
                            M.$data.visible = K
                        }
                    }
                }
        }
    }
    ,
    77719: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.toggleSidebar = E.AppWidthState = E.SidebarWidths = E.PanelSizes = void 0,
            E.useCollapse = F,
            E.useStatusDropdown = G;
        const Y = a(74061)
            , J = a(35878);
        var $;
        (function(V) {
                V.sm = "sm",
                    V.md = "md",
                    V.lg = "lg"
            }
        )($ || (E.PanelSizes = $ = {}));
        var k;
        (function(V) {
                V[V.EXPANDED = 240] = "EXPANDED",
                    V[V.COLLAPSED = 50] = "COLLAPSED"
            }
        )(k || (E.SidebarWidths = k = {}));
        var P;
        (function(V) {
                V[V.MINIMIZED = 44] = "MINIMIZED",
                    V[V.COLLAPSED = 352] = "COLLAPSED",
                    V[V.FULL = 650] = "FULL",
                    V[V.COLLAPSED_WITH_AIEA = 672] = "COLLAPSED_WITH_AIEA",
                    V[V.FULL_WITH_AIEA = 970] = "FULL_WITH_AIEA"
            }
        )(P || (E.AppWidthState = P = {}));
        const M = (0,
                Y.ref)(localStorage.getItem("panelWidth") !== P.FULL.toString() && localStorage.getItem("panelWidth") !== P.FULL_WITH_AIEA.toString())
            , Q = (0,
                Y.readonly)(M)
            , O = async (V, K) => {
                const te = await (0,
                    J.getCRMInstance)();
                te && te.setSize(V, K)
            }
        ;
        E.toggleSidebar = O;
        function F() {
            return {
                collapse: Q,
                setCollapse: V => {
                    M.value = V
                }
            }
        }
        const D = (0,
            Y.ref)(!0)
            , z = (0,
            Y.readonly)(D);
        function G() {
            return {
                isStatusDropdownOpen: z,
                setStatusDropdownOpen: V => {
                    M.value = V
                }
            }
        }
    }
    ,
    14457: function(pn, E, a) {
        "use strict";
        var Y = this && this.__createBinding || (Object.create ? function(P, M, Q, O) {
                        O === void 0 && (O = Q);
                        var F = Object.getOwnPropertyDescriptor(M, Q);
                        (!F || ("get"in F ? !M.__esModule : F.writable || F.configurable)) && (F = {
                            enumerable: !0,
                            get: function() {
                                return M[Q]
                            }
                        }),
                            Object.defineProperty(P, O, F)
                    }
                    : function(P, M, Q, O) {
                        O === void 0 && (O = Q),
                            P[O] = M[Q]
                    }
            )
            , J = this && this.__exportStar || function(P, M) {
                for (var Q in P)
                    Q !== "default" && !Object.prototype.hasOwnProperty.call(M, Q) && Y(M, P, Q)
            }
            , $ = this && this.__importDefault || function(P) {
                return P && P.__esModule ? P : {
                    default: P
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.ChannelHeader = void 0,
            J(a(81872), E);
        var k = a(27711);
        Object.defineProperty(E, "ChannelHeader", {
            enumerable: !0,
            get: function() {
                return $(k).default
            }
        })
    },
    81872: (pn, E) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.ChannelType = void 0;
        var a;
        (function(Y) {
                Y.Phone = "Phone",
                    Y.SMS = "Sms",
                    Y.Message = "Message",
                    Y.Video = "Video"
            }
        )(a || (E.ChannelType = a = {}))
    }
    ,
    66764: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(K) {
                return K && K.__esModule ? K : {
                    default: K
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = Y(a(76709))
            , $ = a(56405)
            , k = a(35878)
            , P = a(30824)
            , M = a(13859)
            , Q = a(95924);
        async function O(K, te) {
            let ee = K;
            if ((0,
                P.getCRM)() === "servicenow" && ee && (0,
                M.isPhoneNumberValidNew)(ee) && !ee.startsWith("+")) {
                const H = `+${ee}`
                    , q = (0,
                    M.getCountryCodeByRegion)();
                H.startsWith(`+${q}`) ? ee = `+${ee}` : ee = `+${q}${ee}`
            }
            const X = await (await (0,
                k.getCRMInstance)())?.findUserByPhoneNumber(ee, te);
            return Array.isArray(X) && J.default.commit("crm/setCrmUsersDataCache", X[0]),
                X
        }
        async function F(K, te) {
            const pe = await (await (0,
                k.getCRMInstance)())?.findUserByName(K, te);
            return Array.isArray(pe) && J.default.commit("crm/setCrmUsersDataCache", pe[0]),
                pe
        }
        async function D(K, te) {
            const pe = await (await (0,
                k.getCRMInstance)())?.findUserByEmail(K, te);
            return Array.isArray(pe) && J.default.commit("crm/setCrmUsersDataCache", pe[0]),
                pe
        }
        function z(K) {
            return (0,
                $.isInCoreTab)() ? function() {
                    console.log("createAdapterFnWrapper noop fn call")
                }
                : async function(...te) {
                    const ee = await (0,
                        k.getCRMInstance)();
                    if (ee && typeof ee[K] == "function")
                        return await ee[K].call(ee, ...te)
                }
        }
        const G = ["screenPop", "findUserById", "getAgentInfo", "setSize", "screenPopUser", "toggleWidth", "openDialPanel", "handleIncomingCall", "handleIncomingVideo", "handleIncomingWebChat", "handleIncomingSmsChat", "handleOutboundSmsChat", "findUserByPhoneNumber", "findUserByName", "findByText", "setStatus", "performRelateToSearch", "processScreenPop", "handleNoMatchScenario", "processWrapup", "getEngagementContext", "setEngagementContext", "handleOutboundVideo", "beforeMakingOutBoundCall", "addNoteToEntity", "addNoteToTicket", "addWrapUpToObject", "createWrapUpObjectRecord", "addSmartNotesToTicket", "createPhoneCallLog", "getEntityValuesForUser", "openFormForEntity", "createTicket", "getRecentNotSolvedTicketsForUser", "findTicketById", "onAccept", "autoCreateTicket", "completeEngagement", "ringing", "callAccepted", "callTransfer", "callHangup", "callEnded", "obCallStarted", "sendError", "videoRinging", "videoStarted", "videoEnded", "chatRinging", "chatStarted", "chatEnded", "sendCallRecondingUrl", "videoParticipantInfo", "updateInteractionData", "updatePopupCreateData", "updateUserForInteraction", "processTicketCreationFormScreenpop", "createCase", "proxy", "viewCase"]
            , V = {
            findCrmUserByPhoneNumber: O,
            findCrmUserByName: F,
            findCrmUserByEmail: D
        };
        G.forEach(K => {
                V[K] = z(K)
            }
        ),
            Object.keys(V).forEach(K => {
                    const te = V[K];
                    V[K] = (...ee) => (0,
                        $.isInCoreTab)() ? (0,
                        Q.handleSendAdapterMessage)({
                        sendTab: "lastActive",
                        adapterMethodName: K,
                        params: [...ee]
                    }) : te(...ee)
                }
            ),
            E.default = V
    },
    95924: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(D) {
                return D && D.__esModule ? D : {
                    default: D
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.handleSendAdapterMessage = E.handleBindProxyAdapter = void 0;
        const J = a(56405)
            , $ = a(32486)
            , k = Y(a(66764))
            , {SUB_EVENT_LIST: P, formatHttpError: M} = J.phoneUtils
            , Q = P.PROXY_ADAPTER_METHOD
            , O = () => {
                const D = window.__subBroadcast__;
                if (!D)
                    return;
                const z = D.tabId;
                D.on(Q, async G => {
                        const {adapterMethodName: V, actionId: K, tabId: te, params: ee=[]} = G;
                        if (!(te && te !== z))
                            try {
                                const pe = await k.default[V](...ee);
                                D.sendMessageToSub({
                                    eventType: K,
                                    data: pe
                                })
                            } catch (pe) {
                                D.sendMessageToSub({
                                    eventType: K,
                                    data: M(pe)
                                })
                            }
                    }
                )
            }
        ;
        E.handleBindProxyAdapter = O;
        const F = D => {
                const z = window.__subBroadcast__;
                if (!z)
                    return;
                const {sendTab: G, ...V} = D
                    , K = (0,
                    $.v4)()
                    , te = {
                    ...V,
                    actionId: K
                };
                if (G === "lastActive") {
                    const ee = z?.getLastActiveTab() || {};
                    te.tabId = ee.tabId
                }
                return z.sendMessageToSubNeedResponse({
                    eventType: Q,
                    data: te
                })
            }
        ;
        E.handleSendAdapterMessage = F
    },
    27397: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(P) {
                return P && P.__esModule ? P : {
                    default: P
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getCRMAdapter = E.getCRM = E.getCRMInstance = E.findCrmUserByEmail = E.findCrmUserByName = E.findCrmUserByPhoneNumber = void 0;
        const J = a(35878);
        Object.defineProperty(E, "getCRMAdapter", {
            enumerable: !0,
            get: function() {
                return J.getCRMAdapter
            }
        }),
            Object.defineProperty(E, "getCRMInstance", {
                enumerable: !0,
                get: function() {
                    return J.getCRMInstance
                }
            });
        const $ = a(30824);
        Object.defineProperty(E, "getCRM", {
            enumerable: !0,
            get: function() {
                return $.getCRM
            }
        });
        const k = Y(a(66764));
        E.findCrmUserByPhoneNumber = k.default.findCrmUserByPhoneNumber,
            E.findCrmUserByName = k.default.findCrmUserByName,
            E.findCrmUserByEmail = k.default.findCrmUserByEmail
    },
    4673: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(O) {
                return O && O.__esModule ? O : {
                    default: O
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.useCompletedEngagement = void 0;
        const J = a(74061)
            , $ = a(6372)
            , k = a(56405)
            , P = Y(a(23317))
            , M = (0,
                k.GET_ENGAGEMENTS_FILTER_MAPS)($.i18n)
            , Q = () => {
                const O = (0,
                    J.ref)((0,
                    P.default)(M.map(D => D.value)) || []);
                return {
                    showColumns: (0,
                        J.computed)( () => M.filter(D => O.value.includes(D.value)))
                }
            }
        ;
        E.useCompletedEngagement = Q
    },
    8277: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(k) {
                return k && k.__esModule ? k : {
                    default: k
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.SideContent = E.History = void 0;
        var J = a(58327);
        Object.defineProperty(E, "History", {
            enumerable: !0,
            get: function() {
                return Y(J).default
            }
        });
        var $ = a(90664);
        Object.defineProperty(E, "SideContent", {
            enumerable: !0,
            get: function() {
                return Y($).default
            }
        })
    },
    68156: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(te) {
                return te && te.__esModule ? te : {
                    default: te
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.composeAgentInfoSubtitle = P,
            E.convertTimestampInHistoryItemDesc = M,
            E.convertTimestampInHistoryItem = Q,
            E.convertTimestampInHistoryDetail = O,
            E.getChannelFullName = F,
            E.getDirection = D,
            E.getChannelName = G,
            E.getDisposition = V,
            E.getTranslatedChannelName = K;
        const J = a(6372)
            , $ = a(56405)
            , k = Y(a(18854));
        function P(te, ee=1) {
            if (!te)
                return "";
            const {agentName: pe, queueName: ne, endTime: X, tz: x} = te
                , H = [];
            return pe && H.push(pe),
            ne && H.push(ne),
            X && (ee === 1 ? H.push(O(X, x)) : ee === 2 ? H.push(Q(X, x)) : H.push(M(X, x))),
                H.join(" \xB7 ")
        }
        function M(te, ee="UTC") {
            const pe = new Date
                , ne = +pe - te;
            if (ne < 0)
                return console.error(`invalid ${ne}ms got by: ${te} - ${+pe}`),
                    "-";
            const X = (0,
                $.getToday)(ee).start
                , x = (0,
                k.default)(te).tz(ee);
            return X <= te ? x.format("h:mm A") : x.isAfter((0,
                k.default)(+new Date).tz(ee).subtract(7, "day")) ? x.format("h:mm A dddd") : x.format("h:mm A D/M/YY")
        }
        function Q(te, ee="UTC") {
            const pe = new Date
                , ne = +pe - te;
            if (ne < 0)
                return console.error(`invalid ${ne}ms got by: ${te} - ${+pe}`),
                    "-";
            const X = (0,
                $.getToday)(ee).start
                , x = (0,
                k.default)(te).tz(ee);
            return X <= te ? x.format("h:mm A") : x.isAfter((0,
                k.default)(+new Date).tz(ee).subtract(7, "day")) ? x.format("ddd") : x.format("D/M/YY")
        }
        function O(te, ee="UTC") {
            const pe = new Date
                , ne = +pe - te;
            if (ne < 0)
                return console.error(`invalid ${ne}ms got by: ${te} - ${+pe}`),
                    "-";
            const X = (0,
                $.getToday)(ee).start
                , x = (0,
                k.default)(te).tz(ee);
            if (X <= te) {
                const H = Math.floor(ne / 36e5);
                if (H === 0) {
                    const q = Math.floor(ne / 6e4) - H * 60;
                    return q === 0 ? J.i18n.t("cci.profile.tabs.history.details.justNow") : J.i18n.t("cci.profile.tabs.history.details.minutesAgo", {
                        mins: q
                    })
                }
                return H === 1 ? J.i18n.t("cci.profile.tabs.history.details.hourAgo", {
                    hour: 1
                }) : J.i18n.t("cci.profile.tabs.history.details.hoursAgo", {
                    hours: H
                })
            }
            return x.isYesterday() ? `${J.i18n.t("cci.common.label.yesterday")}, ${x.format("h:mm A")}` : x.format("MMM D, YYYY, h:mm A")
        }
        function F(te) {
            if (!te)
                return "";
            const ee = G(te)
                , pe = D(te);
            return pe ? J.i18n.t(`cci.profile.tabs.history.channelName.${ee}.${pe}`) : J.i18n.t(`cci.profile.tabs.history.channelName.${ee}`)
        }
        function D(te) {
            if (!te)
                return "";
            const {direction: ee} = te;
            switch (ee) {
                case "IN":
                    return "inbound";
                case "OUT":
                    return "outbound";
                default:
                    return ee && console.warn(`Unhandled direction got: ${ee}`),
                        ""
            }
        }
        const z = ["messaging", "voice", "video", "chat", "sms", "email"];
        function G(te) {
            if (!te)
                return "";
            const {channelName: ee=""} = te
                , pe = ee.toLowerCase();
            return z.includes(pe) || console.error(`Unhandled channelName: ${ee}
      engagementInfo: ${JSON.stringify(te)}
    `),
                pe
        }
        function V(te) {
            if (!te)
                return "";
            const {agentName: ee, disposition: pe} = te;
            if (pe)
                return pe;
            const ne = D(te)
                , X = G(te)
                , x = J.i18n.t(`cci.profile.tabs.history.channelName.${X}`);
            return ee ? ne ? J.i18n.t("cci.profile.tabs.history.details.disposition.with.boundDirection", {
                inboundOrOutbound: J.i18n.t(`cci.profile.tabs.history.channelDirection.${ne}`),
                channelName: x,
                agentName: ee
            }) : J.i18n.t("cci.profile.tabs.history.details.disposition.without.boundDirection", {
                channelName: x,
                agentName: ee
            }) : ne ? J.i18n.t(`cci.profile.tabs.history.channelName.${X}.${ne}`) : x
        }
        function K(te) {
            let ee = "";
            if (typeof te == "string" && te)
                ee = te;
            else if (typeof te == "object" && te.channelName)
                ({channelName: ee=""} = te || {});
            else
                return console.warn(`Invalid channelName got.
      The parameter you passed in is supposed to be string or object, and for the object it must contains
      a property named 'channelName'.
      item passed in: ${te}
    `),
                    "";
            const pe = `cci.profile.tabs.history.channelName.${ee.toLowerCase()}`
                , ne = J.i18n.t(pe);
            return pe === ne ? (console.warn(`Cannot translate channel name '${ee}' because there's no such mappings in en-US.json: ${pe}`),
                ee) : ne
        }
    },
    77003: (pn, E, a) => {
        "use strict";
        var Y;
        Y = {
            value: !0
        },
            E.L = K;
        const J = a(74061)
            , $ = a(76856)
            , k = a(83266)
            , P = a(76709)
            , M = a(56405)
            , Q = a(4439)
            , O = a(26330)
            , F = a(88967)
            , D = () => {
            const {account: te} = (0,
                P.useAppGetters)();
            return ((0,
                M.isInZendesk)() || (0,
                M.getCoreTabCrmPlatform)() === Q.CRMS.Zendesk) && te.value?.enableZendeskTicketToEmail
        }
            , {fetchTaskDetail: z} = $.videoApi
            , {getEngagement: G} = $.engagementApi
            , {fetchAllWorkerTaskReservations: V} = $.routingengineApi;
        function K() {
            const te = (0,
                J.ref)(!0)
                , ee = (0,
                M.useInstance)()
                , {user: pe, account: ne} = (0,
                P.useAppGetters)()
                , {getOPEnabled: X} = (0,
                k.useAccount)();
            async function x(q) {
                if (!pe.value?.routerAgentId || !ne.value?.workspaceSid) {
                    console.log("checkUncompleteTask lack of id");
                    return
                }
                const _e = {
                    agentId: pe.value.routerAgentId,
                    workspaceId: ne.value.workspaceSid
                };
                q.value = !0;
                const [ie,ze] = await (0,
                    M.tryApiCatch)(V, _e);
                if (q.value = !1,
                    ie)
                    return ee.$message.error(ie);
                if (ze.length > 0) {
                    const Oe = ze.filter(Sn => Sn.ReservationStatus === "ACCEPTED")
                        , at = (await Promise.all(Oe.map(async Sn => {
                            const [Ce,wn] = await (0,
                                M.tryApiCatch)(z, Sn.TaskId);
                            return Ce ? (ee.$message.error(Ce),
                                {}) : (wn.Attributes = JSON.parse(wn.Attributes),
                                wn.rezId = Sn.Id,
                                wn.TSKId = Sn.TaskId,
                            wn.TaskChannelUniqueName === M.CHANNEL_KEYS.email.keyLower && D() && (wn.TaskChannelUniqueName = "chat",
                                wn.Attributes.channelType = "Chat",
                                wn.Attributes.subChannel = M.CHANNEL_KEYS.email.keyUpper,
                                wn.MarkAwaitingReply = Sn.MarkAwaitingReply),
                                wn)
                        }
                    ))).filter(Sn => Sn.TaskChannelUniqueName === "chat" && Sn.Attributes?.isInvolved !== !0);
                    H(at)
                }
            }
            function H(q) {
                const {createNewEngagement: _e} = (0,
                    P.useLivechatActions)()
                    , {updateSMSTask: ie, updateChatTask: ze, createQueueQuery: Oe, createQueueDispositionQuery: Cn, createQueueQuery4AgentAssist: at, createOutboundQueueQuery: Sn, createOutboundQueueDispositionQuery: Ce} = (0,
                    P.useSessionPanelsActions)();
                q.forEach(async wn => {
                        const {engagementId: Ae, chatId: nr, chatSessionId: mt, customerId: jn, chatRoomId: ve, customerName: or, direction: pt, queueId: je, queueName: Ke, fromAgent: it, originalTaskId: Ne, transferFromName: Gt, channelType: en, subChannel: rn, isTransfer: Tt, isTransferToQueue: vr, sourceIcon: rr, sourceName: kr, sourceId: Re, userInfo: Et, isEnableUpgradeToVideo: An, isEnableUpgradeToVoice: Yt, engagementEventType: gn} = wn.Attributes
                            , [Qe,ar] = await (0,
                            M.tryApiCatch)(G, {
                            id: Ae
                        });
                        if (Qe) {
                            console.error("getEngagement meet error:", Qe);
                            return
                        }
                        ar?.id && (0,
                            M.isCrm)() && (0,
                            O.initializeCrmData)(ar.id);
                        const zt = ar.participants.find(Mt => Mt.id === pe.value?.id)
                            , {contactId: Zt} = ar.participants.find(Mt => Mt.enterId === ar.incomingEnterId) || {};
                        if (console.log("curAgentDt", zt),
                            !zt)
                            return;
                        const Lt = !ar?.smsInNeedOptIn
                            , gr = {
                            engagementId: Ae,
                            chatId: nr,
                            chatSessionId: mt,
                            customerId: jn,
                            chatRoomId: ve,
                            customerName: or,
                            direction: pt,
                            queueId: je,
                            queueName: Ke,
                            fromAgent: it,
                            originalTaskId: Ne,
                            transferFromName: Gt,
                            channelType: en || "CHAT",
                            isChatTransfer: vr || Tt,
                            enterId: zt.enterId,
                            startTime: new Date(ar.startTime),
                            disableMessagingRichText: ar.disableMessagingRichText,
                            allowRelease: typeof ar?.allowRelease == "boolean" ? ar.allowRelease : !0,
                            subChannel: rn,
                            enableSMSEditor: Lt,
                            sourceIcon: rr,
                            sourceName: kr,
                            sourceId: Re,
                            userInfo: Et,
                            isEnableUpgradeToVideo: An,
                            isEnableUpgradeToVoice: Yt,
                            isActive: ar?.status ?? M.MessageIsActive.Active
                        };
                        _e(gr);
                        const Mn = {
                            queueId: je,
                            queueName: Ke,
                            customerId: jn,
                            customerName: or,
                            rezId: wn.rezId,
                            taskId: wn.TSKId,
                            roomId: ve,
                            sessionId: mt,
                            engagementId: Ae,
                            enterId: ar.incomingEnterId,
                            isTransfer: Tt,
                            isTransferToQueue: vr,
                            createTs: new Date(ar.startTime).getTime(),
                            acceptTs: new Date(ar.startTime).getTime(),
                            eventType: en === "SMS" ? "sms.accepted" : "chat.accepted",
                            subChannel: rn,
                            direction: pt,
                            agentEnterId: zt.enterId,
                            contactId: Zt,
                            sourceName: kr,
                            userInfo: Et,
                            isEnableUpgradeToVideo: An,
                            isEnableUpgradeToVoice: Yt,
                            engagementEventType: gn
                        };
                        rn === M.CHANNEL_KEYS.email.keyUpper && D() ? (Mn.createTs = (0,
                            M.convertToTimestamp)(ar.startTime),
                            Mn.acceptTs = (0,
                                M.convertToTimestamp)(ar.startTime),
                            Mn.assignTs = (0,
                                M.convertToTimestamp)(ar.emailAssignTime)) : new Date(ar.startTime).getTime() > Date.now() && (Mn.createTs = Date.now(),
                            Mn.acceptTs = Date.now(),
                            console.error("Recovered session DateCreated time larger than current time: new Date(res.startTime).getTime() > Date.now()", new Date(ar.startTime).getTime(), Date.now())),
                            en === "SMS" ? ie(Mn) : ze(Mn),
                        je && (pt === "OUT_BOUND" ? (Sn({
                            queueId: je,
                            isSMS: en === "SMS"
                        }),
                            Ce({
                                queueId: je
                            })) : (Oe(je),
                            Cn(je)),
                        ee.enableZvaAgentAssist && at(je)),
                        X("enableEngagementInformationOnClient") && (0,
                            M.isCrm)() && await (0,
                            F.getSystemVariablesByEngagement)(Ae)
                    }
                )
            }
            return {
                isCheckUncompleteTask: te,
                init: () => x(te)
            }
        }
    }
    ,
    66261: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.useCrmStatusV3 = Q;
        const Y = a(74061)
            , J = a(83266)
            , $ = a(6372)
            , k = a(76709)
            , P = a(56405)
            , {Log: M} = P.clientLogger;
        function Q(O, F) {
            console.log("status V3"),
                P.monitor.dispatchMonitor({
                    name: "crm status use schedule v3"
                });
            let D = null
                , z = "";
            const G = (0,
                Y.ref)(!0)
                , V = [P.STATUS_MAPPING.SUB_REASONS.FORCED, P.STATUS_MAPPING.SUB_REASONS.IN_MEETING, P.STATUS_MAPPING.SUB_REASONS.ON_CALL]
                , K = (0,
                P.useInstance)()
                , {webNotify: te} = (0,
                J.useWebNotify)()
                , {t: ee} = (0,
                $.useI18n)()
                , {setAppStatus: pe} = (0,
                k.useCrmMutations)()
                , ne = (0,
                J.useDebounceChangeStatus)()
                , {initSendMessageToSub: X, initZpns: x, pageBeforeDestroy: H, zpnsReconnect: q} = (0,
                k.useCrmStatusActions)()
                , _e = (0,
                k.getNacos)("enableCrmStatusCoreTab")
                , {enableOptOut: ie, enableSubReason: ze, enablePlaySoundWhenReceiveNewMessage: Oe, hasOngoingPhoneTask: Cn, hasOngoingVideoTask: at, agent: Sn, status: Ce, statusLoading: wn, sessionEnded: Ae, queueFocused: nr, queueList: mt, itemHovering: jn, subItemDisabled: ve, reasonVisible: or, statusBeforeBusy: pt, optStatusVersion: je, queueInfo: Ke, calcStatusIcon: it, calcStatusName: Ne, currentStatusId: Gt, formatStatusList: en, needShowEndSession: rn, resetOutboundAgentStatus: Tt, formatSubReasons: vr, handleElementMouseOver: rr, handleElementMouseLeave: kr, handleMouse: Re, handleMouseLeave: Et, handleArrowUpDownKey: An, handleArrowLeftKey: Yt, handleArrowRightKey: gn, showCantEndToolTip: Qe, debounceGetUserQueueList: ar, calcSubStatusName: zt, destroyStatusHeartbeat: Zt, handleClose: Lt, handleSave: gr, setStatusBySupervisorOrSystem: Mn, beforBatchQueueChange: U, beforeSpecifiedQueueChange: Mt, retryGetStatusItemList: Kn, setOutboundAgentStatus: In, setWhyStatusChange: tn, setDisableMessageNotification: Ot, calcStatus: Pt, currentAgent: $n, scheduleStatusId: dt, statusScheduleName: Xe, statusScheduleSubName: ht, statusScheduleIcon: yn, hasStatusSchedule: dn, canSetStatusSchedule: Gn, setStatusSchedule: sr, statusHeartBeatTimer: Zn, lastUpdateT: _r, verifyStatusTime: Pn, startStatusHeartBeat: Ze, sendStatusHeartbeat: Vn, verifyStatusFromBackendDelayed: Se, debounceChangeStatus: Ue, setAgentStatus: yt, workSession: Qt, isWorkSessionBusy: Hn, setBackendDisabledWorkSession: cr, onEndWorkSession: Rr} = (0,
                J.useInitStatus)(O, F, Ct, Te, {
                zpnsReconnectCustomize: _e ? q : () => {
                    console.log("enableCrmStatusCoreTab false")
                }
            })
                , {calcMonitorUserActions: Pr, recordMonitorAction: rt, destroySendMonitorTimer: ae, sendMonitorInterval: de} = (0,
                J.useStatusMonitor)()
                , {handleOfflineStatusRecovery: ye, handleZpnsOfflineWithRecovery: Le} = (0,
                J.useOfflineStatusRecovery)({
                status: Ce,
                scheduleStatusId: dt,
                debounceChangeStatus: Ue,
                verifyStatusTime: Pn,
                isInitialLoad: G
            });
            async function Te(Ge, It, cn, ct) {
                const De = await ne(Ge, It, cn, ct);
                return console.log("status 03 result:", De),
                    De
            }
            const {currentCall: be} = (0,
                k.useCoreVoiceGetters)();
            function me() {
                const Ge = ee("callbar.phone.error.notReadyDuetoMissEngagment");
                D = te(Ge, "", {
                    text: ee("table.dismiss"),
                    ariaLabel: ee("table.dismissAriaLabel"),
                    callback: () => D.close()
                }, 0)
            }
            function He() {
                D && (D.close(),
                    D = null,
                    z = "")
            }
            function Ct(Ge, It="") {
                V.includes(Ge + "") || Mn(!1),
                    console.log(Ge, It, "updateStatusId"),
                    yt(Ge),
                    sr(It),
                    pe(Ge)
            }
            const wt = Ge => {
                const {content: It, context: cn} = Ge;
                if (console.log("zpns notify of cci/agent/status 02", It),
                    M("zpns notify of status change:", It),
                    P.monitor.dispatchMonitor({
                        name: "zpns notify of status change",
                        message: `${It?.AgentStatusId}-${It?.AgentStatusName}`
                    }),
                !Ae.value && It.type === "update" && It.timestamp && (F("updateStatusModifyTime", It?.context?.statusMergedModifyTime || It.timestamp, {
                    serverCurrentTime: It?.currentTime
                }),
                Zn.value && (console.log("status zpns monitor 15 secs timer cleared"),
                    clearTimeout(Zn.value),
                    Zn.value = void 0),
                (!_r.value || It.timestamp > _r.value) && (It.context?.toSubReason === "Unaccepted Engagement" ? (He(),
                    me(),
                    z = It.context?.traceId) : (It.context?.traceId === z || It.AgentStatusId === P.STATUS_MAPPING.READY || It.AgentStatusId === P.STATUS_MAPPING.OCCUPIED) && He(),
                    _r.value = It.timestamp,
                cn.toStatusId === P.STATUS_MAPPING.OCCUPIED && Ce.value !== P.STATUS_MAPPING.OCCUPIED && (pt.value = cn.realFromStatusId || cn.fromStatusId),
                    Ct(It.AgentStatusId, It?.context?.scheduleStatus),
                    cr(!1),
                    wn.value = !1,
                    console.log(`RoutingEngine Worker: activity.update at ${new Date(_r.value)}, new activity is ${It.AgentStatusId} - "${It.AgentStatusName}"`),
                It.AgentStatusId === P.STATUS_MAPPING.OFFLINE)))
                    if (It.context?.endWorkSessionBy) {
                        console.log("debounceChangeStatus protect from zpns offline to Offline");
                        const ct = It.context?.endWorkSessionBy;
                        Rr?.({
                            isBySupervisor: ct !== "selfEndWorkSession",
                            supervisor_name: ct,
                            isByOtherPlatform: ct === "selfEndWorkSession"
                        });
                        return
                    } else
                        Le(It)
            }
                , Bt = Ge => {
                const {content: It} = Ge;
                if (It.type === "OptOut" && It.timestamp) {
                    const {QueueId: cn, value: ct, version: De=null} = It;
                    (!je.value[cn] || De > je.value[cn]) && (je.value[cn] = De,
                        mt.value = mt.value.map( ({queueId: bt, value: un, optout: ur, ..._n}) => {
                                const Jn = bt === cn
                                    , Ut = Jn ? ct : ur;
                                return {
                                    queueId: bt,
                                    value: Jn ? !Ut : un,
                                    optout: Ut,
                                    ..._n
                                }
                            }
                        ),
                        nr.value = nr.value.filter(bt => bt.queueId !== cn))
                }
            }
                , En = Ge => {
                const {content: It} = Ge;
                if ($n.value?.id === It.agent_id) {
                    const {supervisor_name: cn} = It;
                    Ae.value = !0,
                        F("end-work-session", {
                            isBySupervisor: !0,
                            supervisor_name: cn
                        })
                }
            }
                , Pe = () => {
                Ce.value !== "1" && !wn.value && (console.warn("Status Component: Received task when status is not ready,will sync status with backend."),
                    Vn())
            }
                , W = Ge => {
                const {name: It, message: cn} = Ge;
                P.monitor.dispatchMonitor({
                    name: It,
                    message: cn
                })
            }
                , Ee = (0,
                Y.computed)( () => (O.zpnsStatus === "ready" || O.zpnsStatus === "connected") && Ce.value === P.STATUS_MAPPING.OFFLINE);
            (0,
                Y.watch)(Ee, Ge => {
                    Ge && (console.log("needTurnOffOfflineStatus: Triggering enhanced offline recovery logic for CRM statusV3"),
                        ye())
                }
                , {
                    immediate: !0
                }),
                (0,
                    Y.watch)(Hn, Ge => {
                        F("isWorkSessionBusy", Ge)
                    }
                ),
                (0,
                    Y.watch)( () => O.wrapupDoneFlag, Ge => {
                        console.log("wrapupDoneFlag in status:", Ge),
                        Ge === !0 && (P.monitor.dispatchMonitor({
                            name: "crm: status.wrap-up.done",
                            message: {
                                status: Ce.value,
                                scheduleStatusId: dt.value,
                                currentCall: !!be.value,
                                hasOngoingPhoneTask: Cn.value,
                                hasOngoingVideoTask: at.value,
                                statusBeforeBusy: pt.value
                            }
                        }),
                            Se())
                    }
                ),
                (0,
                    Y.watch)(Tt, Ge => {
                        Ge === !0 && (P.monitor.dispatchMonitor({
                            name: "crm: status.reset.outbound.status",
                            message: {
                                status: Ce.value,
                                currentCall: !!be.value,
                                hasOngoingPhoneTask: Cn.value,
                                hasOngoingVideoTask: at.value,
                                statusBeforeBusy: pt.value
                            }
                        }),
                            Se(),
                            In(!1))
                    }
                ),
                (0,
                    Y.watch)(Ce, Ge => {
                        Oe.value && Ot(Ge === P.STATUS_MAPPING.OCCUPIED),
                            F("updateStatusIdGlobal", Ge)
                    }
                );
            const {zpns: nt} = Sn();
            _e && (0,
                J.useCtiPostMessage)(P.CrmStatusCoreToLocalKey, O, {
                agent: Sn,
                initSendMessageToSub: X,
                initZpns: x,
                methodNameMap: {
                    debounceGetUserQueueList: ar,
                    zpnsCciAgentStatus: wt,
                    zpnsCciOptoutStatus: Bt,
                    zpnsCciSupervisorEndWorkSessions: En,
                    onRezCreated: Pe,
                    monitorHandel: W
                }
            });
            function Ie(Ge) {
                Ge && Kn()
            }
            const Be = async () => {
                    await Sn().zpns.checkIsAlive() && Pr()
                }
                , st = () => {
                    ae(),
                        de.value = setInterval(Be, 3 * 60 * 1e3)
                }
                , jt = Ge => {
                    const {batchControlled: It, type: cn} = (0,
                        J.isBatchControlled)(Ge.queueId);
                    if (It) {
                        if (nr.value.length)
                            return;
                        if (cn === "all") {
                            const ct = mt.value.some(De => De.value);
                            mt.value = mt.value.map(De => ({
                                ...De,
                                value: !ct
                            })),
                                U(!ct, "all")
                        } else {
                            const De = (0,
                                J.getQueueListByChannel)(mt.value, cn).some(bt => bt.value);
                            mt.value = mt.value.map(bt => (0,
                                J.getEnumChannelType)(cn) === bt.channelType ? {
                                ...bt,
                                value: !De
                            } : bt),
                                U(!De, cn)
                        }
                    } else
                        nr.value.some(ct => ct.queueId === Ge.queueId) || (Ge.value = !Ge.value,
                            Mt(Ge.value, Ge))
                }
            ;
            function _t({name: Ge, content: It}) {
                const {context: cn={}} = It || {};
                let ct = null
                    , De = "";
                switch (Ge) {
                    case "cci/queue/agent/updated":
                    case "cci/queue/supervisors/updated":
                    case "cci/agent/served/queue/updated":
                        ar();
                        break;
                    case "cci/agent/status/changed":
                        De = It.code === "toNotReady" ? ee("cci.userStatus.update.info", {
                            supervisorName: It.supervisor,
                            statusName: ee("cci.common.label.notReady")
                        }) : It.code === "toReady" ? ee("cci.userStatus.update.info", {
                            supervisorName: It.supervisor,
                            statusName: ee("cci.common.label.ready")
                        }) : ee("cci.userStatus.update.info", {
                            supervisorName: It.supervisor,
                            statusName: It.customerReason
                        }),
                            ct = te(De, "info", {
                                text: ee("table.dismiss"),
                                ariaLabel: ee("table.dismissAriaLabel"),
                                callback: () => ct && ct.close()
                            }, 0);
                        break;
                    case "cci/agent/status":
                        wt({
                            content: It,
                            context: cn
                        });
                        break;
                    case "cci/optout/status":
                        Bt({
                            content: It
                        });
                        break;
                    case "/cci/supervisor/end-work-sessions":
                        En({
                            content: It
                        });
                        break
                }
            }
            return (0,
                Y.onMounted)( () => {
                    _e || (console.log("only use zpns in sub tab for status", _e),
                        nt.on("message", _t)),
                        Ze(),
                        st(),
                        setTimeout( () => {
                                G.value = !1,
                                    console.log("CRM statusV3: Initial load period completed, offline recovery now active")
                            }
                            , 6e4)
                }
            ),
                (0,
                    Y.onBeforeUnmount)( () => {
                        console.log("before destroy status offline"),
                            _e ? H() : nt.off("message", _t),
                            Zt(),
                            ae()
                    }
                ),
                {
                    enableOptOut: ie,
                    enableSubReason: ze,
                    agent: Sn,
                    statusLoading: wn,
                    itemHovering: jn,
                    subItemDisabled: ve,
                    reasonVisible: or,
                    queueList: mt,
                    queueFocused: nr,
                    queueInfo: Ke,
                    status: Ce,
                    workSession: Qt,
                    calcStatus: Pt,
                    calcStatusName: Ne,
                    calcStatusIcon: it,
                    currentStatusId: Gt,
                    formatStatusList: en,
                    needShowEndSession: rn,
                    isWorkSessionBusy: Hn,
                    formatSubReasons: vr,
                    handleElementMouseOver: rr,
                    handleElementMouseLeave: kr,
                    handleMouse: Re,
                    handleMouseLeave: Et,
                    handleArrowUpDownKey: An,
                    handleArrowLeftKey: Yt,
                    handleArrowRightKey: gn,
                    showCantEndToolTip: Qe,
                    debounceGetUserQueueList: ar,
                    updateStatusId: Ct,
                    calcSubStatusName: zt,
                    handleClose: Lt,
                    handleSave: gr,
                    handleCommand({id: Ge, queue: It, queueItem: cn, abort: ct, parentId: De, isEndSession: bt=!1, disabled: un=!1}) {
                        if (bt) {
                            console.log("handleCommand isEndSession"),
                                un ? Qe() : (Rr?.(),
                                    F("end-work-session", {}));
                            return
                        }
                        if (It && cn) {
                            jt(cn);
                            return
                        }
                        ct || (K.$refs.dropdown.hide(),
                            K.$refs.dropdown.focus(),
                            Yt(),
                            console.log("debounceChangeStatus in status command"),
                            tn({
                                triggerBy: $n.value?.id,
                                triggerMode: "manually",
                                triggerReason: "crm-statusChangeCommand",
                                triggerAt: `${Date.now()}`
                            }),
                            Mn(!1),
                            Gn.value ? rt({
                                key: P.eMonitorKeys.clickScheduleChange,
                                val: Ge
                            }) : rt({
                                key: P.eMonitorKeys.clickStatusChange,
                                val: Ge
                            }),
                            Ue(Ge, De))
                    },
                    initSendMessageToSub: X,
                    initZpns: x,
                    beforeSpecifiedQueueChange: Mt,
                    beforBatchQueueChange: U,
                    updateStatusVisible: Ie,
                    scheduleStatusId: dt,
                    statusScheduleName: Xe,
                    statusScheduleSubName: ht,
                    statusScheduleIcon: yn,
                    hasStatusSchedule: dn,
                    canSetStatusSchedule: Gn
                }
        }
    }
    ,
    81471: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(ee) {
                return ee && ee.__esModule ? ee : {
                    default: ee
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.useCachedCrmName = te;
        const J = a(76856)
            , $ = a(83266)
            , k = a(76709)
            , P = a(56405)
            , M = Y(a(18854))
            , Q = a(27397)
            , O = a(54251)
            , F = P.CachedEngagementUsers.getInstance()
            , {getVariableLogDetail: D} = J.logsApi;
        async function z(ee) {
            try {
                if (!Array.isArray(ee))
                    return [];
                const {getCrmNameByPhoneOrMail: pe} = (0,
                    k.useCrmGetters)()
                    , ne = ee.filter(x => !F.get(x.engagementId));
                await V(ne);
                const X = ee.map(x => {
                        const H = F.getName(x.engagementId)
                            , q = pe.value(x?.customerNumber || "");
                        let _e = x.customerName;
                        if (!H && q) {
                            const ie = {
                                name: q,
                                phone: x?.customerNumber,
                                email: x?.email
                            };
                            F.save(x.engagementId, ie)
                        }
                        return x.channelType === "CHAT" && (_e = H || pe.value(x?.email) || _e),
                            {
                                ...x,
                                crmName: H || q,
                                customerName: _e
                            }
                    }
                ) || [];
                return X.length || F.clear(),
                    X
            } catch (pe) {
                return console.error(pe),
                    ee
            }
        }
        async function G(ee) {
            const {setCrmUsersDataCache: pe} = (0,
                k.useCrmMutations)()
                , {tz: ne, getPermissionEnabled: X} = (0,
                $.useAccount)()
                , x = []
                , H = {}
                , q = {};
            return ee.forEach(_e => {
                    _e.channelType === "CHAT" && (x.push(_e.engagementId),
                        H[_e.engagementId] = {
                            engagementId: _e.engagementId,
                            start: (0,
                                M.default)(_e.createTime).format("YYYY-MM-DD"),
                            end: (0,
                                M.default)(_e.endTime).format("YYYY-MM-DD"),
                            timezone: ne.value || (0,
                                O.getTimezone)()
                        },
                        pe({
                            name: _e.customerName || _e.customer,
                            email: _e.email
                        }))
                }
            ),
            X("VecVariablesLog:Read") && (await Promise.allSettled(x.map(ie => D(H[ie])))).forEach(ie => {
                    if (ie?.value) {
                        const Oe = ie?.value?.data?.result?.list[0];
                        if (Oe?.variableValue) {
                            const Cn = Oe.variableValue.replace(`
`, "");
                            q[Oe.engagementId] = Cn
                        }
                    }
                }
            ),
                q
        }
        async function V(ee) {
            const pe = []
                , ne = {}
                , X = await G(ee);
            ee.forEach(x => {
                    const H = X[x.engagementId];
                    x?.customerNumber && !ne[x?.customerNumber] ? (ne[x?.customerNumber] = !0,
                        pe.push({
                            ...x,
                            email: x.email || H
                        })) : x?.email && !ne[x?.email] && (ne[x?.email] = !0,
                        pe.push({
                            ...x,
                            email: x.email || H
                        }))
                }
            ),
                await Promise.allSettled(pe.map(x => {
                        if (x?.customerNumber) {
                            let H;
                            return x?.channelType === "PHONE" && x?.channel === "phone" ? H = P.QUEUE_CHANNEL_TYPE.VOICE : x?.channelType === "SMS" && x?.channel === "sms" && (H = P.QUEUE_CHANNEL_TYPE.SMS),
                                (0,
                                    Q.findCrmUserByPhoneNumber)(x?.customerNumber, {
                                    channel: H,
                                    isFromHistory: !0
                                })
                        } else if (x?.email)
                            return (0,
                                Q.findCrmUserByEmail)(x?.email)
                    }
                ))
        }
        function K() {
            const {setCrmUsersDataCache: ee} = (0,
                k.useCrmMutations)()
                , pe = F.getAll();
            for (const ne in F.getAll())
                Object.prototype.hasOwnProperty.call(pe, ne) && ee(F.get(ne))
        }
        function te() {
            return {
                setAndCacheCrmNameByHistory: z,
                setLocalStorageCachedNameToStore: K
            }
        }
    },
    6301: (pn, E, a) => {
        "use strict";
        var Y;
        Y = {
            value: !0
        },
            E.Ew = E.Jx = void 0;
        const J = a(56405)
            , $ = () => {
                J.ZCache.clearToken(),
                    window.localStorage.removeItem("CCI_THIRD_TOKEN"),
                    window.localStorage.removeItem("CCI_THIRD_AID"),
                    window.localStorage.removeItem("CCI_THIRD_HAID"),
                    window.localStorage.removeItem("CCI_THIRD_CLUSTER_ID")
            }
        ;
        E.Jx = $;
        const k = () => {
                J.ZCache.clearRefreshToken(),
                    localStorage.removeItem("CCI_REFESH_TOKEN")
            }
        ;
        E.Ew = k
    }
    ,
    4439: (pn, E) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.SalesforceEngagementFields = E.EngagementFields = E.CRMS = E.IvrVariableScreenType = E.ScreenPopEvents = E.NoMatchActionEvents = E.NoMatchActions = E.SearchOperators = E.SearchVariableTypes = void 0;
        var a;
        (function(F) {
                F.Phone = "phone",
                    F.Extension = "extension",
                    F.Email = "email",
                    F.FlowVariable = "flow-variable",
                    F.EngagementAni = "Engagement.ANI"
            }
        )(a || (E.SearchVariableTypes = a = {}));
        var Y;
        (function(F) {
                F.ExactMatch = "exact_match",
                    F.StartsWith = "start_with",
                    F.EndsWith = "end_with",
                    F.Contains = "contains"
            }
        )(Y || (E.SearchOperators = Y = {}));
        var J;
        (function(F) {
                F.NoAction = "no_action",
                    F.Contact = "contact",
                    F.Account = "account"
            }
        )(J || (E.NoMatchActions = J = {}));
        var $;
        (function(F) {
                F.NoMatchCallerSearch_MatchContextSearch = "nomatch_caller_match_context",
                    F.NoMatchCallerSearch = "nomatch_caller_search",
                    F.NoMatchBoth = "nomatch_both"
            }
        )($ || (E.NoMatchActionEvents = $ = {}));
        var k;
        (function(F) {
                F.Answer = "ANSWER",
                    F.Ringing = "RINGING"
            }
        )(k || (E.ScreenPopEvents = k = {}));
        var P;
        (function(F) {
                F.ENGAGEMENT = "Engagement",
                    F.PROFILE = "Profile"
            }
        )(P || (E.IvrVariableScreenType = P = {}));
        var M;
        (function(F) {
                F.ServiceNow = "servicenow",
                    F.Zendesk = "zendesk",
                    F.MsDynamics = "msd",
                    F.Salesforce = "salesforce",
                    F.Hubspot = "hubspot",
                    F.SalesforceServiceCloud = "connector",
                    F.SmartEmbed = "smartEmbed"
            }
        )(M || (E.CRMS = M = {}));
        var Q;
        (function(F) {
                F.RelateTo = "relateTo",
                    F.Regarding = "regarding"
            }
        )(Q || (E.EngagementFields = Q = {}));
        var O;
        (function(F) {
                F.Contact = "contact",
                    F.RelateTo = "relateTo"
            }
        )(O || (E.SalesforceEngagementFields = O = {}))
    }
    ,
    87835: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getIdlePanelRef = z,
            E.getCallState = G,
            E.getWrapupRef = V,
            E.initializeInterceptor = K,
            E.performSetAgentStatus = te,
            E.performLogout = ee,
            E.performAccept = pe,
            E.performDecline = ne,
            E.performEnd = X,
            E.performHangUp = x,
            E.getMuteState = H,
            E.isToggleMuteDisabled = q,
            E.performMute = _e,
            E.performToggleMute = ie,
            E.isToggleHoldDisabled = ze,
            E.performHold = Oe,
            E.performToggleHold = Cn,
            E.showRecordButton = at,
            E.isRecordEnabled = Sn,
            E.showStopRecordButton = Ce,
            E.performPauseRecording = wn,
            E.performResumeRecording = Ae,
            E.performStopRecording = nr,
            E.isOnRecording = mt,
            E.performDial = jn,
            E.performStopDialing = ve,
            E.performSendDtmf = or,
            E.isBlindTransferEnabled = pt,
            E.showAddCallerButton = je,
            E.isAddCallerEnabled = Ke,
            E.performAddParticipant = it,
            E.performCancelAddParticipant = Ne,
            E.performSwap = Gt,
            E.isConference = en,
            E.performConference = rn,
            E.performLeaveAssign = Tt,
            E.performRemoveParticipant = vr,
            E.performBlindTransfer = rr;
        const Y = a(56405)
            , J = a(64775)
            , {CONFERENCE_HANGUP_TYPE: $} = Y.phoneUtils.Call;
        let k = null;
        function P() {
            return k?.$refs?.phone?.$refs?.phoneRef?.$refs
        }
        function M() {
            return P()?.currentCall
        }
        function Q() {
            return M()?.$refs?.call?.$refs?.callActions
        }
        function O() {
            return M()?.$refs?.call?.$refs?.addCall
        }
        function F() {
            return D()?.$refs.conferenceLegs
        }
        function D() {
            return M()?.$refs?.call
        }
        function z() {
            return P()?.idlePanel
        }
        function G() {
            return D()?.callState
        }
        function V() {
            return k?.$refs?.sideBar?.$refs?.currentSession?.$refs?.wrappingBlock
        }
        function K(Re) {
            k = Re
        }
        async function te(Re, Et) {
            return k?.debounceChangeStatus?.(Re, Et)
        }
        async function ee() {
            return k?.performLogout?.()
        }
        async function pe() {
            return D()?.acceptCall?.()
        }
        async function ne() {
            return D()?.rejectCall?.()
        }
        async function X() {
            D()?.normalHangUp?.()
        }
        async function x(Re, Et) {
            D()?.hangUpCrmCall?.(Re, Et)
        }
        function H() {
            return Q()?.muteState
        }
        function q() {
            return Q()?.disableMute
        }
        async function _e(Re, Et) {
            const An = Q();
            return await An.muteLeg?.(Re, Et),
                An.muteState
        }
        async function ie() {
            const Re = Q();
            return await Re.handleMute?.(),
                Re.muteState
        }
        function ze() {
            return Q()?.disableHold
        }
        async function Oe(Re, Et) {
            await Q()?.holdLeg?.(Re, Et)
        }
        async function Cn() {
            const Re = Q();
            return await Q()?.handleHold?.(),
                Re?.holdState
        }
        function at() {
            return !!Q()?.enableRecording
        }
        function Sn() {
            const Re = Q();
            return !Re?.disableRecord && !Re?.unableStopRecording
        }
        function Ce() {
            return Q()?.enableStopRecordButton
        }
        async function wn() {
            const Re = Q();
            return Re?.recordingStatus !== 2 ? !0 : (await Re?.recordingToggle?.(),
            Re?.recordingStatus === 4)
        }
        async function Ae() {
            const Re = Q();
            return Re?.recordingStatus !== 4 ? !0 : (await Re?.recordingToggle?.(),
            Re?.recordingStatus === 2)
        }
        async function nr() {
            const Re = Q();
            return await Re?.handleStopRecord?.(),
            Re?.recordingStatus === 0
        }
        function mt(Re) {
            const Et = G();
            return Et ? Et.hasTwoLegs && Re && Et.minorLegState.channelId === Re ? Et.minorLegState.recordingStatus === 2 : Et.mainLegState.recordingStatus === 2 : !1
        }
        async function jn(Re) {
            const Et = z();
            if (!(!Et || !Re))
                if (kr(Re)) {
                    const {phoneNumber: An, extension: Yt} = Re
                        , gn = An || Yt;
                    return !Et || !gn ? void 0 : (Et.clearContactInfo(),
                        Et.obcallTo = gn,
                        await Et.handleOutboundCall())
                } else
                    return Et.onSelectContact(Re)
        }
        async function ve() {
            return D()?.cancelOutbound?.()
        }
        async function or(Re) {
            D()?.handleSendDtmf?.(Re)
        }
        function pt() {
            return !!Q()?.enableTransfer
        }
        function je() {
            return !!Q()?.showAddCall
        }
        function Ke() {
            const Re = Q();
            return Re ? !Re.disableAddCall : !1
        }
        async function it(Re) {
            const Et = O();
            if (!Re || !Et)
                return;
            if (kr(Re)) {
                const {phoneNumber: Yt, extension: gn} = Re
                    , Qe = Yt || gn;
                if (!Qe)
                    return;
                Et.clearContactInfo(),
                    Et.obcallTo = Qe
            } else
                Et.onSelectContact?.(Re);
            return Et.inviteAction?.("warm")
        }
        async function Ne() {
            return O()?.cancelInviting?.()
        }
        async function Gt() {
            return F()?.swapLeg?.()
        }
        function en() {
            return D()?.isConference
        }
        async function rn() {
            return F()?.doMergeCall?.()
        }
        async function Tt(Re, Et) {
            F()?.assignEngagement?.(Re, Et)
        }
        async function vr() {}
        async function rr(Re) {
            if (!Re)
                return;
            const Et = D();
            if (kr(Re)) {
                const {phoneNumber: An, extension: Yt, name: gn} = Re
                    , Qe = {
                    isNumber: !0,
                    value: An || Yt,
                    name: gn
                };
                Et?.handleTransferSelect(Qe)
            } else
                Et?.handleTransferSelect(Re);
            return Et?.transferAction("blind")
        }
        function kr(Re) {
            return Re instanceof J.Contact || "recordId"in Re ? Re : null
        }
    }
    ,
    35878: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(D) {
                return D && D.__esModule ? D : {
                    default: D
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getCRMInstanceUnsafe = E.getCRMInstance = E.getCRMAdapter = E.CRMAdapterFactory = void 0;
        const J = a(56405)
            , $ = Y(a(66764))
            , k = a(30824);
        let P = null;
        const M = async D => {
                switch (D) {
                    case "zendesk":
                        return (await a.e(195).then(a.t.bind(a, 439, 23))).ZendeskAdapter;
                    case "msd":
                        return (await a.e(695).then(a.t.bind(a, 65897, 23))).MSDynamicsAdapter;
                    case "connector":
                        return (await Promise.all([a.e(184), a.e(412), a.e(894), a.e(693), a.e(268), a.e(4), a.e(577), a.e(179)]).then(a.t.bind(a, 14560, 23))).ConnectorAdapter;
                    case "salesforce":
                        return (await Promise.all([a.e(184), a.e(412), a.e(894), a.e(693), a.e(268), a.e(4), a.e(577), a.e(211)]).then(a.t.bind(a, 34211, 23))).SalesforceAdapter;
                    case "servicenow":
                        return (await Promise.resolve().then(a.t.bind(a, 91635, 23))).ServiceNowAdapter;
                    case "smartEmbed":
                        return (await a.e(169).then(a.t.bind(a, 78169, 23))).SmartEmbedAdapter;
                    case "hubspot":
                        return (await Promise.all([a.e(184), a.e(412), a.e(894), a.e(693), a.e(268), a.e(4), a.e(577), a.e(19)]).then(a.t.bind(a, 22019, 23))).HubspotAdapter;
                    default:
                        return console.error(`Unknown CRM type ${D}`),
                            {}
                }
            }
        ;
        E.CRMAdapterFactory = M;
        const Q = async () => {
                let D = (0,
                    k.getCRM)();
                return (0,
                    J.isInCoreTab)() && (D = (0,
                    J.getCoreTabCrmPlatform)()),
                    await (0,
                        E.CRMAdapterFactory)(D)
            }
        ;
        E.getCRMAdapter = Q;
        const O = async () => {
                if ((0,
                    J.isInCoreTab)())
                    return {
                        ...$.default
                    };
                const D = (0,
                    k.getCRM)()
                    , z = await (0,
                    E.CRMAdapterFactory)(D);
                return z && z?.getInstance ? (P = z.getInstance(),
                    P) : null
            }
        ;
        E.getCRMInstance = O;
        const F = () => P;
        E.getCRMInstanceUnsafe = F
    },
    72713: function(pn, E, a) {
        "use strict";
        var Y = this && this.__createBinding || (Object.create ? function(x, H, q, _e) {
                    _e === void 0 && (_e = q);
                    var ie = Object.getOwnPropertyDescriptor(H, q);
                    (!ie || ("get"in ie ? !H.__esModule : ie.writable || ie.configurable)) && (ie = {
                        enumerable: !0,
                        get: function() {
                            return H[q]
                        }
                    }),
                        Object.defineProperty(x, _e, ie)
                }
                : function(x, H, q, _e) {
                    _e === void 0 && (_e = q),
                        x[_e] = H[q]
                }
        )
            , J = this && this.__setModuleDefault || (Object.create ? function(x, H) {
                    Object.defineProperty(x, "default", {
                        enumerable: !0,
                        value: H
                    })
                }
                : function(x, H) {
                    x.default = H
                }
        )
            , $ = this && this.__importStar || function() {
            var x = function(H) {
                return x = Object.getOwnPropertyNames || function(q) {
                    var _e = [];
                    for (var ie in q)
                        Object.prototype.hasOwnProperty.call(q, ie) && (_e[_e.length] = ie);
                    return _e
                }
                    ,
                    x(H)
            };
            return function(H) {
                if (H && H.__esModule)
                    return H;
                var q = {};
                if (H != null)
                    for (var _e = x(H), ie = 0; ie < _e.length; ie++)
                        _e[ie] !== "default" && Y(q, H, _e[ie]);
                return J(q, H),
                    q
            }
        }();
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.onVoiceAccepted = D,
            E.onIncomingVideo = z,
            E.onVideoAccepted = G,
            E.onIncomingEmail = V,
            E.onIncomingWebChat = K,
            E.onWebChatAccepted = te,
            E.onWebChatEnded = pe,
            E.onSmsChatEnded = ne,
            E.onVideoEnded = X;
        const k = $(a(76709))
            , P = a(56405)
            , M = a(14535)
            , Q = a(61367)
            , O = a(35878)
            , F = a(30824);
        async function D(x) {
            const H = (0,
                F.getCRM)()
                , q = await (0,
                O.getCRMInstance)()
                , _e = (0,
                F.getCrmStoreConfig)(P.QUEUE_CHANNEL_TYPE.VOICE)
                , ie = x?.attributes?.to;
            if (console.log("voiceConfig: ", _e),
                console.log("taskData: ", {
                    data: JSON.parse(JSON.stringify(x))
                }),
            q && q.callAccepted) {
                const {mDirection: ze, acceptTs: Oe, engagementId: Cn, queueName: at, queueId: Sn} = x?.attributes || {}
                    , Ce = k.default.getters["sessionPanels/specifiedActiveTask"](x?.id)
                    , {from: wn, to: Ae} = Ce || {}
                    , nr = {
                    direction: ze,
                    acceptTs: Oe,
                    engagementId: Cn,
                    from: wn,
                    to: Ae,
                    queueName: at,
                    queueId: Sn
                };
                q.callAccepted(nr)
            }
            q && q.processScreenPop && _e.screenPopEvent === "ANSWER" && H !== "servicenow" && await q.processScreenPop({
                incomingPhoneNumber: ie,
                channel: P.QUEUE_CHANNEL_TYPE.VOICE,
                engagementId: x?.attributes?.engagementId || "",
                direction: x?.attributes.mDirection === Q.EngagementDirections.INBOUND ? Q.EngagementDirections.INBOUND : Q.EngagementDirections.OUTBOUND
            }),
            q && q.onAccept && H !== "servicenow" && await q.onAccept({
                engagementId: x?.attributes?.engagementId || "",
                channel: P.QUEUE_CHANNEL_TYPE.VOICE,
                direction: x?.attributes.mDirection === Q.EngagementDirections.INBOUND ? Q.EngagementDirections.INBOUND : Q.EngagementDirections.OUTBOUND
            })
        }
        async function z(x) {
            const {crm: H, taskTypeV2: q, direction: _e} = x
                , ie = q === P.VIDEO_TASK_TYPE_V2.TRANSFER_TO_QUEUE || q === P.VIDEO_TASK_TYPE_V2.TRANSFER_TO_AGENT
                , ze = q === P.VIDEO_TASK_TYPE_V2.CALLBACK
                , Oe = q === P.VIDEO_TASK_TYPE_V2.OUTBOUND
                , Cn = q === P.VIDEO_TASK_TYPE_V2.INVITE_AGENT
                , at = q === P.VIDEO_TASK_TYPE_V2.UPGRADE_TO_VIDEO
                , Sn = _e !== "OUT_BOUND" || ie || ze || Cn || at;
            let Ce;
            try {
                Ce = JSON.parse(H || "")
            } catch {}
            const wn = await (0,
                O.getCRMInstance)();
            if (!wn) {
                console.log("onIncomingVideo: could not found client instance");
                return
            }
            if (wn.handleIncomingVideo && Sn)
                if (ie && wn.setEngagementContext && ee(Ce))
                    wn.setEngagementContext(x?.engagementId || "", Ce, {
                        channel: P.QUEUE_CHANNEL_TYPE.LIVE_VIDEO,
                        direction: Q.EngagementDirections.INBOUND,
                        isTransfer: ie
                    });
                else {
                    if (at)
                        return;
                    if (wn.videoRinging) {
                        const Ae = {
                            channel: "video",
                            createTs: Date.now(),
                            engagementId: x.engagementId,
                            from: x.userInfo,
                            isConference: !1,
                            isTransfer: x.isTransfer || !1,
                            queueName: x.queueName,
                            queueId: x.queueId,
                            to: null
                        };
                        wn.videoRinging(Ae)
                    }
                    wn.handleIncomingVideo && await wn.handleIncomingVideo({
                        engagementId: x?.engagementId
                    })
                }
            else if (x?.direction === "OUT_BOUND") {
                const {allOutboundSettings: Ae} = (0,
                    k.useVideoGetters)()
                    , nr = Ae?.value[x?.engagementId || ""] || {}
                    , mt = nr.customerName && nr.customerName.indexOf("@") >= 0 ? nr.customerName : void 0
                    , jn = nr.customerName && nr.customerName !== "customer" && !mt ? nr.customerName : void 0;
                if (ie && wn.setEngagementContext && ee(Ce))
                    wn.setEngagementContext(x?.engagementId || "", Ce, {
                        channel: P.QUEUE_CHANNEL_TYPE.LIVE_VIDEO,
                        direction: Q.EngagementDirections.OUTBOUND,
                        email: mt,
                        isTransfer: ie
                    });
                else if (Oe) {
                    let ve = (0,
                        F.getSelectedUser)(x?.engagementId || "");
                    ve.id || (ve = (0,
                        F.getSelectedUser)("OUTBOUND_CALL_CRMSTORE")),
                    ve.id && ((0,
                        F.setEngagementUsers)(x?.engagementId || "", [ve]),
                        (0,
                            F.setEngagementUsers)("OUTBOUND_CALL_CRMSTORE", [])),
                    wn.handleOutboundVideo && await wn.handleOutboundVideo({
                        engagementId: x?.engagementId || "",
                        email: mt,
                        phoneNumber: jn
                    })
                }
            }
        }
        async function G(x) {
            const H = (0,
                F.getCRM)()
                , q = await (0,
                O.getCRMInstance)()
                , _e = (0,
                F.getCrmStoreConfig)(P.QUEUE_CHANNEL_TYPE.LIVE_VIDEO);
            if (q && q.videoStarted) {
                const ie = {
                    createTs: Date.now(),
                    engagementId: x?.engagementId || ""
                };
                q.videoStarted(ie)
            }
            q && _e.screenPopEvent === "ANSWER" && H !== "servicenow" && await q.processScreenPop({
                channel: P.QUEUE_CHANNEL_TYPE.LIVE_VIDEO,
                engagementId: x?.engagementId || "",
                direction: x?.direction === "IN_BOUND" ? Q.EngagementDirections.INBOUND : Q.EngagementDirections.OUTBOUND
            }),
            q && q.onAccept && H !== "servicenow" && await q.onAccept({
                engagementId: x?.engagementId || "",
                channel: P.QUEUE_CHANNEL_TYPE.LIVE_VIDEO,
                direction: x?.direction === "IN_BOUND" ? Q.EngagementDirections.INBOUND : Q.EngagementDirections.OUTBOUND
            })
        }
        async function V(x) {
            const H = await (0,
                O.getCRMInstance)()
                , q = x?.attributes;
            if (!H || !q) {
                console.log("onIncomingEmail: client or attributes undefined", {
                    client: H,
                    attributes: q
                });
                return
            }
            const {crm: _e, engagementId: ie} = q || {};
            if (!ie) {
                console.error("onIncomingEmail: Engagement ID undefined for task, returning", {
                    task: x
                });
                return
            }
            let ze;
            try {
                ze = JSON.parse(_e || "")
            } catch {
                console.error("Unable to parse crmContext", {
                    crm: _e
                })
            }
            const Oe = q.taskTypeV2 === P.VIDEO_TASK_TYPE_V2.TRANSFER_TO_QUEUE || q.taskTypeV2 === P.VIDEO_TASK_TYPE_V2.TRANSFER_TO_AGENT;
            Oe && H.setEngagementContext && ee(ze) ? H.setEngagementContext(ie, ze, {
                channel: P.QUEUE_CHANNEL_TYPE.EMAIL,
                direction: Q.EngagementDirections.INBOUND,
                isTransfer: Oe
            }) : H.handleIncomingEmail && await H.handleIncomingEmail({
                email: q?.userInfo?.email || "",
                engagementId: ie
            })
        }
        async function K(x) {
            const H = await (0,
                O.getCRMInstance)()
                , q = x?.attributes;
            if (!H || !q) {
                console.log("onIncomingWebChat: could not found client instance");
                return
            }
            const {crm: _e, engagementId: ie} = q || {};
            let ze;
            try {
                ze = JSON.parse(_e || "")
            } catch {}
            const Oe = q.channelType === "SMS"
                , Cn = q.channelType === "Chat" && q.subChannel === P.CHANNEL_KEYS.email.keyUpper
                , at = q.taskTypeV2 === P.VIDEO_TASK_TYPE_V2.TRANSFER_TO_QUEUE || q.taskTypeV2 === P.VIDEO_TASK_TYPE_V2.TRANSFER_TO_AGENT;
            if (Cn)
                console.log("[DEBUG] onIncomingWebChat Email", {
                    attributes: JSON.parse(JSON.stringify(q))
                }),
                    await V(x);
            else if (Oe) {
                console.log("[DEBUG] onIncomingWebChat SMS chat", {
                    attributes: JSON.parse(JSON.stringify(q))
                });
                const Sn = x?.attributes?.direction === "OUT_BOUND"
                    , Ce = Sn ? x?.attributes?.to : x?.attributes?.from;
                if (H.handleIncomingSmsChat && q?.direction === "IN_BOUND")
                    if (at && H.setEngagementContext && ee(ze))
                        H.setEngagementContext(ie || "", ze, {
                            channel: P.QUEUE_CHANNEL_TYPE.SMS,
                            direction: Q.EngagementDirections.INBOUND,
                            isTransfer: at
                        });
                    else {
                        if (H.smsRinging) {
                            const wn = {
                                channel: M.ChannelTypes.SMS,
                                createTs: Date.now(),
                                engagementId: q?.engagementId,
                                from: q?.userInfo,
                                isConference: !1,
                                isTransfer: q?.isTransfer || !1,
                                queueName: q?.queueName,
                                queueId: q?.queueId,
                                incomingPhoneNumber: Ce
                            };
                            H.smsRinging(wn)
                        }
                        await H.handleIncomingSmsChat({
                            incomingPhoneNumber: Ce,
                            engagementId: q?.engagementId
                        })
                    }
                else if (Sn) {
                    if (!H.handleOutboundSmsChat)
                        return;
                    await H.handleOutboundSmsChat({
                        engagementId: q?.engagementId || "",
                        fromNumber: q.from || q.userInfo?.phoneNumber
                    })
                }
            } else if (q?.direction === "IN_BOUND")
                if (at && H.setEngagementContext && ee(ze))
                    H.setEngagementContext(ie || "", ze, {
                        channel: P.QUEUE_CHANNEL_TYPE.CHAT,
                        direction: Q.EngagementDirections.INBOUND,
                        isTransfer: at
                    });
                else {
                    if (H.chatRinging) {
                        const Sn = {
                            channel: "chat",
                            createTs: Date.now(),
                            engagementId: q.engagementId,
                            from: q.userInfo,
                            isConference: !1,
                            isTransfer: q.isTransfer || !1,
                            queueName: q.queueName,
                            queueId: q.queueId,
                            to: null
                        };
                        H.chatRinging(Sn)
                    }
                    H.handleIncomingWebChat && await H.handleIncomingWebChat({
                        email: q?.userInfo?.email,
                        engagementId: ie
                    })
                }
        }
        async function te(x) {
            const H = (0,
                F.getCRM)()
                , q = await (0,
                O.getCRMInstance)()
                , _e = x?.rez?.task
                , ie = _e.attributes.taskTypeV2 === "transferToQueue" || _e.attributes.taskTypeV2 === "transferToAgent"
                , ze = _e?.attributes?.channelType === "Chat" && _e?.attributes?.subChannel === P.CHANNEL_KEYS.email.keyUpper;
            let Oe;
            x.channelType === "SMS" ? Oe = P.QUEUE_CHANNEL_TYPE.SMS : Oe = ze ? P.QUEUE_CHANNEL_TYPE.EMAIL : P.QUEUE_CHANNEL_TYPE.CHAT;
            const Cn = (0,
                F.getCrmStoreConfig)(Oe)
                , at = {
                createTs: Date.now(),
                engagementId: _e?.attributes?.engagementId || ""
            };
            q && q.smsStarted && Oe === P.QUEUE_CHANNEL_TYPE.SMS ? q.smsStarted(at) : q && q.chatStarted && q.chatStarted(at),
            q && Cn.screenPopEvent === "ANSWER" && H !== "servicenow" && Oe !== P.QUEUE_CHANNEL_TYPE.EMAIL && !ie && await q.processScreenPop({
                channel: Oe,
                engagementId: _e?.attributes.engagementId || "",
                email: _e?.attributes?.userInfo?.email,
                incomingPhoneNumber: _e?.attributes?.userInfo?.phoneNumber,
                direction: _e?.attributes.direction === "IN_BOUND" ? Q.EngagementDirections.INBOUND : Q.EngagementDirections.OUTBOUND
            }),
            q && q.onAccept && H !== "servicenow" && await q.onAccept({
                engagementId: _e?.attributes?.engagementId || "",
                channel: Oe,
                direction: _e?.attributes.direction === "IN_BOUND" ? Q.EngagementDirections.INBOUND : Q.EngagementDirections.OUTBOUND
            })
        }
        function ee(x) {
            return x && (x.callerSearch && x.callerSearch.length || x.contextSearch && x.contextSearch.length)
        }
        async function pe(x) {
            const H = await (0,
                O.getCRMInstance)();
            if (H?.chatEnded) {
                const q = {
                    completeTs: Date.now(),
                    engagementId: x?.engagementId
                };
                await H.chatEnded(q)
            }
        }
        async function ne(x) {
            const H = await (0,
                O.getCRMInstance)()
                , {engagementId: q} = x || {};
            if (H?.smsEnded) {
                const _e = {
                    completeTs: Date.now(),
                    engagementId: q
                };
                await H.smsEnded(_e)
            }
        }
        async function X(x) {
            const H = await (0,
                O.getCRMInstance)();
            if (H?.videoEnded) {
                const q = {
                    completeTs: Date.now(),
                    engagementId: x?.attributes?.engagementId
                };
                await H.videoEnded(q)
            }
        }
    },
    61367: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(H) {
                return H && H.__esModule ? H : {
                    default: H
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.SearchVariableTypes = E.PageStatus = E.ScreenPopEvents = E.NoMatchActionEvents = E.NoMatchActions = E.SearchOperators = E.EngagementDirections = E.PanelSizes = E.HorizontalOrientation = E.RightBarAieaWith = E.SidebarWidths = E.AppWidthState = E.TOASTS = E.TOAST_TYPES = E.IvrVariableScreenType = E.TicketIcon = E.TicketSelectedIcon = E.EngagementIcon = E.EngagementSelectedIcon = void 0;
        const J = Y(a(26926));
        E.TicketSelectedIcon = J.default;
        const $ = Y(a(61692));
        E.TicketIcon = $.default;
        const k = Y(a(82133));
        E.EngagementIcon = k.default;
        const P = Y(a(93273));
        E.EngagementSelectedIcon = P.default;
        var M;
        (function(H) {
                H.ENGAGEMENT = "Engagement",
                    H.PROFILE = "Profile"
            }
        )(M || (E.IvrVariableScreenType = M = {}));
        var Q;
        (function(H) {
                H.SUCCESS = "success",
                    H.WARNING = "warning",
                    H.ERROR = "error",
                    H.INFO = "info"
            }
        )(Q || (E.TOAST_TYPES = Q = {}));
        var O;
        (function(H) {
                H.NOTIFICATION = "notification",
                    H.MESSAGE = "message"
            }
        )(O || (E.TOASTS = O = {}));
        var F;
        (function(H) {
                H[H.MINIMIZED = 44] = "MINIMIZED",
                    H[H.COLLAPSED = 352] = "COLLAPSED",
                    H[H.FULL = 650] = "FULL",
                    H[H.COLLAPSED_WITH_AIEA = 672] = "COLLAPSED_WITH_AIEA",
                    H[H.FULL_WITH_AIEA = 970] = "FULL_WITH_AIEA"
            }
        )(F || (E.AppWidthState = F = {}));
        var D;
        (function(H) {
                H[H.EXPANDED = 240] = "EXPANDED",
                    H[H.COLLAPSED = 48] = "COLLAPSED"
            }
        )(D || (E.SidebarWidths = D = {}));
        var z;
        (function(H) {
                H[H.CLOSE = 0] = "CLOSE",
                    H[H.OPEN = 320] = "OPEN"
            }
        )(z || (E.RightBarAieaWith = z = {}));
        var G;
        (function(H) {
                H.RIGHT = "right",
                    H.LEFT = "left"
            }
        )(G || (E.HorizontalOrientation = G = {}));
        var V;
        (function(H) {
                H.sm = "sm",
                    H.md = "md",
                    H.lg = "lg"
            }
        )(V || (E.PanelSizes = V = {}));
        var K;
        (function(H) {
                H.INBOUND = "inbound",
                    H.OUTBOUND = "outbound"
            }
        )(K || (E.EngagementDirections = K = {}));
        var te;
        (function(H) {
                H.ExactMatch = "exact_match",
                    H.StartsWith = "start_with",
                    H.EndsWith = "end_with",
                    H.Contains = "contains"
            }
        )(te || (E.SearchOperators = te = {}));
        var ee;
        (function(H) {
                H.NoAction = "no_action",
                    H.Contact = "contact",
                    H.Account = "account"
            }
        )(ee || (E.NoMatchActions = ee = {}));
        var pe;
        (function(H) {
                H.NoMatchCallerSearch_MatchContextSearch = "nomatch_caller_match_context",
                    H.NoMatchCallerSearch = "nomatch_caller_search",
                    H.NoMatchBoth = "nomatch_both"
            }
        )(pe || (E.NoMatchActionEvents = pe = {}));
        var ne;
        (function(H) {
                H.Answer = "ANSWER",
                    H.Ringing = "RINGING"
            }
        )(ne || (E.ScreenPopEvents = ne = {}));
        var X;
        (function(H) {
                H[H.NotLoggedIn = 0] = "NotLoggedIn",
                    H[H.LoggingIn = 1] = "LoggingIn",
                    H[H.LoginSuccess = 2] = "LoginSuccess",
                    H[H.AuthTokenValidationRequired = 3] = "AuthTokenValidationRequired",
                    H[H.TokenExpired = 4] = "TokenExpired",
                    H[H.AutoRefresh = 5] = "AutoRefresh",
                    H[H.RefreshSuccess = 6] = "RefreshSuccess",
                    H[H.LoginFailed = 7] = "LoginFailed",
                    H[H.Refresh = 8] = "Refresh",
                    H[H.ZoomWebCallbar = 10] = "ZoomWebCallbar"
            }
        )(X || (E.PageStatus = X = {}));
        var x;
        (function(H) {
                H.Phone = "phone",
                    H.Extension = "extension",
                    H.Email = "email",
                    H.FlowVariable = "flow-variable",
                    H.EngagementAni = "Engagement.ANI"
            }
        )(x || (E.SearchVariableTypes = x = {}))
    },
    26330: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(V) {
                return V && V.__esModule ? V : {
                    default: V
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.initializeCrmData = E.fetchCrmUsers = void 0;
        const J = Y(a(76709))
            , $ = a(56405)
            , k = a(74204)
            , P = a(27397)
            , M = a(4439)
            , Q = a(61367)
            , O = a(35878)
            , F = a(30824)
            , D = a(88967)
            , z = async function({phone: V, email: K, engagementId: te, channel: ee, direction: pe, crmOutboundContext: ne}) {
            const X = await (0,
                O.getCRMInstance)();
            let x = [];
            if (K ? x = await (0,
                P.findCrmUserByEmail)(K, {
                channel: ee,
                engagementId: te
            }) || [] : V && (x = await (0,
                P.findCrmUserByPhoneNumber)(V, {
                channel: ee,
                engagementId: te,
                isFromHistory: !0
            }) || []),
            Array.isArray(x) && x.length > 0) {
                if (J.default.dispatch("crm/setContactsMap", {
                    users: x,
                    engagementId: te
                }),
                X && X.bus && X.bus.emit("fetch-users", {
                    users: x,
                    engagementId: te
                }),
                pe === Q.EngagementDirections.OUTBOUND && ee === $.QUEUE_CHANNEL_TYPE.VOICE && ne?.id) {
                    if (x.find(q => q.id === ne?.id)) {
                        X?.screenPopUser({
                            id: ne?.id,
                            userEntity: ne?.userEntity,
                            direction: pe,
                            channel: ee
                        }),
                            J.default.dispatch("crm/setSelectedUser", {
                                engagementId: te,
                                userId: ne?.id
                            });
                        return
                    } else if (X?.findUserById && (0,
                        F.getCRM)() === M.CRMS.MsDynamics) {
                        const q = await X?.findUserById(ne?.id, ne?.userEntity)
                            , _e = Array.isArray(q?.users) && q?.users.length ? q?.users[0] : null;
                        if (_e?.id) {
                            J.default.dispatch("crm/setContactsMap", {
                                users: [...x, _e],
                                engagementId: te
                            }),
                                J.default.dispatch("crm/setSelectedUser", {
                                    engagementId: te,
                                    userId: _e?.id
                                });
                            return
                        }
                    }
                }
                x.length === 1 && (X?.screenPopUser({
                    ...x[0],
                    direction: pe,
                    channel: ee
                }),
                x[0]?.id && J.default.dispatch("crm/setSelectedUser", {
                    engagementId: te,
                    userId: x[0]?.id
                }))
            } else
                console.log("[fetchCrmUsers] handleNoMatchScenario ", x),
                X?.handleNoMatchScenario && X.handleNoMatchScenario({
                    phoneNumber: V,
                    email: K,
                    channel: ee,
                    engagementId: te,
                    direction: pe
                })
        };
        E.fetchCrmUsers = z;
        const G = async V => {
                const K = (0,
                    F.getOPEnabled)("enableEngagementInformationOnClient")
                    , ee = $.CachedEngagementUsers.getInstance().get(V)
                    , pe = (0,
                    F.getEngagementUsers)(V);
                if (ee && !pe?.users?.length) {
                    (0,
                        F.setEngagementUsers)(V, [ee]);
                    return
                }
                const [ne,X] = await (0,
                    $.tryApiCatch)(k.getMembers, {
                    engagementId: V
                })
                    , x = X;
                if (console.log("[Chat] engagement participants", x),
                !ne && Array.isArray(x)) {
                    const H = x.find(q => q.type === 2);
                    H?.email && (K && await (0,
                        D.getSystemVariablesByEngagement)(V),
                        console.log("[Chat] fetching crm users for ", H?.email),
                        (0,
                            E.fetchCrmUsers)({
                            email: H?.email,
                            engagementId: V,
                            channel: $.QUEUE_CHANNEL_TYPE.CHAT,
                            direction: Q.EngagementDirections.INBOUND
                        }))
                }
            }
        ;
        E.initializeCrmData = G
    },
    42807: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(P) {
                return P && P.__esModule ? P : {
                    default: P
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.formatE164Number = void 0;
        const J = Y(a(76709))
            , $ = a(27668)
            , k = (P, M) => {
                const {user: Q} = J.default.getters
                    , {countryOrRegion: O} = Q
                    , F = M || O || "US";
                try {
                    const D = $.PhoneNumberUtil.getInstance()
                        , z = D.parseAndKeepRawInput(P, F);
                    if (D.isValidNumber(z))
                        return D.format(z, $.PhoneNumberFormat.E164);
                    if (!P.startsWith("+")) {
                        const V = D.parseAndKeepRawInput(`+${P}`, F);
                        if (D.isValidNumber(V))
                            return D.format(V, $.PhoneNumberFormat.E164)
                    }
                    return P
                } catch {
                    return P
                }
            }
        ;
        E.formatE164Number = k
    },
    30824: function(pn, E, a) {
        "use strict";
        var Y = this && this.__createBinding || (Object.create ? function(Se, Ue, yt, Qt) {
                        Qt === void 0 && (Qt = yt);
                        var Hn = Object.getOwnPropertyDescriptor(Ue, yt);
                        (!Hn || ("get"in Hn ? !Ue.__esModule : Hn.writable || Hn.configurable)) && (Hn = {
                            enumerable: !0,
                            get: function() {
                                return Ue[yt]
                            }
                        }),
                            Object.defineProperty(Se, Qt, Hn)
                    }
                    : function(Se, Ue, yt, Qt) {
                        Qt === void 0 && (Qt = yt),
                            Se[Qt] = Ue[yt]
                    }
            )
            , J = this && this.__setModuleDefault || (Object.create ? function(Se, Ue) {
                        Object.defineProperty(Se, "default", {
                            enumerable: !0,
                            value: Ue
                        })
                    }
                    : function(Se, Ue) {
                        Se.default = Ue
                    }
            )
            , $ = this && this.__importStar || function() {
                var Se = function(Ue) {
                    return Se = Object.getOwnPropertyNames || function(yt) {
                        var Qt = [];
                        for (var Hn in yt)
                            Object.prototype.hasOwnProperty.call(yt, Hn) && (Qt[Qt.length] = Hn);
                        return Qt
                    }
                        ,
                        Se(Ue)
                };
                return function(Ue) {
                    if (Ue && Ue.__esModule)
                        return Ue;
                    var yt = {};
                    if (Ue != null)
                        for (var Qt = Se(Ue), Hn = 0; Hn < Qt.length; Hn++)
                            Qt[Hn] !== "default" && Y(yt, Ue, Qt[Hn]);
                    return J(yt, Ue),
                        yt
                }
            }()
            , k = this && this.__importDefault || function(Se) {
                return Se && Se.__esModule ? Se : {
                    default: Se
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.isPhoneNumber = E.isEmail = E.emailRegex = E.getCRMConferenceDetailsString = E.displayParticipantNames = E.isCtiPopOut = E.getGlobalSettingConfiguration = E.getCrmStoreConfig = E.getCrmConfig = E.setPreparationPhaseKey = E.getOPEnabled = E.isEnabledFeature = E.getAppStatus = E.getPreparationPhaseKey = E.getCurrentEngagementId = E.getCurrentActiveTaskKey = E.getUpgradeInfo = E.getEngagementDisposition = E.getActiveEngagementDetail = E.getActiveEngagementQueue = E.isCurrentActiveTaskIsAlive = E.isCurrentActiveTaskInVideo = E.isCurrentActiveTaskInSMS = E.isCurrentActiveTaskInChat = E.isCurrentActiveTaskInPhone = E.getCCIUpgradeQueues = E.getCCIOutboundQueueDispostions = E.getCCIQueueDispostions = E.getCurrentMonitorTask = E.removeCurrentEngagementNotes = E.getCurrentEngagementNotes = E.getSpecifiedActiveTask = E.getCurrentTaskId = E.getCurrentActiveTask = E.getMessagingWrapupTaskQueue = E.getActiveTaskQueue = E.getAllActiveTasks = E.setInitialDimensions = E.toggleWidthUtil = void 0,
            E.inIframe = V,
            E.isInSalesforce = K,
            E.isInZendesk = te,
            E.isInServicenow = ee,
            E.isInMSDynamics = pe,
            E.getCRM = ne,
            E.getEngagementUsers = kr,
            E.setEngagementUsers = Re,
            E.getEngagementVariables = Et,
            E.getSelectedDisposition = An,
            E.getConferenceDetails = Yt,
            E.getConferenceParticipantsList = gn,
            E.getIntegrationId = Qe,
            E.getAppPanelSize = ar,
            E.setCrmUsersDataCache = Mt,
            E.setClickToDialInProgress = Kn,
            E.getClickToDialInProgress = In,
            E.isInActiveEngagement = tn,
            E.getAdditionalData = Ot,
            E.resetAdditionalData = Pt,
            E.setAdditionalData = $n,
            E.setSelectedWhat = dt,
            E.getSelectedWhat = Xe,
            E.getUserName = ht,
            E.getUserEmail = yn,
            E.getSelectedUser = dn,
            E.getSelectedUserId = Gn,
            E.checkAndFallbackToArray = sr,
            E.getChannelType = Zn,
            E.getChannelName = _r,
            E.getCallDirection = Pn;
        const P = a(83266)
            , M = $(a(76709))
            , Q = a(56405)
            , O = k(a(89136))
            , F = a(4439)
            , D = a(61367)
            , z = a(13859)
            , {getDefaultDisposition: G} = M.storeUtils.crm;
        function V() {
            try {
                return window.self !== window.top
            } catch {
                return !0
            }
        }
        function K() {
            return V() && document.referrer?.indexOf("lightning.force") > -1
        }
        function te() {
            return V() && document.referrer?.indexOf("zendesk") > -1
        }
        function ee() {
            const Se = document.referrer == "" ? document.location?.href : document.referrer;
            return V() && Se.indexOf("service-now.com") > -1
        }
        function pe() {
            return V() && document.referrer?.indexOf("dynamics.com") > -1
        }
        function ne() {
            return (0,
                Q.crmPlatfrom)()
        }
        const X = Se => {
                const {panelWidth: Ue, panelSize: yt} = M.default?.state?.app || {};
                yt === D.PanelSizes.lg ? Ue === D.AppWidthState.COLLAPSED ? Se.bus?.emit("set-width", D.AppWidthState.FULL) : Se.bus?.emit("set-width", D.AppWidthState.COLLAPSED) : Ue === D.AppWidthState.COLLAPSED ? (Se.setSize(yt || D.PanelSizes.md, D.AppWidthState.FULL),
                    Se.bus?.emit("set-width", D.AppWidthState.FULL)) : Ue === D.AppWidthState.FULL ? (Se.setSize(yt || D.PanelSizes.md, D.AppWidthState.COLLAPSED),
                    Se.bus?.emit("set-width", D.AppWidthState.COLLAPSED)) : Ue === D.AppWidthState.COLLAPSED_WITH_AIEA ? (Se.setSize(yt || D.PanelSizes.md, D.AppWidthState.FULL_WITH_AIEA),
                    Se.bus?.emit("set-width", D.AppWidthState.FULL_WITH_AIEA)) : (Se.setSize(yt || D.PanelSizes.md, D.AppWidthState.COLLAPSED_WITH_AIEA),
                    Se.bus?.emit("set-width", D.AppWidthState.COLLAPSED_WITH_AIEA))
            }
        ;
        E.toggleWidthUtil = X;
        const x = (Se, Ue, yt) => {
                let Qt = D.AppWidthState.COLLAPSED;
                switch (localStorage.getItem("panelWidth")) {
                    case D.AppWidthState.FULL.toString():
                        Qt = D.AppWidthState.FULL;
                        break;
                    case D.AppWidthState.COLLAPSED.toString():
                        Qt = D.AppWidthState.COLLAPSED;
                        break;
                    case D.AppWidthState.FULL_WITH_AIEA.toString():
                        Qt = D.AppWidthState.FULL_WITH_AIEA;
                        break;
                    case D.AppWidthState.COLLAPSED_WITH_AIEA.toString():
                        Qt = D.AppWidthState.COLLAPSED_WITH_AIEA;
                        break
                }
                const Hn = localStorage.getItem("panelSize") || Ue;
                yt.includes(Hn) ? Se.setSize(Hn, Qt) : Se.setSize(Ue, Qt),
                    Se?.bus?.emit("set-width", Qt)
            }
        ;
        E.setInitialDimensions = x;
        const H = () => M.default.getters["sessionPanels/activeTasks"];
        E.getAllActiveTasks = H;
        const q = () => M.default.getters["sessionPanels/activeTaskQueue"];
        E.getActiveTaskQueue = q;
        const _e = () => M.default.getters["sessionPanels/chatWrapupTaskQueue"];
        E.getMessagingWrapupTaskQueue = _e;
        const ie = () => M.default.getters["sessionPanels/currentActiveTask"];
        E.getCurrentActiveTask = ie;
        const ze = () => M.default.getters["sessionPanels/currentTaskId"];
        E.getCurrentTaskId = ze;
        const Oe = Se => M.default.getters["sessionPanels/specifiedActiveTask"](Se);
        E.getSpecifiedActiveTask = Oe;
        const Cn = Se => M.default.getters["crm/getCurrentEngagementNotes"](Se);
        E.getCurrentEngagementNotes = Cn;
        const at = Se => M.default.commit("crm/removeNotes", Se);
        E.removeCurrentEngagementNotes = at;
        const Sn = () => M.default.getters["sessionPanels/currentMonitorTask"];
        E.getCurrentMonitorTask = Sn;
        const Ce = () => {
                const Se = M.default.getters["sessionPanels/cciQueueDispostions"]
                    , Ue = {};
                if (Se) {
                    for (const yt in Se)
                        if (Object.prototype.hasOwnProperty.call(Se, yt)) {
                            const {result: Qt} = Se[yt];
                            Qt[yt] = Qt || []
                        }
                }
                return Ue
            }
        ;
        E.getCCIQueueDispostions = Ce;
        const wn = () => {
                const Se = M.default.getters["sessionPanels/cciOutboundQueueDispostions"]
                    , Ue = {};
                if (Se) {
                    for (const yt in Se)
                        if (Object.prototype.hasOwnProperty.call(Se, yt)) {
                            const {result: Qt} = Se[yt];
                            Qt[yt] = Qt || []
                        }
                }
                return Ue
            }
        ;
        E.getCCIOutboundQueueDispostions = wn;
        const Ae = () => {
                const Se = M.default.getters["sessionPanels/cciUpgradeQueues"]
                    , Ue = {};
                if (Se) {
                    for (const yt in Se)
                        if (Object.prototype.hasOwnProperty.call(Se, yt)) {
                            const {result: Qt} = Se[yt];
                            Qt[yt] = Qt || []
                        }
                }
                return Ue
            }
        ;
        E.getCCIUpgradeQueues = Ae;
        const nr = () => {
                const Se = (0,
                    E.getCurrentActiveTask)();
                return ["accepted", "takeover.accepted", "call.ended"].indexOf(Se?.eventType) > -1
            }
        ;
        E.isCurrentActiveTaskInPhone = nr;
        const mt = () => {
                const Se = (0,
                    E.getCurrentActiveTask)();
                return ["chat.accepted", "chat.ended"].indexOf(Se?.eventType) > -1 || ["chat.ended"].indexOf(Se?.eventType) > -1
            }
        ;
        E.isCurrentActiveTaskInChat = mt;
        const jn = () => {
                const Se = (0,
                    E.getCurrentActiveTask)();
                return ["sms.accepted", "sms.ended"].indexOf(Se?.eventType) > -1 || ["sms.ended"].indexOf(Se?.eventType) > -1
            }
        ;
        E.isCurrentActiveTaskInSMS = jn;
        const ve = () => {
                const Se = (0,
                    E.getCurrentActiveTask)();
                return ["v.accepted", "v.ended"].indexOf(Se?.eventType) > -1
            }
        ;
        E.isCurrentActiveTaskInVideo = ve;
        const or = () => {
                const Se = (0,
                    E.getCurrentActiveTask)()
                    , Ue = (0,
                    E.getCurrentMonitorTask)()
                    , yt = ["accepted", "v.accepted", "sms.accepted", "chat.accepted", "takeover.accepted", "monitor.start"];
                return yt.includes(Se?.eventType) || yt.includes(Ue?.eventType)
            }
        ;
        E.isCurrentActiveTaskIsAlive = or;
        const pt = () => (0,
            E.getCurrentActiveTask)()?.queueName || "-";
        E.getActiveEngagementQueue = pt;
        const je = () => {
                const Se = (0,
                    E.getCurrentActiveTask)();
                if (!Se)
                    return null;
                const Ue = Se.createTs || Se.takeoverTs || Se.acceptTs
                    , yt = Se.completeTs || Date.now()
                    , Qt = Math.floor((yt - Ue) / 1e3)
                    , Hn = Se.channelType;
                return {
                    startTime: Ue,
                    endTime: yt,
                    duration: Qt,
                    queue: (0,
                        E.getActiveEngagementQueue)(),
                    direction: Se?.direction,
                    channel: Hn
                }
            }
        ;
        E.getActiveEngagementDetail = je;
        const Ke = () => {
                const {getSettingEnabled: Se} = (0,
                    P.useAccount)()
                    , {currentQueueDispositions: Ue, currentQueueDataSettings: yt} = (0,
                    P.useActiveQueueDisposition)()
                    , Qt = G()
                    , Hn = yt?.value?.v2DispositionType === Q.eV2WrappingDispositionType.mandatory;
                return {
                    list: (0,
                        O.default)(Ue.value),
                    defaultDisposition: Qt,
                    isMandatory: Hn,
                    canAddNote: Se("add-edit-note")
                }
            }
        ;
        E.getEngagementDisposition = Ke;
        const it = () => {
                const Se = (0,
                    E.getCurrentActiveTask)()
                    , {isSmsToVoice: Ue, isUpgrade: yt, liveVideoUpgradeFromQueueId: Qt, tkType: Hn} = Se || {};
                return ["accepted", "takeover.accepted", "call.ended"].indexOf(Se?.eventType) > -1 && Ue ? "Upgraded to Voice" : yt && Qt && Hn === "video" ? "Upgraded to Video" : ""
            }
        ;
        E.getUpgradeInfo = it;
        const Ne = () => (0,
            E.getCurrentActiveTask)()?.engagementId || "";
        E.getCurrentActiveTaskKey = Ne;
        const Gt = () => {
                const Se = (0,
                    E.getCurrentTaskId)();
                let Ue;
                Se && (Ue = (0,
                    E.getSpecifiedActiveTask)(Se));
                const yt = (0,
                    E.getCurrentActiveTask)();
                return Ue?.engagementId || yt?.engagementId || ""
            }
        ;
        E.getCurrentEngagementId = Gt;
        const en = () => M.default.getters["coreVoice/GlobalPreparationPhaseKey"];
        E.getPreparationPhaseKey = en;
        const rn = () => M.default.getters["crm/appStatus"];
        E.getAppStatus = rn;
        const Tt = Se => {
                const Ue = M.default.getters?.["CrmCommonModule/crmCommonFeatures"];
                return Ue && Ue[Se] || !1
            }
        ;
        E.isEnabledFeature = Tt;
        const vr = Se => !!(M.default.getters.account && M.default.getters.account[Se]);
        E.getOPEnabled = vr;
        const rr = Se => {
                M.default.commit("coreVoice/setPreparationPhaseKey", Se)
            }
        ;
        E.setPreparationPhaseKey = rr;
        function kr(Se) {
            const Ue = Se || (0,
                E.getCurrentActiveTaskKey)();
            return M.default.getters["crm/getCurrentEngagementMap"](Ue) || {}
        }
        function Re(Se, Ue) {
            const yt = Se || (0,
                E.getCurrentActiveTaskKey)();
            M.default.dispatch("crm/setContactsMap", {
                users: Ue,
                engagementId: yt
            })
        }
        function Et(Se) {
            const Ue = Se || (0,
                E.getCurrentActiveTaskKey)();
            return {
                variables: M.default.getters["crm/currentVariablesCaches"](Ue)
            }
        }
        function An(Se) {
            const Ue = Se || (0,
                E.getCurrentActiveTaskKey)();
            return M.default.getters["crm/getSelectedDisposition"](Ue)
        }
        function Yt(Se) {
            const Ue = Se || (0,
                E.getCurrentActiveTaskKey)();
            return M.default.getters["crm/getConferenceDetails"](Ue)
        }
        function gn(Se) {
            const Ue = Se || (0,
                E.getCurrentActiveTaskKey)();
            return M.default.getters["crm/getConferenceParticipantsList"](Ue) || []
        }
        function Qe() {
            return M.default.getters["crm/getIntegrationId"]
        }
        function ar() {
            return M.default.getters["crm/getAppPanelSize"]
        }
        const zt = () => (0,
            E.isCurrentActiveTaskInVideo)() ? M.default.state.crm.videoConfig : (0,
            E.isCurrentActiveTaskInChat)() ? M.default.state.crm.webChatConfig : (0,
            E.isCurrentActiveTaskInSMS)() ? M.default.state.crm.smsConfig : M.default.state.crm.voiceConfig;
        E.getCrmConfig = zt;
        const Zt = Se => {
                let Ue;
                switch (Se) {
                    case Q.QUEUE_CHANNEL_TYPE.VOICE:
                        Ue = M.default.state.crm.voiceConfig;
                        break;
                    case Q.QUEUE_CHANNEL_TYPE.LIVE_VIDEO:
                        Ue = M.default.state.crm.videoConfig;
                        break;
                    case Q.QUEUE_CHANNEL_TYPE.CHAT:
                        Ue = M.default.state.crm.webChatConfig;
                        break;
                    case Q.QUEUE_CHANNEL_TYPE.SMS:
                        Ue = M.default.state.crm.smsConfig;
                        break;
                    case Q.QUEUE_CHANNEL_TYPE.EMAIL:
                        Ue = M.default.state.crm.emailConfig;
                        break;
                    default:
                        Ue = null;
                        break
                }
                return Ue
            }
        ;
        E.getCrmStoreConfig = Zt;
        const Lt = () => M.default.state.crm.globalSettingConfiguration || {};
        E.getGlobalSettingConfiguration = Lt;
        const gr = () => M.default.state.cti.isPopOut ?? !1;
        E.isCtiPopOut = gr;
        const Mn = Se => {
                if (!Array.isArray(Se) || Array.isArray(Se) && Se.length === 0)
                    return "";
                const Ue = Se.filter(Rr => !Rr.isHost)
                    , yt = Ue.length > 1 ? Ue.slice(0, 1) : Ue
                    , Qt = Ue.length - 1
                    , Hn = yt[0];
                let cr;
                return Hn?.name !== Hn?.phoneNumber ? cr = Hn?.name.trim().split(" ")[0] : cr = (0,
                    z.formatPhoneNumber)(Hn?.phoneNumber),
                    (0,
                        Q.getUsersDisplayString)(cr, Qt, "and")
            }
        ;
        E.displayParticipantNames = Mn;
        const U = Se => !Array.isArray(Se) || Array.isArray(Se) && Se.length === 0 ? "" : Se.reduce( (yt, Qt, Hn) => Qt?.name ? Hn === 0 ? yt + Qt.name : Hn === Se.length - 1 ? yt + " and " + Qt.name : yt + ", " + Qt.name : yt, "Conference Call Participants: ");
        E.getCRMConferenceDetailsString = U;
        function Mt(Se) {
            Array.isArray(Se) && M.default.commit("crm/setCrmUsersDataCache", Se[0])
        }
        function Kn(Se) {
            M.default.commit("crm/setClickToDialInProgress", Se)
        }
        function In() {
            return M.default.state.crm.clickToDialInProgress
        }
        function tn() {
            const Se = M.default.state.sessionPanels.activeTaskQueue;
            let Ue = !1;
            return Se.forEach(yt => {
                    ["phone", "video"].includes(yt?.type) && (Ue = !0)
                }
            ),
                Ue
        }
        function Ot() {
            return M.default.state.crm.additionalData
        }
        function Pt() {
            M.default.dispatch("crm/setAdditionalData", {})
        }
        function $n(Se) {
            M.default.dispatch("crm/setAdditionalData", Se)
        }
        function dt(Se) {
            M.default.dispatch("crm/setSelectedWhat", Se)
        }
        function Xe(Se) {
            return M.default.getters["crm/selectedWhatGetter"](Se)
        }
        function ht() {
            return M.default.getters.user?.name || ""
        }
        function yn() {
            return M.default.getters.user?.email || ""
        }
        function dn(Se) {
            return (M.default.getters["crm/getEngagementPropertyValue"]({
                engagementId: Se,
                property: "contactsMap"
            }) || {}).selectedUser || {}
        }
        function Gn(Se) {
            const Ue = dn(Se)
                , yt = (0,
                Q.isInCoreTab)() ? (0,
                Q.getCoreTabCrmPlatform)() : "";
            return K() || (0,
                Q.isInCoreTab)() && yt === F.CRMS.Salesforce ? (0,
                Q.getSalesforceObjectId)(Ue.id) : Ue.id
        }
        function sr(Se) {
            return Array.isArray(Se) ? Se : []
        }
        function Zn(Se, Ue) {
            switch (Se) {
                case "phone":
                    return Q.QUEUE_CHANNEL_TYPE.VOICE;
                case "chat":
                    return Ue === "EMAIL" ? Q.QUEUE_CHANNEL_TYPE.EMAIL : Q.QUEUE_CHANNEL_TYPE.CHAT;
                case "sms":
                    return Q.QUEUE_CHANNEL_TYPE.SMS;
                case "video":
                    return Q.QUEUE_CHANNEL_TYPE.LIVE_VIDEO;
                case "email":
                    return Q.QUEUE_CHANNEL_TYPE.EMAIL;
                default:
                    console.log(`processWrapup no match for channel: ${Se}`);
                    break
            }
            return null
        }
        function _r(Se) {
            switch (Se) {
                case "phone":
                    return "Voice";
                case "chat":
                    return "Chat";
                case "sms":
                    return "SMS";
                case "video":
                    return "Video";
                default:
                    console.log(`getChannelName no match for channel: ${Se}`);
                    break
            }
        }
        function Pn(Se) {
            return Se ? ["outbound", "OUT_BOUND"].includes(Se) ? "Outbound" : "Inbound" : ""
        }
        E.emailRegex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+\.)+[a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{2,}))$/;
        const Ze = Se => Se && E.emailRegex.test(Se);
        E.isEmail = Ze;
        const Vn = Se => Se && /^\+?[\d\s\-()]+$/.test(Se);
        E.isPhoneNumber = Vn
    },
    13859: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(z) {
                return z && z.__esModule ? z : {
                    default: z
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.isPhoneNumberValidNew = E.formatPhoneNumber = E.getCountryCodeByRegion = E.isPhoneNumberValid = E.getPhoneNumberFormatVariations = void 0;
        const J = Y(a(76709))
            , $ = a(27668)
            , k = [$.PhoneNumberFormat.E164, $.PhoneNumberFormat.NATIONAL, $.PhoneNumberFormat.INTERNATIONAL]
            , P = (z, G="") => {
                const V = F(G);
                try {
                    const K = $.PhoneNumberUtil.getInstance()
                        , te = K.parseAndKeepRawInput(z, V)
                        , ee = `+${K.getCountryCodeForRegion(V)}`;
                    if (K.isValidNumber(te)) {
                        const pe = [];
                        return k.forEach(ne => {
                                const X = K.format(te, ne);
                                if (ne === $.PhoneNumberFormat.INTERNATIONAL) {
                                    const x = X.split(ee);
                                    x.length === 2 && typeof x[1] == "string" && x[1].length && pe.push(x[1].trim())
                                } else
                                    ne === $.PhoneNumberFormat.NATIONAL && pe.push(`${ee} ${X}`);
                                pe.push(X)
                            }
                        ),
                            pe.push(K.getNationalSignificantNumber(te)),
                            pe
                    } else
                        return [z]
                } catch (K) {
                    return console.error("getPhoneNumberFormatVariations error ", K),
                        [z]
                }
            }
        ;
        E.getPhoneNumberFormatVariations = P;
        const M = z => {
                let {user: {countryOrRegion: G}} = J.default.getters;
                G === "" && (G = "US");
                try {
                    const V = $.PhoneNumberUtil.getInstance()
                        , K = z.trim()
                        , te = V.parseAndKeepRawInput(K, G);
                    if (!V.isValidNumber(te))
                        return !1
                } catch {
                    return !1
                }
                return !0
            }
        ;
        E.isPhoneNumberValid = M;
        const Q = () => {
                let z = 1
                    , {user: {countryOrRegion: G}} = J.default.getters;
                G === "" && (G = "US");
                try {
                    z = $.PhoneNumberUtil.getInstance().getCountryCodeForRegion(G)
                } catch (V) {
                    console.warn("Unable to get CountryCode by RegionCode >>>", V)
                }
                return z
            }
        ;
        E.getCountryCodeByRegion = Q;
        const O = z => {
                let {user: {countryOrRegion: G}} = J.default.getters;
                G === "" && (G = "US");
                try {
                    const V = $.PhoneNumberUtil.getInstance();
                    if (z.length > 6) {
                        const K = z.startsWith("+")
                            , te = V.parseAndKeepRawInput(K ? z : "+" + z);
                        if (!V.isValidNumber(te))
                            return z;
                        const ee = V.getRegionCodeForNumber(te);
                        return G && G === ee ? V.format(te, $.PhoneNumberFormat.NATIONAL) : V.format(te, $.PhoneNumberFormat.INTERNATIONAL)
                    } else
                        return z
                } catch {
                    return z
                }
            }
        ;
        E.formatPhoneNumber = O;
        function F(z) {
            const {user: {countryOrRegion: G}} = J.default.getters;
            return z || G || "US"
        }
        const D = (z, G) => {
                const V = F(G);
                try {
                    const K = $.PhoneNumberUtil.getInstance()
                        , te = z.trim()
                        , ee = K.parseAndKeepRawInput(te, V);
                    if (K.isValidNumber(ee))
                        return !0;
                    if (!te.startsWith("+")) {
                        const ne = K.parseAndKeepRawInput(`+${te}`, V);
                        if (K.isValidNumber(ne))
                            return !0
                    }
                } catch {
                    console.error("[isPhoneNumberValid] Error while checking phone number validity")
                }
                return !1
            }
        ;
        E.isPhoneNumberValidNew = D
    },
    19e3: (pn, E) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.letServiceCloudLogout = Y,
            E.onServiceCloudLogin = J,
            E.letServiceCloudLogin = $,
            E.setServiceCloudQueryString = k;
        const a = new BroadcastChannel("scv-channel");
        async function Y() {
            a.postMessage({
                type: "SHOW_LOGIN_PAGE",
                success: !0
            })
        }
        async function J(P) {
            a.addEventListener("message", M => {
                    M.data?.type === "LOGIN_SUCCESS" && P && P()
                }
            )
        }
        async function $() {
            a.postMessage({
                type: "LOGIN_SUCCESS",
                success: !0
            })
        }
        function k() {
            const P = location.search;
            if (!P || !P.includes("aid=")) {
                const M = localStorage.getItem("CCI_THIRD_AID")
                    , Q = localStorage.getItem("CCI_THIRD_HAID");
                if (M && Q)
                    return location.href = `${location.href}?aid=${M}&haid=${Q}`,
                        !0
            }
            return !1
        }
    }
    ,
    88967: function(pn, E, a) {
        "use strict";
        var Y = this && this.__createBinding || (Object.create ? function(G, V, K, te) {
                    te === void 0 && (te = K);
                    var ee = Object.getOwnPropertyDescriptor(V, K);
                    (!ee || ("get"in ee ? !V.__esModule : ee.writable || ee.configurable)) && (ee = {
                        enumerable: !0,
                        get: function() {
                            return V[K]
                        }
                    }),
                        Object.defineProperty(G, te, ee)
                }
                : function(G, V, K, te) {
                    te === void 0 && (te = K),
                        G[te] = V[K]
                }
        )
            , J = this && this.__setModuleDefault || (Object.create ? function(G, V) {
                    Object.defineProperty(G, "default", {
                        enumerable: !0,
                        value: V
                    })
                }
                : function(G, V) {
                    G.default = V
                }
        )
            , $ = this && this.__importStar || function() {
            var G = function(V) {
                return G = Object.getOwnPropertyNames || function(K) {
                    var te = [];
                    for (var ee in K)
                        Object.prototype.hasOwnProperty.call(K, ee) && (te[te.length] = ee);
                    return te
                }
                    ,
                    G(V)
            };
            return function(V) {
                if (V && V.__esModule)
                    return V;
                var K = {};
                if (V != null)
                    for (var te = G(V), ee = 0; ee < te.length; ee++)
                        te[ee] !== "default" && Y(K, V, te[ee]);
                return J(K, V),
                    K
            }
        }();
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getSystemVariablesByEngagement = void 0;
        const k = a(76856)
            , P = $(a(76709))
            , M = a(56405)
            , Q = a(61367)
            , {getVariablesOnEngagement: O} = k.variableApi
            , F = async G => {
                const V = (0,
                    P.useActions)(P.default, P.default._modules.getNamespace(["crm"]), ["setVariables"])
                    , K = {
                    inClientEngagementSec: !0,
                    engagementId: G
                }
                    , te = {
                    inClientProfileSec: !0,
                    engagementId: G
                }
                    , [ee,pe] = await Promise.allSettled([(0,
                    M.tryApiCatch)(O, K), (0,
                    M.tryApiCatch)(O, te)])
                    , [ne,X] = ee.value
                    , [x,H] = pe.value;
                if (ne?.errorMessage,
                    x?.errorMessage,
                ne && x)
                    return;
                const {systemGlobalVariables: q, customGlobalVariables: _e} = z(X, H)
                    , ie = {
                    name: "Engagement_variables_fetched",
                    engagement: G || "",
                    systemGlobalVariablesLen: q.length,
                    customGlobalVariablesLen: _e.length
                };
                G || (ie.emptyEngagementId = !0),
                    M.monitor.dispatchMonitor(ie),
                    V?.setVariables({
                        engagementId: G,
                        systemGlobalVariables: q,
                        customGlobalVariables: _e
                    }),
                G && console.log("[Varialbles] setting variables for engagementId", G, q, _e)
            }
        ;
        E.getSystemVariablesByEngagement = F;
        const D = (G, V) => Array.isArray(G) ? G.map(K => ({
            ...K,
            screen: V
        })) : []
            , z = (G, V) => {
            const K = [...D(G?.systemGlobalVariables, Q.IvrVariableScreenType.ENGAGEMENT), ...D(V?.systemGlobalVariables, Q.IvrVariableScreenType.PROFILE)]
                , te = [...D(G?.customGlobalVariables, Q.IvrVariableScreenType.ENGAGEMENT), ...D(V?.customGlobalVariables, Q.IvrVariableScreenType.PROFILE)];
            return {
                systemGlobalVariables: K,
                customGlobalVariables: te
            }
        }
    },
    570: function(pn, E, a) {
        "use strict";
        var Y = this && this.__createBinding || (Object.create ? function(te, ee, pe, ne) {
                        ne === void 0 && (ne = pe);
                        var X = Object.getOwnPropertyDescriptor(ee, pe);
                        (!X || ("get"in X ? !ee.__esModule : X.writable || X.configurable)) && (X = {
                            enumerable: !0,
                            get: function() {
                                return ee[pe]
                            }
                        }),
                            Object.defineProperty(te, ne, X)
                    }
                    : function(te, ee, pe, ne) {
                        ne === void 0 && (ne = pe),
                            te[ne] = ee[pe]
                    }
            )
            , J = this && this.__setModuleDefault || (Object.create ? function(te, ee) {
                        Object.defineProperty(te, "default", {
                            enumerable: !0,
                            value: ee
                        })
                    }
                    : function(te, ee) {
                        te.default = ee
                    }
            )
            , $ = this && this.__importStar || function() {
                var te = function(ee) {
                    return te = Object.getOwnPropertyNames || function(pe) {
                        var ne = [];
                        for (var X in pe)
                            Object.prototype.hasOwnProperty.call(pe, X) && (ne[ne.length] = X);
                        return ne
                    }
                        ,
                        te(ee)
                };
                return function(ee) {
                    if (ee && ee.__esModule)
                        return ee;
                    var pe = {};
                    if (ee != null)
                        for (var ne = te(ee), X = 0; X < ne.length; X++)
                            ne[X] !== "default" && Y(pe, ee, ne[X]);
                    return J(pe, ee),
                        pe
                }
            }()
            , k = this && this.__importDefault || function(te) {
                return te && te.__esModule ? te : {
                    default: te
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.useClickToDial = K;
        const P = $(a(74061))
            , M = a(83266)
            , Q = a(6372)
            , O = a(76709)
            , F = a(56405)
            , D = a(51578)
            , z = a(30824)
            , G = a(83592)
            , V = k(a(62225));
        function K() {
            const {getSettingEnabled: te} = (0,
                G.useAccountConfig)()
                , {setContactsMap: ee, setClickToDialSelectedUser: pe} = (0,
                O.useCrmActions)()
                , {dialOutboundCall: ne} = (0,
                O.useVoiceActions)()
                , {isWrapupStatus: X} = (0,
                M.useWrapping)()
                , {hasOngoingPhoneTask: x, hasOngoingVideoTask: H} = (0,
                M.useStatus)()
                , q = (0,
                M.useMessage)()
                , _e = (0,
                F.useInstance)();
            let ie;
            const ze = (0,
                P.computed)( () => te("outbound-sms-messages") && O.storeUtils.crm.isSMSChannelEnabled())
                , Oe = (0,
                P.computed)( () => te("outbound-voice-call"))
                , Cn = (0,
                P.computed)( () => X.value || x.value || H.value);
            (0,
                P.onMounted)( () => {
                    ie?.destroy()
                }
            );
            function at(nr, mt, jn) {
                const ve = ze.value ? Q.i18n.t("cci.crm.clickToCall.description.all") : Q.i18n.t("cci.crm.clickToCall.description")
                    , or = {
                    component: V.default,
                    propsData: {
                        isSMSChannelEnabled: ze.value,
                        to: jn
                    },
                    on: {
                        clickToCall: () => {
                            wn(nr, mt),
                                ie?.destroy()
                        }
                        ,
                        clickToSms: () => {
                            Ce(nr, mt),
                                ie?.destroy()
                        }
                    }
                }
                    , pt = (0,
                    D.dialogFactory)(P.default);
                ie = new pt().dialog({
                    default: {
                        render: Ke => Ke("span", ve)
                    },
                    footer: or
                }, {
                    title: mt,
                    visible: !0,
                    "custom-class": "click-to-dial-confirm",
                    "show-close": !0
                })
            }
            async function Sn(nr, mt, jn) {
                const ve = jn === "SMS" ? F.eMenuName.smsOutbound : F.eMenuName.phonePanel;
                _e?.handleMenuClick(ve),
                    ee({
                        users: [nr],
                        engagementId: "OUTBOUND_CALL_CRMSTORE"
                    }),
                    await (0,
                        F.sleep)(500),
                    pe({
                        number: mt,
                        to: jn
                    })
            }
            async function Ce(nr, mt) {
                const {enablePreview: jn} = (0,
                    z.getGlobalSettingConfiguration)() || {};
                if (jn) {
                    Sn(nr, mt, "SMS");
                    return
                }
                _e?.handleMenuClick(F.eMenuName.smsOutbound),
                    ee({
                        users: [nr],
                        engagementId: "OUTBOUND_CALL_CRMSTORE"
                    }),
                    await (0,
                        F.sleep)(500),
                    pe({
                        user: nr,
                        number: mt,
                        to: "SMS"
                    })
            }
            async function wn(nr, mt) {
                const {enablePreview: jn} = (0,
                    z.getGlobalSettingConfiguration)() || {};
                if (jn) {
                    Sn(nr, mt, "CALL");
                    return
                }
                _e?.handleMenuClick(F.eMenuName.phonePanel),
                    ee({
                        users: [nr],
                        engagementId: "OUTBOUND_CALL_CRMSTORE"
                    }),
                    ne(mt)
            }
            function Ae(nr, mt) {
                if (ie?.destroy(),
                    Cn.value) {
                    q.info(Q.i18n.t("cci.home.disableOutboundVoiceAndVideo")),
                        console.warn("[voice-dialout] isInActiveCall ", Cn);
                    return
                }
                const {clickToDialSetting: jn, enablePreview: ve} = (0,
                    z.getGlobalSettingConfiguration)() || {}
                    , or = jn === "clickToSms"
                    , pt = jn === "preview";
                if (jn === "clickToCall" && !Oe.value) {
                    q.info(Q.i18n.t("cci.dialPanel.hasNoOutboundPermission"));
                    return
                }
                if (pt) {
                    at(nr, mt);
                    return
                }
                if (ve) {
                    Sn(nr, mt, or ? "SMS" : "CALL");
                    return
                }
                jn === "clickToSms" ? ze.value && Ce(nr, mt) : wn(nr, mt)
            }
            return {
                clickToDial: Ae
            }
        }
    },
    12168: (pn, E, a) => {
        "use strict";
        var Y;
        Y = {
            value: !0
        },
            Y = void 0,
            E.FE = M,
            E.Mo = Q;
        const J = a(74061)
            , $ = a(76709)
            , k = a(56405);
        Y = () => {
            const {nacosConfig: O} = (0,
                $.useAppGetters)()
                , F = (0,
                J.computed)( () => O.value?.enableCloudServiceHistoryMode !== "false")
                , D = window.location.hostname
                , z = new Date
                , G = new Date("2025-05-07")
                , V = new Date("2025-05-20");
            return {
                shouldEnable: (0,
                    J.computed)( () => F.value ? ["zoomdev.us"].includes(D) ? !0 : D === "go.zoom.us" ? z >= G : z >= V : !1)
            }
        }
        ;
        function M(O) {
            const F = O?.enableCloudServiceHistoryMode !== "false"
                , D = window.location.hostname
                , z = new Date
                , G = new Date("2025-05-07")
                , V = new Date("2025-05-20");
            return F ? ["zoomdev.us"].includes(D) || !(0,
                k.isProd)() ? !0 : D === "go.zoom.us" ? z >= G : z >= V : !1
        }
        function Q(O) {
            return O.path.startsWith("/cloud-service")
        }
    }
    ,
    81385: (pn, E, a) => {
        "use strict";
        var Y;
        Y = {
            value: !0
        },
            E.J = void 0;
        const J = a(76856)
            , $ = a(83266)
            , k = a(76709)
            , P = a(19598)
            , M = a(7287)
            , {getParticipants: Q} = J.livevideoApi
            , O = () => {
                const {inChat: F, inVideo: D, inPhone: z, inSMS: G} = (0,
                        $.useClient)()
                    , {currentActiveTask: V} = (0,
                        k.useSessionPanelsGetters)()
                    , K = () => {
                        switch (!0) {
                            case z.value:
                                return "phone";
                            case G.value:
                                return "sms";
                            case F.value:
                                return "chat";
                            case D.value:
                                return "video";
                            default:
                                return ""
                        }
                    }
                    , te = async () => {
                        const [pe,ne] = await (0,
                            P.tryApiCatch)(Q, V.value?.engagementId);
                        return pe ? "" : ne.find(x => x.type == 2)?.enterId || ""
                    }
                ;
                return {
                    getCustomerEnterIdForChannel: async () => {
                        const pe = K();
                        let ne = V.value?.[M.LINK_CONTACT_PARAMS[pe].enterId] || "";
                        if (D.value && V.value) {
                            const X = V.value.customerEnterId;
                            ne = X || await te()
                        }
                        return {
                            channelType: pe,
                            enterId: ne,
                            sessionId: V.value && V.value[M.LINK_CONTACT_PARAMS[pe].sessionId] || ""
                        }
                    }
                }
            }
        ;
        E.J = O
    }
    ,
    80241: (pn, E, a) => {
        "use strict";
        var Y;
        Y = {
            value: !0
        },
            E.X = void 0;
        const J = a(74061)
            , $ = a(83266)
            , k = a(76709)
            , P = a(56405)
            , M = () => {
                const {activeTaskQueue: Q, chatWrapupTaskQueue: O, specifiedActiveTask: F} = (0,
                        k.useSessionPanelsGetters)()
                    , {setDispositionSelected: D, timeoutAutoClearTask: z} = (0,
                        k.useSessionPanelsActions)()
                    , {getQueueDispositions: G} = (0,
                        $.useActiveQueueDisposition)()
                    , V = (pe, ne) => {
                        for (const X of pe)
                            if (X.id === ne || X.subDispositionList && X.subDispositionList.length > 0 && V(X.subDispositionList, ne))
                                return !0;
                        return !1
                    }
                    , K = pe => {
                        const ne = Q.value?.find(x => x.engagementId === pe);
                        if (ne) {
                            const x = F.value(ne.taskId);
                            if (x)
                                return {
                                    task: x,
                                    taskId: ne.taskId
                                }
                        }
                        const X = O.value?.find(x => x.engagementId === pe);
                        if (X) {
                            const x = F.value(X.taskId);
                            if (x)
                                return {
                                    task: x,
                                    taskId: X.taskId
                                }
                        }
                        return null
                    }
                    , te = async ({taskId: pe, task: ne, dispositionId: X}) => {
                        if (X) {
                            const H = G(ne);
                            if (!V(H, X))
                                throw new Error(`Invalid dispositionId: ${X} not found in task's disposition list`);
                            D({
                                taskId: pe,
                                dispositionSelected: [{
                                    dispositionId: X
                                }]
                            })
                        }
                        const {eventType: x} = ne;
                        if (!x)
                            throw new Error(`No eventType found in task for taskId: ${pe}`);
                        await z({
                            taskId: pe,
                            eventType: x,
                            isV2Wrapping: !0,
                            isExternalRequest: !0
                        })
                    }
                    , ee = async pe => {
                        const {engagementId: ne, channelType: X, dispositionId: x, requestId: H} = pe;
                        if (!ne || !H) {
                            P.eventBus.$emit("SE_CLOSE_WRAPUP_RESPONSE", {
                                status: !1,
                                error: "Missing required parameters: engagementId or requestId",
                                requestId: H
                            });
                            return
                        }
                        try {
                            const q = K(ne);
                            if (!q) {
                                P.eventBus.$emit("SE_CLOSE_WRAPUP_RESPONSE", {
                                    status: !1,
                                    error: `No active task found for engagementId: ${ne}`,
                                    requestId: H
                                });
                                return
                            }
                            const {task: _e, taskId: ie} = q;
                            if (X) {
                                const {tkType: ze} = _e;
                                let Oe = !1;
                                switch (X) {
                                    case "voice":
                                        Oe = ze === "phone";
                                        break;
                                    case "video":
                                        Oe = ze === "video";
                                        break;
                                    case "chat":
                                        Oe = ze === "chat" || ze === "email";
                                        break;
                                    case "sms":
                                        Oe = ze === "sms";
                                        break;
                                    default:
                                        Oe = !1
                                }
                                if (!Oe) {
                                    P.eventBus.$emit("SE_CLOSE_WRAPUP_RESPONSE", {
                                        status: !1,
                                        error: `Channel type mismatch. Request channelType: ${X}, but found task with tkType: ${ze}`,
                                        requestId: H
                                    });
                                    return
                                }
                            }
                            await te({
                                taskId: ie,
                                task: _e,
                                dispositionId: x
                            }),
                                P.eventBus.$emit("SE_CLOSE_WRAPUP_RESPONSE", {
                                    status: !0,
                                    requestId: H
                                })
                        } catch (q) {
                            console.error("External wrapup request failed:", q),
                                P.eventBus.$emit("SE_CLOSE_WRAPUP_RESPONSE", {
                                    status: !1,
                                    error: q instanceof Error ? q.message : "Unknown error occurred",
                                    requestId: H
                                })
                        }
                    }
                ;
                return (0,
                    J.onMounted)( () => {
                        P.eventBus.$on("SE_CLOSE_WRAPUP_REQUEST", ee)
                    }
                ),
                    (0,
                        J.onUnmounted)( () => {
                            P.eventBus.$off("SE_CLOSE_WRAPUP_REQUEST", ee)
                        }
                    ),
                    {
                        handleExternalWrapupRequest: ee,
                        findActiveTaskByEngagementId: K,
                        executeExternalWrapupClose: te
                    }
            }
        ;
        E.X = M
    }
    ,
    29197: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.usePageError = void 0;
        const Y = a(74061)
            , J = a(6372)
            , $ = a(56405);
        let k = null;
        const P = () => {
                const M = (0,
                    $.useInstance)()
                    , {t: Q} = (0,
                    J.useI18n)()
                    , O = (0,
                    Y.ref)("")
                    , F = (0,
                    Y.computed)( () => O.value === $.eLoadingError.inactive ? Q("cci.client.error.inactive.title") : (O.value === $.eLoadingError.crmIntegrateInvalid,
                    Q("cci.client.error.title")))
                    , D = (0,
                    Y.computed)( () => O.value === $.eLoadingError.inactive ? Q("cci.client.error.inactive.tips") : O.value === $.eLoadingError.crmIntegrateInvalid ? Q("cci.client.error.invalid.integrate.title") : Q("cci.client.error.tips"));
                function z() {
                    O.value = $.eLoadingError.inactive,
                    !k && (k = M.$message({
                        duration: 0,
                        type: "error",
                        message: Q("cci.userIsInactive"),
                        onClose: () => {
                            k = null
                        }
                    }))
                }
                function G() {
                    O.value = $.eLoadingError.crmIntegrateInvalid
                }
                function V() {
                    M.$bus.$on("userIsInactive", z),
                        M.$bus.$on("crmIntegrateInvalid", G)
                }
                function K() {
                    M.$bus.$off("userIsInactive", z),
                        M.$bus.$off("crmIntegrateInvalid", G)
                }
                return (0,
                    Y.onMounted)( () => {
                        V()
                    }
                ),
                    (0,
                        Y.onBeforeUnmount)( () => {
                            K()
                        }
                    ),
                    (0,
                        Y.watchEffect)( () => {
                            O.value && $.monitor.dispatchMonitor({
                                name: "usePageError",
                                value: O.value
                            })
                        }
                    ),
                    {
                        eLoadingError: $.eLoadingError,
                        errorOccurred: O,
                        calcErrorTitle: F,
                        calcErrorContent: D
                    }
            }
        ;
        E.usePageError = P
    }
    ,
    83343: (pn, E, a) => {
        "use strict";
        var Y;
        Y = {
            value: !0
        },
            E.f = void 0;
        const J = a(83266)
            , $ = a(76709)
            , k = a(56405)
            , P = () => {
                const {setDispositionSelected: M} = (0,
                        $.useSessionPanelsActions)()
                    , {findNoMonitorTaskByEngagementId: Q, getDispositionSelected: O} = (0,
                        $.useSessionPanelsGetters)()
                    , {getQueueDispositions: F, findDispositionById: D, isQueueEnableV2Disposition: z} = (0,
                        J.useActiveQueueDisposition)()
                    , {isTaskInWrapupStatus: G} = (0,
                        J.useWrapping)()
                    , V = pe => {
                        const ne = Q.value(pe);
                        return ne && G(ne) ? ne : null
                    }
                    , K = ({task: pe, channelType: ne}) => {
                        const {tkType: X} = pe;
                        switch (ne) {
                            case "voice":
                                return X === "phone";
                            case "video":
                                return X === "video";
                            case "chat":
                                return X === "chat" || X === "email";
                            case "sms":
                                return X === "sms";
                            default:
                                return !1
                        }
                    }
                    , te = pe => {
                        if (console.log("Global SE_SELECT_DISPOSITION_REQUEST event received:", pe),
                            k.monitor.dispatchMonitor({
                                name: "SE_SELECT_DISPOSITION_REQUEST",
                                message: JSON.stringify({
                                    engagementId: pe?.engagementId,
                                    channelType: pe?.channelType,
                                    requestId: pe?.requestId,
                                    dispositionId: pe?.dispositionId
                                })
                            }, k.monitor.MONITOR_COMMON_CHANEL),
                        !pe || typeof pe != "object") {
                            const q = {
                                status: !1,
                                error: "Invalid request data format",
                                requestId: pe?.requestId || "unknown"
                            };
                            ee(q);
                            return
                        }
                        const {dispositionId: ne, requestId: X, engagementId: x, channelType: H} = pe;
                        try {
                            const q = V(x);
                            if (!q) {
                                const at = {
                                    status: !1,
                                    error: `Wrapup task not found for engagementId: ${x}`,
                                    requestId: X
                                };
                                ee(at);
                                return
                            }
                            if (!K({
                                task: q,
                                channelType: H
                            })) {
                                const at = {
                                    status: !1,
                                    error: `Channel type mismatch. Request channelType: ${H}, but found task with tkType: ${q.tkType}`,
                                    requestId: X
                                };
                                ee(at);
                                return
                            }
                            if (!z(q)) {
                                const at = {
                                    status: !1,
                                    error: `The disposition setting is disabled for wrapup task with engagementId: ${x}`,
                                    requestId: X
                                };
                                ee(at);
                                return
                            }
                            const ze = {
                                status: !0,
                                error: "",
                                requestId: X
                            };
                            if (O.value(q.taskId)?.[0] === ne) {
                                ee(ze);
                                return
                            }
                            const Oe = F(q)
                                , Cn = D(Oe, ne, !0);
                            if (!Cn) {
                                const at = {
                                    status: !1,
                                    error: `Disposition ${ne} is not available for this task`,
                                    requestId: X
                                };
                                ee(at);
                                return
                            }
                            if ((0,
                                k.isCrm)()) {
                                const {setSelectedDisposition: at} = (0,
                                    $.useCrmActions)()
                                    , Sn = {
                                    label: Cn.path,
                                    value: ne
                                };
                                at({
                                    engagementId: x,
                                    disposition: Sn
                                })
                            }
                            M({
                                taskId: q.taskId,
                                disposition: [ne]
                            }),
                                ee(ze)
                        } catch (q) {
                            const _e = {
                                status: !1,
                                error: q instanceof Error ? q.message : "Unknown error",
                                requestId: X
                            };
                            ee(_e)
                        }
                    }
                    , ee = pe => {
                        k.eventBus.$emit("SE_SELECT_DISPOSITION_RESPONSE", pe),
                            console.log("sendResponseToVendor", pe),
                            k.monitor.dispatchMonitor({
                                name: "SE_SELECT_DISPOSITION_RESPONSE",
                                message: JSON.stringify({
                                    status: pe?.status,
                                    error: pe?.error,
                                    requestId: pe?.requestId
                                })
                            }, k.monitor.MONITOR_COMMON_CHANEL)
                    }
                ;
                return {
                    handleVendorDispositionRequest: te,
                    sendResponseToVendor: ee,
                    findWrapupTaskByEngagementId: V
                }
            }
        ;
        E.f = P
    }
    ,
    50920: function(pn, E, a) {
        "use strict";
        var Y = this && this.__createBinding || (Object.create ? function(q, _e, ie, ze) {
                        ze === void 0 && (ze = ie);
                        var Oe = Object.getOwnPropertyDescriptor(_e, ie);
                        (!Oe || ("get"in Oe ? !_e.__esModule : Oe.writable || Oe.configurable)) && (Oe = {
                            enumerable: !0,
                            get: function() {
                                return _e[ie]
                            }
                        }),
                            Object.defineProperty(q, ze, Oe)
                    }
                    : function(q, _e, ie, ze) {
                        ze === void 0 && (ze = ie),
                            q[ze] = _e[ie]
                    }
            )
            , J = this && this.__setModuleDefault || (Object.create ? function(q, _e) {
                        Object.defineProperty(q, "default", {
                            enumerable: !0,
                            value: _e
                        })
                    }
                    : function(q, _e) {
                        q.default = _e
                    }
            )
            , $ = this && this.__importStar || function() {
                var q = function(_e) {
                    return q = Object.getOwnPropertyNames || function(ie) {
                        var ze = [];
                        for (var Oe in ie)
                            Object.prototype.hasOwnProperty.call(ie, Oe) && (ze[ze.length] = Oe);
                        return ze
                    }
                        ,
                        q(_e)
                };
                return function(_e) {
                    if (_e && _e.__esModule)
                        return _e;
                    var ie = {};
                    if (_e != null)
                        for (var ze = q(_e), Oe = 0; Oe < ze.length; Oe++)
                            ze[Oe] !== "default" && Y(ie, _e, ze[Oe]);
                    return J(ie, _e),
                        ie
                }
            }()
            , k = this && this.__importDefault || function(q) {
                return q && q.__esModule ? q : {
                    default: q
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            a(33063);
        const P = k(a(74061))
            , M = k(a(91241))
            , Q = a(6372)
            , O = $(a(76709))
            , F = a(56405)
            , D = a(5513)
            , z = a(39070)
            , G = k(a(62913))
            , V = k(a(73680))
            , K = k(a(68383))
            , te = a(20125)
            , ee = k(a(24466));
        a(85913),
            P.default.prototype.$globalLoading = function() {
                return this.$loading({
                    lock: !0
                })
            }
            ,
            P.default.prototype.$bus = F.eventBus;
        function pe() {
            const q = "is-keyboard-event";
            document.addEventListener("mousedown", () => {
                    (0,
                        D.hasClass)(document.body, q) && (0,
                        D.removeClass)(document.body, q)
                }
            ),
                document.addEventListener("keydown", () => {
                        (0,
                            D.hasClass)(document.body, q) || (0,
                            D.addClass)(document.body, q)
                    }
                )
        }
        P.default.use(pe),
            P.default.use(K.default),
            P.default.use(V.default),
            P.default.use(F.testIdPlugin),
            P.default.use(M.default, {
                lazyComponent: !0
            }),
            P.default.use(F.VueElementUISkeleton),
            P.default.use(z.VueQueryPlugin),
            P.default.use(O.NacosPlugin, {
                nacos: window.ContactConfig.CciConfig?.nacos || {}
            });
        let ne = 0;
        const X = ["/cci/web/getToken", "/cci/web/long/token", "/cci/web/access/token", "/cci/web/crm/logout", "/pbx/qos/usr-info"];
        F.request.interceptors.response.use(function(q) {
            return q?.status !== 401 && (X.includes(q?.config?.url || "") || (console.log("CCI_TOKEN_VALID"),
                te.ctiBus.$emit("CCI_TOKEN_VALID")),
            ne > 0 && (ne = 0)),
                q
        });
        async function x(q) {
            if (console.log("auto refreshToken in cti"),
            ne++ > 5)
                throw setTimeout( () => {
                        ne = 0
                    }
                    , 1 * 60 * 1e3),
                    te.ctiBus.$emit("CCI_TOKEN_EXPIRED"),
                    new Error("Try to refresh token too many times");
            const _e = F.ZCache.getRefreshToken() || localStorage.getItem("CCI_REFESH_TOKEN");
            if (_e && _e !== "undefined") {
                const {err: ie, refreshTkRes: ze} = await (0,
                    te.refeshCrmTokenWithRefreshToken)();
                if (ie || !ze)
                    throw new Error("web can't refesh token");
                const {access_token: Oe} = ze || {};
                return q.response.config.headers.Authorization = "Bearer " + Oe,
                    Promise.resolve()
            } else
                throw te.ctiBus.$emit("CCI_TOKEN_EXPIRED"),
                    new Error("No refresh token to get token")
        }
        (0,
            G.default)(F.request, x);
        const H = a(48080).A;
        new P.default({
            el: "#app",
            i18n: Q.i18n,
            router: ee.default,
            store: O.default,
            render: q => q(H)
        }),
            F.APIValidator.setStore(O.default),
            F.APIValidator.setUINotify(P.default.prototype.$message),
            window.$proxyStore = O.default
    },
    83592: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.useAccountConfig = void 0;
        const Y = a(74061)
            , J = a(76709)
            , $ = () => {
                const k = (0,
                    J.useStore)()
                    , P = (0,
                    Y.computed)( () => k.getters.permission)
                    , M = (0,
                    Y.computed)( () => k.getters.settings)
                    , Q = (0,
                    Y.computed)( () => k.getters.account)
                    , O = (0,
                    Y.computed)( () => k.getters.userOptions)
                    , F = z => M.value?.find(G => G.settingId === z)?.enabled
                    , D = z => P.value?.find(G => G.permission === z)?.enabled;
                return {
                    account: Q.value,
                    userOptions: O,
                    getSettingEnabled: F,
                    getPermissionEnabled: D
                }
            }
        ;
        E.useAccountConfig = $
    }
    ,
    8854: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(z) {
                return z && z.__esModule ? z : {
                    default: z
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(53578)
            , $ = a(56405)
            , k = Y(a(47324))
            , P = a(99031)
            , M = a(58127)
            , Q = a(10393)
            , O = a(4439)
            , F = a(35878)
            , D = a(30824);
        E.default = {
            async mounted() {},
            methods: {
                ...(0,
                    J.mapActions)("crm", ["setIntegrationConfiguration"]),
                ...(0,
                    J.mapMutations)("crm", ["updateClientAttributes"]),
                async validateIntegration() {
                    let z = (0,
                        D.getCRM)();
                    const G = await (0,
                        F.getCRMInstance)()
                        , V = k.default.parse(location.search.slice(1))
                        , K = V.origin || V.sfdcIframeOrigin
                        , te = {};
                    if (z === O.CRMS.SalesforceServiceCloud)
                        return [!0];
                    if (z === "hubspot")
                        await new Promise(x => {
                                const H = setInterval( () => {
                                        const q = G;
                                        q?.client?.accountId && (z = q?.client?.accountId,
                                            clearInterval(H),
                                            x())
                                    }
                                    , 1e3)
                            }
                        );
                    else if (K) {
                        const X = K?.split("https://");
                        if (X.length > 1) {
                            const x = X[1].split(".");
                            z === "msd" ? z = `${x[0]}.${x[1]}` : z === "smartEmbed" ? (z = "smartEmbed",
                                te.params = {
                                    instanceUrl: X[1]
                                }) : z = x[0]
                        }
                    }
                    te.type = z;
                    const [ee,pe] = await (0,
                        $.tryApiCatch)(Q.checkIntegrationAndFetchConfig, te);
                    if (ee)
                        return [!1, ee];
                    const ne = pe?.configuration?.connectionConfigs?.connectionFullDomain;
                    return ne && this.updateClientAttributes({
                        wrapperOrigin: ne
                    }),
                    z === "smartEmbed" && (window.addEventListener("message", X => {
                            X.data.type === P.VendorToCTIEvents.INIT_CONFIG_RESPONSE && this.setIntegrationConfiguration(Object.freeze(pe))
                        }
                        , !1),
                        (0,
                            M.sendDataToVendor)(P.CTIToVendorEvents.INIT_CONFIG_REQUEST)),
                        this.integrationConfiguration = pe,
                        this.setIntegrationConfiguration(pe),
                        [!0]
                }
            }
        }
    },
    68383: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(M) {
                return M && M.__esModule ? M : {
                    default: M
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(83266)
            , $ = a(5513)
            , k = Y(a(28484));
        a(7956);
        const P = {
            install: function(M) {
                M.use($.Row),
                    M.use($.Avatar),
                    M.use($.Col),
                    M.use($.Alert),
                    M.use($.Autocomplete),
                    M.use($.Button),
                    M.use($.Breadcrumb),
                    M.use($.Checkbox),
                    M.use($.CheckboxGroup),
                    M.use($.Message),
                    M.use($.MessageBox),
                    M.use($.Dropdown),
                    M.use($.DatePicker),
                    M.use($.TimePicker),
                    M.use($.ColorPicker),
                    M.use($.SimpleColorPicker),
                    M.use($.Form),
                    M.use($.Input),
                    M.use($.InputNumber),
                    M.use($.Loading),
                    M.use($.Popover),
                    M.use($.Radio),
                    M.use($.RadioGroup),
                    M.use($.Switch),
                    M.use($.Select),
                    M.use($.Cascader),
                    M.use($.Tabs),
                    M.use($.Tag),
                    M.use($.Tooltip),
                    M.use($.Table),
                    M.use($.Locale),
                    M.use($.Scrollbar),
                    M.use($.Notification),
                    M.use($.Pagination),
                    M.use($.Collapse),
                    M.use($.Steps),
                    M.use($.Icon),
                    M.use($.MultiSelect),
                    M.use($.Tree),
                    M.use($.Drawer),
                    M.use($.highlightText),
                    M.use($.Badge),
                    M.use($.Skeleton),
                    M.component("CciLabel", k.default),
                    M.component("ZccDialog", J.ZccDialog),
                    M.component("ZmDialog", J.ZccDialog)
            }
        };
        E.default = P
    },
    76642: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.getLockValue = P,
            E.acquireLock = M,
            E.releaseLock = Q,
            E.isLockCreatorTab = O,
            E.isLockExist = F,
            E.setLockValue = D,
            E.releaseAllLock = z,
            E.delayReleaseLock = G;
        const Y = a(30824)
            , J = 10 * 1e3
            , $ = "CCI_CRM_TASK_"
            , k = [];
        function P(te) {
            let ee;
            const pe = new Promise(ne => {
                    const X = `${$}${te}`
                        , x = localStorage.getItem(X) || localStorage.getItem(X + "_CLOSED");
                    if (x) {
                        ne(x);
                        return
                    }
                    let H = window.setTimeout( () => {
                            ne(""),
                                clearTimeout(H),
                                H = 0
                        }
                        , J);
                    ee = q => {
                        H && q.key === X && q.newValue && (ne(q.newValue),
                            clearTimeout(H),
                            window.removeEventListener("storage", ee))
                    }
                }
            );
            return window.addEventListener("storage", ee),
                pe
        }
        function M(te) {
            const ee = `${$}${te}`;
            return localStorage.getItem(ee) === null ? (localStorage.setItem(ee, ""),
                k.push(ee),
                [!0]) : [!1, P(te)]
        }
        function Q(te) {
            const ee = `${$}${te}`
                , pe = k.findIndex(ne => ne === ee);
            pe > -1 && (localStorage.removeItem(ee),
                localStorage.removeItem(ee + "_CLOSED"),
                k.splice(pe, 1))
        }
        function O(te) {
            const ee = `${$}${te}`;
            return k.includes(ee)
        }
        function F(te) {
            const ee = `${$}${te}`;
            return localStorage.getItem(ee) !== null
        }
        function D(te, ee) {
            const pe = `${$}${te}`;
            return ee ? (localStorage.setItem(pe, ee),
                !0) : !1
        }
        function z() {
            const te = Object.keys(localStorage);
            for (let ee = 0; ee < te.length; ee++) {
                const pe = te[ee];
                pe && pe.startsWith($) && (localStorage.removeItem(pe),
                    localStorage.removeItem(pe + "_CLOSED"))
            }
        }
        function G(te) {
            setTimeout( () => {
                    Q(te);
                    const ee = (0,
                        Y.getAllActiveTasks)();
                    ee && !Object.keys(ee).length && z()
                }
                , 10 * 1e3)
        }
        function V() {
            for (let te = 0; te < k.length; te++) {
                const ee = k[te]
                    , pe = localStorage.getItem(ee);
                ee && (pe && localStorage.setItem(`${ee}_CLOSED`, pe),
                    localStorage.removeItem(ee))
            }
            window.removeEventListener("beforeunload", V)
        }
        function K() {
            window.addEventListener("beforeunload", V)
        }
        K()
    }
    ,
    14535: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(F) {
                return F && F.__esModule ? F : {
                    default: F
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            E.TOAST_TYPES = E.ChannelTypes = E.CONTACT_LABELS = E.NUMBERS_ORDER = E.PHONE_NUMBER_TAGS = E.EVENT_BUS_MAPS = E.RECORDING_TYPE_ACTION = E.NOTIFICATION_NAME = E.NOTIFCATION_TYPES = E.eMenuName = E.QUERY_KEYS_FOR_CONTANT = E.phiReg = E.CHANNEL_KEYS = void 0;
        const J = a(40290)
            , $ = Y(a(49161));
        var k = a(56405);
        Object.defineProperty(E, "CHANNEL_KEYS", {
            enumerable: !0,
            get: function() {
                return k.CHANNEL_KEYS
            }
        }),
            Object.defineProperty(E, "phiReg", {
                enumerable: !0,
                get: function() {
                    return k.phiReg
                }
            }),
            Object.defineProperty(E, "QUERY_KEYS_FOR_CONTANT", {
                enumerable: !0,
                get: function() {
                    return k.QUERY_KEYS_FOR_CONTANT
                }
            }),
            Object.defineProperty(E, "eMenuName", {
                enumerable: !0,
                get: function() {
                    return k.eMenuName
                }
            }),
            E.NOTIFCATION_TYPES = {
                ...J.VDI_NOTIFICATION,
                [$.default.notifcationCalednarChange]: "refreshEventList",
                CCIUINotifCallStatus: "clientNotifyCallStatus",
                CCIUINotifySetCCIAudioStatus: "clientNotifyCCISetAudioStatus",
                CCIUINotifyZoomCallStatus: "CCIUINotifyZoomCallStatus",
                CCIUINotifyMuteUnmuteMic: "clientNotifyCCISetMuteStatus",
                CCIUINotifyVDIVideoEndStatus: "CCIUINotifyVideoEnd",
                CCIUINotifyShowTurnOffMicWindow: "clientNotifyCCIShowTurnOffMicWindow",
                CCIUINotifyTabPageSelectedChanged: "clientNotifyCCITabSelected",
                CCIUINotifyNetworkState: "CCIUINotifyNetworkState",
                CCIUINotifyRegisterSipCallService: "CCIUINotifyRegisterSipCallService",
                CCIUINotifyOnSIPCallServiceStoped: "CCIUINotifyOnSIPCallServiceStoped",
                CCIUINotifyRegisterSipCallServiceResult: "CCIUINotifyRegisterSipCallServiceResult",
                CCIUINotifyOnNewCallGenerate: "CCIUINotifyOnNewCallGenerate",
                CCIUINotifyOnCallStatusUpdate: "CCIUINotifyOnCallStatusUpdate",
                CCIUINotifyOnCallTerminate: "CCIUINotifyOnCallTerminate",
                CCIUINotifyBeforeLogOut: "CCIUINotifyBeforeLogOut",
                CCIUINotifyOnCallActionResult: "CCIUINotifyOnCallActionResult",
                CCIUINotifySearchBuddy: "CCIUINotifySearchBuddy",
                CCIUINotifyMicChanged: "CCIUINotifyMicChanged",
                CCIUINotifyDeviceCmd: "CCIUINotifyDeviceCmd",
                CCIUINotifyOnBuddyPresenceUpdate: "CCIUINotifyOnBuddyPresenceUpdate",
                CCIUINotifyOnBuddiesUpdate: "CCIUINotifyOnBuddiesUpdate",
                CCIUINotifyOnMachineWillSleep: "CCIUINotifyOnMachineWillSleep",
                CCIUINotifyOnMachineDidWake: "CCIUINotifyOnMachineDidWake",
                CCIUINotifyOnAudioDeviceFailed: "CCIUINotifyOnAudioDeviceFailed",
                CCIUINotifyOnVideoJoinResult: "CCIUINotifyOnVideoJoinResult",
                CCIUINotifyClosedCaptionChanged: "CCIUINotifyClosedCaptionChanged",
                CCIUINotifyOnVideoEnd: "CCIUINotifyOnVideoEnd",
                CCIUINotifyOnChatClick: "CCIUINotifyOnChatClick",
                CCIUINotifyUrlActionForCCI: "CCIUINotifyUrlActionForCCI",
                CCIUINotifyOnParticipantsClick: "CCIUINotifyOnParticipantsClick",
                CCIUINotifyTryEnableZCCNativeVideo: "CCIUINotifyTryEnableZCCNativeVideo",
                CCIUINotifyRecordingStateChange: "CCIUINotifyRecordingStateChange",
                CCIUINotifyOnCallNotifyInfoMessageUpdate: "CCIUINotifyOnCallNotifyInfoMessageUpdate",
                PWA_CCIUINotify_Destroy: "PWA_CCIUINotify_Destroy",
                CCIUINotifyCCIGlobalToastClicked: "CCIUINotifyCCIGlobalToastClicked",
                CCIUINotifyPWACallVideo: "CCIUINotifyPWACallVideo"
            },
            E.NOTIFICATION_NAME = {
                onThemeModeChange: "onThemeModeChange"
            },
            E.RECORDING_TYPE_ACTION = {
                record_start: 0,
                record_stop: 1,
                record_pause: 2,
                record_resume: 3
            },
            E.EVENT_BUS_MAPS = {
                REDIRECT_TO_OUTBOUND: "redirect-to-outbound"
            };
        const P = F => ({
            Work: F.t("cci.addressbook.numbersType.work"),
            Home: F.t("cci.addressbook.numbersType.home"),
            Main: F.t("cci.addressbook.numbersType.phoneNumberMain"),
            Mobile: F.t("cci.addressbook.numbersType.mobile"),
            Other: F.t("cci.addressbook.numbersType.other"),
            Normal: F.t("cci.profile.phoneNumber"),
            Extension: F.t("cci.profile.phoneNumber.extension")
        });
        E.PHONE_NUMBER_TAGS = P,
            E.NUMBERS_ORDER = ["Main", "Home", "Work", "Mobile", "Other"];
        const M = F => ({
            addressbook: F.t("cci.profile.addressBook.toUpper"),
            displayName: F.t("cci.common.display_name"),
            firstName: F.t("cci.profile.firstName.toUpper"),
            lastName: F.t("cci.profile.lastName.toUpper"),
            phoneNumber: F.t("cci.flows.phone_number"),
            email: F.t("cci.profile.email"),
            location: F.t("cci.profile.location"),
            accountNumber: F.t("cci.profile.accountNumber.toUpper"),
            company: F.t("cci.profile.company"),
            role: F.t("cci.profile.role")
        });
        E.CONTACT_LABELS = M;
        var Q;
        (function(F) {
                F.VOICE = "voice",
                    F.VIDEO = "video",
                    F.CHAT = "chat",
                    F.SMS = "sms"
            }
        )(Q || (E.ChannelTypes = Q = {}));
        var O;
        (function(F) {
                F.SUCCESS = "success",
                    F.WARNING = "warning",
                    F.ERROR = "error",
                    F.INFO = "info"
            }
        )(O || (E.TOAST_TYPES = O = {}))
    },
    30429: (pn, E, a) => {
        "use strict";
        a.d(E, {
            X: () => Y,
            Y: () => J
        });
        var Y = function() {
            var k = this
                , P = k._self._c
                , M = k._self._setupProxy;
            return P("div", {
                staticClass: "header-info"
            }, [P(M.channelIcon, {
                tag: "component",
                staticClass: "channel-icon"
            }), k._v(" "), P("div", {
                staticClass: "main-content"
            }, [P("div", {
                staticClass: "content"
            }, [k.$slots.title ? P("div", {
                staticClass: "content-name"
            }, [k._t("title")], 2) : P(M.EllipsisContent, {
                attrs: {
                    content: M.props.title,
                    "content-class": "content-name"
                }
            }), k._v(" "), k.duration ? P("div", {
                staticClass: "duration"
            }, [k._v(`
        ` + k._s(M.props.duration) + `
      `)]) : k._e()], 1), k._v(" "), P(M.SentimentIcon, {
                attrs: {
                    type: M.props.sentiment || M.SentimentPolarity.Unknown
                }
            })], 1)], 1)
        }
            , J = []
    }
    ,
    24590: (pn, E, a) => {
        "use strict";
        a.d(E, {
            X: () => Y,
            Y: () => J
        });
        var Y = function() {
            var k = this
                , P = k._self._c
                , M = k._self._setupProxy;
            return P("div", {
                staticClass: "assign-vm"
            }, [P("div", {
                staticClass: "assign-vm-main"
            }, [P("div", {
                staticClass: "assign-vm__title"
            }, [P("zm-button", {
                staticClass: "assign-vm__back",
                attrs: {
                    type: "link",
                    icon: "zm-icon-left"
                },
                on: {
                    click: M.onClose
                }
            }, [k._v(`
        ` + k._s(M.$t("cci.common.button.back")) + `
      `)]), k._v(" "), P("div", {
                staticClass: "assign-vm__title-middle"
            }, [k._v(`
        ` + k._s(M.$t("cci.inbox.cti.assign.title")) + `
      `)])], 1), k._v(" "), P("div", {
                staticClass: "flex filters-wrapper"
            }, [P("zm-input", {
                staticClass: "filter-item",
                staticStyle: {
                    "max-width": "240px"
                },
                attrs: {
                    placeholder: M.$t("cci.inbox.search_by_name"),
                    "aria-label": M.$t("cci.inbox.search_by_name"),
                    maxlength: 128,
                    "prefix-icon": "zm-icon-search",
                    type: "text",
                    clearable: ""
                },
                on: {
                    input: M.onInput
                },
                model: {
                    value: M.search.name,
                    callback: function(O) {
                        k.$set(M.search, "name", O)
                    },
                    expression: "search.name"
                }
            }), k._v(" "), P("div", {
                staticClass: "flex"
            }, [P(M.QueueSelect, {
                staticClass: "filter-item queue-selector",
                attrs: {
                    "inbox-id": k.inboxId
                },
                on: {
                    input: M.query
                },
                model: {
                    value: M.search.queueId,
                    callback: function(O) {
                        k.$set(M.search, "queueId", O)
                    },
                    expression: "search.queueId"
                }
            }), k._v(" "), k.enableTeamsFeature ? P(M.TeamsSelect, {
                staticClass: "filter-item",
                attrs: {
                    "inbox-id": k.inboxId
                },
                on: {
                    input: M.query
                },
                model: {
                    value: M.search.teamsIds,
                    callback: function(O) {
                        k.$set(M.search, "teamsIds", O)
                    },
                    expression: "search.teamsIds"
                }
            }) : k._e(), k._v(" "), k.visible ? P(M.SkillsTreeSelect, {
                staticClass: "filter-item",
                attrs: {
                    "inbox-id": k.inboxId
                },
                on: {
                    input: M.query
                },
                model: {
                    value: M.search.skillIds,
                    callback: function(O) {
                        k.$set(M.search, "skillIds", O)
                    },
                    expression: "search.skillIds"
                }
            }) : k._e()], 1)], 1), k._v(" "), P("section", [P("zm-table", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: M.tableLoading,
                    expression: "tableLoading"
                }],
                attrs: {
                    "use-flip": !1,
                    border: !0,
                    "show-header": !1,
                    "sort-config": {
                        orderKey: "order",
                        orderRule: "desc"
                    },
                    data: M.data
                }
            }, [P("zm-table-column", {
                staticClass: "radio-column",
                attrs: {
                    width: "42"
                },
                scopedSlots: k._u([{
                    key: "default",
                    fn: function(O) {
                        return [P("input", {
                            attrs: {
                                type: "radio",
                                tabindex: "-1",
                                "aria-label": O.row.userName
                            },
                            domProps: {
                                checked: M.selectedUserId === O.row.userId
                            },
                            on: {
                                change: function() {
                                    return M.onSelectionChange(O.row)
                                }
                            }
                        })]
                    }
                }])
            }), k._v(" "), P("zm-table-column", {
                scopedSlots: k._u([{
                    key: "default",
                    fn: function(O) {
                        return [P("div", {
                            staticClass: "vm-field"
                        }, [P("div", {
                            staticClass: "vm-field_label"
                        }, [k._v(`
                ` + k._s(M.$t("cci.common.table.name")) + `
              `)]), k._v(" "), P("div", {
                            staticClass: "vm-field_value"
                        }, [P("div", {
                            staticClass: "zm_ellipsis",
                            attrs: {
                                title: O.row.userName
                            }
                        }, [k._v(`
                  ` + k._s(O.row.userName || "--") + `
                `)]), k._v(" "), O.row.email ? P("div", {
                            staticClass: "zm_ellipsis",
                            attrs: {
                                title: O.row.email
                            }
                        }, [k._v(`
                  ` + k._s(O.row.email) + `
                `)]) : k._e()])]), k._v(" "), P("div", {
                            staticClass: "vm-field"
                        }, [P("div", {
                            staticClass: "vm-field_label"
                        }, [k._v(k._s(M.$t("cci.queues")))]), k._v(" "), P("div", {
                            staticClass: "vm-field_value"
                        }, [P(M.InboxMultiContentCell, {
                            attrs: {
                                data: O.row.queueNameList
                            }
                        })], 1)]), k._v(" "), M.props.enableTeamsFeature ? P("div", {
                            staticClass: "vm-field"
                        }, [P("div", {
                            staticClass: "vm-field_label"
                        }, [k._v(k._s(M.$t("cci.teams")))]), k._v(" "), P("div", {
                            staticClass: "vm-field_value"
                        }, [P(M.InboxMultiContentCell, {
                            attrs: {
                                data: O.row.teamsNameList
                            }
                        })], 1)]) : k._e(), k._v(" "), P("div", {
                            staticClass: "vm-field"
                        }, [P("div", {
                            staticClass: "vm-field_label"
                        }, [k._v(`
                ` + k._s(M.$t("cci.common.label.skills")) + `
              `)]), k._v(" "), P("div", {
                            staticClass: "vm-field_value"
                        }, [P(M.InboxMultiContentCell, {
                            attrs: {
                                data: O.row.skillNameList
                            }
                        })], 1)])]
                    }
                }])
            })], 1), k._v(" "), P("zm-pagination", {
                staticClass: "pagination",
                attrs: {
                    small: "",
                    layout: "prev, pager, next",
                    total: M.page.total,
                    "page-sizes": [15, 50, 100],
                    "pager-count": 5,
                    "current-page": M.page.current,
                    "page-size": M.page.size
                },
                on: {
                    "size-change": M.handleSizeChange,
                    "current-change": M.handleCurrentChange
                }
            })], 1)]), k._v(" "), P("section", {
                staticClass: "assign-footer"
            }, [P("zm-button", {
                attrs: {
                    disabled: M.disableAssign,
                    loading: M.assignLoading,
                    type: "primary"
                },
                on: {
                    click: M.onAssign
                }
            }, [k._v(`
      ` + k._s(M.$t("cci.common.button.assign")) + `
    `)]), k._v(" "), P("zm-button", {
                attrs: {
                    plain: ""
                },
                on: {
                    click: M.onClose
                }
            }, [k._v(`
      ` + k._s(M.$t("cci.common.button.cancel")) + `
    `)])], 1)])
        }
            , J = []
    }
    ,
    66382: (pn, E, a) => {
        "use strict";
        a.d(E, {
            X: () => Y,
            Y: () => J
        });
        var Y = function() {
            var k = this
                , P = k._self._c
                , M = k._self._setupProxy;
            return P("ZccDialog", {
                attrs: {
                    width: "80%",
                    visible: M._visible,
                    "mini-screen-enlargement": !1,
                    "modal-append-to-body": !1
                },
                on: {
                    close: M.onClose
                },
                scopedSlots: k._u([{
                    key: "footer",
                    fn: function() {
                        return [P("span", {
                            class: {
                                "dialog-footer": M.hasDropdownPermission
                            }
                        }, [M.hasDropdownPermission ? P("zm-dropdown", {
                            attrs: {
                                placement: "bottom-end"
                            },
                            on: {
                                command: M.handleDownloadCommand
                            },
                            scopedSlots: k._u([{
                                key: "dropdown",
                                fn: function() {
                                    return [P("zm-dropdown-menu", [k.hasDownloadRecordingPermission ? P("zm-dropdown-item", {
                                        attrs: {
                                            command: M.MENU_COMMAND.DOWNLOAD_VOICEMAIL
                                        }
                                    }, [k._v(`
              ` + k._s(M.$t("btn.downloadVoicemail")) + `
            `)]) : k._e(), k._v(" "), k.hasDownloadTranscriptPermission ? [P("zm-dropdown-item", {
                                        attrs: {
                                            command: M.MENU_COMMAND.DOWNLOAD_TRANSCRIPT
                                        }
                                    }, [k._v(`
                ` + k._s(M.$t("btn.downloadTranscript")) + `
              `)]), k._v(" "), P("zm-dropdown-item", {
                                        attrs: {
                                            command: M.MENU_COMMAND.DOWNLOAD_ALL
                                        }
                                    }, [k._v(`
                ` + k._s(M.$t("btn.downloadAll")) + `
              `)])] : k._e()], 2)]
                                },
                                proxy: !0
                            }], null, !1, 530075272)
                        }, [P("zm-button", {
                            attrs: {
                                disabled: M.loading,
                                type: "link",
                                "suffix-icon": "zm-icon-down"
                            }
                        }, [k._v(`
          ` + k._s(M.$t("cci.common.button.download")) + `
        `)])], 1) : k._e(), k._v(" "), P("span", [k.enableResolve ? P("zm-button", {
                            attrs: {
                                disabled: M.loading,
                                loading: M.resolving,
                                type: "primary"
                            },
                            on: {
                                click: M.resolveVoicemail
                            }
                        }, [k._v(`
          ` + k._s(M.$t("cci.inbox.moreMenu.resolveVoicemail")) + `
        `)]) : k._e(), k._v(" "), P("zm-button", {
                            attrs: {
                                plain: "",
                                disabled: k.updatingVMReadStatus
                            },
                            on: {
                                click: M.onCancel
                            }
                        }, [k._v(`
          ` + k._s(M.$t("cci.common.label.cancel")) + `
        `)])], 1)], 1)]
                    },
                    proxy: !0
                }])
            }, [P("div", {
                staticClass: "preview"
            }, [M.isCrm && k.phoneNumber ? P("div", {
                staticClass: "script-title",
                attrs: {
                    title: M.props.phoneNumber
                }
            }, [k._v(`
      ` + k._s(M.props.phoneNumber) + `
    `)]) : P("div", {
                staticClass: "script-title",
                attrs: {
                    title: M.assetInfo.name
                }
            }, [k._v(`
      ` + k._s(M.assetInfo.name) + `
    `)]), k._v(" "), M.assetInfo.time ? P("div", {
                staticClass: "time"
            }, [k._v(`
      ` + k._s(M.$t("cci.flows.date")) + ": " + k._s(M.assetInfo.time) + `
    `)]) : k._e(), k._v(" "), M.assetInfo.fileType === "audio" && typeof M.assetInfo.mediaUrl == "string" ? P("div", {
                staticClass: "audio_wrap"
            }, [P(M.AudioPlayer, {
                attrs: {
                    "auto-play": !1,
                    src: M.assetInfo.mediaUrl
                },
                on: {
                    play: M.onPlay,
                    "play-success": M.reportPlay
                }
            })], 1) : k._e(), k._v(" "), M.showTranscripts ? [M.transcriptionFailure ? P("span", {
                staticClass: "empty-placeholder",
                domProps: {
                    textContent: k._s(M.$t("cci.inbox.transcribe.failed"))
                }
            }) : [M.loading ? P("div", {
                staticClass: "transcript_wrap"
            }, [P(M.VmTranscriptSkeleton, {
                attrs: {
                    loading: M.loading
                }
            })], 1) : [M.transcriptHasContent ? P("div", {
                staticClass: "transcript_wrap"
            }, [P("div", {
                staticClass: "transcript_title"
            }, [k._v(`
              ` + k._s(M.$t("user.profile.voicemail.transcription")) + `
            `)]), k._v(" "), P("ul", {
                staticClass: "transcript_content"
            }, k._l(M.transcriptContent.transcripts, function(Q, O) {
                return P("li", {
                    key: O
                }, [P("div", {
                    staticClass: "transcript_ts"
                }, [k._v(k._s(M.displayTs(Q.ts)))]), k._v(" "), P("div", {
                    staticClass: "transcript_txt"
                }, [k._v(k._s(Q.text))])])
            }), 0), k._v(" "), P("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: M.transcriptContent.poweredBy === "otter",
                    expression: "transcriptContent.poweredBy === 'otter'"
                }],
                staticClass: "poweredBy"
            }, [k._v(`
              ` + k._s(M.$t("user.profile.poweredBy", {
                name: M.transcriptContent.poweredBy
            })) + `
            `)])]) : M.transcriptionPending ? P("span", {
                staticClass: "empty-placeholder",
                domProps: {
                    textContent: k._s(M.$t("cci.inbox.transcribe.inProgress"))
                }
            }) : k._e()]]] : k._e()], 2)])
        }
            , J = []
    }
    ,
    53001: (pn, E, a) => {
        "use strict";
        a.d(E, {
            X: () => Y,
            Y: () => J
        });
        var Y = function() {
            var k = this
                , P = k._self._c
                , M = k._self._setupProxy;
            return P("div", {
                staticStyle: {
                    height: "100%"
                }
            }, [k.errorOccurred ? P("div", {
                staticClass: "error container"
            }, [P("div", {
                staticClass: "error-bg"
            }), k._v(" "), P("div", {
                staticClass: "txt title"
            }, [k._v(`
      ` + k._s(k.calcErrorTitle) + `
    `)]), k._v(" "), P("div", {
                staticClass: "txt"
            }, [k._v(`
      ` + k._s(k.calcErrorContent) + `
    `)]), k._v(" "), P("div", {
                staticClass: "error-btns"
            }, [P("zm-button", {
                attrs: {
                    type: "primary",
                    plain: ""
                },
                on: {
                    click: k.onReload
                }
            }, [k._v(`
        ` + k._s(k.$t("cci.client.error.button")) + `
      `)]), k._v(" "), P("zm-button", {
                attrs: {
                    type: "primary",
                    plain: ""
                },
                on: {
                    click: k.handleErrorLogout
                }
            }, [k._v(`
        ` + k._s(k.$t("cci.callBar.logout")) + `
      `)])], 1)]) : k.needShowThirdLogin ? P("div", {
                staticStyle: {
                    height: "100%"
                }
            }, [P("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: k.pageStatus === 0,
                    expression: "pageStatus === 0"
                }],
                staticClass: "thirdLoginPage"
            }, [P("span", {
                staticClass: "title"
            }, [k._v(k._s(k.$t("cci.callBar.login.title")))]), k._v(" "), P("zm-button", {
                attrs: {
                    type: "primary"
                },
                on: {
                    click: k.handleThirdLogin
                }
            }, [k._v(`
        ` + k._s(k.$t("cci.callBar.login")) + `
      `)])], 1), k._v(" "), P("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: k.pageStatus === 1,
                    expression: "pageStatus === 1"
                }],
                staticClass: "thirdLoginPage"
            }, [P("span", {
                staticClass: "title"
            }, [k._v(k._s(k.$t("cci.callBar.login.title")))]), k._v(" "), P("span", {
                staticClass: "status"
            }, [k._v(k._s(k.$t("cci.callBar.login.status")))]), k._v(" "), P("zm-button", {
                attrs: {
                    type: "link"
                },
                on: {
                    click: k.handleThirdLogin
                }
            }, [k._v(`
        ` + k._s(k.$t("cci.callBar.login.name")) + `
      `)])], 1)]) : k._t("default", null, {
                pageStatus: k.pageStatus
            })], 2)
        }
            , J = []
    }
    ,
    37173: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(x) {
                return x && x.__esModule ? x : {
                    default: x
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(74061)
            , $ = a(83266)
            , k = a(6372)
            , P = a(76709)
            , M = a(56405)
            , Q = Y(a(87283))
            , O = Y(a(91003))
            , F = Y(a(27129))
            , D = Y(a(13814))
            , z = Y(a(61211))
            , G = Y(a(92032))
            , V = Y(a(66561))
            , K = a(4439)
            , te = a(35878)
            , ee = a(30824)
            , pe = a(83592)
            , ne = a(77719)
            , X = Y(a(4133));
        E.default = (0,
            J.defineComponent)({
            components: {
                StatusV2: G.default,
                StatusV3: V.default,
                ChannelDropdown: X.default,
                SessionActive: Q.default,
                SessionChatWrapup: O.default,
                SessionRecent: D.default,
                SessionConference: F.default,
                SessionTransfer: z.default,
                VMBadge: $.VMBadge
            },
            props: {
                worker: {
                    type: Object,
                    default: null
                },
                smsOutboundHasDraft: Boolean,
                status: {
                    type: String,
                    default: "0"
                },
                zpnsStatus: {
                    type: String,
                    default: ""
                },
                menuTab: {
                    type: Number,
                    default: 0
                },
                wrapupDoneFlag: {
                    type: Boolean,
                    default: !1
                },
                refreshRecentList: {
                    type: Boolean,
                    default: !1
                },
                sessionRow: {
                    type: Object,
                    default: null
                },
                featureOptions: {
                    type: Object,
                    default: () => ({})
                },
                openedCoreTab: {
                    type: Boolean,
                    default: !1
                },
                statusModifyTime: {
                    type: String,
                    default: void 0
                },
                scheduleStatusIdRecord: {
                    type: String,
                    default: ""
                }
            },
            setup(x, {emit: H}) {
                const {updateSessionRow: q} = (0,
                    P.useCrmRecentActions)()
                    , {setRightPanelHistoryTaskData: _e, setRightBarTabIndexInHistory: ie} = (0,
                    P.useSessionPanelsActions)()
                    , {collapse: ze, setCollapse: Oe} = (0,
                    ne.useCollapse)()
                    , {getAppPanelWidth: Cn} = (0,
                    P.useCrmGetters)()
                    , {statusDuration: at, statusDurationWithDynamicHours: Sn, updateStatusModifyTime: Ce, mouseoverStatusDuration: wn, mouseleaveStatusDuration: Ae} = (0,
                    $.useStatusDuration)(x.statusModifyTime)
                    , nr = (0,
                    ee.getCRM)() === K.CRMS.MsDynamics;
                (0,
                    J.watch)( () => Cn.value, An => {
                        nr && An === ne.AppWidthState.MINIMIZED && Oe(!0)
                    }
                );
                const mt = (0,
                        J.computed)( () => nr && Cn.value === ne.AppWidthState.MINIMIZED)
                    , jn = async () => {
                        if (mt.value) {
                            const An = await (0,
                                te.getCRMInstance)();
                            An?.openDialPanel && An.openDialPanel()
                        }
                    }
                ;
                (0,
                    J.watch)( () => ze.value, An => {
                        nr && !An && jn()
                    }
                );
                const {featureOptions: ve} = x
                    , {getSettingEnabled: or, getPermissionEnabled: pt, account: je, userOptions: Ke} = (0,
                    pe.useAccountConfig)()
                    , it = An => {
                    H("handleMenuClick", An),
                        jn()
                }
                    , Ne = (0,
                    J.computed)( () => je?.enableZvaAgentAssist && Ke.value?.enableAIExpertAssist)
                    , {getChildSettingEnabled: Gt} = (0,
                    $.useAccount)()
                    , {totalNotifications: en} = (0,
                    P.useInboxGetters)(["totalNotifications"])
                    , rn = (0,
                    J.computed)( () => Gt("voicemail-management"))
                    , Tt = (0,
                    J.computed)( () => {
                        const {unread: An, opening: Yt} = en.value
                            , gn = An + Yt > 0;
                        return [rn.value, gn].every(Boolean)
                    }
                )
                    , vr = (0,
                    J.ref)(x.status);
                function rr(An) {
                    console.log("updateStatusIdGlobal", An),
                        vr.value = An
                }
                const kr = (0,
                    P.getNacos)("disableScheduleStatusCtiV3")
                    , Re = (0,
                    J.computed)( () => !kr && je?.enableAgentNextStatus)
                    , Et = (0,
                    J.computed)( () => Re.value ? V.default : G.default);
                return {
                    initStatus: vr,
                    updateStatusIdGlobal: rr,
                    isAppMinimized: mt,
                    eMenuName: M.eMenuName,
                    collapse: ze,
                    setCollapse: Oe,
                    enableZvaAgentAssist: Ne,
                    totalNotifications: en,
                    showVMBadge: Tt,
                    statusDuration: at,
                    statusDurationWithDynamicHours: Sn,
                    tabList: [{
                        key: "engagements",
                        tabValue: M.eMenuName.engagements,
                        name: k.i18n.t("cci.engagements"),
                        permission: ve?.enable_client_setting ? or("active-engagements") || or("completed-engagements") : pt("VecLiveSession:Read") || pt("VecHistory:Read")
                    }, {
                        key: "inbox",
                        tabValue: M.eMenuName.inbox,
                        name: k.i18n.t("cci.inbox"),
                        permission: ve?.enable_client_setting ? or("inbox-tab") : pt("VecVoicemail:Read")
                    }],
                    handleMenuClick: it,
                    handleActivePhoneSelect: () => {
                        it(M.eMenuName.sessionActive),
                            jn()
                    }
                    ,
                    handleActiveChatSelect() {
                        it(M.eMenuName.chatPanel),
                            jn()
                    },
                    handleChatWrapupSelect() {
                        it(M.eMenuName.chatWrapup),
                            jn()
                    },
                    handleRecentSelect: An => {
                        it(M.eMenuName.sessionRecent),
                            ie(-1),
                            _e(An),
                            q(An),
                            jn()
                    }
                    ,
                    updateStatusModifyTime: Ce,
                    mouseoverStatusDuration: wn,
                    mouseleaveStatusDuration: Ae,
                    statusComponent: Et
                }
            }
        })
    },
    58941: (pn, E, a) => {
        "use strict";
        var Y;
        Y = {
            value: !0
        };
        const J = a(74061)
            , $ = a(76709)
            , k = a(56405)
            , P = a(77719)
            , M = [{
                size: P.PanelSizes.sm,
                defaultIcon: "sm",
                selectedIcon: "sm-selected"
            }, {
                size: P.PanelSizes.md,
                defaultIcon: "md",
                selectedIcon: "md-selected"
            }, {
                size: P.PanelSizes.lg,
                defaultIcon: "lg",
                selectedIcon: "lg-selected"
            }]
            , Q = (D, z) => {
                D === "panelWidth" && z !== P.AppWidthState.MINIMIZED && localStorage.setItem("panelWidth", z + ""),
                D === "panelSize" && localStorage.setItem("panelSize", z + "")
            }
        ;
        function O() {
            const D = (0,
                J.ref)(M);
            function z(G) {
                D.value = G
            }
            return {
                sizeButtonList: D,
                setSizeButtonList: z
            }
        }
        function F() {
            const {collapse: D, setCollapse: z} = (0,
                    P.useCollapse)()
                , {activeRightTabIndex: G} = (0,
                    $.useSessionPanelsGetters)()
                , V = (0,
                    J.ref)()
                , K = (0,
                    J.ref)()
                , te = X => {
                    K.value = X,
                        Q("panelWidth", X)
                }
                , ee = X => {
                    V.value = X,
                        Q("panelSize", X)
                }
                , pe = X => {
                    try {
                        (0,
                            P.toggleSidebar)(X, K.value),
                            ee(X)
                    } catch (x) {
                        console.error("Error setting size", X, x)
                    }
                }
                , ne = (X, x) => {
                    let H = P.AppWidthState.COLLAPSED;
                    switch (localStorage.getItem("panelWidth")) {
                        case P.AppWidthState.FULL.toString():
                            H = P.AppWidthState.FULL;
                            break;
                        case P.AppWidthState.COLLAPSED.toString():
                            H = P.AppWidthState.COLLAPSED;
                            break;
                        case P.AppWidthState.FULL_WITH_AIEA.toString():
                            H = P.AppWidthState.FULL_WITH_AIEA;
                            break;
                        case P.AppWidthState.COLLAPSED_WITH_AIEA.toString():
                            H = P.AppWidthState.COLLAPSED_WITH_AIEA;
                            break
                    }
                    let q = localStorage.getItem("panelSize") || X;
                    x.includes(q) || (q = X),
                        te(H),
                        pe(q)
                }
            ;
            return (0,
                J.watch)([D, G], ([X,x]) => {
                    const H = x === k.eRightBarTab.expertAssist
                        , q = X && !H ? P.AppWidthState.COLLAPSED : !X && !H ? P.AppWidthState.FULL : X && H ? P.AppWidthState.COLLAPSED_WITH_AIEA : P.AppWidthState.FULL_WITH_AIEA;
                    console.log("Panel width state:", q),
                        te(q),
                        pe(V.value)
                }
            ),
                ne(P.PanelSizes.sm, [P.PanelSizes.md, P.PanelSizes.sm]),
                {
                    panelSize: V,
                    panelWidth: K,
                    setPanelWidth: te,
                    setCollapse: z,
                    setPanelSize: ee,
                    setSize: pe
                }
        }
        E.A = (0,
            J.defineComponent)({
            props: {
                isVideoShowed: {
                    type: Boolean,
                    default: !1
                }
            },
            setup(D) {
                const {sizeButtonList: z} = O()
                    , {panelSize: G, setCollapse: V, setSize: K} = F()
                    , {menuTab: te} = (0,
                    $.useSessionPanelsGetters)()
                    , {setMenuTab: ee} = (0,
                    $.useSessionPanelsActions)()
                    , pe = (0,
                    J.ref)(te.value)
                    , ne = (0,
                    J.computed)( () => te.value === k.eMenuName.crmSettings);
                (0,
                    J.watch)( () => D.isVideoShowed, H => {
                        !H && G.value === P.PanelSizes.lg && K(P.PanelSizes.md)
                    }
                );
                const X = async H => {
                        H === P.PanelSizes.lg && !D.isVideoShowed || (H !== P.PanelSizes.lg && D.isVideoShowed && V(!0),
                            K(H))
                    }
                    , x = async () => {
                        te.value === k.eMenuName.crmSettings ? ee(pe.value) : (pe.value = te.value,
                            ee(k.eMenuName.crmSettings))
                    }
                ;
                return {
                    panelSize: G,
                    sizeButtonList: z,
                    PanelSizes: P.PanelSizes,
                    onSizeChange: X,
                    onOpenSettings: x,
                    islogSettingsOpened: ne
                }
            }
        })
    }
    ,
    11876: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(M) {
                return M && M.__esModule ? M : {
                    default: M
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(74061)
            , $ = a(74061)
            , k = a(83266)
            , P = Y(a(63850));
        E.default = (0,
            J.defineComponent)({
            __name: "ContactSearchContainer",
            setup(M, {expose: Q}) {
                const O = (0,
                    $.ref)()
                    , F = (0,
                    P.default)( () => G(), 200)
                    , {observe: D, unobserve: z} = (0,
                    k.useObserveStickyHeader)(".phone__cont", F);
                function G() {
                    O.value?.updatePopper()
                }
                function V(te) {
                    te ? D() : z()
                }
                function K() {
                    O.value?.cancel()
                }
                return Q({
                    cancel: K
                }),
                    {
                        __sfc: !0,
                        contactSearchRef: O,
                        callback: F,
                        observe: D,
                        unobserve: z,
                        updatePopper: G,
                        handleUpdateShowPopper: V,
                        cancel: K,
                        ContactSearch: k.ContactSearch
                    }
            }
        })
    },
    42119: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(D) {
                return D && D.__esModule ? D : {
                    default: D
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(74061)
            , $ = a(74061)
            , k = a(76856)
            , P = a(83266)
            , M = a(6372)
            , Q = a(56405)
            , O = Y(a(93883));
        var F;
        (function(D) {
                D.Unknown = "unknown",
                    D.Direct = "direct",
                    D.Warm = "warm",
                    D.Voicemail = "voicemail",
                    D.ZPVoicemail = "zpVoicemail"
            }
        )(F || (F = {})),
            E.default = (0,
                J.defineComponent)({
                __name: "transferModal",
                props: {
                    visible: {
                        type: Boolean,
                        default: !1
                    },
                    enableDirectTransfer: {
                        type: Boolean,
                        default: !0
                    },
                    enableWarmTransfer: {
                        type: Boolean,
                        default: !1
                    },
                    enableVoicemailTransfer: {
                        type: Boolean,
                        default: !1
                    },
                    enableZpVoicemailTransfer: {
                        type: Boolean,
                        default: !1
                    },
                    warmTransferHandler: {
                        default: O.default
                    },
                    directTransferHandler: {
                        default: O.default
                    },
                    voicemailTransferHandler: {
                        default: O.default
                    },
                    zpVoicemailTransferHandler: {
                        default: O.default
                    },
                    transferredTarget: {
                        default: null
                    },
                    enableAicSummary: {
                        type: Boolean,
                        default: !1
                    },
                    transferWithNote: null
                },
                emits: ["close", "closed", "transferContextChanged"],
                setup(D, {emit: z}) {
                    const G = D
                        , V = 114
                        , K = 15 * 1e3
                        , {callState: te} = (0,
                        P.useCallLeg)()
                        , ee = (0,
                        $.ref)(0)
                        , pe = (0,
                        $.ref)("")
                        , ne = (0,
                        $.ref)("")
                        , X = (0,
                        $.ref)(!1)
                        , x = (0,
                        $.ref)(!1)
                        , H = (0,
                        $.ref)(!1)
                        , q = (0,
                        $.ref)(!1)
                        , _e = (0,
                        $.ref)(F.Unknown)
                        , ie = (0,
                        $.ref)(!1);
                    (0,
                        $.watch)(pe, mt => {
                            z("transferContextChanged", wn(mt))
                        }
                    ),
                        (0,
                            $.watch)( () => G.visible, mt => {
                                mt && at.value.length && (!_e.value || _e.value === F.Unknown) && (_e.value = at.value.find(jn => !jn.disabled)?.type ?? F.Unknown),
                                mt && Cn.value && !x.value && Ce(),
                                mt && G.transferWithNote && (_e.value = G.transferWithNote)
                            }
                        ),
                        (0,
                            $.watch)( () => G.enableWarmTransfer, mt => {
                                !mt && _e.value === F.Warm && (_e.value = F.Unknown)
                            }
                        ),
                        (0,
                            $.watch)( () => G.enableVoicemailTransfer, mt => {
                                mt && (_e.value === F.Direct || _e.value === F.Warm) && (_e.value = F.Unknown),
                                !mt && _e.value === F.Voicemail && (_e.value = F.Unknown)
                            }
                        );
                    const ze = (0,
                            $.computed)( () => pe.value.length)
                        , Oe = (0,
                            $.computed)( () => {
                                if (!G.transferredTarget || G.enableVoicemailTransfer)
                                    return !1;
                                const {isZcc: mt, ZccType: jn} = G.transferredTarget;
                                return !!mt && ["user", "queue", "flow"].includes(jn) && _e.value !== F.Unknown
                            }
                        )
                        , Cn = (0,
                            $.computed)( () => !!G.enableAicSummary)
                        , at = (0,
                            $.computed)( () => {
                                if (G.transferWithNote)
                                    return [];
                                const mt = [];
                                return G.enableDirectTransfer && mt.push({
                                    type: F.Direct,
                                    title: M.i18n.t("callbar.phone.blindTransfer"),
                                    subTitle: M.i18n.t("callbar.phone.blindTransferTip"),
                                    ariaLabel: M.i18n.t("callbar.phone.blindTransfer"),
                                    ariaDescription: M.i18n.t("callbar.phone.blindTransferTip"),
                                    disabled: G.enableVoicemailTransfer,
                                    handler: () => {
                                        G.enableVoicemailTransfer || (_e.value = F.Direct)
                                    }
                                }),
                                G.enableWarmTransfer && mt.push({
                                    type: F.Warm,
                                    title: M.i18n.t("callbar.phone.warmTransfer"),
                                    subTitle: M.i18n.t("callbar.phone.warmTransferTip"),
                                    ariaLabel: M.i18n.t("callbar.phone.warmTransfer"),
                                    ariaDescription: M.i18n.t("callbar.phone.warmTransferTip"),
                                    disabled: G.enableVoicemailTransfer || te.value.isPSTN,
                                    handler: () => {
                                        G.enableVoicemailTransfer || te.value.isPSTN || (_e.value = F.Warm)
                                    }
                                    ,
                                    tooltip: te.value.isPSTN ? "Not supported in Call Me On" : ""
                                }),
                                G.enableVoicemailTransfer && mt.push({
                                    type: F.Voicemail,
                                    title: M.i18n.t("callbar.phone.inboxTransfer"),
                                    subTitle: M.i18n.t("callbar.phone.inboxTransferTip"),
                                    ariaLabel: M.i18n.t("callbar.phone.inboxTransfer"),
                                    ariaDescription: M.i18n.t("callbar.phone.inboxTransferTip"),
                                    disabled: !1,
                                    handler: () => _e.value = F.Voicemail
                                }),
                                G.enableZpVoicemailTransfer && mt.push({
                                    type: F.ZPVoicemail,
                                    title: M.i18n.t("callbar.phone.transferVoicemail"),
                                    subTitle: M.i18n.t("callbar.phone.transferVoicemailTip"),
                                    ariaLabel: M.i18n.t("callbar.phone.transferVoicemail"),
                                    ariaDescription: M.i18n.t("callbar.phone.transferVoicemailTip"),
                                    disabled: !1,
                                    handler: () => _e.value = F.ZPVoicemail
                                }),
                                    mt
                            }
                        )
                        , Sn = () => {
                            if (!(!_e.value || ie.value)) {
                                ie.value = !0;
                                try {
                                    switch (_e.value) {
                                        case F.Direct:
                                            G.directTransferHandler();
                                            break;
                                        case F.Warm:
                                            G.warmTransferHandler();
                                            break;
                                        case F.Voicemail:
                                            G.voicemailTransferHandler();
                                            break;
                                        case F.ZPVoicemail:
                                            G.zpVoicemailTransferHandler();
                                            break
                                    }
                                } finally {
                                    setTimeout( () => {
                                            ie.value = !1
                                        }
                                        , 300)
                                }
                            }
                        }
                        , Ce = () => {
                            (0,
                                Q.isPlainObject)(te.value) && (x.value = !0,
                                H.value = !1,
                                k.engagementApi.getPreviewSummary({
                                    businessId: "voice",
                                    engagementId: te.value.engagementId ?? "",
                                    sessionId: te.value.businessId ?? "",
                                    queueId: te.value.queueId ?? ""
                                }).then(mt => {
                                        Ae(),
                                            pe.value = mt ?? "",
                                            X.value = !0,
                                            ne.value = mt ?? ""
                                    }
                                ).catch( () => H.value = !0).finally( () => x.value = !1))
                        }
                        , wn = mt => Cn.value ? x.value || ne.value && ne.value === pe.value || !ne.value && ne.value === pe.value ? {
                            transferNote: "",
                            summaryChanged: !1
                        } : {
                            transferNote: mt,
                            summaryChanged: !0
                        } : {
                            transferNote: mt,
                            summaryChanged: !1
                        }
                        , Ae = () => {
                            ee.value && window.clearTimeout(ee.value),
                                H.value = !1,
                                ee.value = window.setTimeout( () => {
                                        H.value = !0,
                                            window.clearTimeout(ee.value)
                                    }
                                    , K)
                        }
                    ;
                    return {
                        __sfc: !0,
                        TransferTypeEnum: F,
                        TEXTBOX_LIMIT: V,
                        SUMMARY_CACHE_INTERVAL: K,
                        props: G,
                        emit: z,
                        callState: te,
                        summaryCacheTimeout: ee,
                        transferNote: pe,
                        conversationSummary: ne,
                        summaryFetched: X,
                        summaryFetching: x,
                        enableGenerateSummary: H,
                        enableGenerateSummaryTipsVisible: q,
                        transferType: _e,
                        isTransferring: ie,
                        noteCount: ze,
                        enableTransferNote: Oe,
                        enableConversationSummary: Cn,
                        transferOptionsList: at,
                        transferHandler: Sn,
                        fetchConversationSummary: Ce,
                        getTransferContext: wn,
                        createSummaryCacheInterval: Ae,
                        onReGenerateSummary: () => {
                            H.value && Ce()
                        }
                    }
                }
            })
    },
    58930: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(z) {
                return z && z.__esModule ? z : {
                    default: z
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(74061)
            , $ = a(74061)
            , k = a(83266)
            , P = Y(a(68135))
            , M = Y(a(14174))
            , Q = Y(a(40441))
            , O = Y(a(81955))
            , F = Y(a(41685))
            , D = a(81872);
        E.default = (0,
            J.defineComponent)({
            __name: "channel-header",
            props: {
                channelType: null,
                title: null,
                duration: null,
                sentiment: null
            },
            setup(z) {
                const G = z
                    , V = (0,
                    $.computed)( () => {
                        switch (G.channelType) {
                            case D.ChannelType.Phone:
                                return M.default;
                            case D.ChannelType.SMS:
                                return Q.default;
                            case D.ChannelType.Message:
                                return P.default;
                            case D.ChannelType.Video:
                                return O.default;
                            default:
                                return ""
                        }
                    }
                );
                return {
                    __sfc: !0,
                    props: G,
                    channelIcon: V,
                    SentimentIcon: k.SentimentIcon,
                    SentimentPolarity: k.SentimentPolarity,
                    EllipsisContent: F.default
                }
            }
        })
    },
    59546: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "B", {
            value: !0
        });
        const Y = a(74061)
            , J = a(74061);
        E.A = (0,
            Y.defineComponent)({
            __name: "ellipsis-content",
            props: {
                content: {
                    default: ""
                },
                contentClass: {
                    default: ""
                },
                tooltipContentClass: {
                    default: ""
                }
            },
            setup($) {
                const k = $
                    , P = (0,
                    J.ref)(!0)
                    , M = (0,
                    J.ref)(null);
                return {
                    __sfc: !0,
                    props: k,
                    disabled: P,
                    contentRef: M,
                    handleTooltipUpdate: () => {
                        if (!M.value)
                            return;
                        const O = M.value
                            , F = O.scrollWidth <= Math.round(O.getBoundingClientRect().width);
                        P.value = F
                    }
                }
            }
        })
    }
    ,
    25582: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "B", {
            value: !0
        });
        const Y = a(74061);
        E.A = (0,
            Y.defineComponent)({
            __name: "AxIcon",
            props: {
                iconClassName: {
                    default: ""
                },
                propClickMethod: null,
                propAriaLabel: {
                    default: ""
                }
            },
            setup(J) {
                const $ = J;
                return {
                    __sfc: !0,
                    props: $,
                    handleClick: () => {
                        $.propClickMethod && $.propClickMethod()
                    }
                }
            }
        })
    }
    ,
    442: (pn, E, a) => {
        "use strict";
        var Y;
        Y = {
            value: !0
        };
        const J = a(74061)
            , $ = a(83266)
            , k = a(6372)
            , P = a(76709)
            , M = a(56405);
        E.A = (0,
            J.defineComponent)({
            __name: "deviceSettings",
            setup(Q) {
                const O = !!HTMLAudioElement.prototype.setSinkId;
                O || M.monitor.dispatchMonitor({
                    name: "Not Support SupportSetSpeaker"
                });
                const F = k.i18n.t("cci.crm.settings.device.title")
                    , D = k.i18n.t("cci.crm.settings.device.output")
                    , z = k.i18n.t("cci.crm.settings.device.input")
                    , G = k.i18n.t("cci.crm.settings.device.ringingOutput")
                    , {inputAudioDevices: V, outputAudioDevices: K, speakerId: te, microphoneId: ee, ringingOutputDeviceId: pe, enableMediaDeviceSelection: ne} = (0,
                    P.useDeviceGetters)()
                    , {webNotify: X} = (0,
                    $.useWebNotify)()
                    , {selectSpeaker: x, selectMicrophone: H, selectRingingOutput: q} = (0,
                    P.useDeviceActions)();
                return {
                    __sfc: !0,
                    isSupportSetSpeaker: O,
                    settingTitle: F,
                    outputlabel: D,
                    inputlabel: z,
                    ringingOutputlabel: G,
                    inputAudioDevices: V,
                    outputAudioDevices: K,
                    speakerId: te,
                    microphoneId: ee,
                    ringingOutputDeviceId: pe,
                    enableMediaDeviceSelection: ne,
                    webNotify: X,
                    selectSpeaker: x,
                    selectMicrophone: H,
                    selectRingingOutput: q,
                    onSpeakerChanged: Oe => {
                        x(Oe),
                            O ? X(k.i18n.t("cci.crm.settings.device.toast")) : X(k.i18n.t("cci.crm.settings.device.notSupportSettingSpeaker"), "warn", {}, 8e3)
                    }
                    ,
                    onMicrophoneChanged: Oe => {
                        H(Oe),
                            X(k.i18n.t("cci.crm.settings.device.toast"))
                    }
                    ,
                    onRingingOutputChanged: Oe => {
                        q(Oe),
                            O ? X(k.i18n.t("cci.crm.settings.device.toast2")) : X(k.i18n.t("cci.crm.settings.device.notSupportSettingSpeaker"), "warn", {}, 8e3)
                    }
                }
            }
        })
    }
    ,
    45871: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(Q) {
                return Q && Q.__esModule ? Q : {
                    default: Q
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(74061)
            , $ = a(74061)
            , k = a(83266)
            , P = a(56405)
            , M = Y(a(7852));
        E.default = (0,
            J.defineComponent)({
            __name: "ActiveEngageChannelTable",
            props: {
                client: {
                    type: Boolean,
                    default: !1
                },
                isRefresh: {
                    type: Boolean
                },
                channel: null,
                refreshRate: {
                    default: "5000"
                },
                menuTab: null,
                isMenuEngagementsSelected: {
                    type: Boolean
                },
                filters: {
                    default: () => ({})
                },
                checkList: {
                    default: () => []
                }
            },
            emits: ["updateIsRefresh"],
            setup(Q, {emit: O}) {
                const F = Q
                    , {useHandleTable: D, activeEngageEventBus: z, activeEngageEventBusActions: G} = k.activeEngageHooks;
                let V = null
                    , K = !0;
                const {tableLoading: te, dataSource: ee, pagination: pe, formatTotal: ne, getActiveEngagementsList: X, handleActionClick: x} = D(F.channel)
                    , H = (0,
                    P.useInstance)()
                    , q = (0,
                    $.computed)( () => F.channel === "messaging");
                (0,
                    $.watch)( () => F.isRefresh, wn => {
                        wn && (pe.page = 1,
                            X({
                                filters: F.filters,
                                setLoading: !0
                            }).finally( () => {
                                    O("updateIsRefresh", !1)
                                }
                            ))
                    }
                ),
                    (0,
                        $.watch)( () => F.filters, wn => {
                            pe.page = 1,
                                X({
                                    filters: wn,
                                    setLoading: !0
                                })
                        }
                        , {
                            deep: !0
                        });
                async function _e() {
                    if (H?._isDestroyed) {
                        Cn();
                        return
                    }
                    await X({
                        filters: F.filters,
                        setLoading: !1
                    }),
                        Oe()
                }
                function ie() {
                    Cn(),
                    K && (V = setTimeout(_e, parseInt(F.refreshRate)))
                }
                function ze() {
                    K = document.visibilityState === "visible",
                        K ? Oe() : Cn()
                }
                function Oe() {
                    F.isMenuEngagementsSelected ? ie() : Cn()
                }
                function Cn() {
                    V && clearTimeout(V),
                        V = null
                }
                function at() {
                    Oe(),
                        z.on(G.REFRESH_ACTIVE_ENGAGEMENT, _e),
                        document.addEventListener("visibilitychange", ze)
                }
                function Sn() {
                    Cn(),
                        z.off(G.REFRESH_ACTIVE_ENGAGEMENT, _e),
                        document.removeEventListener("visibilitychange", ze)
                }
                function Ce(wn) {
                    pe.page = wn,
                        X({
                            filters: F.filters,
                            setLoading: !0
                        })
                }
                return (0,
                    $.onMounted)(at),
                    (0,
                        $.onActivated)(at),
                    (0,
                        $.onDeactivated)(Sn),
                    (0,
                        $.onUnmounted)(Sn),
                    {
                        __sfc: !0,
                        useHandleTable: D,
                        activeEngageEventBus: z,
                        activeEngageEventBusActions: G,
                        props: F,
                        emit: O,
                        timer: V,
                        visibilityStatus: K,
                        tableLoading: te,
                        dataSource: ee,
                        pagination: pe,
                        formatTotal: ne,
                        getActiveEngagementsList: X,
                        handleActionClick: x,
                        vm: H,
                        isNewMessaging: q,
                        queryList: _e,
                        setIntervalRefreshList: ie,
                        onVisibilityChange: ze,
                        ifSetIntervalRefreshList: Oe,
                        clearTimer: Cn,
                        initRefreshEvent: at,
                        clearRefreshEvent: Sn,
                        handlePageChange: Ce,
                        CommonTable: M.default
                    }
            }
        })
    },
    54186: (pn, E, a) => {
        "use strict";
        var Y;
        Y = {
            value: !0
        };
        const J = a(74061)
            , $ = a(74061)
            , k = a(15177);
        E.A = (0,
            J.defineComponent)({
            __name: "ActiveTableActions",
            props: {
                rowData: {
                    default: () => ({})
                },
                startLoadingFn: {
                    type: Function,
                    default: () => {}
                },
                endLoadingFn: {
                    type: Function,
                    default: () => {}
                }
            },
            emits: ["active-engage-action"],
            setup(P, {emit: M}) {
                const Q = P
                    , {activeEngageEventBus: O, activeEngageEventBusActions: F} = k.activeEngageHooks
                    , D = (0,
                        $.ref)(!1)
                    , z = (0,
                        $.ref)(!1)
                    , G = (te, ee) => {
                        M("active-engage-action", te, ee)
                    }
                    , V = te => {
                        te === Q.rowData.engagementId ? D.value = !0 : z.value = !0
                    }
                    , K = () => {
                        D.value = !1,
                            z.value = !1
                    }
                ;
                return (0,
                    $.onMounted)( () => {
                        O.on(F.START_LOADING, V),
                            O.on(F.END_LOADING, K)
                    }
                ),
                    (0,
                        $.onBeforeUnmount)( () => {
                            O.off(F.START_LOADING, V),
                                O.off(F.END_LOADING, K)
                        }
                    ),
                    {
                        __sfc: !0,
                        activeEngageEventBus: O,
                        activeEngageEventBusActions: F,
                        props: Q,
                        emits: M,
                        loading: D,
                        shouldDisableAction: z,
                        handleAction: G,
                        startLoading: V,
                        endLoading: K
                    }
            }
        })
    }
    ,
    60772: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(F) {
                return F && F.__esModule ? F : {
                    default: F
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(74061)
            , $ = a(74061)
            , k = a(76856)
            , P = a(83266)
            , M = a(6372)
            , Q = a(56405)
            , O = Y(a(89012));
        E.default = (0,
            J.defineComponent)({
            __name: "AssignVoicemail",
            props: {
                visible: {
                    type: Boolean
                },
                inboxId: null,
                voicemailIds: {
                    default: () => []
                },
                enableTeamsFeature: {
                    type: Boolean,
                    default: !1
                },
                assignedUser: null
            },
            emits: ["update:visible", "closeAssign", "assignTo"],
            setup(F, {emit: D}) {
                const z = F
                    , {QueueSelect: G, SkillsTreeSelect: V, TeamsMultiSelect: K, InboxMultiContentCell: te} = P.inboxComponents
                    , {getVMAssignee: ee} = k.inboxApi
                    , {nativeNotify: pe} = (0,
                    P.useNativeNotify)()
                    , {t: ne} = (0,
                    M.useI18n)();
                (0,
                    $.watch)( () => z.visible, je => je && jn());
                const X = (0,
                        $.computed)({
                        get: () => z.visible,
                        set: je => D("update:visible", je)
                    })
                    , x = (0,
                        $.reactive)({
                        name: "",
                        queueId: "",
                        skillIds: [],
                        teamsIds: []
                    })
                    , H = (0,
                        $.ref)(!1)
                    , q = (0,
                        $.ref)(!1)
                    , _e = (0,
                        $.ref)(null)
                    , ie = (0,
                        $.ref)([])
                    , ze = (0,
                        $.reactive)({
                        total: 0,
                        current: 1,
                        size: 15
                    })
                    , Oe = (0,
                        $.computed)( () => !_e.value)
                    , Cn = (0,
                        $.computed)( () => _e.value?.userId)
                    , at = () => {
                        q.value = !0;
                        const {userId: je, userName: Ke} = _e.value || {};
                        D("assignTo", {
                            selected: {
                                id: je,
                                name: Ke
                            },
                            callback: () => {
                                q.value = !1,
                                    ve()
                            }
                            ,
                            errorHandler: () => {
                                q.value = !1
                            }
                        })
                    }
                    , Sn = je => _e.value = je ? {
                        ...je
                    } : null
                    , Ce = () => {
                        const je = {
                            ...x,
                            page: ze.current,
                            size: ze.size,
                            voicemailIds: z.voicemailIds.join(","),
                            skillIds: x.skillIds.map( ({skills: Ke, id: it}) => Ke?.map(Ne => Ne.id) || [it]).flat().join(","),
                            teamsIds: x.teamsIds.map( ({id: Ke}) => Ke).join(",")
                        };
                        return z.enableTeamsFeature || delete je.teamsIds,
                            Object.keys(je).forEach(Ke => {
                                    Array.isArray(je[Ke]) && (je[Ke] = encodeURIComponent(je[Ke]))
                                }
                            ),
                            je.name = je.name?.trim(),
                            je
                    }
                    , wn = async () => {
                        try {
                            H.value = !0;
                            const [je,Ke] = await (0,
                                Q.tryApiCatch)(ee, Ce());
                            if (je) {
                                pe(je, "icon-error");
                                return
                            }
                            ie.value = Ke.records,
                                ze.total = Ke.total,
                                ze.current = Ke.current
                        } catch (je) {
                            console.error(je)
                        } finally {
                            H.value = !1
                        }
                    }
                    , Ae = (0,
                        O.default)(wn, 500)
                    , nr = () => _e.value = null
                    , mt = () => Object.assign(x, {
                        name: "",
                        queueId: "",
                        skillIds: [],
                        teamsIds: []
                    })
                    , jn = () => {
                        z.assignedUser?.userId && (_e.value = {
                            ...z.assignedUser
                        }),
                            wn()
                    }
                    , ve = () => {
                        X.value = !1,
                            D("closeAssign"),
                            mt(),
                            ie.value = [],
                            nr()
                    }
                ;
                return {
                    __sfc: !0,
                    QueueSelect: G,
                    SkillsTreeSelect: V,
                    TeamsSelect: K,
                    InboxMultiContentCell: te,
                    getVMAssignee: ee,
                    nativeNotify: pe,
                    props: z,
                    emit: D,
                    $t: ne,
                    _visible: X,
                    search: x,
                    tableLoading: H,
                    assignLoading: q,
                    selectedItem: _e,
                    data: ie,
                    page: ze,
                    disableAssign: Oe,
                    selectedUserId: Cn,
                    onAssign: at,
                    onSelectionChange: Sn,
                    parseParams: Ce,
                    query: wn,
                    onInput: Ae,
                    removeSelected: nr,
                    resetSearch: mt,
                    onOpen: jn,
                    onClose: ve,
                    handleSizeChange: je => {
                        ze.size = je,
                            ze.current = 1,
                            wn()
                    }
                    ,
                    handleCurrentChange: je => {
                        ze.current = je,
                            wn()
                    }
                }
            }
        })
    },
    79109: function(pn, E, a) {
        "use strict";
        var Y = this && this.__createBinding || (Object.create ? function(ne, X, x, H) {
                        H === void 0 && (H = x);
                        var q = Object.getOwnPropertyDescriptor(X, x);
                        (!q || ("get"in q ? !X.__esModule : q.writable || q.configurable)) && (q = {
                            enumerable: !0,
                            get: function() {
                                return X[x]
                            }
                        }),
                            Object.defineProperty(ne, H, q)
                    }
                    : function(ne, X, x, H) {
                        H === void 0 && (H = x),
                            ne[H] = X[x]
                    }
            )
            , J = this && this.__setModuleDefault || (Object.create ? function(ne, X) {
                        Object.defineProperty(ne, "default", {
                            enumerable: !0,
                            value: X
                        })
                    }
                    : function(ne, X) {
                        ne.default = X
                    }
            )
            , $ = this && this.__importStar || function() {
                var ne = function(X) {
                    return ne = Object.getOwnPropertyNames || function(x) {
                        var H = [];
                        for (var q in x)
                            Object.prototype.hasOwnProperty.call(x, q) && (H[H.length] = q);
                        return H
                    }
                        ,
                        ne(X)
                };
                return function(X) {
                    if (X && X.__esModule)
                        return X;
                    var x = {};
                    if (X != null)
                        for (var H = ne(X), q = 0; q < H.length; q++)
                            H[q] !== "default" && Y(x, X, H[q]);
                    return J(x, X),
                        x
                }
            }()
            , k = this && this.__importDefault || function(ne) {
                return ne && ne.__esModule ? ne : {
                    default: ne
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const P = a(74061)
            , M = $(a(74061))
            , Q = a(76856)
            , O = a(83266)
            , F = a(6372)
            , D = a(76709)
            , z = a(56405)
            , G = k(a(89012))
            , V = k(a(41563))
            , K = k(a(99177))
            , te = k(a(46146))
            , ee = k(a(58724))
            , pe = k(a(89029));
        E.default = (0,
            P.defineComponent)({
            __name: "Base",
            props: {
                softDeleted: {
                    default: 0
                },
                showSelectionCol: {
                    type: Boolean,
                    default: !1
                },
                recAccessLimitForOpUser: {
                    type: Boolean
                },
                showRecentlyDeleted: {
                    type: Boolean
                },
                tabType: null
            },
            emits: ["bulkDelete", "inbox:assignPageVisibleChange"],
            setup(ne, {expose: X, emit: x}) {
                const H = ne
                    , {softDeleted: q, showSelectionCol: _e, recAccessLimitForOpUser: ie, tabType: ze} = (0,
                    M.toRefs)(H)
                    , {deleteMyInboxContent: Oe, getMyInboxList: Cn, recoverMyInboxContent: at, getVoicemailMediaUrl: Sn, assignVM: Ce, updateVMStatus: wn, undoResolveVM: Ae} = Q.inboxApi
                    , {getDeleteTitle: nr} = z.inboxUtils
                    , {InboxCollapseTitle: mt, InboxCollapseDetail: jn, BulkOperation: ve, ReopenDialog: or, ConfirmDialog: pt, CrmFilterDialog: je} = O.inboxComponents
                    , {useDownloadVM: Ke, useReopen: it} = O.inboxHooks
                    , {phoneNumber: Ne} = z.phoneNumberFilter
                    , Gt = (0,
                    z.useInstance)()
                    , {tz: en} = (0,
                    O.useAccount)()
                    , {t: rn} = (0,
                    F.useI18n)()
                    , {user: Tt, piiSettings: vr} = (0,
                    D.useAppGetters)()
                    , {notifications: rr} = (0,
                    D.useInboxGetters)(["notifications"])
                    , {getVMNotifications: kr} = (0,
                    D.useInboxActions)(["getVMNotifications"])
                    , Re = (0,
                    M.reactive)((0,
                    O.useInboxPermission)())
                    , {nativeNotify: Et} = (0,
                    O.useNativeNotify)()
                    , {reopenDialogVisible: An, storeResolvedNotifyInstance: Yt, closeResolvedNotifyInstance: gn, removeResolvedNotifyInstance: Qe} = it()
                    , {downloadVoicemail: ar} = Ke()
                    , {HIDE_DOWNLOAD_ALL: zt, MENU_COMMAND: Zt, MORE_MENUS: Lt, STATUS_CODE: gr, STATUS_I18N_KEY: Mn, TABS_KEY: U, UNDO_DURATION: Mt, VALID_TRANSCRIPT_STATUS: Kn, VOICEMAIL_TRANSCRIPT_STATUS: In, VOICEMAL_DOWNLOAD_PERMISSION_LIST: tn, INBOX_NAMED_TYPE: Ot} = z.inboxConstant;
                let Pt = null;
                const $n = (0,
                    M.ref)(!1)
                    , dt = (0,
                    M.ref)(!1)
                    , Xe = (0,
                    M.ref)(U.all)
                    , ht = (0,
                    M.ref)(!1)
                    , yn = (0,
                    M.ref)(!1)
                    , dn = (0,
                    M.ref)(!1)
                    , Gn = (0,
                    M.ref)(!1)
                    , sr = (0,
                    M.ref)([])
                    , Zn = (0,
                    M.ref)([])
                    , _r = (0,
                    M.ref)({
                    keyword: "",
                    orderKey: "createTime",
                    orderRule: "0",
                    type: "",
                    softDeleted: 0
                })
                    , Pn = (0,
                    M.ref)([])
                    , Ze = (0,
                    M.ref)([])
                    , Vn = (0,
                    M.ref)([])
                    , Se = (0,
                    M.ref)([])
                    , Ue = (0,
                    M.ref)({
                    total: 0,
                    page: 1,
                    size: 15
                })
                    , yt = (0,
                    M.ref)([])
                    , Qt = (0,
                    M.ref)()
                    , Hn = (0,
                    M.ref)(!1)
                    , cr = (0,
                    M.ref)(!1)
                    , Rr = (0,
                    M.ref)(!1)
                    , Pr = (0,
                    M.ref)(null)
                    , rt = (0,
                    M.ref)(null)
                    , ae = (0,
                    M.ref)(!1)
                    , de = (0,
                    M.computed)( () => {
                        if (Qt.value?.assignedUserId)
                            return {
                                userId: Qt.value.assignedUserId,
                                userName: Qt.value.assignedUserName
                            }
                    }
                )
                    , ye = (0,
                    M.computed)( () => Xe.value === U.all)
                    , Le = (0,
                    M.computed)( () => {
                        const Je = Re.enableDownloadDeletedMessagingTranscript
                            , qt = Qt.value?.voicemailTranscriptStatus === In
                            , bn = tn.every(br => Re[br]);
                        return Je && qt && bn
                    }
                )
                    , Te = (0,
                    M.computed)( () => {
                        if (!Re.enableVoicemailManagement)
                            return [];
                        const [Je=0,qt=0,bn=0,br=0] = rr.value;
                        return [{
                            unread: Je,
                            opening: bn
                        }, {
                            unread: qt,
                            opening: br
                        }]
                    }
                )
                    , be = (0,
                    M.computed)( () => Re.enableDeleteVoicemail && ye.value)
                    , me = (0,
                    M.computed)( () => Qt.value ? [Qt.value.contentId] : yt.value.map( ({contentId: Je}) => Je))
                    , He = (0,
                    M.computed)( () => (Qt.value ? Qt.value.inboxId : yt.value.filter(Je => Ee(Je) !== gr.RESOLVED).map( ({inboxId: Je}) => Je)[0]) || "")
                    , Ct = (0,
                    M.computed)( () => q.value === 0 && Ee(Qt.value) !== gr.RESOLVED)
                    , wt = (0,
                    M.computed)( () => q.value !== 1)
                    , Bt = (0,
                    M.computed)( () => [Re.isSupportDownloadByUrl, Re.enablePlayVoicemail, Re.enableDownloadVoicemail].every(Boolean))
                    , En = (0,
                    M.computed)( () => {
                        const {ASSIGN_VOICEMAIL: Je, DELETE: qt, DOWNLOAD_VOICEMAIL: bn} = Zt;
                        return [{
                            enable: nt(),
                            label: Ie(),
                            command: Je,
                            props: {
                                disabled: dn.value
                            }
                        }, {
                            enable: Bt.value,
                            label: rn("cci.common.button.download"),
                            command: bn,
                            props: {
                                disabled: dn.value,
                                loading: Hn.value
                            }
                        }, {
                            enable: be.value,
                            label: rn("cci.common.button.delete"),
                            command: qt,
                            props: {
                                disabled: dn.value
                            }
                        }].filter( ({enable: br}) => br)
                    }
                )
                    , Pe = (0,
                    M.computed)( () => !!Qt.value?.enableVoicemailTranscript)
                    , W = (0,
                    M.computed)( () => {
                        const {maskPiiInfo: Je=!1, detailSettings: qt={}} = vr.value || {}
                            , {toggle: bn=!1, closeEngagementShow: br=!1} = qt.phoneNumber || {};
                        return Je && bn && br
                    }
                );
                function Ee(Je=Qt.value) {
                    const {status: qt, assignedStatus: bn} = Je || {};
                    return Xe.value === U.mine ? bn : qt
                }
                function nt() {
                    const Je = Lt.find( ({command: br}) => br === Zt.ASSIGN_VOICEMAIL);
                    if (Je && !Je.settingPermission.every(xr => Re[xr]))
                        return !1;
                    const qt = yt.value.every(br => Ee(br) === gr.RESOLVED)
                        , bn = yt.value.every(br => br.assignedUserId === Tt.value?.id);
                    return qt ? !1 : ye.value ? Re.enableAssignToOthers ? !0 : !bn : Re.enableAssignToOthers
                }
                function Ie() {
                    const Je = yt.value.every( ({assignedUserId: bn}) => !!bn);
                    return rn((bn => Re.enableAssignToOthers ? bn ? "cci.common.button.reassign" : "cci.common.button.assign" : bn ? "cci.inbox.moreMenu.reassignToMe" : "cci.inbox.moreMenu.assignToMe")(Je))
                }
                function Be(Je) {
                    localStorage.getItem(zt) ? jt(Je) : Pr.value?.show()
                }
                function st() {
                    jt(Qt.value)
                }
                async function jt(Je) {
                    try {
                        await Promise.all([_t({
                            ...Je,
                            showNotification: !1
                        }), Ge({
                            ...Je,
                            showNotification: !1
                        })])
                    } catch (qt) {
                        console.error(qt)
                    }
                }
                async function _t(Je) {
                    const qt = Je.dropdownMenus.find( ({command: bn}) => bn === Zt.DOWNLOAD_VOICEMAIL);
                    try {
                        return M.default.set(qt, "disabled", !0),
                            await ar({
                                ...Je,
                                downloadType: Zt.DOWNLOAD_VOICEMAIL,
                                downloadSuccessMessage: rn("cci.inbox.download.recording.success.desc"),
                                downloadErrorMessage: rn("cci.inbox.download.recording.error.desc")
                            })
                    } catch (bn) {
                        console.error(bn)
                    } finally {
                        M.default.set(qt, "disabled", !1)
                    }
                }
                async function Ge(Je) {
                    const qt = Je.dropdownMenus.find( ({command: bn}) => bn === Zt.DOWNLOAD_TRANSCRIPT);
                    try {
                        return M.default.set(qt, "disabled", !0),
                            await ar({
                                ...Je,
                                downloadType: Zt.DOWNLOAD_TRANSCRIPT,
                                downloadSuccessMessage: rn("cci.inbox.download.transcript.success.desc"),
                                downloadErrorMessage: rn("cci.inbox.download.transcript.error.desc")
                            })
                    } catch (bn) {
                        console.error(bn)
                    } finally {
                        M.default.set(qt, "disabled", !1)
                    }
                }
                function It(Je) {
                    switch (Je) {
                        case Zt.DOWNLOAD_VOICEMAIL:
                            _t(Qt.value);
                            return;
                        case Zt.DOWNLOAD_TRANSCRIPT:
                            Ge(Qt.value);
                            return;
                        case Zt.DOWNLOAD_ALL:
                            Be(Qt.value);
                            return
                    }
                }
                function cn() {
                    const {inboxId: Je="", contentId: qt=""} = Qt.value || {};
                    return ct({
                        inboxId: Je,
                        voicemailId: qt
                    })
                }
                function ct(Je, qt="type") {
                    return {
                        ...Je,
                        [qt]: Number(Xe.value)
                    }
                }
                async function De(Je) {
                    try {
                        dn.value = !0;
                        const [qt,bn] = await (0,
                            z.tryApiCatch)(Ae, Je);
                        if (qt || !bn)
                            return Et(qt || rn("cci.inbox.dialog.undo.unsuccessfully"), "icon-error");
                        bn && await bt()
                    } catch (qt) {
                        console.error(qt)
                    } finally {
                        dn.value = !1
                    }
                }
                async function bt(Je=!0) {
                    if (!Re.enableVoicemailManagement) {
                        sr.value = [],
                            Ue.value.total = 0;
                        return
                    }
                    const qt = ir => ir.map( ({id: Gr}) => Gr).filter(Boolean).join(",");
                    Je && (dn.value = !0);
                    const bn = {
                        page: Ue.value.page,
                        size: Ue.value.size,
                        keyword: _r.value.keyword?.trim() || void 0,
                        type: _r.value.type ?? void 0,
                        order: _r.value.orderKey,
                        asc: _r.value.orderRule,
                        fromDate: Zn.value[0],
                        toDate: Zn.value[1],
                        softDeleted: _r.value.softDeleted,
                        queueId: ht.value ? "" : qt(Pn.value),
                        inboxId: yn.value ? "" : qt(Ze.value)
                    };
                    Object.assign(bn, {
                        status: Vn.value.map( ({value: ir}) => ir).join(","),
                        assignedTo: Se.value.map( ({id: ir}) => ir).join(",")
                    }),
                        await kr();
                    const [br,xr] = await (0,
                        z.tryApiCatch)(Cn, ct(bn, "assignType"));
                    dn.value = !1,
                        br ? Et(br, "icon-error") : (sr.value = un(xr.records || []),
                            Ue.value.total = xr.total,
                            yt.value = [])
                }
                function un(Je) {
                    const qt = bn => (q.value === 1 ? [Re.enableDeleteVoicemail && bn.allowRecover && {
                        command: Zt.RECOVER,
                        label: rn("cci.common.button.recover")
                    }] : [...ur(bn)]).filter(Boolean);
                    return Je.map(bn => {
                            const br = qt(bn)
                                , xr = rn(Mn[Ee(bn)]) || "--";
                            return {
                                ...bn,
                                statusText: xr,
                                dropdownMenus: br,
                                disableDropdownMenu: br.length === 0
                            }
                        }
                    )
                }
                function ur(Je={}) {
                    const {assignedUserName: qt, assignedUserId: bn, voicemailTranscriptStatus: br} = Je
                        , {ASSIGN_VOICEMAIL: xr, DOWNLOAD_VOICEMAIL: ir, DOWNLOAD_TRANSCRIPT: Gr, DOWNLOAD_ALL: Zr, REOPEN: na} = Zt;
                    return Lt.filter(aa => {
                            const {enableTabs: ra, enableStatus: kt, excludeAssignee: et, command: ut, settingPermission: Nn} = aa
                                , qn = Nn ? Nn.every(ca => Re[ca]) : !0;
                            if (ut === ir)
                                return qn;
                            if (ut === Gr || ut === Zr)
                                return Re.enableDownloadDeletedMessagingTranscript && br === In && qn;
                            const zn = ra ? ra.includes(Xe.value) : !0
                                , Vr = kt ? kt.includes(Ee(Je)) : !0
                                , qr = et ? !qt : !0
                                , Jr = bn === Tt.value?.id;
                            return ut === xr && Jr && !Re.enableAssignToOthers || ut === na && !Jr && !Re.enableAssignToOthers ? !1 : [zn, Vr, qr, qn].every(Boolean)
                        }
                    ).map(aa => {
                            const ra = aa.command === xr ? _n(!!bn) : aa.i18nKey;
                            return {
                                ...aa,
                                label: rn(ra)
                            }
                        }
                    )
                }
                function _n(Je) {
                    return Re.enableAssignToOthers ? Je ? "cci.common.button.reassign" : "cci.inbox.moreMenu.assign" : Je ? "cci.inbox.moreMenu.reassignToMe" : "cci.inbox.moreMenu.assignToMe"
                }
                function Jn() {
                    ae.value = !0,
                        ot()
                }
                function Ut() {
                    ae.value = !1
                }
                function xe(Je, qt) {
                    Array.isArray(yt.value) || qt === "check" && (yt.value = [Je]),
                        qt === "check" ? yt.value.push(Je) : yt.value.splice(yt.value.findIndex(bn => bn.contentId === Je.contentId), 1)
                }
                function We(Je) {
                    Ue.value.size = Je,
                        Ue.value.page = 1,
                        bt()
                }
                function Nt(Je) {
                    Ue.value.page = Je,
                        bt()
                }
                async function hn(Je) {
                    try {
                        const [qt,bn] = await (0,
                            z.tryApiCatch)(wn, Je);
                        if (qt)
                            throw Error(qt);
                        return bn
                    } catch (qt) {
                        console.error(qt)
                    }
                }
                async function Ln(Je, qt) {
                    const {callback: bn, errorHandler: br, inboxId: xr, voicemailId: ir} = Je || {};
                    if (qt) {
                        const Gr = Gt.$notify.success({
                            customClass: "inbox-custom-notification",
                            duration: Mt,
                            title: rn("cci.inbox.dialog.resolve.successfully"),
                            message: `<a role="button" class="undo-button" style="cursor: pointer;">${rn("cci.common.button.undo")}</a>`,
                            dangerouslyUseHTMLString: !0,
                            showClose: !0,
                            onClose: () => Qe(ir)
                        });
                        Yt(ir, Gr);
                        const Zr = setTimeout( () => {
                                Gr.close(),
                                    clearTimeout(Zr)
                            }
                            , Mt);
                        Gr.$el.querySelector("a.undo-button").onclick = () => {
                            Gr.close(),
                                De({
                                    inboxId: xr,
                                    voicemailId: ir
                                })
                        }
                            ,
                        bn && bn(),
                            await bt()
                    } else
                        Et(rn("cci.inbox.dialog.resolve.unsuccessfully"), "icon-error"),
                        br && br()
                }
                function fn(Je) {
                    Qt.value ? (Object.assign(Qt.value, Je),
                        $e(Je)) : Qt.value = Je
                }
                function $e(Je) {
                    const qt = (bn, br) => {
                            if (!Object.prototype.hasOwnProperty.call(bn, br))
                                return;
                            const xr = sr.value.findIndex(Zr => Zr.contentId === Qt.value?.contentId);
                            if (xr === -1)
                                return;
                            const ir = bn[br]
                                , Gr = sr.value[xr][br];
                            (0,
                                V.default)(ir, Gr) || (sr.value[xr][br] = ir,
                                sr.value = un(sr.value),
                            Qt.value && Object.assign(Qt.value, sr.value[xr]))
                        }
                    ;
                    ["voicemailTranscriptStatus"].forEach(bn => qt(Je, bn))
                }
                async function tt(Je={}) {
                    arguments.length === 0 && (dn.value = !0);
                    try {
                        const qt = cn()
                            , bn = await hn({
                            ...qt,
                            status: gr.RESOLVED
                        });
                        await Ln({
                            ...Je,
                            ...qt
                        }, bn)
                    } catch (qt) {
                        console.error(qt)
                    } finally {
                        dn.value = !1
                    }
                }
                const ot = (0,
                    G.default)(function() {
                    M.default.nextTick( () => {
                            Fe(),
                                bt()
                        }
                    )
                }, 300, {
                    leading: !0
                });
                function on() {
                    ot()
                }
                function Fe() {
                    Ue.value.page = 1,
                        _r.value.orderKey = "createTime",
                        _r.value.orderRule = "0",
                        _r.value.keyword = "",
                        _r.value.type = "",
                        Pn.value = [],
                        Ze.value = [],
                        Vn.value = [],
                        Se.value = [],
                        Qt.value = void 0,
                        Zn.value = [],
                        yt.value = []
                }
                function Mr(Je) {
                    if (q.value)
                        return !1;
                    const qt = Ee(Je);
                    return gr.NEW === qt
                }
                async function Jt() {
                    await Dt({
                        toMe: !0
                    }, !0)
                }
                async function Dt(Je, qt=!1) {
                    const {selected: bn, toMe: br, callback: xr, errorHandler: ir} = Je
                        , Gr = !Qt.value && yt.value.length > 0
                        , Zr = () => {
                            const Xr = Gr ? "cci.inbox.dialog.assignToMe.multi.successfully" : "cci.inbox.dialog.assignToMe.successfully"
                                , aa = Gr ? "cci.inbox.dialog.assign.multi.successfully" : "cci.inbox.dialog.assign.successfully";
                            return br ? rn(Xr) : rn(aa, {
                                name: bn.name
                            })
                        }
                        , na = () => {
                            const Xr = {
                                assignedUserId: br ? Tt.value?.id : bn?.id
                            };
                            if (Gr) {
                                const kt = yt.value.filter(Nn => Ee(Nn) !== gr.RESOLVED)
                                    , et = kt.slice(0, 1).pop()?.inboxId
                                    , ut = kt.map( ({contentId: Nn}) => Nn);
                                return {
                                    ...Xr,
                                    inboxId: et,
                                    voicemailIds: ut
                                }
                            }
                            const {inboxId: aa, contentId: ra} = Qt.value || {};
                            return {
                                ...Xr,
                                inboxId: aa,
                                voicemailIds: [ra]
                            }
                        }
                    ;
                    dn.value = qt;
                    try {
                        const [Xr,aa] = await (0,
                            z.tryApiCatch)(Ce, na());
                        if (Xr) {
                            Et(Xr, "icon-error");
                            return
                        }
                        aa ? (Et(Zr(), "icon-success"),
                        xr && xr(),
                            await bt()) : (Et(rn("cci.inbox.dialog.assign.unsuccessfully"), "icon-error"),
                        ir && ir())
                    } catch (Xr) {
                        console.error(Xr)
                    } finally {
                        dn.value = !1
                    }
                }
                function an(Je) {
                    Je && gn(Je),
                        bt()
                }
                async function Bn() {
                    try {
                        dn.value = !0,
                            await hn({
                                ...cn(),
                                status: gr.NEW
                            }) ? await bt() : Et(rn("cci.inbox.dialog.markAsNew.unsuccessfully"), "icon-error")
                    } catch (Je) {
                        console.error(Je)
                    } finally {
                        dn.value = !1
                    }
                }
                function vn() {
                    An.value = !0
                }
                function nn(Je) {
                    if (Array.from(new Set(yt.value.filter(bn => Ee(bn) !== gr.RESOLVED).map( ({inboxId: bn}) => bn))).length > 1 && Gt) {
                        Gt.$alert(rn("cci.inbox.dialog.assign.unableToAssign.desc"), rn("cci.inbox.dialog.assign.unableToAssign.title"), {
                            closeOnPressEscape: !0,
                            confirmButtonText: rn("cci.ok"),
                            callback: () => {}
                        });
                        return
                    }
                    Je && Je()
                }
                async function tr() {
                    try {
                        Hn.value = !0;
                        const Je = yt.value.filter( ({dropdownMenus: qt}) => {
                                const bn = qt.find( ({command: br}) => Zt.DOWNLOAD_VOICEMAIL === br);
                                return bn && !bn.disabled
                            }
                        );
                        if (!Je.length) {
                            Et(rn("cci.inbox.dialog.assign.download.error.message"));
                            return
                        }
                        await Promise.all(Je.map(qt => _t({
                            ...qt,
                            showNotification: !1
                        })))
                    } catch (Je) {
                        console.error(Je)
                    } finally {
                        Hn.value = !1
                    }
                }
                function Ve(Je) {
                    Qt.value = void 0;
                    const {DELETE: qt, ASSIGN_VOICEMAIL: bn, DOWNLOAD_VOICEMAIL: br} = Zt
                        , ir = {
                        [qt]: () => {
                            x("bulkDelete", yt.value)
                        }
                        ,
                        [bn]: () => {
                            nn( () => {
                                    if (Re.enableAssignToOthers) {
                                        R();
                                        return
                                    }
                                    Jt()
                                }
                            )
                        }
                        ,
                        [br]: tr
                    }[Je];
                    ir && ir()
                }
                function R() {
                    dt.value = !0,
                        x("inbox:assignPageVisibleChange", !0)
                }
                function ce() {
                    x("inbox:assignPageVisibleChange", !1)
                }
                function gt(Je) {
                    return Ne(Je, Tt.value?.countryOrRegion)
                }
                const Ft = (0,
                    M.computed)( () => gt(Qt.value?.from))
                    , Kt = (0,
                    G.default)(function() {
                    Ue.value.page = 1,
                        bt()
                }, 300);
                function St(Je, qt, bn) {
                    _r.value.keyword = Je.keyword,
                        Zn.value[0] = Je.fromDate,
                        Zn.value[1] = Je.toDate,
                        Pn.value = Je.queueIds,
                        Ze.value = Je.inboxIds,
                        Vn.value = Je.statusIds,
                        Se.value = Je.assignedToIds,
                        yn.value = qt,
                        ht.value = bn,
                        Rn()
                }
                function Xt() {
                    Rr.value = !0
                }
                function Rn() {
                    Pt && (clearTimeout(Pt),
                        Pt = null),
                        Pt = setTimeout( () => {
                                Ue.value.page = 1,
                                    bt(),
                                    Pt = null
                            }
                            , 1e3)
                }
                function kn() {
                    _r.value.softDeleted = q.value
                }
                function pr() {
                    dn.value || (Ue.value.page = 1,
                        bt())
                }
                async function Or(Je) {
                    cr.value = !0,
                    await we().finally( () => cr.value = !1) && (Je?.(),
                        bt())
                }
                async function we(Je) {
                    if (Ee(Je) === gr.NEW)
                        try {
                            return await hn({
                                ...cn(),
                                status: gr.OPEN
                            })
                        } catch (bn) {
                            console.error(bn)
                        }
                }
                function lr(Je, qt) {
                    Qt.value = qt;
                    const {DELETE: bn, RECOVER: br, ASSIGN_VOICEMAIL: xr, RESOLVE_VOICEMAIL: ir, MARK_AS_NEW: Gr, REOPEN: Zr, DOWNLOAD_VOICEMAIL: na, DOWNLOAD_TRANSCRIPT: Xr, DOWNLOAD_ALL: aa} = Zt
                        , kt = {
                        [bn]: () => Tr([qt]),
                        [br]: () => Lr(qt),
                        [xr]: () => Re.enableAssignToOthers ? R() : Jt(),
                        [ir]: tt,
                        [Gr]: Bn,
                        [Zr]: vn,
                        [na]: () => _t(qt),
                        [Xr]: () => Ge(qt),
                        [aa]: () => Be(qt)
                    }[Je];
                    kt && kt()
                }
                async function Tr(Je) {
                    const {type: qt, voiceEmailDetail: bn={}, emailNum: br} = Ur(Je);
                    try {
                        await Gt.$confirm(Hr({
                            type: qt,
                            voiceEmailDetail: bn,
                            emailNum: br
                        }), nr(qt, F.i18n), {
                            cancelButtonText: rn("cci.common.button.cancel"),
                            confirmButtonText: rn("cci.common.button.delete"),
                            confirmButtonClass: "zm-button--danger"
                        }),
                            dn.value = !0;
                        const [xr] = await (0,
                            z.tryApiCatch)(Oe, Je.map(ir => {
                                const Gr = {
                                    inboxId: ir.inboxId,
                                    contentId: ir.contentId
                                };
                                return ct(Gr)
                            }
                        ));
                        xr ? Et(xr, "icon-error") : (Et(rn("cci.deletedSuccessfully"), "icon-success"),
                            Ue.value.page = 1,
                            await bt())
                    } catch (xr) {
                        console.log(xr);
                        return
                    } finally {
                        dn.value = !1
                    }
                }
                async function Lr(Je) {
                    try {
                        await Gt.$confirm(rn("cci.inbox.confirm.recover.warning"), rn("cci.inbox.confirm.recover.title"), {
                            cancelButtonText: rn("cci.common.button.cancel"),
                            confirmButtonText: rn("cci.common.button.recover"),
                            confirmButtonClass: "zm-button--primary"
                        }),
                            dn.value = !0;
                        const [qt] = await (0,
                            z.tryApiCatch)(at, [Je].map(bn => ({
                            inboxId: bn.inboxId,
                            contentId: bn.contentId
                        })));
                        qt ? Et(qt, "icon-error") : (Ue.value.page = 1,
                            bt())
                    } catch {
                        return
                    }
                }
                function Ur(Je) {
                    const qt = Je.length === 1 && !W.value
                        , bn = Je.length === 1 && W.value
                        , br = Je.every(Gr)
                        , xr = Je.filter(Gr).length;
                    if (bn)
                        return Gr(Je[0]) ? {
                            type: "singleSoftWithPII",
                            voiceEmailDetail: Je[0]
                        } : {
                            type: "singleHardWithPII",
                            voiceEmailDetail: Je[0]
                        };
                    if (qt)
                        return Gr(Je[0]) ? {
                            type: "singleSoft",
                            voiceEmailDetail: Je[0]
                        } : {
                            type: "singleHard",
                            voiceEmailDetail: Je[0]
                        };
                    if (br)
                        return ir(Je) ? {
                            type: "multiSoftWithSameDays",
                            voiceEmailDetail: Je[0],
                            emailNum: Je.length
                        } : {
                            type: "multiSoftWithDiffDays",
                            emailNum: Je.length
                        };
                    return xr === 0 ? {
                        type: "multiHard",
                        emailNum: Je.length
                    } : {
                        type: "multiHardOrSoft",
                        emailNum: Je.length
                    };
                    function ir(Zr) {
                        return new Set(Zr.map(Xr => Xr.softDeleteDays)).size === 1
                    }
                    function Gr(Zr={}) {
                        return "softDeleteDays"in Zr
                    }
                }
                function Hr({type: Je, voiceEmailDetail: qt, emailNum: bn}) {
                    return ( (xr, {from: ir, softDeleteDays: Gr}, Zr) => {
                            const na = {
                                singleSoft: rn("cci.inbox.confirm.softDelete.single.warning", {
                                    from: gt(ir),
                                    softDeleteDays: Gr
                                }),
                                singleSoftWithPII: rn("cci.inbox.confirm.softDelete.single.pii.warning", {
                                    softDeleteDays: Gr
                                }),
                                singleHard: rn("cci.inbox.confirm.hardDelete.single.warning", {
                                    from: gt(ir)
                                }),
                                singleHardWithPII: rn("cci.inbox.confirm.hardDelete.single.pii.warning"),
                                multiSoftWithDiffDays: rn("cci.inbox.confirm.softDelete.multi.warning", {
                                    n: Zr
                                }),
                                multiSoftWithSameDays: rn("cci.inbox.confirm.softDelete.multi.days.warning", {
                                    n: Zr,
                                    softDeleteDays: Gr
                                }),
                                multiHard: rn("cci.inbox.confirm.hardDelete.multi.warning", {
                                    n: Zr
                                }),
                                multiHardOrSoft: rn("cci.inbox.confirm.softDelete.multi.warning", {
                                    n: Zr
                                }),
                                default: rn("cci.inbox.confirm.recover.warning")
                            };
                            return na[xr] || na.default
                        }
                    )(Je, qt, bn)
                }
                function Yr() {
                    const {all: Je} = U;
                    Xe.value = Je
                }
                async function mr(Je, qt) {
                    let bn, br = "";
                    const xr = Ee(Je)
                        , ir = rn(`cci.inbox.type.${Ot[Je.contentType]}`);
                    if (ir && qt && (br = rn("cci.inbox.transcribe.preview.title", {
                        inboxTypeName: ir,
                        consumer: qt
                    })),
                        Qt.value = {
                            ...Je ?? {}
                        },
                        Je.mediaUrl)
                        bn = Je.mediaUrl;
                    else {
                        $n.value = !0;
                        const {inboxId: Gr, contentId: Zr} = Je
                            , [na,Xr] = await (0,
                            z.tryApiCatch)(Sn, ct({
                            inboxId: Gr,
                            contentId: Zr,
                            status: xr
                        }));
                        if ($n.value = !1,
                            na)
                            return Et(na, "icon-error");
                        !na && Xr && (bn = Xr?.fileUrl || Xr,
                            Je.mediaUrl = Xr?.fileUrl || Xr,
                            Je.mediaName = br)
                    }
                    bn && (Gn.value = !0,
                        M.default.nextTick(async () => {
                                rt.value?.open({
                                    fileType: "audio",
                                    mediaUrl: bn,
                                    name: br,
                                    contentId: Je.contentId,
                                    updatedVMStatus: gr.NEW !== xr,
                                    time: (0,
                                        z.toLocaleDate)(Je.createTime, (0,
                                        z.getFormatStr)(!0), en.value)
                                }),
                                Kn.includes(Je.voicemailTranscriptStatus) && Je.enableVoicemailTranscript && await rt.value?.getTranscript(Je)
                            }
                        ))
                }
                return (0,
                    M.onActivated)( () => {
                        Yr(),
                        Re.enableVoicemailManagement && (kn(),
                            bt(),
                            Pt = null)
                    }
                ),
                    X({
                        refreshDataList: pr,
                        updateSoftDelete: kn,
                        removeWithConfirmation: Tr,
                        getInboxTableList: bt
                    }),
                    {
                        __sfc: !0,
                        emit: x,
                        props: H,
                        softDeleted: q,
                        showSelectionCol: _e,
                        recAccessLimitForOpUser: ie,
                        tabType: ze,
                        deleteMyInboxContent: Oe,
                        getMyInboxList: Cn,
                        recoverMyInboxContent: at,
                        getVoicemailMediaUrl: Sn,
                        assignVM: Ce,
                        updateVMStatus: wn,
                        undoResolveVM: Ae,
                        getDeleteTitle: nr,
                        InboxCollapseTitle: mt,
                        InboxCollapseDetail: jn,
                        BulkOperation: ve,
                        ReopenDialog: or,
                        ConfirmDialog: pt,
                        CrmFilterDialog: je,
                        useDownloadVM: Ke,
                        useReopen: it,
                        formatE164Number: Ne,
                        vm: Gt,
                        tz: en,
                        t: rn,
                        currentAgent: Tt,
                        piiSettings: vr,
                        notifications: rr,
                        getVMNotifications: kr,
                        permissions: Re,
                        nativeNotify: Et,
                        reopenDialogVisible: An,
                        storeResolvedNotifyInstance: Yt,
                        closeResolvedNotifyInstance: gn,
                        removeResolvedNotifyInstance: Qe,
                        downloadVoicemailFile: ar,
                        HIDE_DOWNLOAD_ALL: zt,
                        MENU_COMMAND: Zt,
                        MORE_MENUS: Lt,
                        STATUS_CODE: gr,
                        STATUS_I18N_KEY: Mn,
                        TABS_KEY: U,
                        UNDO_DURATION: Mt,
                        VALID_TRANSCRIPT_STATUS: Kn,
                        VOICEMAIL_TRANSCRIPT_STATUS: In,
                        VOICEMAL_DOWNLOAD_PERMISSION_LIST: tn,
                        INBOX_NAMED_TYPE: Ot,
                        timerRef: Pt,
                        previewLoading: $n,
                        isShowAssignVM: dt,
                        activeTab: Xe,
                        queueFilterSelectedAll: ht,
                        inboxFilterSelectedAll: yn,
                        loading: dn,
                        isShowPreview: Gn,
                        inboxList: sr,
                        timer: Zn,
                        search: _r,
                        queueIds: Pn,
                        inboxIds: Ze,
                        statusIds: Vn,
                        assignedToIds: Se,
                        pagination: Ue,
                        selected: yt,
                        currentRow: Qt,
                        downloading: Hn,
                        updatingVMReadStatus: cr,
                        filterDialogVisible: Rr,
                        confirmDialog: Pr,
                        previewRef: rt,
                        shouldClearFilter: ae,
                        assignedUser: de,
                        allInboxesTabActivated: ye,
                        hasDownloadTranscriptPermission: Le,
                        notificationCounts: Te,
                        enableMultiDelete: be,
                        assignTargetVM: me,
                        assignTargetInbox: He,
                        enableResolveInPreview: Ct,
                        showHeader: wt,
                        enableMultiDownload: Bt,
                        bulkOperations: En,
                        enableTranscript: Pe,
                        enablePhiMask: W,
                        getStatusByType: Ee,
                        enableMultiAssign: nt,
                        getMultiAssignBtnI18n: Ie,
                        handleDownloadAll: Be,
                        onConfirm: st,
                        downloadAll: jt,
                        downloadVoicemail: _t,
                        downloadTranscript: Ge,
                        onDialogDownload: It,
                        genCommonParams: cn,
                        addTypeToParams: ct,
                        undoResolveVoicemail: De,
                        getInboxTableList: bt,
                        formatInboxList: un,
                        genMoreMenus: ur,
                        getRowAssignBtnI18n: _n,
                        handleClearButtonClick: Jn,
                        handleFilterDialogReset: Ut,
                        handleSelectionChange: xe,
                        onSizeChange: We,
                        onCurrentChange: Nt,
                        updateVoicemailStatus: hn,
                        resolveVoicemail: Ln,
                        updateCurrentRow: fn,
                        updateCurrentTableRow: $e,
                        onResolveVoicemail: tt,
                        refreshTable: ot,
                        onActiveTabChange: on,
                        resetSearchFormValues: Fe,
                        isNew: Mr,
                        assignToMeDirectly: Jt,
                        onAssignTo: Dt,
                        onReopen: an,
                        onMarkAsNew: Bn,
                        displayReopenDialog: vn,
                        checkFromSameVoicemail: nn,
                        bulkDownload: tr,
                        onClickBulkOperation: Ve,
                        showAssignPage: R,
                        handleCloseAssignPage: ce,
                        formatE164WithCountry: gt,
                        currentRowE164Number: Ft,
                        onInputSearch: Kt,
                        handleFilterChange: St,
                        displayFilterDialog: Xt,
                        handleSelectChange: Rn,
                        updateSoftDelete: kn,
                        refreshDataList: pr,
                        onReadVoiceMail: Or,
                        changeNewToOpen: we,
                        handleCommand: lr,
                        removeWithConfirmation: Tr,
                        recoverWithConfirmation: Lr,
                        getCurrentDeleteType: Ur,
                        getDeleteTips: Hr,
                        initActiveTab: Yr,
                        showPreview: mr,
                        Empty: O.Empty,
                        AssignVoicemail: K.default,
                        InboxHeader: te.default,
                        PreviewVoicemail: ee.default,
                        InboxSkeleton: pe.default
                    }
            }
        })
    },
    36646: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(D) {
                return D && D.__esModule ? D : {
                    default: D
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(74061)
            , $ = a(74061)
            , k = a(83266)
            , P = a(76709)
            , M = a(56405)
            , Q = Y(a(63850))
            , O = Y(a(34409))
            , F = Y(a(48818));
        E.default = (0,
            J.defineComponent)({
            __name: "Inbox",
            setup(D) {
                const {ZPNS_VM_NOTIFICATIONS_NAME: z, VM_NOTIFICATION_WAIT: G} = M.inboxConstant
                    , V = (0,
                        $.inject)("$agent")
                    , K = (0,
                        $.ref)(!1)
                    , te = (0,
                        $.ref)(!1)
                    , ee = (0,
                        $.ref)(null)
                    , {enableVoicemailManagement: pe} = (0,
                        k.useInboxPermission)()
                    , {useActions: ne} = (0,
                        P.useVuex)()
                    , {getVMNotifications: X} = ne("inbox", ["getVMNotifications"])
                    , x = (0,
                        Q.default)( () => {
                            K.value ? X() : ee.value?.getInboxTableList(!1)
                        }
                        , G)
                    , H = ({name: at, content: {updateVmStatistics: Sn=!1}}) => {
                        at === z && Sn && x()
                    }
                    , q = () => {
                        const {zpns: at} = V?.() || {};
                        !at || !pe.value || at.on("message", H)
                    }
                    , _e = () => {
                        const {zpns: at} = V?.() || {};
                        at && at.off("message", H)
                    }
                    , ie = at => {
                        ee.value?.removeWithConfirmation(at)
                    }
                    , ze = () => {
                        K.value = !K.value,
                            (0,
                                $.nextTick)( () => {
                                    ee.value?.updateSoftDelete(),
                                        Oe()
                                }
                            )
                    }
                    , Oe = () => {
                        ee.value?.refreshDataList()
                    }
                ;
                function Cn(at) {
                    te.value = at
                }
                return (0,
                    $.onMounted)( () => {
                        if (!V) {
                            console.error("$agent provider not found");
                            return
                        }
                        q()
                    }
                ),
                    (0,
                        $.onBeforeUnmount)( () => {
                            V && _e()
                        }
                    ),
                    {
                        __sfc: !0,
                        ZPNS_VM_NOTIFICATIONS_NAME: z,
                        VM_NOTIFICATION_WAIT: G,
                        $agent: V,
                        isSoftDeleted: K,
                        assignPageVisible: te,
                        $baseRef: ee,
                        enableVoicemailManagement: pe,
                        useActions: ne,
                        getVMNotifications: X,
                        zpnsVoicemailHandler: x,
                        zpnsMessageHandler: H,
                        bindZpnsEvt: q,
                        unBindZpnsEvt: _e,
                        batchDeleteInbox: ie,
                        viewDeletedInboxOrNot: ze,
                        refreshDataList: Oe,
                        assignPageVisibleChange: Cn,
                        AxIcon: O.default,
                        Base: F.default
                    }
            }
        })
    },
    7947: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "B", {
            value: !0
        });
        const Y = a(74061)
            , J = a(74061)
            , $ = a(83266)
            , k = a(6372)
            , P = a(56405);
        E.A = (0,
            Y.defineComponent)({
            __name: "InboxHeader",
            props: {
                type: null,
                value: null,
                enableBadge: {
                    type: Boolean
                },
                notificationCounts: null,
                enableLevel: {
                    type: Boolean
                }
            },
            emits: ["input", "change"],
            setup(M, {emit: Q}) {
                const O = M
                    , {TABS_KEY: F} = P.inboxConstant
                    , {t: D, tc: z} = (0,
                    k.useI18n)()
                    , G = (0,
                    J.computed)({
                    get: () => O.value,
                    set: K => Q("input", K)
                })
                    , V = (0,
                    J.computed)( () => {
                        const K = [{
                            label: D("cci.inbox.tab.allInboxes"),
                            name: F.all
                        }, {
                            label: D("cci.inbox.tab.assignedToMe"),
                            name: F.mine
                        }];
                        return !O.enableBadge || !O.notificationCounts ? K : K.map( (te, ee) => {
                                const {unread: pe=0, opening: ne=0} = O.notificationCounts?.[ee] || {
                                    unread: 0,
                                    opening: 0
                                };
                                let X = te.label;
                                return (pe || ne) && (X = pe ? `${te.label} ${z("cci.inbox.tab.label.unreadMessage", pe)}` : `${te.label} ${z("cci.inbox.tab.label.unresolvedMessage", ne)}`),
                                    {
                                        ...te,
                                        ariaLabel: X,
                                        firstCount: pe,
                                        secondCount: ne
                                    }
                            }
                        )
                    }
                );
                return {
                    __sfc: !0,
                    TABS_KEY: F,
                    t: D,
                    tc: z,
                    props: O,
                    emit: Q,
                    activeTab: G,
                    tabs: V,
                    VMBadge: $.VMBadge
                }
            }
        })
    }
    ,
    20079: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(D) {
                return D && D.__esModule ? D : {
                    default: D
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(74061)
            , $ = a(74061)
            , k = a(76856)
            , P = a(83266)
            , M = a(6372)
            , Q = a(56405)
            , O = Y(a(89012))
            , F = Y(a(22731));
        E.default = (0,
            J.defineComponent)({
            __name: "PlayAndTranscript",
            props: {
                visible: {
                    type: Boolean
                },
                softDeleted: null,
                updatingVMReadStatus: {
                    type: Boolean
                },
                enableTranscript: {
                    type: Boolean
                },
                enableResolve: {
                    type: Boolean
                },
                hasDownloadRecordingPermission: {
                    type: Boolean
                },
                hasDownloadTranscriptPermission: {
                    type: Boolean
                },
                transcriptStatus: null,
                phoneNumber: null
            },
            emits: ["update:visible", "cancel", "resolve", "read", "update", "onDialogDownload", "played"],
            setup(D, {expose: z, emit: G}) {
                const V = D
                    , {MENU_COMMAND: K, TRANSCRIPT_STATUS: te} = Q.inboxConstant
                    , {VoicemailTranscriptSkeleton: ee} = P.inboxComponents
                    , {t: pe} = (0,
                    M.useI18n)()
                    , ne = (0,
                    Q.isCrm)()
                    , X = (0,
                    $.ref)(!1)
                    , x = (0,
                    $.ref)(!1)
                    , H = (0,
                    $.ref)({
                    transcripts: [],
                    poweredBy: ""
                })
                    , q = (0,
                    $.ref)({
                    name: ""
                })
                    , _e = (0,
                    $.ref)(!1)
                    , ie = (0,
                    $.computed)({
                    get: () => V.visible,
                    set: Ne => G("update:visible", Ne)
                })
                    , ze = (0,
                    $.computed)( () => V.softDeleted === 0 && (V.hasDownloadRecordingPermission || V.hasDownloadTranscriptPermission))
                    , Oe = (0,
                    $.computed)( () => H.value.transcripts?.length > 0)
                    , Cn = (0,
                    $.computed)( () => V.enableTranscript && V.transcriptStatus !== te.TRANSCRIPT_VOICEMAIL_NOT_ENABLED)
                    , at = (0,
                    $.computed)( () => {
                        if (V.enableTranscript)
                            return [te.SENT_TRANSCRIPT, te.IN_PROGRESS].includes(V.transcriptStatus)
                    }
                )
                    , Sn = (0,
                    $.computed)( () => V.transcriptStatus === te.TRANSLATION_FAILURE)
                    , Ce = Ne => {
                    G("onDialogDownload", Ne)
                }
                    , wn = () => {
                    Ke(),
                        G("cancel")
                }
                    , Ae = (0,
                    O.default)( () => {
                        G("played"),
                            mt()
                    }
                    , 300)
                    , nr = () => {
                    x.value = !0,
                        G("resolve", {
                            callback: () => {
                                Ke(),
                                    x.value = !1
                            }
                            ,
                            errorHandler: () => {
                                x.value = !1
                            }
                        })
                }
                    , mt = () => {
                    _e.value || G("read", () => {
                            _e.value = !0
                        }
                    )
                }
                    , jn = Ne => {
                    const Gt = new Date(`2022T${Ne}`)
                        , en = `0${Gt.getMinutes()}`.slice(-2)
                        , rn = `0${Gt.getSeconds()}`.slice(-2);
                    return `${en}:${rn}`
                }
                    , ve = Ne => {
                    Ne !== te.TRANSLATION_SUCCESS && G("update", {
                        voicemailTranscriptStatus: te.TRANSLATION_SUCCESS
                    })
                }
                    , or = async ({contentId: Ne, inboxId: Gt, voicemailTranscriptStatus: en}) => {
                    X.value = !0;
                    const [rn,Tt] = await (0,
                        Q.tryApiCatch)(k.inboxApi.getVoicemailTranscript, {
                        contentId: Ne,
                        inboxId: Gt
                    });
                    if (X.value = !1,
                        rn)
                        console.log(rn);
                    else if (ie.value) {
                        if (H.value = Tt,
                            !Oe.value)
                            return;
                        mt(),
                            ve(en)
                    }
                }
                    , pt = Ne => {
                    q.value = Ne,
                    typeof Ne.updatedVMStatus == "boolean" && (_e.value = Ne.updatedVMStatus)
                }
                    , je = () => {
                    q.value = {
                        fileType: "",
                        mediaUrl: "",
                        name: "",
                        contentId: ""
                    },
                        H.value = {
                            transcripts: [],
                            poweredBy: ""
                        }
                }
                    , Ke = () => {
                    G("update:visible", !1)
                }
                    , it = (0,
                    O.default)( () => {
                        q.value.contentId && (0,
                            Q.tryApiCatch)(k.inboxApi.reportVoiceMailPlay, q.value.contentId)
                    }
                    , 300);
                return z({
                    open: pt,
                    getTranscript: or
                }),
                    {
                        __sfc: !0,
                        props: V,
                        emit: G,
                        MENU_COMMAND: K,
                        TRANSCRIPT_STATUS: te,
                        VmTranscriptSkeleton: ee,
                        $t: pe,
                        isCrm: ne,
                        loading: X,
                        resolving: x,
                        transcriptContent: H,
                        assetInfo: q,
                        updatedVMStatus: _e,
                        _visible: ie,
                        hasDropdownPermission: ze,
                        transcriptHasContent: Oe,
                        showTranscripts: Cn,
                        transcriptionPending: at,
                        transcriptionFailure: Sn,
                        handleDownloadCommand: Ce,
                        onCancel: wn,
                        onPlay: Ae,
                        resolveVoicemail: nr,
                        updateVmReadStatus: mt,
                        displayTs: jn,
                        updateVMTranscriptStatus: ve,
                        getTranscript: or,
                        open: pt,
                        onClose: je,
                        dismiss: Ke,
                        reportPlay: it,
                        AudioPlayer: F.default
                    }
            }
        })
    },
    69403: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "B", {
            value: !0
        });
        const Y = a(74061);
        E.A = (0,
            Y.defineComponent)({
            __name: "InboxSkeleton",
            props: {
                row: {
                    default: 3
                }
            },
            setup(J) {
                return {
                    __sfc: !0,
                    props: J
                }
            }
        })
    }
    ,
    30859: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(O) {
                return O && O.__esModule ? O : {
                    default: O
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(74061)
            , $ = a(74061)
            , k = a(83266)
            , P = a(56405)
            , M = Y(a(47855))
            , Q = a(35878);
        E.default = (0,
            J.defineComponent)({
            __name: "statusV2",
            props: {
                initStatus: {
                    default: P.STATUS_MAPPING.OFFLINE
                },
                wrapupDoneFlag: {
                    type: Boolean,
                    default: !1
                },
                zpnsStatus: {
                    default: ""
                },
                openedCoreTab: {
                    type: Boolean,
                    default: !1
                },
                statusDuration: {
                    default: new Date
                }
            },
            emits: [],
            setup(O, {emit: F}) {
                const D = O
                    , {enableOptOut: z, enableSubReason: G, isStatusDisabled: V, statusLoading: K, itemHovering: te, subItemDisabled: ee, reasonVisible: pe, queueList: ne, queueFocused: X, queueInfo: x, workSession: H, status: q, calcStatus: _e, calcStatusName: ie, calcStatusIcon: ze, currentStatusId: Oe, defaultStatus: Cn, customStatus: at, needShowEndSession: Sn, isWorkSessionBusy: Ce, formatSubReasons: wn, handleElementMouseOver: Ae, handleElementMouseLeave: nr, handleMouse: mt, handleMouseLeave: jn, handleArrowUpDownKey: ve, handleArrowLeftKey: or, handleArrowRightKey: pt, showCantEndToolTip: je, calcSubStatusName: Ke, calcSubStatusDisableText: it, handleClose: Ne, handleSave: Gt, handleCommand: en, updateStatusVisible: rn} = (0,
                    k.useCrmStatus)(D, F);
                async function Tt(gn, Qe, ar) {
                    const zt = await (0,
                        Q.getCRMInstance)();
                    zt && zt?.setStatus && zt.setStatus(gn, Qe, ar)
                }
                async function vr({code: gn, message: Qe}) {
                    const ar = await (0,
                        Q.getCRMInstance)();
                    ar && ar?.sendError && ar.sendError({
                        code: gn,
                        message: Qe
                    })
                }
                const rr = gn => {
                        en({
                            queueItem: gn,
                            queue: !0
                        })
                    }
                    , kr = gn => {
                        let Qe, ar;
                        return _e.value?.subReasons && (_e.value?.subReasons.filter(Zt => Zt.id === gn)).length && (Qe = _e.value?.id,
                            ar = _e.value),
                            {
                                parent: ar,
                                parentId: Qe
                            }
                    }
                    , Re = gn => {
                        let Qe, ar = !1;
                        return Cn.value && Array.isArray(Cn.value) && Cn.value.find( ({id: zt, subReasons: Zt}) => {
                                if (zt === gn)
                                    return ar = !0,
                                        !0;
                                if (Zt && Zt.length)
                                    return Zt.find(Lt => Lt?.id === gn ? (ar = !0,
                                        Qe = zt,
                                        !0) : !1)
                            }
                        ),
                            {
                                isValid: ar,
                                parentId: Qe
                            }
                    }
                ;
                (0,
                    $.watch)(q, gn => {
                        const {parentId: Qe, parent: ar} = kr(gn);
                        Tt(gn, Qe, ar)
                    }
                    , {
                        immediate: !0
                    });
                function Et(gn) {
                    const {isEndSession: Qe} = gn;
                    Qe && Tt(P.STATUS_MAPPING.OFFLINE),
                        en(gn)
                }
                function An(gn) {
                    if (!gn) {
                        vr({
                            code: "invalid-status-id",
                            message: "status id does not exist."
                        });
                        return
                    }
                    if ([P.STATUS_MAPPING.OCCUPIED, P.STATUS_MAPPING.OFFLINE].includes(gn)) {
                        vr({
                            code: "invalid-status-id",
                            message: "status cannot be changed to offline or occupied manually."
                        });
                        return
                    }
                    const {isValid: Qe, parentId: ar} = Re(gn);
                    if (Qe)
                        en({
                            id: gn,
                            parentId: ar
                        });
                    else {
                        vr({
                            code: "invalid-status-id",
                            message: "status id does not match a valid ZCC status"
                        });
                        return
                    }
                }
                function Yt() {
                    const {parent: gn, parentId: Qe} = kr(Oe.value);
                    Tt(Oe.value, Qe, gn)
                }
                return (0,
                    $.onMounted)( () => {
                        P.eventBus.$on("CRM_AGENT_STATUS_CHANGE", An),
                            P.eventBus.$on("CRM_AGENT_STATUS_GET", Yt)
                    }
                ),
                    (0,
                        $.onBeforeUnmount)( () => {
                            P.eventBus.$off("CRM_AGENT_STATUS_CHANGE", An),
                                P.eventBus.$off("CRM_AGENT_STATUS_GET", Yt)
                        }
                    ),
                    {
                        __sfc: !0,
                        props: D,
                        emit: F,
                        enableOptOut: z,
                        enableSubReason: G,
                        isStatusDisabled: V,
                        statusLoading: K,
                        itemHovering: te,
                        subItemDisabled: ee,
                        reasonVisible: pe,
                        queueList: ne,
                        queueFocused: X,
                        queueInfo: x,
                        workSession: H,
                        status: q,
                        calcStatus: _e,
                        calcStatusName: ie,
                        calcStatusIcon: ze,
                        currentStatusId: Oe,
                        defaultStatus: Cn,
                        customStatus: at,
                        needShowEndSession: Sn,
                        isWorkSessionBusy: Ce,
                        formatSubReasons: wn,
                        handleElementMouseOver: Ae,
                        handleElementMouseLeave: nr,
                        handleMouse: mt,
                        handleMouseLeave: jn,
                        handleArrowUpDownKey: ve,
                        handleArrowLeftKey: or,
                        handleArrowRightKey: pt,
                        showCantEndToolTip: je,
                        calcSubStatusName: Ke,
                        calcSubStatusDisableText: it,
                        handleClose: Ne,
                        handleSave: Gt,
                        handleCommand: en,
                        updateStatusVisible: rn,
                        setCtiAgentStatus: Tt,
                        sendCrmError: vr,
                        beforeQueueChange: rr,
                        getStatusParent: kr,
                        isStatusValid: Re,
                        _handleCommand: Et,
                        handleAgentStatusChange: An,
                        handleAgentStatusGet: Yt,
                        OptOutReasonDialog: k.OptOutReasonDialog,
                        StatusQueueComponent: k.StatusQueue,
                        Check: M.default
                    }
            }
        })
    },
    93932: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(F) {
                return F && F.__esModule ? F : {
                    default: F
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(74061)
            , $ = a(74061)
            , k = a(83266)
            , P = a(56405)
            , M = Y(a(47855))
            , Q = a(35878)
            , O = a(66261);
        E.default = (0,
            J.defineComponent)({
            __name: "statusV3",
            props: {
                initStatus: {
                    default: P.STATUS_MAPPING.OFFLINE
                },
                wrapupDoneFlag: {
                    type: Boolean,
                    default: !1
                },
                zpnsStatus: {
                    default: ""
                },
                openedCoreTab: {
                    type: Boolean,
                    default: !1
                },
                statusDuration: {
                    default: new Date
                },
                scheduleStatusIdRecord: {
                    default: ""
                }
            },
            emits: [],
            setup(F, {emit: D}) {
                const z = F
                    , {enableOptOut: G, statusLoading: V, itemHovering: K, subItemDisabled: te, reasonVisible: ee, queueList: pe, queueFocused: ne, queueInfo: X, workSession: x, calcStatus: H, calcStatusName: q, calcStatusIcon: _e, currentStatusId: ie, formatStatusList: ze, needShowEndSession: Oe, isWorkSessionBusy: Cn, formatSubReasons: at, handleElementMouseOver: Sn, handleElementMouseLeave: Ce, handleMouse: wn, handleMouseLeave: Ae, handleArrowUpDownKey: nr, handleArrowLeftKey: mt, handleArrowRightKey: jn, showCantEndToolTip: ve, calcSubStatusName: or, handleClose: pt, handleSave: je, handleCommand: Ke, updateStatusVisible: it, scheduleStatusId: Ne, statusScheduleSubName: Gt, canSetStatusSchedule: en} = (0,
                    O.useCrmStatusV3)(z, D);
                async function rn(Yt, gn, Qe) {
                    const ar = await (0,
                        Q.getCRMInstance)();
                    ar && ar?.setStatus && ar.setStatus(Yt, gn, Qe)
                }
                async function Tt({code: Yt, message: gn}) {
                    const Qe = await (0,
                        Q.getCRMInstance)();
                    Qe && Qe?.sendError && Qe.sendError({
                        code: Yt,
                        message: gn
                    })
                }
                const vr = Yt => {
                        Ke({
                            queueItem: Yt,
                            queue: !0
                        })
                    }
                    , rr = Yt => {
                        let gn, Qe;
                        return H.value?.subReasons && H.value?.subReasons?.filter(zt => zt.id === Yt)?.length && (Qe = H.value.id,
                            gn = H.value),
                            {
                                parent: gn,
                                parentId: Qe
                            }
                    }
                    , kr = Yt => {
                        let gn, Qe = !1;
                        return ze.value && Array.isArray(ze.value) && ze.value.find( ({id: ar, subReasons: zt}) => {
                                if (ar === Yt)
                                    return Qe = !0,
                                        !0;
                                if (zt && zt.length)
                                    return zt.find(Zt => Zt?.id === Yt ? (Qe = !0,
                                        gn = ar,
                                        !0) : !1)
                            }
                        ),
                            {
                                isValid: Qe,
                                parentId: gn
                            }
                    }
                ;
                (0,
                    $.watch)(ie, Yt => {
                        const {parent: gn, parentId: Qe} = rr(Yt);
                        rn(Yt, Qe, gn)
                    }
                    , {
                        immediate: !0
                    });
                function Re(Yt) {
                    const {isEndSession: gn} = Yt;
                    gn && rn(P.STATUS_MAPPING.OFFLINE),
                        Ke(Yt)
                }
                function Et(Yt) {
                    if (!Yt) {
                        Tt({
                            code: "invalid-status-id",
                            message: "status id does not exist."
                        });
                        return
                    }
                    if ([P.STATUS_MAPPING.OCCUPIED, P.STATUS_MAPPING.OFFLINE].includes(Yt)) {
                        Tt({
                            code: "invalid-status-id",
                            message: "status cannot be changed to offline or occupied manually."
                        });
                        return
                    }
                    const {isValid: gn, parentId: Qe} = kr(Yt);
                    if (gn)
                        Ke({
                            id: Yt,
                            parentId: Qe
                        });
                    else {
                        Tt({
                            code: "invalid-status-id",
                            message: "status id does not match a valid ZCC status"
                        });
                        return
                    }
                }
                function An() {
                    const {parent: Yt, parentId: gn} = rr(ie.value);
                    rn(ie.value, gn, Yt)
                }
                return (0,
                    $.onMounted)( () => {
                        P.eventBus.$on("CRM_AGENT_STATUS_CHANGE", Et),
                            P.eventBus.$on("CRM_AGENT_STATUS_GET", An)
                    }
                ),
                    (0,
                        $.onBeforeUnmount)( () => {
                            P.eventBus.$off("CRM_AGENT_STATUS_CHANGE", Et),
                                P.eventBus.$off("CRM_AGENT_STATUS_GET", An)
                        }
                    ),
                    {
                        __sfc: !0,
                        props: z,
                        emit: D,
                        enableOptOut: G,
                        statusLoading: V,
                        itemHovering: K,
                        subItemDisabled: te,
                        reasonVisible: ee,
                        queueList: pe,
                        queueFocused: ne,
                        queueInfo: X,
                        workSession: x,
                        calcStatus: H,
                        calcStatusName: q,
                        calcStatusIcon: _e,
                        currentStatusId: ie,
                        formatStatusList: ze,
                        needShowEndSession: Oe,
                        isWorkSessionBusy: Cn,
                        formatSubReasons: at,
                        handleElementMouseOver: Sn,
                        handleElementMouseLeave: Ce,
                        handleMouse: wn,
                        handleMouseLeave: Ae,
                        handleArrowUpDownKey: nr,
                        handleArrowLeftKey: mt,
                        handleArrowRightKey: jn,
                        showCantEndToolTip: ve,
                        calcSubStatusName: or,
                        handleClose: pt,
                        handleSave: je,
                        handleCommand: Ke,
                        updateStatusVisible: it,
                        scheduleStatusId: Ne,
                        statusScheduleSubName: Gt,
                        canSetStatusSchedule: en,
                        setCtiAgentStatus: rn,
                        sendCrmError: Tt,
                        beforeQueueChange: vr,
                        getStatusParent: rr,
                        isStatusValid: kr,
                        _handleCommand: Re,
                        handleAgentStatusChange: Et,
                        handleAgentStatusGet: An,
                        OptOutReasonDialog: k.OptOutReasonDialog,
                        StatusQueueComponent: k.StatusQueue,
                        Check: M.default
                    }
            }
        })
    },
    91781: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "B", {
            value: !0
        });
        const Y = a(83266)
            , J = a(15177);
        E.A = {
            name: "TaskNotify",
            components: {
                TaskNotifyPanel: Y.TaskNotifyPanel
            },
            props: {
                task: {
                    type: Object,
                    default() {
                        return null
                    }
                },
                info: {
                    type: Object,
                    default() {
                        return null
                    }
                },
                autoAccept: {
                    type: Boolean,
                    default: !1
                },
                isUpgrade: {
                    type: Boolean,
                    default: !1
                },
                isClientAutoAccept: {
                    type: Boolean,
                    default: !1
                }
            },
            setup($, k) {
                const {loading: P, onAccept: M, onReject: Q} = (0,
                    J.useVideoTaskNotify)($, k);
                return {
                    loading: P,
                    onAccept: M,
                    onReject: Q
                }
            }
        }
    }
    ,
    73164: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(O) {
                return O && O.__esModule ? O : {
                    default: O
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(15177)
            , $ = a(93044)
            , k = a(56405)
            , P = a(72713)
            , M = a(88967)
            , Q = Y(a(20433));
        E.default = {
            name: "VideoTask",
            components: {
                TaskNotify: Q.default,
                UpgradeLoading: $.UpgradeLoading
            },
            props: {
                status: String,
                featureOptions: {
                    type: Object,
                    default: () => ({})
                }
            },
            setup(O, F) {
                const {onAccept: D, onClear: z, onDismiss: G, isClientAutoAccept: V, loadingText: K, currentTask: te, autoAccept: ee, isUpgrade: pe, showTaskNotify: ne, showUpgradeLoading: X, showOutboundLoading: x, info: H, enableEngagementInformationOnClient: q} = (0,
                    J.useVideoTask)(O, F);
                return {
                    onAccept: D,
                    onClear: z,
                    onDismiss: G,
                    isClientAutoAccept: V,
                    loadingText: K,
                    currentTask: te,
                    autoAccept: ee,
                    isUpgrade: pe,
                    showTaskNotify: ne,
                    showUpgradeLoading: X,
                    showOutboundLoading: x,
                    info: H,
                    enableEngagementInformationOnClient: q
                }
            },
            mounted() {
                k.eventBus.$on(J.CRM_EVENT.INCOMING_VIDEO, this.onCrmIncomingVideo),
                    k.eventBus.$on(J.CRM_EVENT.INCOMING_WEB_CHAT, this.onCrmIncomingChat),
                    k.eventBus.$on(J.CRM_EVENT.VIDEO_ACCEPTED, this.onCrmVideoAccept),
                    k.eventBus.$on(J.CRM_EVENT.VIDEO_END, this.onCrmVideoEnd)
            },
            methods: {
                async onCrmIncomingVideo(O) {
                    const {task: F} = O
                        , {engagementId: D=""} = F;
                    this.enableEngagementInformationOnClient && await (0,
                        M.getSystemVariablesByEngagement)(D),
                        (0,
                            P.onIncomingVideo)(F)
                },
                onCrmIncomingChat(O) {
                    const {task: F} = O;
                    (0,
                        P.onIncomingWebChat)(F)
                },
                onCrmVideoAccept(O) {
                    const {task: F} = O;
                    (0,
                        P.onVideoAccepted)(F)
                },
                onCrmVideoEnd(O) {
                    const {task: F} = O;
                    (0,
                        P.onVideoEnded)(F)
                }
            },
            beforeDestroy() {
                k.eventBus.$off(J.CRM_EVENT.INCOMING_VIDEO, this.onCrmIncomingVideo),
                    k.eventBus.$off(J.CRM_EVENT.INCOMING_WEB_CHAT, this.onCrmIncomingChat),
                    k.eventBus.$off(J.CRM_EVENT.VIDEO_ACCEPTED, this.onCrmVideoAccept),
                    k.eventBus.$off(J.CRM_EVENT.VIDEO_END, this.onCrmVideoEnd)
            }
        }
    },
    555: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(K) {
                return K && K.__esModule ? K : {
                    default: K
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(74061)
            , $ = a(83266)
            , k = a(56405)
            , P = a(4439)
            , M = a(61367)
            , Q = a(35878)
            , O = a(30824)
            , F = a(19e3)
            , D = a(29197)
            , z = Y(a(77753))
            , G = a(53019)
            , V = a(19e3);
        E.default = (0,
            J.defineComponent)({
            name: "Login",
            mixins: [z.default],
            setup() {
                const K = (0,
                    k.useInstance)()
                    , {eLoadingError: te, errorOccurred: ee, calcErrorTitle: pe, calcErrorContent: ne} = (0,
                    D.usePageError)()
                    , X = (0,
                    J.ref)(null)
                    , x = (0,
                    J.ref)(window.localStorage.getItem("CCI_THIRD_TOKEN") ? M.PageStatus.LoginSuccess : M.PageStatus.NotLoggedIn);
                (0,
                    J.provide)("setPageStatus", ze => {
                        x.value = ze,
                            k.monitor.dispatchMonitor({
                                name: "setPageStatus",
                                value: ze
                            })
                    }
                );
                const H = (0,
                    J.computed)( () => x.value === M.PageStatus.NotLoggedIn || x.value === M.PageStatus.LoggingIn)
                    , {getWorkSessionStatus: q} = (0,
                    $.useWorkSessionInit)();
                (0,
                    J.watchEffect)( () => {
                        !ee.value && !H.value ? (q(),
                            k.mmsTracker.initMMSTrackerConfig()) : (0,
                            O.getCRM)() === P.CRMS.SalesforceServiceCloud && setTimeout( () => {
                                (0,
                                    F.letServiceCloudLogout)()
                            }
                            , 5 * 1e3)
                    }
                ),
                    (0,
                        J.onMounted)( () => {
                            const ze = new BroadcastChannel("loginBroadcastChannel");
                            if (X.value = ze,
                                ze.addEventListener("message", Oe => {
                                        Oe.data.event === "syncLogin" && window.location.reload()
                                    }
                                ),
                                (0,
                                    k.inIframe)()) {
                                const Oe = (0,
                                    O.getCRM)();
                                if (Oe === P.CRMS.SalesforceServiceCloud) {
                                    if ((0,
                                        V.setServiceCloudQueryString)())
                                        return;
                                    (0,
                                        Q.getCRMInstance)().then(at => {
                                            at?.onScvInitialized && at.onScvInitialized( () => {
                                                    (ee.value || H.value) && (0,
                                                        F.letServiceCloudLogout)()
                                                }
                                            )
                                        }
                                    );
                                    return
                                }
                                (Oe === P.CRMS.MsDynamics || Oe === P.CRMS.Hubspot) && ((0,
                                    G.CrmLogger)("CRM setup call - login comp"),
                                    (0,
                                        Q.getCRMInstance)())
                            }
                            k.eventBus.$on("clickToReLoginInNotification", K.refreshLogin)
                        }
                    ),
                    (0,
                        J.onUnmounted)( () => {
                            X.value?.close()
                        }
                    );
                const {checkSessionExpiration: _e, deleteNotification: ie} = (0,
                    $.useNotification)();
                return {
                    bcChannel: X,
                    pageStatus: x,
                    needShowThirdLogin: H,
                    PageStatus: M.PageStatus,
                    eLoadingError: te,
                    errorOccurred: ee,
                    calcErrorTitle: pe,
                    calcErrorContent: ne,
                    checkSessionExpiration: _e,
                    deleteNotification: ie
                }
            }
        })
    },
    32556: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(te) {
                return te && te.__esModule ? te : {
                    default: te
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(74061)
            , $ = a(74061)
            , k = a(83266)
            , P = a(76709)
            , M = a(56405)
            , Q = Y(a(36908))
            , O = a(61367)
            , F = a(4439)
            , D = a(72713)
            , z = a(26330)
            , G = a(35878)
            , V = a(30824)
            , K = a(88967);
        E.default = (0,
            J.defineComponent)({
            __name: "index",
            props: {
                phoneTabWrap: {
                    type: Boolean,
                    default: !1
                },
                duration: {
                    default: ""
                }
            },
            emits: ["handleIncommingCall"],
            setup(te, {expose: ee, emit: pe}) {
                const {useGetters: X} = (0,
                    P.useVuex)()
                    , {currentActiveTask: x} = (0,
                    P.useSessionPanelsGetters)()
                    , {currentCall: H, callStatus: q, callState: _e} = (0,
                    P.useCoreVoiceGetters)()
                    , {setCallTranscriptController: ie} = (0,
                    P.useCoreVoiceActions)()
                    , {setContactsMap: ze, setEngagementCrmContext: Oe} = (0,
                    P.useCrmActions)()
                    , {getEngagement: Cn} = (0,
                    P.useCrmGetters)()
                    , at = (0,
                    $.ref)(null)
                    , Sn = (0,
                    $.ref)(null)
                    , Ce = (0,
                    $.ref)(null)
                    , wn = (0,
                    $.computed)( () => H.value && H.value?.state?.transcriptController?.enabled && H.value?.state?.transcriptController?.showTranscription === !1 && !H.value?.state?.isConference);
                function Ae() {
                    ie({
                        id: H.value?.id,
                        newState: {
                            showTranscription: !0
                        }
                    })
                }
                async function nr(Ke) {
                    try {
                        await Ce?.value?.smsOutboundCall?.(Ke)
                    } catch (it) {
                        console.error(it)
                    }
                }
                ee({
                    smsOutboundCall: nr
                });
                async function mt(Ke) {
                    const it = X({
                        account: "account",
                        currentAgent: "user"
                    })
                        , {task: {previewContent: Ne, attributes: {to: Gt, from: en, engagementId: rn, isTransfer: Tt, isTransferToQueue: vr, queueName: rr}}} = Ke
                        , kr = await (0,
                        G.getCRMInstance)();
                    if (kr?.ringing) {
                        const Yt = {
                            channel: Ke?.task?.taskChannelUniqueName,
                            createTs: Date.now(),
                            engagementId: rn,
                            from: Gt,
                            isConference: Ke?.task?.attributes.isConference || !1,
                            isTransfer: Tt || !1,
                            queueName: rr,
                            to: en
                        };
                        kr.ringing(Yt)
                    }
                    let Re = Gt;
                    if (it.account.value.enableEngagementInformationOnClient && await (0,
                        K.getSystemVariablesByEngagement)(rn),
                    Ne && Object.keys(Ne).length) {
                        const {contacts: Yt=[]} = Ne || {}
                            , gn = Yt[0] || {}
                            , {origNumber: Qe=""} = gn.callerIdInfoBO || {};
                        Re = Qe
                    }
                    if (!Re)
                        return;
                    const Et = Cn.value(rn)
                        , {crmContext: An} = Et;
                    if (!Tt && !vr || (Tt || vr) && An && (An.callerSearch || An.contextSearch))
                        M.monitor.dispatchMonitor({
                            name: "CRM.handleIncomingCall.default",
                            message: An,
                            engagementId: rn,
                            isTransfer: Tt || vr
                        }),
                            jn(rn, An, {
                                incomingPhoneNumber: Re,
                                isTransfer: Tt,
                                isTransferToQueue: vr
                            });
                    else {
                        let Yt;
                        const gn = (0,
                            $.watch)(Et, async Qe => {
                                !Qe.crmContext || Qe.crmContext.done || (Oe({
                                    engagementId: rn,
                                    crmContext: {
                                        ...Qe.crmContext,
                                        done: !0
                                    }
                                }),
                                    jn(rn, Qe.crmContext, {
                                        incomingPhoneNumber: Re,
                                        isTransfer: Tt,
                                        isTransferToQueue: vr
                                    }),
                                    gn(),
                                Yt && clearTimeout(Yt),
                                    M.monitor.dispatchMonitor({
                                        name: "CRM.handleIncomingCall.watchCrmContext",
                                        message: Qe.crmContext,
                                        engagementId: rn,
                                        isTransfer: Tt || vr
                                    }))
                            }
                            , {
                                immediate: !0,
                                deep: !0
                            });
                        Yt = setTimeout( () => {
                                gn(),
                                    jn(rn, An, {
                                        incomingPhoneNumber: Re,
                                        isTransfer: Tt,
                                        isTransferToQueue: vr
                                    }),
                                    Yt = null,
                                    M.monitor.dispatchMonitor({
                                        name: "CRM.handleIncomingCall.setTimer",
                                        message: "watch crmContext timeout",
                                        engagementId: rn,
                                        isTransfer: Tt || vr
                                    })
                            }
                            , 3e3)
                    }
                    (0,
                        V.setPreparationPhaseKey)(rn),
                        pe("handleIncommingCall", 1, Ke)
                }
                async function jn(Ke, it, {incomingPhoneNumber: Ne, isTransfer: Gt, isTransferToQueue: en}) {
                    const rn = await (0,
                        G.getCRMInstance)();
                    if ((Gt || en) && je(it)) {
                        const Tt = await (0,
                            G.getCRMInstance)();
                        Tt?.setEngagementContext && Tt?.setEngagementContext(Ke, it, {
                            channel: M.QUEUE_CHANNEL_TYPE.VOICE,
                            incomingPhoneNumber: Ne,
                            isTransfer: Gt,
                            isTransferToQueue: en
                        })
                    } else
                        rn?.handleIncomingCall && (at.value = Ke,
                            Sn.value = Ne,
                            await rn?.handleIncomingCall({
                                incomingPhoneNumber: Ne,
                                engagementId: Ke
                            }))
                }
                async function ve(Ke) {
                    const {task: {attributes: {to: it, engagementId: Ne}}} = Ke;
                    ze({
                        engagementId: Ne,
                        users: []
                    });
                    const Gt = it;
                    if (!Gt)
                        return;
                    const en = await (0,
                        G.getCRMInstance)();
                    en?.handleIncomingCall && (at.value = Ne,
                        Sn.value = it,
                        await en?.handleIncomingCall({
                            incomingPhoneNumber: Gt,
                            engagementId: Ne,
                            isOutboundPreviewDial: !0
                        })),
                        (0,
                            V.setPreparationPhaseKey)(Ne)
                }
                function or(Ke) {
                    console.warn("handleCallAnswered:", Ke),
                        (0,
                            D.onVoiceAccepted)(Ke.task)
                }
                async function pt(Ke, it) {
                    const {engagementId: Ne, crmOutboundContext: Gt} = it;
                    at.value = Ne,
                        (0,
                            V.setPreparationPhaseKey)(Ne);
                    const en = X("crm", ["getCurrentEngagementMap"]);
                    let {selectedUser: rn} = en.getCurrentEngagementMap.value(Ne) || {};
                    if (rn?.id || (rn = en.getCurrentEngagementMap.value("OUTBOUND_CALL_CRMSTORE")?.selectedUser),
                    rn && rn.id) {
                        ze({
                            engagementId: Ne,
                            users: [rn]
                        }),
                            ze({
                                engagementId: "OUTBOUND_CALL_CRMSTORE",
                                users: []
                            });
                        const Tt = await (0,
                            G.getCRMInstance)();
                        Tt?.screenPopUser && Tt?.screenPopUser(rn)
                    } else {
                        if ((0,
                            V.getCRM)() === F.CRMS.Salesforce && Gt.isZpContactNumber)
                            return;
                        (0,
                            z.fetchCrmUsers)({
                            phone: Ke,
                            engagementId: Ne,
                            channel: M.QUEUE_CHANNEL_TYPE.VOICE,
                            direction: O.EngagementDirections.OUTBOUND,
                            crmOutboundContext: Gt
                        })
                    }
                }
                (0,
                    $.watch)(x, Ke => {
                        Ke && at.value !== Ke.engagementId && (at.value = Ke.engagementId)
                    }
                    , {
                        immediate: !0
                    });
                function je(Ke) {
                    return Ke && (Ke.callerSearch && Ke.callerSearch.length || Ke.contextSearch && Ke.contextSearch.length)
                }
                return {
                    __sfc: !0,
                    ON_PHONE_STATUS: 3,
                    useGetters: X,
                    currentActiveTask: x,
                    currentCall: H,
                    callStatus: q,
                    callState: _e,
                    setCallTranscriptController: ie,
                    setContactsMap: ze,
                    setEngagementCrmContext: Oe,
                    getEngagement: Cn,
                    emit: pe,
                    theEngagementId: at,
                    theTo: Sn,
                    phoneRef: Ce,
                    showAlert: wn,
                    viewTranscript: Ae,
                    smsOutboundCall: nr,
                    handleIncomingCall: mt,
                    performIncomingCall: jn,
                    handleCampaignNextCall: ve,
                    handleCallAccepted: or,
                    handleOutboundCall: pt,
                    shoudPassEngagementContext: je,
                    CallMeOnSwitch: k.switchOnDialpad,
                    inboundCallMeOnTip: k.inboundCallMeOnTip,
                    outboundCallMeOnTip: k.outboundCallMeOnTip,
                    transferByVoicemailOnlyTip: k.transferByVoicemailOnlyTip,
                    Phone: Q.default
                }
            }
        })
    },
    13751: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "B", {
            value: !0
        });
        const Y = a(74061)
            , J = a(74061)
            , $ = a(83266)
            , k = a(76709)
            , P = a(56405)
            , M = a(14457);
        E.A = (0,
            Y.defineComponent)({
            __name: "Header",
            props: {
                contactInfo: {
                    default: () => ({})
                }
            },
            setup(Q) {
                const O = Q
                    , {phoneNumber: F} = P.phoneNumberFilter
                    , {user: D} = (0,
                    k.useAppGetters)()
                    , z = (0,
                    J.computed)( () => {
                        const {channelType: K, customerNumber: te="", crmName: ee, customerName: pe} = O.contactInfo || {}
                            , ne = ee || pe
                            , X = F(te, D.value?.countryOrRegion);
                        return K === "PHONE" || K === "SMS" || K === "WHATSAPP" ? ne || X || "-" : ne || "-"
                    }
                )
                    , G = (0,
                    J.computed)( () => {
                        const {channelType: K} = O.contactInfo || {};
                        return K === "PHONE" ? M.ChannelType.Phone : K === "VIDEO" ? M.ChannelType.Video : K === "SMS" ? M.ChannelType.SMS : M.ChannelType.Message
                    }
                )
                    , V = (0,
                    J.computed)( () => O.contactInfo?.duration ? (0,
                    $.useSafeFormatSecondDurationOver24Hours)(O.contactInfo.duration) : "");
                return {
                    __sfc: !0,
                    phoneNumber: F,
                    props: O,
                    currentAgent: D,
                    displayName: z,
                    channelType: G,
                    duration: V,
                    ChannelHeader: M.ChannelHeader
                }
            }
        })
    }
    ,
    55685: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(O) {
                return O && O.__esModule ? O : {
                    default: O
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(74061)
            , $ = a(83266)
            , k = a(76709)
            , P = a(56405)
            , M = Y(a(95314))
            , Q = Y(a(85146));
        E.default = {
            props: {
                contactInfo: {
                    type: Object,
                    default: () => ({})
                },
                featureOptions: Object
            },
            setup(O) {
                const F = (0,
                    J.ref)(!0)
                    , D = (0,
                    J.ref)(!1)
                    , {rightPanelHistoryTaskData: z, rightPanelHistoryHasRecord: G} = (0,
                    k.useSessionPanelsGetters)()
                    , V = (0,
                    J.computed)( () => z.value ? z.value : {})
                    , K = (0,
                    J.computed)( () => z.value?.channelType)
                    , te = pe => {
                    F.value = pe,
                        D.value = !0
                }
                    , ee = (0,
                    J.computed)( () => ["CHAT", "IN_APP_CHAT", "SMS", "VIDEO", P.CHANNEL_KEYS.instagram.keyUpper, P.CHANNEL_KEYS.teamchat.keyUpper, P.CHANNEL_KEYS.facebook.keyUpper, P.CHANNEL_KEYS.whatsapp.keyUpper, P.CHANNEL_KEYS.email.recentKey].includes(K.value));
                return (0,
                    J.watch)( () => O.contactInfo, () => F.value = !0),
                    {
                        hasChatMessage: F,
                        hasChatMessageInit: D,
                        onHasChatMessage: te,
                        chatContentListVisible: ee,
                        rightPanelHistoryTaskData: V,
                        hasRecords: G
                    }
            },
            components: {
                RecentSessionContent: Q.default,
                RecentSessionHeader: M.default,
                VoiceVideoRecords: $.VoiceVideoRecords,
                ChatHistory: $.ChatHistory
            }
        }
    },
    36310: (pn, E, a) => {
        "use strict";
        Object.defineProperty(E, "B", {
            value: !0
        });
        const Y = a(74061)
            , J = a(83266)
            , $ = a(56405)
            , k = a(35878);
        E.A = (0,
            Y.defineComponent)({
            name: "CRMWorkSession",
            components: {
                WorkSession: J.WorkSession
            },
            methods: {
                async beforeWorkSessionStart() {
                    const P = await (0,
                        k.getCRMInstance)();
                    P && P.setStatus && P.setStatus($.STATUS_MAPPING.NOT_READY)
                }
            }
        })
    }
    ,
    57533: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(Q) {
                return Q && Q.__esModule ? Q : {
                    default: Q
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(74061)
            , $ = a(83266)
            , k = Y(a(42848))
            , P = Y(a(9571))
            , M = Y(a(86485));
        E.default = (0,
            J.defineComponent)({
            __name: "home",
            setup(Q) {
                return (0,
                    $.useInteractionEvtReport)(),
                    {
                        __sfc: !0,
                        Login: k.default,
                        CrmWorkSession: P.default,
                        CallbarCti: M.default
                    }
            }
        })
    },
    47115: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(M) {
                return M && M.__esModule ? M : {
                    default: M
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        }),
            a(31283);
        const J = a(15177)
            , $ = a(93044)
            , k = Y(a(23369))
            , P = Y(a(47276));
        E.default = {
            props: {
                enableNativeVideo: {
                    type: Boolean,
                    default: !1
                },
                isVideoShowed: {
                    type: Boolean,
                    default: !0
                },
                featureOptions: {
                    type: Object,
                    default: () => ({})
                }
            },
            setup(M) {
                console.log("use LiveVideoV3");
                const {isBargeLikeVideo: Q, showTransfer: O, showRelease: F, showBargeEndDialog: D, videoEndAlert: z, bargeEndLoading: G, surveyData: V, currentEngagement: K, engagementId: te, isDropInVideo: ee, superVisorNames: pe, taskSid: ne, enableWarmTransfer: X, enableForcedQueueSelection: x, hasSubBroadcast: H, handleTransfer: q, handleRelease: _e, handleBargeEnd: ie, closeBargeEndDialog: ze, handleDropInLeave: Oe, showInviteDialog: Cn, video: at} = (0,
                    J.useWebLiveVideo)(M);
                return {
                    ding: k.default,
                    isBargeLikeVideo: Q,
                    showTransfer: O,
                    showRelease: F,
                    showBargeEndDialog: D,
                    videoEndAlert: z,
                    bargeEndLoading: G,
                    surveyData: V,
                    currentEngagement: K,
                    engagementId: te,
                    isDropInVideo: ee,
                    superVisorNames: pe,
                    taskSid: ne,
                    enableWarmTransfer: X,
                    enableForcedQueueSelection: x,
                    hasSubBroadcast: H,
                    handleTransfer: q,
                    handleRelease: _e,
                    handleBargeEnd: ie,
                    closeBargeEndDialog: ze,
                    handleDropInLeave: Oe,
                    showInviteDialog: Cn,
                    video: at
                }
            },
            components: {
                Transfer: $.Transfer,
                ReleaseDialog: $.ReleaseDialog,
                VideoHead: $.VideoHead,
                Dialog: P.default,
                InviteDialog: $.InviteDialog
            }
        }
    },
    49621: function(pn, E, a) {
        "use strict";
        var Y = this && this.__importDefault || function(M) {
                return M && M.__esModule ? M : {
                    default: M
                }
            }
        ;
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        const J = a(74061)
            , $ = a(83266)
            , k = Y(a(77803))
            , P = Y(a(67903));
        E.default = (0,
            J.defineComponent)({
            __name: "MergeWindow",
            setup(M) {
                const {handleMergeWindow: Q} = (0,
                    $.usePopOut)()
                    , {hasOngoingVideoTask: O} = (0,
                    $.useStatus)();
                return {
                    __sfc: !0,
                    handleMergeWindow: Q,
                    hasOngoingVideoTask: O,
                    popInIcon: k.default,
                    Logo: P.default
                }
            }
        })
    },
    80308: (pn, E, a) => {
        "use strict";
        a.d(E, {
            X: () => $,
            Y: () => k
        });
        var Y = a(27598)
            , J = a.n(Y)
            , $ = function() {
            var M = this
                , Q = M._self._c
                , O = M._self._setupProxy;
            return Q("div", {
                staticClass: "inbox-base",
                class: {
                    "hide-title": O.isShowAssignVM
                }
            }, [Q("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !O.isShowAssignVM,
                    expression: "!isShowAssignVM"
                }],
                staticClass: "inbox-main"
            }, [Q("div", {
                staticClass: "inbox-base__filter"
            }, [O.showHeader ? Q(O.InboxHeader, {
                attrs: {
                    "enable-badge": "",
                    "enable-level": "",
                    type: O.tabType,
                    "notification-counts": O.notificationCounts
                },
                on: {
                    change: O.onActiveTabChange
                },
                model: {
                    value: O.activeTab,
                    callback: function(D) {
                        O.activeTab = D
                    },
                    expression: "activeTab"
                }
            }, [M._t("title")], 2) : M._e(), M._v(" "), Q("div", {
                staticClass: "inbox-base__filter-simple"
            }, [Q("zm-input", {
                staticClass: "filter-item",
                attrs: {
                    placeholder: O.t("cci.inbox.search_by_from_inbox_queue_flow"),
                    "aria-label": O.t("cci.inbox.search_by_from_inbox_queue_flow"),
                    maxlength: 128,
                    "prefix-icon": "zm-icon-search",
                    type: "text",
                    clearable: ""
                },
                on: {
                    input: O.onInputSearch
                },
                model: {
                    value: O.search.keyword,
                    callback: function(D) {
                        M.$set(O.search, "keyword", D)
                    },
                    expression: "search.keyword"
                }
            }), M._v(" "), Q("div", {
                staticClass: "inbox-base__filter-simple-actions"
            }, [Q("zm-button", {
                attrs: {
                    type: "link",
                    size: "mini"
                },
                on: {
                    click: O.displayFilterDialog
                }
            }, [M._v(`
            ` + M._s(M.$t("cci.engagement.closedTab.button.filter")) + `
          `)]), M._v(" "), Q("zm-button", {
                staticClass: "inbox-clear-button",
                attrs: {
                    ghost: "",
                    size: "mini"
                },
                on: {
                    click: O.handleClearButtonClick
                }
            }, [M._v(`
            ` + M._s(M.$t("cci.common.button.clear")) + `
          `)])], 1)], 1)], 1), M._v(" "), Q("zm-row", {
                staticClass: "inbox-base__table-wrapper"
            }, [Q("zm-row", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: O.bulkOperations.length && O.selected.length,
                    expression: "bulkOperations.length && selected.length"
                }],
                attrs: {
                    justify: "space-between",
                    type: "flex"
                }
            }, [Q("zm-col", {
                staticStyle: {
                    "text-align": "left"
                },
                attrs: {
                    span: 24
                }
            }, [Q(O.BulkOperation, {
                attrs: {
                    "selected-rows-length": O.selected.length,
                    buttons: O.bulkOperations,
                    size: "mini"
                },
                on: {
                    click: O.onClickBulkOperation
                }
            })], 1)], 1), M._v(" "), O.loading ? Q(O.InboxSkeleton, {
                staticClass: "inbox-base__skeleton"
            }) : [O.inboxList.length ? Q("zm-collapse", {
                attrs: {
                    accordion: ""
                }
            }, M._l(O.inboxList, function(F) {
                var D, z;
                return Q("zm-collapse-item", {
                    key: F.contentId
                }, [Q("template", {
                    slot: "title"
                }, [Q(O.InboxCollapseTitle, {
                    attrs: {
                        "inbox-data": F,
                        "country-or-region": (D = O.currentAgent) === null || D === void 0 ? void 0 : D.countryOrRegion,
                        "pii-settings": O.piiSettings,
                        tz: O.tz,
                        "rec-access-limit-for-op-user": O.recAccessLimitForOpUser,
                        permissions: O.permissions,
                        "current-row": O.currentRow,
                        "preview-loading": O.previewLoading,
                        "show-selection-col": O.showSelectionCol,
                        "is-new": O.isNew(F),
                        checked: J()(z = O.selected).call(z, function(G) {
                            return G.contentId === F.contentId
                        }) !== -1
                    },
                    on: {
                        "inbox:showPreview": O.showPreview,
                        "inbox:selectedUpdate": O.handleSelectionChange
                    }
                })], 1), M._v(" "), Q(O.InboxCollapseDetail, {
                    attrs: {
                        "inbox-data": F
                    },
                    on: {
                        "inbox:command": O.handleCommand
                    }
                })], 2)
            }), 1) : Q(O.Empty)], M._v(" "), O.pagination.total > 0 ? Q("zm-pagination", {
                staticClass: "mg-t-16",
                attrs: {
                    small: "",
                    total: O.pagination.total,
                    "page-sizes": [15, 50, 100],
                    "current-page": O.pagination.page,
                    "page-size": O.pagination.size,
                    "pager-count": 5,
                    layout: "prev, pager, next"
                },
                on: {
                    "size-change": O.onSizeChange,
                    "current-change": O.onCurrentChange
                }
            }) : M._e()], 2), M._v(" "), Q(O.PreviewVoicemail, {
                ref: "previewRef",
                attrs: {
                    visible: O.isShowPreview,
                    "soft-deleted": O.softDeleted,
                    "enable-transcript": O.enableTranscript,
                    "enable-resolve": O.enableResolveInPreview,
                    "has-download-recording-permission": O.enableMultiDownload,
                    "has-download-transcript-permission": O.hasDownloadTranscriptPermission,
                    "transcript-status": O.currentRow && O.currentRow.voicemailTranscriptStatus,
                    "updating-v-m-read-status": O.updatingVMReadStatus,
                    "phone-number": O.currentRow && O.currentRowE164Number
                },
                on: {
                    "update:visible": function(D) {
                        O.isShowPreview = D
                    },
                    onDialogDownload: O.onDialogDownload,
                    read: O.onReadVoiceMail,
                    resolve: O.onResolveVoicemail,
                    update: O.updateCurrentRow
                }
            }), M._v(" "), O.softDeleted === 0 ? Q(O.ConfirmDialog, {
                ref: "confirmDialog",
                attrs: {
                    width: "80%",
                    title: O.t("btn.downloadAll"),
                    "submit-text": O.t("cci.common.button.download"),
                    "storage-key": O.HIDE_DOWNLOAD_ALL,
                    "label-for-ax": {
                        saveAriaLabel: O.t("cci.common.button.download"),
                        cancelAriaLabel: O.t("cci.common.button.cancel")
                    }
                },
                on: {
                    save: O.onConfirm
                }
            }, [Q("p", [M._v(M._s(O.t("cci.inbox.dialog.download.all.desc")))])]) : M._e(), M._v(" "), Q(O.ReopenDialog, {
                attrs: {
                    visible: O.reopenDialogVisible,
                    "inbox-id": O.currentRow ? O.currentRow.inboxId : "",
                    "voice-mail-id": O.currentRow ? O.currentRow.contentId : "",
                    width: "80%"
                },
                on: {
                    "update:visible": function(D) {
                        O.reopenDialogVisible = D
                    },
                    "reopen:submit": O.onReopen
                }
            }), M._v(" "), Q(O.CrmFilterDialog, {
                attrs: {
                    visible: O.filterDialogVisible,
                    "active-tab": O.activeTab,
                    "soft-deleted": O.softDeleted,
                    keyword: O.search.keyword,
                    "should-clear-when-open": O.shouldClearFilter
                },
                on: {
                    "update:visible": function(D) {
                        O.filterDialogVisible = D
                    },
                    "inbox-filter:change": O.handleFilterChange,
                    "inbox-filter:reset": O.handleFilterDialogReset
                }
            })], 1), M._v(" "), Q("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: O.isShowAssignVM,
                    expression: "isShowAssignVM"
                }],
                staticClass: "inbox-subPage-assign"
            }, [Q(O.AssignVoicemail, {
                attrs: {
                    visible: O.isShowAssignVM,
                    "voicemail-ids": O.assignTargetVM,
                    "inbox-id": O.assignTargetInbox,
                    "enable-teams-feature": O.permissions.enableTeamsFeature,
                    "assigned-user": O.assignedUser
                },
                on: {
                    "update:visible": function(D) {
                        O.isShowAssignVM = D
                    },
                    assignTo: O.onAssignTo,
                    closeAssign: O.handleCloseAssignPage
                }
            })], 1)])
        }
            , k = []
    }
    ,
    97880: (pn, E, a) => {
        "use strict";
        a.d(E, {
            X: () => O,
            Y: () => F
        });
        var Y = a(40433)
            , J = a(14950)
            , $ = a.n(J)
            , k = a(59814)
            , P = a.n(k)
            , M = a(74732)
            , Q = a.n(M)
            , O = function() {
            var z = this
                , G = z._self._c
                , V = z._self._setupProxy;
            return G("div", {
                staticClass: "cb-agent-status"
            }, [G("zm-dropdown", {
                ref: "dropdown",
                attrs: {
                    trigger: "click",
                    "hide-on-click": !1
                },
                on: {
                    command: V._handleCommand,
                    "visible-change": V.updateStatusVisible
                }
            }, [G("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: V.statusLoading,
                    expression: "statusLoading"
                }]
            }, [G("div", {
                staticClass: "zm-dropdown-wrapper"
            }, [G("div", {
                staticClass: "zm-dropdown-link"
            }, [G("div", {
                staticClass: "left-sec"
            }, [G("span", {
                staticClass: "cus-badge",
                class: V.calcStatusIcon
            }), G("span", {
                staticClass: "statusName",
                on: {
                    mouseover: function(te) {
                        return V.handleElementMouseOver(te, V.calcStatusName)
                    },
                    mouseleave: V.handleElementMouseLeave
                }
            }, [z._v(z._s(V.calcStatusName))])]), z._v(" "), G("i", {
                staticClass: "zm-icon-down zm-icon--right"
            })]), z._v(" "), G("div", {
                staticClass: "status-timer"
            }, [G("div", {
                staticClass: "status-timer__text",
                on: {
                    mouseover: function(te) {
                        return V.handleElementMouseOver(te, z.statusDuration)
                    },
                    mouseleave: V.handleElementMouseLeave
                }
            }, [z._v(`
            ` + z._s(z.statusDuration) + `
          `)])])])]), z._v(" "), G("zm-dropdown-menu", {
                staticClass: "status-menu",
                staticStyle: {
                    width: "240px"
                },
                attrs: {
                    slot: "dropdown"
                },
                nativeOn: {
                    keydown: [function(K) {
                        var te;
                        return !$()(te = K.type).call(te, "key") && z._k(K.keyCode, "right", 39, K.key, ["Right", "ArrowRight"]) || "button"in K && K.button !== 2 ? null : V.handleArrowRightKey.apply(null, arguments)
                    }
                        , function(K) {
                            var te;
                            return !$()(te = K.type).call(te, "key") && z._k(K.keyCode, "left", 37, K.key, ["Left", "ArrowLeft"]) || "button"in K && K.button !== 0 ? null : V.handleArrowLeftKey.apply(null, arguments)
                        }
                        , function(K) {
                            var te;
                            return !$()(te = K.type).call(te, "key") && z._k(K.keyCode, "down", 40, K.key, ["Down", "ArrowDown"]) ? null : V.handleArrowUpDownKey.apply(null, arguments)
                        }
                        , function(K) {
                            var te;
                            return !$()(te = K.type).call(te, "key") && z._k(K.keyCode, "up", 38, K.key, ["Up", "ArrowUp"]) ? null : V.handleArrowUpDownKey.apply(null, arguments)
                        }
                        , function(K) {
                            var te;
                            return !$()(te = K.type).call(te, "key") && z._k(K.keyCode, "enter", 13, K.key, "Enter") ? null : V.showCantEndToolTip.apply(null, arguments)
                        }
                        , function(K) {
                            var te;
                            return !$()(te = K.type).call(te, "key") && z._k(K.keyCode, "space", 32, K.key, [" ", "Spacebar"]) ? null : V.showCantEndToolTip.apply(null, arguments)
                        }
                    ]
                },
                slot: "dropdown"
            }, [z._l(V.defaultStatus, function(K) {
                var te, ee, pe, ne, X, x;
                return G("zm-dropdown-item", {
                    key: K.id,
                    attrs: {
                        command: {
                            id: K.id,
                            abort: !!(V.enableSubReason && K.subReasons && P()(te = K.subReasons).call(te, function(H) {
                                return H.selected
                            }).length)
                        },
                        disabled: V.isStatusDisabled(K.id)
                    }
                }, [G("zm-row", {
                    staticClass: "cus-badge-container"
                }, [G("div", [G("span", {
                    staticClass: "cus-badge",
                    class: K.icon
                }), z._v(" "), G("span", {
                    class: ["cus-badge__name", V.enableSubReason && K.subReasons && P()(ee = K.subReasons).call(ee, function(H) {
                        return H.selected
                    }).length || V.calcSubStatusName(K.subReasons) ? "" : "cus-badge__name--longer", V.isStatusDisabled(K.id) ? "isStatusDisabled" : ""],
                    on: {
                        mouseover: function(q) {
                            return V.handleElementMouseOver(q, K.name)
                        },
                        mouseleave: V.handleElementMouseLeave
                    }
                }, [z._v(z._s(K.name))]), z._v(" "), V.isStatusDisabled(K.id) ? G("zm-tooltip", {
                    attrs: {
                        content: V.calcSubStatusDisableText(K.id),
                        placement: "top-start"
                    }
                }, [G(Y.A, {
                    staticStyle: {
                        "margin-left": "8px",
                        width: "16px",
                        height: "16px"
                    }
                })], 1) : z._e()], 1), z._v(" "), K.subReasons && Q()(pe = K.subReasons).call(pe, function(H) {
                    return H.id === V.currentStatusId
                }) ? G("span", {
                    staticClass: "cus-badge__status"
                }, [z._v(z._s(V.calcSubStatusName(K.subReasons)))]) : z._e(), z._v(" "), V.enableSubReason && K.subReasons && P()(ne = K.subReasons).call(ne, function(H) {
                    return H.selected
                }).length ? G("i", {
                    staticClass: "zm-icon-right cus-badge__arrow"
                }) : z._e(), z._v(" "), V.enableSubReason && K.subReasons && P()(X = K.subReasons).call(X, function(H) {
                    return H.selected
                }).length ? G("span", {
                    staticClass: "hidden"
                }, [z._v(", " + z._s(z.$t("cci.common.submenu")))]) : z._e(), z._v(" "), V.enableSubReason && K.subReasons && P()(x = K.subReasons).call(x, function(H) {
                    return H.selected
                }).length ? G("div", {
                    class: ["status-cascade", {
                        "status-disabled": V.isStatusDisabled(K.id)
                    }],
                    on: {
                        mouseenter: V.handleMouse,
                        mouseleave: V.handleMouseLeave
                    }
                }, [G("ul", {
                    staticClass: "status-cascade-menu",
                    attrs: {
                        role: "menu"
                    }
                }, z._l(V.formatSubReasons(K.subReasons), function(H) {
                    return G("zm-dropdown-item", {
                        key: H.id,
                        staticClass: "zm-dropdown-menu__item status-cascade-menu__item",
                        class: {
                            "status-cascade-menu__item__active": V.currentStatusId === H.id
                        },
                        attrs: {
                            disabled: V.subItemDisabled && !V.itemHovering,
                            role: "menuitem",
                            command: {
                                id: H.id,
                                parentId: K.id
                            }
                        }
                    }, [G(V.Check, {
                        style: {
                            visibility: V.currentStatusId === H.id ? "visible" : "hidden",
                            marginRight: "4px"
                        }
                    }), z._v(" "), G("span", {
                        on: {
                            mouseover: function(_e) {
                                return V.handleElementMouseOver(_e, H.name)
                            },
                            mouseleave: V.handleElementMouseLeave
                        }
                    }, [z._v(z._s(H.name))])], 1)
                }), 1)]) : z._e()])], 1)
            }), z._v(" "), V.customStatus && V.customStatus.length ? G("div", {
                staticClass: "status-menu__custom-wrapper"
            }, z._l(V.customStatus, function(K) {
                return G("zm-dropdown-item", {
                    key: K.id,
                    attrs: {
                        command: {
                            id: K.id
                        }
                    }
                }, [G("zm-row", {
                    staticClass: "cus-badge-container"
                }, [G("div", [G("span", {
                    staticClass: "cus-badge",
                    class: K.icon
                }), z._v(" "), G("span", {
                    staticClass: "cus-badge__name cus-badge__name--longer",
                    on: {
                        mouseover: function(ee) {
                            return V.handleElementMouseOver(ee, K.name)
                        },
                        mouseleave: V.handleElementMouseLeave
                    }
                }, [z._v(z._s(K.name))])])])], 1)
            }), 1) : z._e(), z._v(" "), V.queueList.length && V.enableOptOut ? [G("div", {
                staticClass: "divider"
            }), z._v(" "), G(V.StatusQueueComponent, {
                ref: "StatusQueue",
                attrs: {
                    "queue-list": V.queueList,
                    "enable-opt-out": V.enableOptOut,
                    "queue-focused": V.queueFocused
                },
                on: {
                    beforeQueueChange: V.beforeQueueChange
                }
            })] : z._e(), z._v(" "), V.needShowEndSession ? G("div", {
                staticClass: "end-session-wrap"
            }, [G("div", {
                staticClass: "divider"
            }), z._v(" "), V.isWorkSessionBusy ? G("zm-tooltip", {
                ref: "end-session-tooltip",
                attrs: {
                    content: z.$t("cci.client.worksession.tips.cannot.end"),
                    placement: "top-start"
                }
            }, [G("zm-dropdown-item", {
                staticClass: "disabled-end-work",
                attrs: {
                    command: {
                        isEndSession: !0,
                        disabled: !0
                    }
                }
            }, [G("zm-button", {
                staticClass: "cus-gray",
                staticStyle: {
                    width: "100%"
                },
                attrs: {
                    type: "primary",
                    "aria-label": z.$t("cci.client.worksession.action.end")
                }
            }, [z._v(z._s(z.$t("cci.client.worksession.action.end")))])], 1)], 1) : G("zm-dropdown-item", {
                attrs: {
                    command: {
                        isEndSession: !0
                    }
                }
            }, [G("zm-button", {
                staticStyle: {
                    width: "100%"
                },
                attrs: {
                    type: "primary",
                    "aria-label": z.$t("cci.client.worksession.action.end"),
                    loading: V.workSession.loading
                }
            }, [z._v(z._s(z.$t("cci.client.worksession.action.end")))])], 1)], 1) : z._e()], 2)], 1), z._v(" "), G(V.OptOutReasonDialog, {
                attrs: {
                    visible: V.reasonVisible,
                    "queue-info": V.queueInfo,
                    save: V.handleSave,
                    close: V.handleClose
                }
            })], 1)
        }
            , F = []
    }
    ,
    89048: (pn, E, a) => {
        "use strict";
        a.d(E, {
            X: () => P,
            Y: () => M
        });
        var Y = a(14950)
            , J = a.n(Y)
            , $ = a(74732)
            , k = a.n($)
            , P = function() {
            var O = this
                , F = O._self._c
                , D = O._self._setupProxy;
            return F("div", {
                staticClass: "cb-agent-status global-status-schedule"
            }, [F("zm-dropdown", {
                ref: "dropdown",
                attrs: {
                    trigger: "click",
                    "hide-on-click": !1
                },
                on: {
                    command: D._handleCommand,
                    "visible-change": D.updateStatusVisible
                }
            }, [F("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: D.statusLoading,
                    expression: "statusLoading"
                }]
            }, [F("div", {
                staticClass: "zm-dropdown-wrapper"
            }, [F("div", {
                staticClass: "zm-dropdown-link"
            }, [F("div", {
                staticClass: "left-sec"
            }, [F("span", {
                staticClass: "cus-badge",
                class: D.calcStatusIcon
            }), F("span", {
                staticClass: "statusName",
                on: {
                    mouseover: function(G) {
                        return D.handleElementMouseOver(G, D.calcStatusName)
                    },
                    mouseleave: D.handleElementMouseLeave
                }
            }, [O._v(O._s(D.calcStatusName))])]), O._v(" "), F("i", {
                staticClass: "zm-icon-down zm-icon--right"
            })]), O._v(" "), F("div", {
                staticClass: "status-timer"
            }, [F("div", {
                staticClass: "status-timer__text",
                on: {
                    mouseover: function(G) {
                        return D.handleElementMouseOver(G, O.statusDuration)
                    },
                    mouseleave: D.handleElementMouseLeave
                }
            }, [O._v(`
            ` + O._s(O.statusDuration) + `
          `)])])])]), O._v(" "), F("zm-dropdown-menu", {
                staticClass: "status-menu",
                staticStyle: {
                    width: "240px"
                },
                attrs: {
                    slot: "dropdown"
                },
                nativeOn: {
                    keydown: [function(z) {
                        var G;
                        return !J()(G = z.type).call(G, "key") && O._k(z.keyCode, "right", 39, z.key, ["Right", "ArrowRight"]) || "button"in z && z.button !== 2 ? null : D.handleArrowRightKey.apply(null, arguments)
                    }
                        , function(z) {
                            var G;
                            return !J()(G = z.type).call(G, "key") && O._k(z.keyCode, "left", 37, z.key, ["Left", "ArrowLeft"]) || "button"in z && z.button !== 0 ? null : D.handleArrowLeftKey.apply(null, arguments)
                        }
                        , function(z) {
                            var G;
                            return !J()(G = z.type).call(G, "key") && O._k(z.keyCode, "down", 40, z.key, ["Down", "ArrowDown"]) ? null : D.handleArrowUpDownKey.apply(null, arguments)
                        }
                        , function(z) {
                            var G;
                            return !J()(G = z.type).call(G, "key") && O._k(z.keyCode, "up", 38, z.key, ["Up", "ArrowUp"]) ? null : D.handleArrowUpDownKey.apply(null, arguments)
                        }
                        , function(z) {
                            var G;
                            return !J()(G = z.type).call(G, "key") && O._k(z.keyCode, "enter", 13, z.key, "Enter") ? null : D.showCantEndToolTip.apply(null, arguments)
                        }
                        , function(z) {
                            var G;
                            return !J()(G = z.type).call(G, "key") && O._k(z.keyCode, "space", 32, z.key, [" ", "Spacebar"]) ? null : D.showCantEndToolTip.apply(null, arguments)
                        }
                    ]
                },
                slot: "dropdown"
            }, [F("p", {
                staticClass: "global-status-schedule__header"
            }, [O._v(`
        ` + O._s(D.canSetStatusSchedule ? O.$t("cci.client.scheduleNextStatus") : O.$t("cci.mobile.navbar.STATUS")) + `
      `)]), O._v(" "), O._l(D.formatStatusList, function(z) {
                var G;
                return F("zm-dropdown-item", {
                    key: z.id,
                    attrs: {
                        command: {
                            id: z.id,
                            abort: z.subStatusHasSelected
                        }
                    }
                }, [F("zm-row", {
                    staticClass: "cus-badge-container"
                }, [F("div", [D.canSetStatusSchedule ? F(D.Check, {
                    style: {
                        visibility: z.id === D.scheduleStatusId || z.subReasons && D.statusScheduleSubName ? "visible" : "hidden",
                        marginRight: "4px"
                    }
                }) : O._e(), O._v(" "), F("span", {
                    staticClass: "cus-badge",
                    class: z.icon
                }), O._v(" "), F("span", {
                    class: ["cus-badge__name", z.subStatusHasSelected || D.calcSubStatusName(z.subReasons) ? "" : "cus-badge__name--longer"],
                    on: {
                        mouseover: function(K) {
                            return D.handleElementMouseOver(K, z.name)
                        },
                        mouseleave: D.handleElementMouseLeave
                    }
                }, [O._v(O._s(z.name))])], 1), O._v(" "), z.subReasons && k()(G = z.subReasons).call(G, function(V) {
                    return V.id === D.currentStatusId
                }) ? F("span", {
                    staticClass: "cus-badge__status"
                }, [O._v(O._s(D.calcSubStatusName(z.subReasons)))]) : O._e(), O._v(" "), D.canSetStatusSchedule && z.subReasons && D.statusScheduleSubName ? F("span", {
                    staticClass: "cus-badge__status"
                }, [O._v(`
            ` + O._s(D.statusScheduleSubName) + `
          `)]) : O._e(), O._v(" "), z.subStatusHasSelected ? F("i", {
                    staticClass: "zm-icon-right cus-badge__arrow"
                }) : O._e(), O._v(" "), z.subStatusHasSelected ? F("span", {
                    staticClass: "hidden"
                }, [O._v(", " + O._s(O.$t("cci.common.submenu")))]) : O._e(), O._v(" "), z.subStatusHasSelected ? F("div", {
                    class: ["status-cascade"],
                    on: {
                        mouseenter: D.handleMouse,
                        mouseleave: D.handleMouseLeave
                    }
                }, [F("ul", {
                    staticClass: "status-cascade-menu",
                    attrs: {
                        role: "menu"
                    }
                }, O._l(D.formatSubReasons(z.subReasons), function(V) {
                    return F("zm-dropdown-item", {
                        key: V.id,
                        staticClass: "zm-dropdown-menu__item status-cascade-menu__item",
                        class: {
                            "status-cascade-menu__item__active": D.currentStatusId === V.id
                        },
                        attrs: {
                            disabled: D.subItemDisabled && !D.itemHovering,
                            role: "menuitem",
                            command: {
                                id: V.id,
                                parentId: z.id
                            }
                        }
                    }, [F(D.Check, {
                        style: {
                            visibility: D.currentStatusId === V.id || V.scheduleSelected ? "visible" : "hidden",
                            marginRight: "4px"
                        }
                    }), O._v(" "), F("span", {
                        on: {
                            mouseover: function(te) {
                                return D.handleElementMouseOver(te, V.name)
                            },
                            mouseleave: D.handleElementMouseLeave
                        }
                    }, [O._v(O._s(V.name))])], 1)
                }), 1)]) : O._e()])], 1)
            }), O._v(" "), D.queueList.length && D.enableOptOut ? [F("div", {
                staticClass: "divider"
            }), O._v(" "), F(D.StatusQueueComponent, {
                ref: "StatusQueue",
                attrs: {
                    "queue-list": D.queueList,
                    "enable-opt-out": D.enableOptOut,
                    "queue-focused": D.queueFocused
                },
                on: {
                    beforeQueueChange: D.beforeQueueChange
                }
            })] : O._e(), O._v(" "), D.needShowEndSession ? F("div", {
                staticClass: "end-session-wrap"
            }, [F("div", {
                staticClass: "divider"
            }), O._v(" "), D.isWorkSessionBusy ? F("zm-tooltip", {
                ref: "end-session-tooltip",
                attrs: {
                    content: O.$t("cci.client.worksession.tips.cannot.end"),
                    placement: "top-start"
                }
            }, [F("zm-dropdown-item", {
                staticClass: "disabled-end-work",
                attrs: {
                    command: {
                        isEndSession: !0,
                        disabled: !0
                    }
                }
            }, [F("zm-button", {
                staticClass: "cus-gray",
                staticStyle: {
                    width: "100%"
                },
                attrs: {
                    type: "primary",
                    "aria-label": O.$t("cci.client.worksession.action.end")
                }
            }, [O._v(O._s(O.$t("cci.client.worksession.action.end")))])], 1)], 1) : F("zm-dropdown-item", {
                attrs: {
                    command: {
                        isEndSession: !0
                    }
                }
            }, [F("zm-button", {
                staticStyle: {
                    width: "100%"
                },
                attrs: {
                    type: "primary",
                    "aria-label": O.$t("cci.client.worksession.action.end"),
                    loading: D.workSession.loading
                }
            }, [O._v(O._s(O.$t("cci.client.worksession.action.end")))])], 1)], 1) : O._e()], 2)], 1), O._v(" "), F(D.OptOutReasonDialog, {
                attrs: {
                    visible: D.reasonVisible,
                    "queue-info": D.queueInfo,
                    save: D.handleSave,
                    close: D.handleClose
                }
            })], 1)
        }
            , M = []
    }
    ,
    48991: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => k
            });
        var Y = a(58930)
            , J = a.n(Y)
            , $ = {};
        for (const P in Y)
            P !== "default" && ($[P] = () => Y[P]);
        a.d(E, $);
        const k = J()
    }
    ,
    12853: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => k
            });
        var Y = a(60772)
            , J = a.n(Y)
            , $ = {};
        for (const P in Y)
            P !== "default" && ($[P] = () => Y[P]);
        a.d(E, $);
        const k = J()
    }
    ,
    12554: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => k
            });
        var Y = a(79109)
            , J = a.n(Y)
            , $ = {};
        for (const P in Y)
            P !== "default" && ($[P] = () => Y[P]);
        a.d(E, $);
        const k = J()
    }
    ,
    24398: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => k
            });
        var Y = a(20079)
            , J = a.n(Y)
            , $ = {};
        for (const P in Y)
            P !== "default" && ($[P] = () => Y[P]);
        a.d(E, $);
        const k = J()
    }
    ,
    2820: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => k
            });
        var Y = a(30859)
            , J = a.n(Y)
            , $ = {};
        for (const P in Y)
            P !== "default" && ($[P] = () => Y[P]);
        a.d(E, $);
        const k = J()
    }
    ,
    50659: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => k
            });
        var Y = a(93932)
            , J = a.n(Y)
            , $ = {};
        for (const P in Y)
            P !== "default" && ($[P] = () => Y[P]);
        a.d(E, $);
        const k = J()
    }
    ,
    71196: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => k
            });
        var Y = a(555)
            , J = a.n(Y)
            , $ = {};
        for (const P in Y)
            P !== "default" && ($[P] = () => Y[P]);
        a.d(E, $);
        const k = J()
    }
    ,
    48080: (pn, E, a) => {
        "use strict";
        a.d(E, {
            A: () => O
        });
        var Y = function() {
            var D = this
                , z = D._self._c;
            return D.refreshedInLoading ? D._e() : z("router-view")
        }
            , J = []
            , $ = a(20125);
        const P = {
            data: function() {
                return {
                    refreshedInLoading: !1
                }
            },
            beforeMount: function() {
                $.ctiBus.$on("refreshedInLoadingProgress", this.refreshedInLoadingProgress)
            },
            beforeDestroy: function() {
                $.ctiBus.$off("refreshedInLoadingProgress", this.refreshedInLoadingProgress)
            },
            methods: {
                refreshedInLoadingProgress: function() {
                    var D = this;
                    this.refreshedInLoading = !0,
                        this.$nextTick(function() {
                            D.refreshedInLoading = !1
                        })
                }
            }
        };
        var M = a(50855)
            , Q = (0,
            M.A)(P, Y, J, !1, null, null, null);
        const O = Q.exports
    }
    ,
    62940: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => zt
            });
        var Y = function() {
            var Lt = this
                , gr = Lt._self._c;
            return gr("CurrentSession", Lt._g(Lt._b({
                ref: "session",
                attrs: {
                    disposition: Lt.disposition
                },
                on: {
                    dispositionChange: Lt.handleDisposition
                },
                scopedSlots: Lt._u([{
                    key: "form-append",
                    fn: function() {
                        var U;
                        return [gr("zm-form-item", {
                            attrs: {
                                label: Lt.$t("cci.engagement.name.currentSession.relateTo"),
                                tabindex: "-1"
                            }
                        }, [Lt._v(Lt._s((U = Lt.interactionInfo) === null || U === void 0 || (U = U.interaction) === null || U === void 0 ? void 0 : U.interactionIMS))])]
                    },
                    proxy: !0
                }])
            }, "CurrentSession", Lt.$attrs, !1), Lt.$listeners))
        }
            , J = []
            , $ = a(12608)
            , k = a.n($)
            , P = a(37082)
            , M = a.n(P)
            , Q = a(83537)
            , O = a.n(Q)
            , F = a(61849)
            , D = a.n(F)
            , z = a(83030)
            , G = a.n(z)
            , V = a(65888)
            , K = a.n(V)
            , te = a(34187)
            , ee = a.n(te)
            , pe = a(44987)
            , ne = a.n(pe)
            , X = a(73007)
            , x = a.n(X)
            , H = a(23716)
            , q = a.n(H)
            , _e = a(2208)
            , ie = a.n(_e)
            , ze = a(39084)
            , Oe = a.n(ze)
            , Cn = a(81352)
            , at = a.n(Cn)
            , Sn = a(84653)
            , Ce = a.n(Sn)
            , wn = a(59814)
            , Ae = a.n(wn)
            , nr = a(89099)
            , mt = a.n(nr)
            , jn = a(34622)
            , ve = a.n(jn)
            , or = a(27785)
            , pt = a.n(or)
            , je = a(5339)
            , Ke = a.n(je)
            , it = a(53578)
            , Ne = a(8880)
            , Gt = a(35878);
        function en(Zt) {
            "@babel/helpers - typeof";
            return en = typeof G() == "function" && typeof Ke() == "symbol" ? function(Lt) {
                    return typeof Lt
                }
                : function(Lt) {
                    return Lt && typeof G() == "function" && Lt.constructor === G() && Lt !== G().prototype ? "symbol" : typeof Lt
                }
                ,
                en(Zt)
        }
        function rn(Zt, Lt) {
            var gr = at()(Zt);
            if (Ce()) {
                var Mn = Ce()(Zt);
                Lt && (Mn = Ae()(Mn).call(Mn, function(U) {
                    return mt()(Zt, U).enumerable
                })),
                    gr.push.apply(gr, Mn)
            }
            return gr
        }
        function Tt(Zt) {
            for (var Lt = 1; Lt < arguments.length; Lt++) {
                var gr, Mn, U = arguments[Lt] != null ? arguments[Lt] : {};
                Lt % 2 ? ne()(gr = rn(Object(U), !0)).call(gr, function(Mt) {
                    vr(Zt, Mt, U[Mt])
                }) : ve() ? pt()(Zt, ve()(U)) : ne()(Mn = rn(Object(U))).call(Mn, function(Mt) {
                    D()(Zt, Mt, mt()(U, Mt))
                })
            }
            return Zt
        }
        function vr(Zt, Lt, gr) {
            return (Lt = rr(Lt))in Zt ? D()(Zt, Lt, {
                value: gr,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : Zt[Lt] = gr,
                Zt
        }
        function rr(Zt) {
            var Lt = kr(Zt, "string");
            return en(Lt) == "symbol" ? Lt : Lt + ""
        }
        function kr(Zt, Lt) {
            if (en(Zt) != "object" || !Zt)
                return Zt;
            var gr = Zt[Oe()];
            if (gr !== void 0) {
                var Mn = gr.call(Zt, Lt || "default");
                if (en(Mn) != "object")
                    return Mn;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (Lt === "string" ? String : Number)(Zt)
        }
        function Re() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Re = function() {
                return Lt
            }
            ;
            var Zt, Lt = {}, gr = Object.prototype, Mn = gr.hasOwnProperty, U = D() || function(rt, ae, de) {
                rt[ae] = de.value
            }
                , Mt = typeof G() == "function" ? G() : {}, Kn = Mt.iterator || "@@iterator", In = Mt.asyncIterator || "@@asyncIterator", tn = Mt.toStringTag || "@@toStringTag";
            function Ot(rt, ae, de) {
                return D()(rt, ae, {
                    value: de,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    rt[ae]
            }
            try {
                Ot({}, "")
            } catch {
                Ot = function(de, ye, Le) {
                    return de[ye] = Le
                }
            }
            function Pt(rt, ae, de, ye) {
                var Le = ae && ae.prototype instanceof Gn ? ae : Gn
                    , Te = K()(Le.prototype)
                    , be = new Rr(ye || []);
                return U(Te, "_invoke", {
                    value: yt(rt, de, be)
                }),
                    Te
            }
            function $n(rt, ae, de) {
                try {
                    return {
                        type: "normal",
                        arg: rt.call(ae, de)
                    }
                } catch (ye) {
                    return {
                        type: "throw",
                        arg: ye
                    }
                }
            }
            Lt.wrap = Pt;
            var dt = "suspendedStart"
                , Xe = "suspendedYield"
                , ht = "executing"
                , yn = "completed"
                , dn = {};
            function Gn() {}
            function sr() {}
            function Zn() {}
            var _r = {};
            Ot(_r, Kn, function() {
                return this
            });
            var Pn = ee()
                , Ze = Pn && Pn(Pn(Pr([])));
            Ze && Ze !== gr && Mn.call(Ze, Kn) && (_r = Ze);
            var Vn = Zn.prototype = Gn.prototype = K()(_r);
            function Se(rt) {
                var ae;
                ne()(ae = ["next", "throw", "return"]).call(ae, function(de) {
                    Ot(rt, de, function(ye) {
                        return this._invoke(de, ye)
                    })
                })
            }
            function Ue(rt, ae) {
                function de(Le, Te, be, me) {
                    var He = $n(rt[Le], rt, Te);
                    if (He.type !== "throw") {
                        var Ct = He.arg
                            , wt = Ct.value;
                        return wt && en(wt) == "object" && Mn.call(wt, "__await") ? ae.resolve(wt.__await).then(function(Bt) {
                            de("next", Bt, be, me)
                        }, function(Bt) {
                            de("throw", Bt, be, me)
                        }) : ae.resolve(wt).then(function(Bt) {
                            Ct.value = Bt,
                                be(Ct)
                        }, function(Bt) {
                            return de("throw", Bt, be, me)
                        })
                    }
                    me(He.arg)
                }
                var ye;
                U(this, "_invoke", {
                    value: function(Te, be) {
                        function me() {
                            return new ae(function(He, Ct) {
                                    de(Te, be, He, Ct)
                                }
                            )
                        }
                        return ye = ye ? ye.then(me, me) : me()
                    }
                })
            }
            function yt(rt, ae, de) {
                var ye = dt;
                return function(Le, Te) {
                    if (ye === ht)
                        throw Error("Generator is already running");
                    if (ye === yn) {
                        if (Le === "throw")
                            throw Te;
                        return {
                            value: Zt,
                            done: !0
                        }
                    }
                    for (de.method = Le,
                             de.arg = Te; ; ) {
                        var be = de.delegate;
                        if (be) {
                            var me = Qt(be, de);
                            if (me) {
                                if (me === dn)
                                    continue;
                                return me
                            }
                        }
                        if (de.method === "next")
                            de.sent = de._sent = de.arg;
                        else if (de.method === "throw") {
                            if (ye === dt)
                                throw ye = yn,
                                    de.arg;
                            de.dispatchException(de.arg)
                        } else
                            de.method === "return" && de.abrupt("return", de.arg);
                        ye = ht;
                        var He = $n(rt, ae, de);
                        if (He.type === "normal") {
                            if (ye = de.done ? yn : Xe,
                            He.arg === dn)
                                continue;
                            return {
                                value: He.arg,
                                done: de.done
                            }
                        }
                        He.type === "throw" && (ye = yn,
                            de.method = "throw",
                            de.arg = He.arg)
                    }
                }
            }
            function Qt(rt, ae) {
                var de = ae.method
                    , ye = rt.iterator[de];
                if (ye === Zt)
                    return ae.delegate = null,
                    de === "throw" && rt.iterator.return && (ae.method = "return",
                        ae.arg = Zt,
                        Qt(rt, ae),
                    ae.method === "throw") || de !== "return" && (ae.method = "throw",
                        ae.arg = new TypeError("The iterator does not provide a '" + de + "' method")),
                        dn;
                var Le = $n(ye, rt.iterator, ae.arg);
                if (Le.type === "throw")
                    return ae.method = "throw",
                        ae.arg = Le.arg,
                        ae.delegate = null,
                        dn;
                var Te = Le.arg;
                return Te ? Te.done ? (ae[rt.resultName] = Te.value,
                    ae.next = rt.nextLoc,
                ae.method !== "return" && (ae.method = "next",
                    ae.arg = Zt),
                    ae.delegate = null,
                    dn) : Te : (ae.method = "throw",
                    ae.arg = new TypeError("iterator result is not an object"),
                    ae.delegate = null,
                    dn)
            }
            function Hn(rt) {
                var ae = {
                    tryLoc: rt[0]
                };
                1 in rt && (ae.catchLoc = rt[1]),
                2 in rt && (ae.finallyLoc = rt[2],
                    ae.afterLoc = rt[3]),
                    this.tryEntries.push(ae)
            }
            function cr(rt) {
                var ae = rt.completion || {};
                ae.type = "normal",
                    delete ae.arg,
                    rt.completion = ae
            }
            function Rr(rt) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ne()(rt).call(rt, Hn, this),
                    this.reset(!0)
            }
            function Pr(rt) {
                if (rt || rt === "") {
                    var ae = rt[Kn];
                    if (ae)
                        return ae.call(rt);
                    if (typeof rt.next == "function")
                        return rt;
                    if (!isNaN(rt.length)) {
                        var de = -1
                            , ye = function Le() {
                            for (; ++de < rt.length; )
                                if (Mn.call(rt, de))
                                    return Le.value = rt[de],
                                        Le.done = !1,
                                        Le;
                            return Le.value = Zt,
                                Le.done = !0,
                                Le
                        };
                        return ye.next = ye
                    }
                }
                throw new TypeError(en(rt) + " is not iterable")
            }
            return sr.prototype = Zn,
                U(Vn, "constructor", {
                    value: Zn,
                    configurable: !0
                }),
                U(Zn, "constructor", {
                    value: sr,
                    configurable: !0
                }),
                sr.displayName = Ot(Zn, tn, "GeneratorFunction"),
                Lt.isGeneratorFunction = function(rt) {
                    var ae = typeof rt == "function" && rt.constructor;
                    return !!ae && (ae === sr || (ae.displayName || ae.name) === "GeneratorFunction")
                }
                ,
                Lt.mark = function(rt) {
                    return x() ? x()(rt, Zn) : (rt.__proto__ = Zn,
                        Ot(rt, tn, "GeneratorFunction")),
                        rt.prototype = K()(Vn),
                        rt
                }
                ,
                Lt.awrap = function(rt) {
                    return {
                        __await: rt
                    }
                }
                ,
                Se(Ue.prototype),
                Ot(Ue.prototype, In, function() {
                    return this
                }),
                Lt.AsyncIterator = Ue,
                Lt.async = function(rt, ae, de, ye, Le) {
                    Le === void 0 && (Le = O());
                    var Te = new Ue(Pt(rt, ae, de, ye),Le);
                    return Lt.isGeneratorFunction(ae) ? Te : Te.next().then(function(be) {
                        return be.done ? be.value : Te.next()
                    })
                }
                ,
                Se(Vn),
                Ot(Vn, tn, "Generator"),
                Ot(Vn, Kn, function() {
                    return this
                }),
                Ot(Vn, "toString", function() {
                    return "[object Generator]"
                }),
                Lt.keys = function(rt) {
                    var ae = Object(rt)
                        , de = [];
                    for (var ye in ae)
                        de.push(ye);
                    return q()(de).call(de),
                        function Le() {
                            for (; de.length; ) {
                                var Te = de.pop();
                                if (Te in ae)
                                    return Le.value = Te,
                                        Le.done = !1,
                                        Le
                            }
                            return Le.done = !0,
                                Le
                        }
                }
                ,
                Lt.values = Pr,
                Rr.prototype = {
                    constructor: Rr,
                    reset: function(ae) {
                        var de;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = Zt,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = Zt,
                            ne()(de = this.tryEntries).call(de, cr),
                            !ae)
                            for (var ye in this)
                                ye.charAt(0) === "t" && Mn.call(this, ye) && !isNaN(+ie()(ye).call(ye, 1)) && (this[ye] = Zt)
                    },
                    stop: function() {
                        this.done = !0;
                        var ae = this.tryEntries[0].completion;
                        if (ae.type === "throw")
                            throw ae.arg;
                        return this.rval
                    },
                    dispatchException: function(ae) {
                        if (this.done)
                            throw ae;
                        var de = this;
                        function ye(Ct, wt) {
                            return be.type = "throw",
                                be.arg = ae,
                                de.next = Ct,
                            wt && (de.method = "next",
                                de.arg = Zt),
                                !!wt
                        }
                        for (var Le = this.tryEntries.length - 1; Le >= 0; --Le) {
                            var Te = this.tryEntries[Le]
                                , be = Te.completion;
                            if (Te.tryLoc === "root")
                                return ye("end");
                            if (Te.tryLoc <= this.prev) {
                                var me = Mn.call(Te, "catchLoc")
                                    , He = Mn.call(Te, "finallyLoc");
                                if (me && He) {
                                    if (this.prev < Te.catchLoc)
                                        return ye(Te.catchLoc, !0);
                                    if (this.prev < Te.finallyLoc)
                                        return ye(Te.finallyLoc)
                                } else if (me) {
                                    if (this.prev < Te.catchLoc)
                                        return ye(Te.catchLoc, !0)
                                } else {
                                    if (!He)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < Te.finallyLoc)
                                        return ye(Te.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(ae, de) {
                        for (var ye = this.tryEntries.length - 1; ye >= 0; --ye) {
                            var Le = this.tryEntries[ye];
                            if (Le.tryLoc <= this.prev && Mn.call(Le, "finallyLoc") && this.prev < Le.finallyLoc) {
                                var Te = Le;
                                break
                            }
                        }
                        Te && (ae === "break" || ae === "continue") && Te.tryLoc <= de && de <= Te.finallyLoc && (Te = null);
                        var be = Te ? Te.completion : {};
                        return be.type = ae,
                            be.arg = de,
                            Te ? (this.method = "next",
                                this.next = Te.finallyLoc,
                                dn) : this.complete(be)
                    },
                    complete: function(ae, de) {
                        if (ae.type === "throw")
                            throw ae.arg;
                        return ae.type === "break" || ae.type === "continue" ? this.next = ae.arg : ae.type === "return" ? (this.rval = this.arg = ae.arg,
                            this.method = "return",
                            this.next = "end") : ae.type === "normal" && de && (this.next = de),
                            dn
                    },
                    finish: function(ae) {
                        for (var de = this.tryEntries.length - 1; de >= 0; --de) {
                            var ye = this.tryEntries[de];
                            if (ye.finallyLoc === ae)
                                return this.complete(ye.completion, ye.afterLoc),
                                    cr(ye),
                                    dn
                        }
                    },
                    catch: function(ae) {
                        for (var de = this.tryEntries.length - 1; de >= 0; --de) {
                            var ye = this.tryEntries[de];
                            if (ye.tryLoc === ae) {
                                var Le = ye.completion;
                                if (Le.type === "throw") {
                                    var Te = Le.arg;
                                    cr(ye)
                                }
                                return Te
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(ae, de, ye) {
                        return this.delegate = {
                            iterator: Pr(ae),
                            resultName: de,
                            nextLoc: ye
                        },
                        this.method === "next" && (this.arg = Zt),
                            dn
                    }
                },
                Lt
        }
        function Et(Zt, Lt, gr, Mn, U, Mt, Kn) {
            try {
                var In = Zt[Mt](Kn)
                    , tn = In.value
            } catch (Ot) {
                return void gr(Ot)
            }
            In.done ? Lt(tn) : O().resolve(tn).then(Mn, U)
        }
        function An(Zt) {
            return function() {
                var Lt = this
                    , gr = arguments;
                return new (O())(function(Mn, U) {
                        var Mt = Zt.apply(Lt, gr);
                        function Kn(tn) {
                            Et(Mt, Mn, U, Kn, In, "next", tn)
                        }
                        function In(tn) {
                            Et(Mt, Mn, U, Kn, In, "throw", tn)
                        }
                        Kn(void 0)
                    }
                )
            }
        }
        const gn = {
            name: "SNOWEngagement",
            components: {
                CurrentSession: Ne.default
            },
            data: function() {
                return {
                    client: null,
                    contactsOrLeads: {},
                    relateTo: {}
                }
            },
            props: {},
            mounted: function() {
                var Lt = this;
                return An(Re().mark(function gr() {
                    return Re().wrap(function(U) {
                        for (; ; )
                            switch (U.prev = U.next) {
                                case 0:
                                    return U.next = 2,
                                        (0,
                                            Gt.getCRMInstance)();
                                case 2:
                                    Lt.client = U.sent;
                                case 3:
                                case "end":
                                    return U.stop()
                            }
                    }, gr)
                }))()
            },
            destroyed: function() {
                var Lt;
                (Lt = this.phoneInstance) === null || Lt === void 0 || (Lt = Lt.messager) === null || Lt === void 0 || Lt.off("sync.wrapupdone", this.syncOnWrapupDone)
            },
            computed: Tt(Tt(Tt({}, (0,
                it.mapGetters)("sessionPanels", ["currentActiveTask"])), (0,
                it.mapGetters)("crm", ["getContactsList", "getEngagementPropertyValue", "getEngagement"])), {}, {
                disposition: function() {
                    var Lt = this.getEngagementPropertyValue({
                        engagementId: this.engagementId,
                        property: "selectedDisposition"
                    });
                    return Lt?.value
                },
                selectedUser: {
                    get: function() {
                        var Lt;
                        return (Lt = this.getEngagementPropertyValue({
                            engagementId: this.engagementId,
                            property: "contactsMap"
                        })) === null || Lt === void 0 ? void 0 : Lt.selectedUser
                    },
                    set: function(Lt) {
                        this.$store.commit("crm/setSelectedUser", {
                            engagementId: this.engagementId,
                            userId: Lt.userId
                        })
                    }
                },
                currentEntityId: {
                    get: function() {
                        return this.getEngagementPropertyValue({
                            engagementId: this.engagementId,
                            property: "currentEntityId"
                        })
                    },
                    set: function(Lt) {
                        this.$store.commit("crm/setEngagementProperty", {
                            engagementId: this.engagementId,
                            property: "currentEntityId",
                            value: Lt
                        })
                    }
                },
                ticketFromIvr: {
                    get: function() {
                        return this.getEngagementPropertyValue({
                            engagementId: this.engagementId,
                            property: "ticketFromIvr"
                        })
                    }
                },
                engagementId: function() {
                    var Lt, gr, Mn = ((Lt = this.currentEngagement) === null || Lt === void 0 ? void 0 : Lt.engagementId) || ((gr = this.currentActiveTask) === null || gr === void 0 ? void 0 : gr.engagementId);
                    return Mn
                },
                contactsList: function() {
                    var Lt;
                    return console.log(k()(Lt = "[contacts for engagementId: ".concat(this.engagementId, " list: ")).call(Lt, M()(this.getContactsList(this.engagementId)))),
                        this.getContactsList(this.engagementId)
                },
                entityList: function() {
                    return this.getEngagementPropertyValue({
                        engagementId: this.engagementId,
                        property: "entity"
                    })
                },
                interactionInfo: function() {
                    if (this.engagementId) {
                        var Lt = JSON.parse(localStorage.getItem(this.engagementId) || "{}");
                        return console.log("engagementInteractionInfo >>>> ", Lt),
                            Lt
                    }
                    return {}
                }
            }),
            methods: {
                handleDisposition: function(Lt) {
                    this.$store.commit("crm/setEngagementProperty", {
                        engagementId: this.engagementId,
                        property: "selectedDisposition",
                        value: {
                            label: Lt.label,
                            value: Lt.value
                        }
                    })
                }
            },
            deactivated: function() {}
        };
        var Qe = a(50855)
            , ar = (0,
            Qe.A)(gn, Y, J, !1, null, "16617f9a", null);
        const zt = ar.exports
    }
    ,
    4133: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => X
            });
        var Y = a(51294)
            , J = function() {
            var H = this
                , q = H._self._c
                , _e = H._self._setupProxy;
            return q("zm-dropdown", {
                staticClass: "channel-dropdown",
                attrs: {
                    trigger: "click",
                    "aria-label": H.$t("cci.newVoiceCallOrSMS")
                },
                on: {
                    command: H.handleMenuClick
                }
            }, [q("div", {
                staticClass: "channel-dropdown__action"
            }), H._v(" "), q("zm-dropdown-menu", {
                attrs: {
                    slot: "dropdown"
                },
                slot: "dropdown"
            }, [H.roleHasVoiceOutboundPermission ? q("zm-dropdown-item", {
                attrs: {
                    command: H.eMenuName.phonePanel,
                    disabled: !H.hasVoiceOutboundNumber || H.hasOngoingPhoneVideoTask,
                    title: H.hasVoiceOutboundNumber ? H.disableOutboundTitle : H.$t("cci.home.disableOutbound")
                }
            }, [H._v(H._s(H.$t("cci.home.newVoiceCall")))]) : H._e(), H._v(" "), H.showVideoOutbound ? q("zm-dropdown-item", {
                attrs: {
                    command: H.eMenuName.videoOutbound,
                    disabled: !H.isVideoChannelEnabled || !H.hasVideoOutboundQueues || H.hasOngoingPhoneVideoTask,
                    title: H.hasVideoOutboundQueues ? H.disableOutboundTitle : H.$t("cci.home.disableOutbound")
                }
            }, [H._v(`
      ` + H._s(H.$t("cci.home.newVideoCall")) + `
      `), H.videoChannelDisabledTips ? q("zm-tooltip", {
                attrs: {
                    content: H.videoChannelDisabledTips,
                    placement: "top-start"
                }
            }, [q(Y.A, {
                staticClass: "channel-dropdown__tooltip_icon"
            })], 1) : H._e()], 1) : H._e(), H._v(" "), H.showOutboundSMSChannel ? q("zm-dropdown-item", {
                attrs: {
                    disabled: !H.isVideoChannelEnabled || !H.enableSmsOutbound,
                    command: H.eMenuName.smsOutbound,
                    title: H.enableSmsOutbound ? "" : H.$t("cci.home.disableOutboundSMS")
                }
            }, [H._v(H._s(H.$t("cci.home.newSms"))), H.smsChannelDisabledTips ? q("zm-tooltip", {
                attrs: {
                    content: H.smsChannelDisabledTips,
                    placement: "top-start"
                }
            }, [q(Y.A, {
                staticClass: "channel-dropdown__tooltip_icon"
            })], 1) : H._e(), H._v(" "), H.smsOutboundHasDraft ? q("span", {
                staticStyle: {
                    color: "rgb(222, 40, 40)"
                }
            }, [H._v("\xA0" + H._s(H.$t("cci.client.SMS.draft")))]) : H._e()], 1) : H._e()], 1)], 1)
        }
            , $ = []
            , k = a(27598)
            , P = a.n(k)
            , M = a(69279)
            , Q = a.n(M)
            , O = a(74061)
            , F = a(83266)
            , D = a(6372)
            , z = a(76709)
            , G = a(56405)
            , V = a(4439)
            , K = a(30824);
        const ee = (0,
            O.defineComponent)({
            props: {
                smsOutboundHasDraft: Boolean
            },
            setup: function(H, q) {
                var _e = q.emit
                    , ie = (0,
                    D.useI18n)()
                    , ze = ie.t
                    , Oe = (0,
                    F.useAccount)()
                    , Cn = Oe.account
                    , at = Oe.settings
                    , Sn = Oe.user
                    , Ce = Oe.getSettingEnabled
                    , wn = (0,
                    F.useStatus)()
                    , Ae = wn.hasOngoingPhoneTask
                    , nr = wn.hasOngoingVideoTask
                    , mt = (0,
                    F.useVoiceOutboundPermission)()
                    , jn = mt.roleHasVoiceOutboundPermission
                    , ve = (0,
                    F.useWrapping)()
                    , or = ve.isWrapupStatus
                    , pt = (0,
                    F.useShouldDisableOutboundVoiceOrSMS)()
                    , je = pt.hasVoiceOutboundNumber
                    , Ke = pt.enableSmsOutbound
                    , it = (0,
                    O.computed)(function() {
                    var Tt, vr = P()(Tt = Sn.value.queues).call(Tt, function(rr) {
                        return rr.channelTypes[0] === G.QUEUE_CHANNEL_TYPE.LIVE_VIDEO && rr.enableOutboundCall
                    });
                    return vr !== -1
                })
                    , Ne = (0,
                    O.computed)(function() {
                    return Ae.value || nr.value
                })
                    , Gt = (0,
                    O.computed)(function() {
                    var Tt, vr = (0,
                        K.getCRM)();
                    if (vr === V.CRMS.Hubspot || !Cn.value.enableVideoChannel || !Cn.value.enableVideoOutboundCall)
                        return !1;
                    var rr = (Tt = at.value) === null || Tt === void 0 ? void 0 : Q()(Tt).call(Tt, function(kr) {
                        return kr.settingId === "outbound-video-call"
                    });
                    return rr ? rr.enabled : !0
                })
                    , en = (0,
                    O.computed)(function() {
                    var Tt = (0,
                        K.getCRM)();
                    return Tt === V.CRMS.Hubspot ? !1 : Ce("outbound-sms-messages") && z.storeUtils.crm.isSMSChannelEnabled()
                })
                    , rn = (0,
                    O.computed)(function() {
                    return or.value ? ze("cci.home.disableOutboundVoiceAndVideo.whenWrapup") : Ne.value ? ze("cci.home.disableOutboundVoiceAndVideo") : ""
                });
                return {
                    eMenuName: G.eMenuName,
                    isVideoChannelEnabled: z.storeUtils.crm.isVideoChannelEnabled(),
                    videoChannelDisabledTips: z.storeUtils.crm.getVideoChannelDisabledTips(),
                    smsChannelDisabledTips: z.storeUtils.crm.getSMSChannelDisabledTips(),
                    showVideoOutbound: Gt,
                    hasVideoOutboundQueues: it,
                    showOutboundSMSChannel: en,
                    hasOngoingPhoneVideoTask: Ne,
                    hasVoiceOutboundNumber: je,
                    disableOutboundTitle: rn,
                    handleMenuClick: function(vr) {
                        _e("handleMenuClick", vr)
                    },
                    roleHasVoiceOutboundPermission: jn,
                    enableSmsOutbound: Ke
                }
            }
        });
        var pe = a(50855)
            , ne = (0,
            pe.A)(ee, J, $, !1, null, "24013ea5", null);
        const X = ne.exports
    }
    ,
    36908: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => Df
            });
        var Y = function() {
            var t = this
                , s = t._self._c;
            return s("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: t.phoneContainerLoading,
                    expression: "phoneContainerLoading"
                }],
                staticClass: "zm-dial-panel-container",
                attrs: {
                    role: "main"
                }
            }, [t.phoneEnded ? s("p", {
                staticClass: "zm-sr-only",
                attrs: {
                    role: "alert",
                    "aria-live": "assertive"
                }
            }, [t._v(`
    ` + t._s(t.$t("user.call.ended")) + `
  `)]) : t._e(), t._v(" "), s("audio", {
                ref: "ringAudio",
                attrs: {
                    preload: "auto",
                    loop: ""
                }
            }, [s("source", {
                attrs: {
                    src: a(20086),
                    type: "audio/wav"
                }
            })]), t._v(" "), t.currentCall ? s("call", {
                key: t.currentCall.id,
                ref: "currentCall",
                attrs: {
                    id: t.currentCall.id
                },
                on: {
                    "in-coming-call": t.onCallComing,
                    "on-call-accepted": t.onCallAccepted,
                    "on-next-call": t.onNextCall
                }
            }) : t._e(), t._v(" "), s("idle-panel", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !t.currentCall,
                    expression: "!currentCall"
                }],
                ref: "idlePanel",
                attrs: {
                    "phone-alert-inatance": t.phoneAlertInatance
                },
                on: {
                    "on-outbound-call": t.onOutboundCall
                }
            }), t._v(" "), s("closeDeviceConfirm", {
                attrs: {
                    visible: t.closeDeviceConfirmVisible
                },
                on: {
                    close: function(b) {
                        t.closeDeviceConfirmVisible = !1
                    },
                    turnoff: t.turnOffMic
                }
            })], 1)
        }
            , J = []
            , $ = a(59814)
            , k = a.n($)
            , P = a(6826)
            , M = a.n(P)
            , Q = a(69761)
            , O = a.n(Q)
            , F = a(81352)
            , D = a.n(F)
            , z = a(69279)
            , G = a.n(z)
            , V = a(65770)
            , K = a.n(V)
            , te = a(39084)
            , ee = a.n(te)
            , pe = a(61849)
            , ne = a.n(pe)
            , X = a(84653)
            , x = a.n(X)
            , H = a(89099)
            , q = a.n(H)
            , _e = a(44987)
            , ie = a.n(_e)
            , ze = a(34622)
            , Oe = a.n(ze)
            , Cn = a(27785)
            , at = a.n(Cn)
            , Sn = a(83537)
            , Ce = a.n(Sn)
            , wn = a(83030)
            , Ae = a.n(wn)
            , nr = a(65888)
            , mt = a.n(nr)
            , jn = a(34187)
            , ve = a.n(jn)
            , or = a(73007)
            , pt = a.n(or)
            , je = a(23716)
            , Ke = a.n(je)
            , it = a(2208)
            , Ne = a.n(it)
            , Gt = a(39864)
            , en = a.n(Gt)
            , rn = a(8233)
            , Tt = a.n(rn)
            , vr = a(92336)
            , rr = a.n(vr)
            , kr = a(5339)
            , Re = a.n(kr)
            , Et = a(74061)
            , An = a.n(Et)
            , Yt = a(53578)
            , gn = a(6372)
            , Qe = a(56405)
            , ar = a(50010)
            , zt = a(35878)
            , Zt = a(83314)
            , Lt = a(79917)
            , gr = a(53019)
            , Mn = function() {
            var t = this
                , s = t._self._c;
            return t.callReservation ? s(t.component, {
                ref: "call",
                tag: "component",
                attrs: {
                    "call-id": t.id
                },
                on: {
                    "on-call-accepted": t.onCallAccepted,
                    "in-coming-call": t.onCallComing,
                    "on-next-call": t.onNextCall
                }
            }) : t._e()
        }
            , U = []
            , Mt = function() {
            var t = this
                , s = t._self._c;
            return s("div", {
                staticStyle: {
                    height: "100%"
                }
            }, [s("IdlePanelForIncomingRinging"), t._v(" "), !t.isOutboundPreviewDial && !t.enableNewNotifyPanel ? s("TaskNotifyPanel", {
                attrs: {
                    "panel-type": "voice",
                    "channel-label": t.$t("cci.client.voiceCall"),
                    info: t.popupParams,
                    "append-to-body": ""
                }
            }, [s("template", {
                slot: "actions"
            }, [t.callReservation.type !== "outbound" ? [s("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: t.phoneContainerLoading || t.callState.autoAnswer,
                    expression: "phoneContainerLoading || callState.autoAnswer"
                }],
                staticClass: "cus-button-area"
            }, [s("div", [s("span", {
                staticClass: "cus-call-btns cus-btn-hangup",
                on: {
                    click: t.rejectCall
                }
            }), t._v(" "), s("div", {
                staticClass: "btn-text"
            }, [t._v(t._s(t.$t("callbar.phone.declineCall")))])]), t._v(" "), s("div", [s("span", {
                staticClass: "cus-call-btns cus-btn-accept",
                on: {
                    click: t.acceptCall
                }
            }), t._v(" "), s("div", {
                staticClass: "btn-text"
            }, [t._v(t._s(t.$t("callbar.phone.acceptCall")))])])])] : [s("div", {
                staticClass: "cus-button-area",
                staticStyle: {
                    "justify-content": "center"
                }
            }, [s("div", {
                staticClass: "cus-button"
            }, [s("span", {
                staticClass: "cus-call-btns cus-btn-hangup",
                on: {
                    click: t.cancelOutbound
                }
            }), t._v(" "), s("div", {
                staticClass: "btn-text"
            }, [t._v(t._s(t.$t("cci.common.button.cancel")))])])])]], 2)], 2) : t._e()], 1)
        }
            , Kn = []
            , In = a(14950)
            , tn = a.n(In)
            , Ot = a(83266)
            , Pt = a(19598);
        const $n = Qe.notifyUtil;
        var dt = a(84795);
        function Xe(u) {
            "@babel/helpers - typeof";
            return Xe = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                Xe(u)
        }
        function ht() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            ht = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && Xe(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(Xe(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function yn(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function dn(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            yn(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            yn(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        function Gn(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function sr(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = Gn(Object(b), !0)).call(s, function(S) {
                    Zn(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = Gn(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function Zn(u, t, s) {
            return (t = _r(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function _r(u) {
            var t = Pn(u, "string");
            return Xe(t) == "symbol" ? t : t + ""
        }
        function Pn(u, t) {
            if (Xe(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (Xe(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        var Ze = 5e3;
        const Se = {
            name: "RingingPanel",
            mixins: [dt.A],
            props: {
                callId: {
                    type: String,
                    required: !0
                }
            },
            data: function() {
                return {
                    handling: !1,
                    isRinging: !1
                }
            },
            components: {
                TaskNotifyPanel: Ot.TaskNotifyPanel,
                IdlePanelForIncomingRinging: Ot.IdlePanelForIncomingRinging
            },
            computed: sr(sr(sr({}, (0,
                Yt.mapGetters)(["account"])), (0,
                Yt.mapGetters)("coreVoice", ["popupParams", "phoneContainerLoading", "callReservation", "enableCTIUpdateRingPopUp"])), {}, {
                isOutboundPreviewDial: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 ? void 0 : t.isOutboundPreviewDial
                },
                enableNewNotifyPanel: function() {
                    return !!this.account.enableCrmInboundNotifyPanel
                }
            }),
            watch: {
                popupParams: {
                    immediate: !0,
                    handler: function(t) {
                        if (!(!this.isOutboundPreviewDial || !(t != null && t.popupState)))
                            switch (t.popupState) {
                                case "created":
                                    this.$bus.$emit("CCIUIAPI_IncomingCall_OBPreviewDialer", t?.taskSid, t);
                                    break;
                                case "updated":
                                    this.$bus.$emit("CCIUIAPI_UpdateIncomingCall_OBPreviewDialer", t?.taskSid, t);
                                    break;
                                case "closed":
                                    this.$bus.$emit("CCIUIAPI_CancelIncomingCall_OBPreviewDialer", t?.taskSid);
                                    break;
                                default:
                                    break
                            }
                    }
                }
            },
            mounted: function() {
                var t = this;
                window.__subBroadcast__ || $n("You have an incoming call."),
                    this.$emit("in-coming-call", this.callReservation),
                    this.$bus.$on("clientNotifyCallStatus", this.onClientBtnActions),
                    this.$watch("popupParams", function(s) {
                        var h, b, S;
                        if (!((h = t.callState) !== null && h !== void 0 && h.autoAnswer)) {
                            var B = (b = s.taskSid) !== null && b !== void 0 ? b : ""
                                , se = (S = s.popupState) !== null && S !== void 0 ? S : "";
                            if (!(!t.enableNewNotifyPanel || t.isOutboundPreviewDial || !B || !se))
                                switch (se) {
                                    case "created":
                                        t.isRinging = !0,
                                            t.$bus.$emit("CCIUIAPI_IncomingCall", B, s);
                                        break;
                                    case "updated":
                                        !t.isRinging && t.enableCTIUpdateRingPopUp && t.$bus.$emit("CCIUIAPI_IncomingCall", B, s),
                                            t.$bus.$emit("CCIUIAPI_UpdateIncomingCall", B, s);
                                        break;
                                    case "closed":
                                        t.$bus.$emit("CCIUIAPI_CancelIncomingCall", t.callId);
                                        break
                                }
                        }
                    }, {
                        immediate: !0
                    })
            },
            beforeDestroy: function() {
                var t;
                if (this.$bus.$off("clientNotifyCallStatus", this.onClientBtnActions),
                (t = this.popupParams) !== null && t !== void 0 && t.popupState) {
                    var s;
                    this.$bus.$emit("CCIUIAPI_CancelIncomingCall_OBPreviewDialer", (s = this.popupParams) === null || s === void 0 ? void 0 : s.taskSid),
                        this.$bus.$emit("CCIUIAPI_CancelIncomingCall", this.callId)
                }
            },
            methods: sr(sr({}, (0,
                Yt.mapActions)("coreVoice", {
                acceptCallAction: "acceptCall",
                rejectCallAction: "rejectCall",
                cancelOutboundAction: "cancelOutbound",
                previewSkipCall: "skipCall"
            })), {}, {
                acceptCall: function() {
                    var t = this;
                    return dn(ht().mark(function s() {
                        var h;
                        return ht().wrap(function(S) {
                            for (; ; )
                                switch (S.prev = S.next) {
                                    case 0:
                                        if (!t.handling) {
                                            S.next = 2;
                                            break
                                        }
                                        return S.abrupt("return");
                                    case 2:
                                        return t.handling = !0,
                                            Qe.monitor.dispatchMonitor({
                                                name: "user_click_acceptCall"
                                            }),
                                            S.prev = 4,
                                            S.next = 7,
                                            t.acceptCallAction({
                                                callSyncId: t.callId
                                            });
                                    case 7:
                                        h = S.sent,
                                            console.log("accept call res", h),
                                            t.$emit("on-call-accepted", t.callReservation),
                                            S.next = 15;
                                        break;
                                    case 12:
                                        S.prev = 12,
                                            S.t0 = S.catch(4),
                                            console.error("accept call error:", S.t0);
                                    case 15:
                                        return t.handling = !1,
                                            S.abrupt("return", h);
                                    case 17:
                                    case "end":
                                        return S.stop()
                                }
                        }, s, null, [[4, 12]])
                    }))()
                },
                rejectCall: function() {
                    var t = this;
                    return dn(ht().mark(function s() {
                        var h, b, S, B, se;
                        return ht().wrap(function(oe) {
                            for (; ; )
                                switch (oe.prev = oe.next) {
                                    case 0:
                                        if (!t.handling) {
                                            oe.next = 2;
                                            break
                                        }
                                        return oe.abrupt("return");
                                    case 2:
                                        if ((0,
                                            gr.Log)("rejectCall called", t.callReservation),
                                            S = t.$agent(),
                                            B = S.zpns,
                                            t.handling = !0,
                                            B.isReady) {
                                            oe.next = 8;
                                            break
                                        }
                                        return oe.next = 8,
                                            (0,
                                                Pt.once)(B, "ready", Ze).catch(function() {});
                                    case 8:
                                        return se = {
                                            taskSid: (h = t.callReservation) === null || h === void 0 ? void 0 : h.task.id,
                                            reservationSid: (b = t.callReservation) === null || b === void 0 ? void 0 : b.id,
                                            callSyncId: t.callId
                                        },
                                            Qe.monitor.dispatchMonitor({
                                                name: "user_click_rejectCall"
                                            }),
                                            oe.prev = 10,
                                            oe.next = 13,
                                            t.rejectCallAction(se);
                                    case 13:
                                        oe.next = 18;
                                        break;
                                    case 15:
                                        oe.prev = 15,
                                            oe.t0 = oe.catch(10),
                                            console.error(oe.t0.message);
                                    case 18:
                                        t.handling = !1;
                                    case 19:
                                    case "end":
                                        return oe.stop()
                                }
                        }, s, null, [[10, 15]])
                    }))()
                },
                cancelOutbound: function() {
                    var t = this;
                    return dn(ht().mark(function s() {
                        return ht().wrap(function(b) {
                            for (; ; )
                                switch (b.prev = b.next) {
                                    case 0:
                                        return Qe.monitor.dispatchMonitor({
                                            name: "user_click_cancelOutbound"
                                        }),
                                            b.prev = 1,
                                            b.next = 4,
                                            t.cancelOutboundAction({
                                                callSyncId: t.callId
                                            });
                                    case 4:
                                        b.next = 9;
                                        break;
                                    case 6:
                                        b.prev = 6,
                                            b.t0 = b.catch(1),
                                            console.error(b.t0.message);
                                    case 9:
                                    case "end":
                                        return b.stop()
                                }
                        }, s, null, [[1, 6]])
                    }))()
                },
                skipCall: function(t) {
                    var s, h = ((s = this.callState) === null || s === void 0 ? void 0 : s.previewContent) || {}, b = h.contacts, S = b === void 0 ? [] : b, B = h.maxSkips, se = B === void 0 ? 0 : B, Z = h.skipNum;
                    if (!(Z >= se || Z >= S.length - 1)) {
                        (0,
                            gr.Log)("skipCall called", this.callReservation);
                        var oe = S[Z + 1]
                            , Wt = oe && oe.callerIdInfoBO || {}
                            , $t = Wt.origNumber
                            , Yn = $t === void 0 ? "" : $t;
                        if (Yn) {
                            var Qn;
                            this.$emit("on-next-call", {
                                task: {
                                    attributes: sr(sr({}, ((Qn = this.callReservation) === null || Qn === void 0 || (Qn = Qn.task) === null || Qn === void 0 ? void 0 : Qn.attributes) || {}), {}, {
                                        to: Yn
                                    })
                                }
                            })
                        }
                        this.previewSkipCall({
                            id: this.$callId(),
                            skipReasonId: t
                        })
                    }
                },
                onClientBtnActions: function() {
                    var t, s = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                    (0,
                        gr.Log)("onClientBtnActions_preview message received:", s);
                    var h = s.result
                        , b = h === void 0 ? {} : h
                        , S = b.taskSid
                        , B = b.status
                        , se = b.skipReasonId;
                    S === this.$callId() && (tn()(t = [1, 3, 4, 5, 6]).call(t, B) > -1 ? this.acceptCall() : B === Qe.eClientBtnActionType.CCICallAcceptStatus_Rejected ? this.rejectCall() : B === Qe.eClientBtnActionType.CCICallAcceptStatus_Skipped && this.skipCall(se))
                }
            }),
            inject: ["$agent"]
        };
        var Ue = a(50855)
            , yt = (0,
            Ue.A)(Se, Mt, Kn, !1, null, "4c6da543", null);
        const Qt = yt.exports;
        var Hn = function() {
            var t = this
                , s = t._self._c;
            return s("div", {
                class: ["zm-dial-panel", t.displayMessageHistory ? "message-history-panel" : ""],
                style: {
                    width: "100%",
                    height: "100%",
                    padding: t.showVoiceAnalysis || t.showScreenRecordingTip ? "0" : "16px"
                }
            }, [s("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !t.showTranscription,
                    expression: "!showTranscription"
                }],
                staticClass: "zm-dial-buttons-container"
            }, [s("ScreenRecordingTip"), t._v(" "), t.showVoiceAnalysis || t.isConference && t.conferenceMembers.length ? s("div", {
                style: {
                    width: "100%",
                    marginBottom: "16px"
                }
            }, [t.showVoiceAnalysis ? s("VoiceAnalysis", {
                attrs: {
                    "business-id": t.businessId,
                    "queue-id": t.queueId
                }
            }) : t._e(), t._v(" "), t.isConference && t.conferenceMembers.length ? s("CandidateList", {
                attrs: {
                    candidates: t.conferenceMembers,
                    "current-user": t.currentUser,
                    "enable-assign-host": t.enableAssignHost,
                    reservation: t.callReservation
                },
                on: {
                    assignLeave: t.handleAssign
                }
            }) : t._e()], 1) : t._e(), t._v(" "), t.showKeypad ? s("section", [s("zm-button", {
                attrs: {
                    type: "link"
                },
                on: {
                    click: function(b) {
                        return t.setUIState({
                            showKeypad: !1
                        })
                    }
                }
            }, [t._v(t._s(t.$t("callbar.phone.backToCall")))]), t._v(" "), t.pressedKeys ? s("div", {
                staticClass: "pressedKeys"
            }, [t._v(t._s(t.pressedKeys))]) : t._e(), t._v(" "), s("key-pad", {
                on: {
                    press: t.handleSendDtmf
                }
            })], 1) : t._e(), t._v(" "), t.showTransferPad ? s("section", [s("zm-button", {
                staticStyle: {
                    left: "-3vw",
                    top: "10px"
                },
                attrs: {
                    icon: "zm-icon-left",
                    type: "link"
                },
                on: {
                    click: function(b) {
                        return t.setUIState({
                            showTransferPad: !1
                        })
                    }
                }
            }, [t._v(`
        ` + t._s(t.$t("cci.callBar.call")) + `
      `)]), t._v(" "), s("div", {
                staticClass: "transfer-title",
                staticStyle: {
                    "text-align": "center"
                }
            }, [t._v(`
        ` + t._s(t.$t("callbar.phone.transferTo")) + `
      `)]), t._v(" "), s("contact-search", {
                attrs: {
                    zcc: "",
                    "is-transfer": "",
                    "is-active-call": "",
                    "is-outbound": t.isOutboundCall,
                    "business-id": t.businessId,
                    "queue-id": t.queueId,
                    addressbook: t.enableSearchAddressBookContacts,
                    zp: t.enableSearchZPContacts
                },
                on: {
                    select: t.handleTransferSelect,
                    input: t.clearContactInfo
                },
                model: {
                    value: t.transferTarget,
                    callback: function(b) {
                        t.transferTarget = b
                    },
                    expression: "transferTarget"
                }
            }), t._v(" "), t.targetQueue && t.targetQueue.name ? s("div", {
                staticClass: "transfer-queue-name flex-center"
            }, [t._v(`
        (` + t._s(t.targetQueue.name) + `)
      `)]) : t.targetName ? s("div", {
                staticClass: "transfer-queue-name flex-center"
            }, [t._v(`
        (` + t._s(t.targetName) + `)
      `)]) : t._e(), t._v(" "), s("key-pad", {
                on: {
                    press: t.transferPadPress
                }
            }), t._v(" "), t.features.enableTransferNote ? [s("div", {
                staticClass: "transfer-btn-wrapper"
            }, [s("zm-tooltip", {
                attrs: {
                    placement: "top",
                    content: t.onlyWarmTransferWithPSTNAndVoicemailNotSupported ? t.$t("callbar.phone.transfer.warm.pstn.disabled") : "",
                    disabled: !t.onlyWarmTransferWithPSTNAndVoicemailNotSupported
                }
            }, [s("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: t.transferDropdownLoading,
                    expression: "transferDropdownLoading"
                }],
                staticClass: "cus-call-btns cus-btn-blue cus-btn-transfer",
                class: {
                    "cus-btn-hover": t.transferActionVisible,
                    disabled: t.disableTransferButton
                },
                on: {
                    click: t.onShowTransferModal,
                    keydown: [function(h) {
                        var b;
                        return !tn()(b = h.type).call(b, "key") && t._k(h.keyCode, "space", 32, h.key, [" ", "Spacebar"]) ? null : t.onShowTransferModal.apply(null, arguments)
                    }
                        , function(h) {
                            var b;
                            return !tn()(b = h.type).call(b, "key") && t._k(h.keyCode, "enter", 13, h.key, "Enter") ? null : t.onShowTransferModal.apply(null, arguments)
                        }
                    ]
                }
            }, [s("i", {
                staticClass: "cus-btn-transfer-white"
            })])]), t._v(" "), t.showTransferNote ? s("div", {
                staticClass: "cus-call-btns cus-btn-grey transfer-note-btn",
                attrs: {
                    tabindex: "0",
                    role: "button",
                    "aria-label": t.$t("callbar.phone.transferWithNote.ax")
                },
                on: {
                    click: t.handleTransferNote,
                    keydown: [function(h) {
                        var b;
                        return !tn()(b = h.type).call(b, "key") && t._k(h.keyCode, "space", 32, h.key, [" ", "Spacebar"]) ? null : t.handleTransferNote.apply(null, arguments)
                    }
                        , function(h) {
                            var b;
                            return !tn()(b = h.type).call(b, "key") && t._k(h.keyCode, "enter", 13, h.key, "Enter") ? null : t.handleTransferNote.apply(null, arguments)
                        }
                    ]
                }
            }, [s("i", {
                staticClass: "cus-btn-transfer-note"
            })]) : t._e()], 1), t._v(" "), s("transfer-modal", {
                attrs: {
                    visible: t.transferActionVisible,
                    "enable-aic-summary": t.enableAicSummary,
                    "warm-transfer-handler": t.warmTransferHandler,
                    "enable-voicemail-transfer": t.showInbox,
                    "direct-transfer-handler": t.directTransferHandler,
                    "voicemail-transfer-handler": t.voicemailTransferHandler,
                    "enable-direct-transfer": t.enableDirectTransfer,
                    "enable-warm-transfer": !t.hideWarmTransfer,
                    "enable-zp-voicemail-transfer": !!t.isZPVoicemail,
                    "zp-voicemail-transfer-handler": t.voicemailZPTransferHandler,
                    "transferred-target": t.transferSelectRes ? t.transferSelectRes.target : null,
                    "transfer-with-note": t.onlyTransferNoteMode && t.directTransferType ? t.directTransferType : void 0
                },
                on: {
                    close: function(b) {
                        t.transferActionVisible = !1
                    },
                    closed: function(b) {
                        t.onlyTransferNoteMode = !1
                    },
                    transferContextChanged: t.setTransferContext
                }
            })] : s("zm-dropdown", {
                staticClass: "transfer-dropdown",
                staticStyle: {
                    width: "100%"
                },
                attrs: {
                    placement: "bottom",
                    trigger: "click"
                },
                on: {
                    command: t.handleTransferCommand,
                    "visible-change": t.toggleTransferDropdown
                }
            }, [s("div", {
                staticClass: "flex-center transfer-btn-wrap"
            }, [s("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: t.transferDropdownLoading,
                    expression: "transferDropdownLoading"
                }],
                class: "cus-call-btns cus-btn-blue ".concat(t.transferDropdownVisible ? "cus-btn-hover" : "")
            }, [s("i", {
                staticClass: "cus-btn-transfer-white"
            })])]), t._v(" "), s("zm-dropdown-menu", {
                staticClass: "transfer-dropdown__menu",
                attrs: {
                    slot: "dropdown"
                },
                slot: "dropdown"
            }, [s("zm-dropdown-item", {
                class: [{
                    disabled: t.showInbox
                }],
                attrs: {
                    disabled: t.showInbox,
                    command: "blind"
                }
            }, [s("div", {
                staticClass: "transfer-title"
            }, [t._v(`
              ` + t._s(t.$t("callbar.phone.blindTransfer")) + `
            `)]), t._v(" "), s("div", {
                staticClass: "transfer-subTitle"
            }, [t._v(`
              ` + t._s(t.$t("callbar.phone.blindTransferTip")) + `
            `)])]), t._v(" "), t.hideWarmTransfer ? t._e() : s("zm-dropdown-item", {
                class: [{
                    disabled: t.disableWarmTransferButton
                }],
                attrs: {
                    disabled: t.disableWarmTransferButton,
                    command: "warm"
                }
            }, [s("div", {
                staticClass: "transfer-title"
            }, [t._v(`
              ` + t._s(t.$t("callbar.phone.warmTransfer")) + `
            `)]), t._v(" "), s("div", {
                staticClass: "transfer-subTitle"
            }, [t._v(`
              ` + t._s(t.$t("callbar.phone.warmTransferTip")) + `
            `)])]), t._v(" "), t.showInbox ? s("zm-dropdown-item", {
                attrs: {
                    command: "inbox"
                }
            }, [s("div", {
                staticClass: "transfer-title"
            }, [t._v(`
              ` + t._s(t.$t("callbar.phone.inboxTransfer")) + `
            `)]), t._v(" "), s("div", {
                staticClass: "transfer-subTitle"
            }, [t._v(`
              ` + t._s(t.$t("callbar.phone.inboxTransferTip")) + `
            `)])]) : t._e(), t._v(" "), t.isZPVoicemail ? s("zm-dropdown-item", {
                attrs: {
                    command: "voicemailZP",
                    disabled: t.ZPTransferLoading
                }
            }, [s("div", {
                staticClass: "transfer-title"
            }, [t._v(`
              ` + t._s(t.$t("callbar.phone.transferVoicemail")) + `
            `)]), t._v(" "), s("div", {
                staticClass: "transfer-subTitle"
            }, [t._v(`
              ` + t._s(t.$t("callbar.phone.transferVoicemailTip")) + `
            `)])]) : t._e(), t._v(" "), s("zm-dropdown-item", {
                attrs: {
                    command: "cancel"
                }
            }, [s("a", {
                staticClass: "cancel-show-transfer-menu"
            }, [t._v(t._s(t.$t("cci.common.button.cancel")))])])], 1)], 1)], 2) : t._e(), t._v(" "), s("section", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !t.showKeypad && !t.showTransferPad && !t.showAddCallPanel,
                    expression: "!showKeypad && !showTransferPad && !showAddCallPanel"
                }],
                staticClass: "btn-area"
            }, [t.showEnterExt ? s("extension", {
                attrs: {
                    ext: t.callReservation.task.attributes.callExtensionNumber,
                    "task-id": t.callReservation.task.id
                }
            }) : t._e(), t._v(" "), t.isWarmConferenceTwoLegs ? s("ConferenceLegs", {
                ref: "conferenceLegs",
                attrs: {
                    candidates: t.conferenceMembers,
                    params: t.warmConferenceParams,
                    "call-name": t.callName
                }
            }) : t._e(), t._v(" "), t.isWarmTransferTwoLegs ? s("TransferLegs", {
                ref: "transferLegs",
                attrs: {
                    "call-name": t.callName
                }
            }) : t._e(), t._v(" "), s("div", {
                staticClass: "row-container"
            }, [s("call-actions", {
                ref: "callActions",
                attrs: {
                    reservation: t.callReservation,
                    transferring: t.transferring,
                    monitoring: t.isMonitorCall,
                    "is-conference": t.isConference,
                    candidates: t.conferenceMembers,
                    transcribing: t.transcriptEnabled,
                    "disable-live-transcription-button": t.disableLiveTranscriptionButton,
                    "show-transcript-button": t.showTranscriptButton,
                    "enable-message-history": t.enableMessageHistory
                },
                on: {
                    "click-transcribe": t.onClickTranscript,
                    "click-message-history": t.showMessageHistory
                }
            })], 1), t._v(" "), t.transferring ? s("div", {
                staticStyle: {
                    "margin-top": "16px"
                }
            }, [t.transferAccepted && !t.isWarmTransferMainleg ? s("div", {
                staticClass: "transfer-control transfer-complete",
                on: {
                    click: t.completeTransfer
                }
            }, [t._v(`
          ` + t._s(t.$t("callbar.phone.completeTransfer")) + `
        `)]) : t._e(), t._v(" "), t.transferAccepted && t.isZPVoicemail && !t.isWarmTransferMainleg ? s("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: t.ZPTransferLoading,
                    expression: "ZPTransferLoading"
                }],
                staticClass: "transfer-control transfer-to-voicemail",
                on: {
                    click: t.transferZPVoicemail
                }
            }, [s("span", {
                staticClass: "content"
            }, [t._v(t._s(t.$t("callbar.phone.transferVoicemail")))])]) : t._e(), t._v(" "), t.isWarmTransferMainleg ? t._e() : s("div", {
                staticClass: "transfer-control transfer-cancel",
                on: {
                    click: t.cancelTransfer
                }
            }, [t._v(`
          ` + t._s(t.$t("callbar.phone.cancelTransfer")) + `
        `)])]) : s("div", {
                staticClass: "row-container"
            }, [s("div", {
                staticClass: "btn-row",
                attrs: {
                    id: "last-row"
                }
            }, [!t.isMonitorCall && !t.needLeaveAssign ? s("span", {
                attrs: {
                    tabindex: "0",
                    role: "button",
                    "aria-label": "End call"
                },
                on: {
                    click: t.normalHangUp,
                    keydown: function(b) {
                        var S;
                        return !tn()(S = b.type).call(S, "key") && t._k(b.keyCode, "space", 32, b.key, [" ", "Spacebar"]) ? null : t.normalHangUp.apply(null, arguments)
                    }
                }
            }, [t._m(0)]) : !t.isMonitorCall && t.needLeaveAssign ? s("span", {
                attrs: {
                    tabindex: "0",
                    role: "button",
                    "aria-label": t.$t("cci.callBar.endCall")
                }
            }, [t.showAssignLeave ? s("div", {
                directives: [{
                    name: "clickoutside",
                    rawName: "v-clickoutside",
                    value: function() {
                        return t.showAssignLeave = !1
                    },
                    expression: "() => (showAssignLeave = false)"
                }],
                staticClass: "assign-leave"
            }, [s("p", {
                on: {
                    click: function() {
                        return t.hangUpCall(1)
                    }
                }
            }, [t._v(`
                ` + t._s(t.$t("callbar.monitor.barge.endAll")) + `
              `)]), t._v(" "), s("p", {
                on: {
                    click: t.chooseAssignAgent
                }
            }, [t._v(`
                ` + t._s(t.$t("callbar.monitor.barge.leave")) + `
              `)])]) : t._e(), t._v(" "), t.showChooseAssignAgent ? s("div", {
                directives: [{
                    name: "clickoutside",
                    rawName: "v-clickoutside",
                    value: function() {
                        return t.showChooseAssignAgent = !1
                    },
                    expression: "() => (showChooseAssignAgent = false)"
                }],
                staticClass: "choose-assign-agent"
            }, [s("p", {
                staticClass: "assign-agent-title"
            }, [t._v(`
                ` + t._s(t.$t("callbar.conference.role.assignAgent.title")) + `
              `)]), t._v(" "), s("ul", t._l(t.canAssignAgents, function(h) {
                return s("li", {
                    key: h.userId
                }, [s("assign-agent", {
                    attrs: {
                        data: h
                    },
                    on: {
                        assignLeave: t.handleAssign
                    }
                })], 1)
            }), 0), t._v(" "), s("p", {
                staticClass: "cancel-assign",
                on: {
                    click: function(b) {
                        t.showChooseAssignAgent = !1
                    }
                }
            }, [t._v(`
                ` + t._s(t.$t("cci.common.button.cancel")) + `
              `)])]) : t._e(), t._v(" "), s("div", {
                staticClass: "cus-call-btns cus-btn-red",
                on: {
                    click: function(b) {
                        t.showAssignLeave = !0
                    }
                }
            }, [s("i", {
                staticClass: "cus-btn-hangup"
            })])]) : t._e()])])], 1), t._v(" "), s("choose-skills", {
                ref: "chooseSkills",
                attrs: {
                    "queue-id": t.transferSelectRes && t.transferSelectRes.isQueue ? t.transferSelectRes.target.id : ""
                },
                on: {
                    transfer: t.handleChooseSkill
                },
                model: {
                    value: t.chooseSkillVisible,
                    callback: function(b) {
                        t.chooseSkillVisible = b
                    },
                    expression: "chooseSkillVisible"
                }
            }), t._v(" "), s("section", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.showAddCallPanel,
                    expression: "showAddCallPanel"
                }]
            }, [s("zm-button", {
                staticStyle: {
                    left: "-3vw",
                    top: "10px"
                },
                attrs: {
                    icon: "zm-icon-left",
                    type: "link"
                },
                on: {
                    click: function(b) {
                        return t.setUIState({
                            showAddCallPanel: !1
                        })
                    }
                }
            }, [t._v(t._s(t.$t("cci.callBar.call")))]), t._v(" "), s("addCall", {
                ref: "addCall",
                attrs: {
                    reservation: t.callReservation,
                    "enable-assign-host": t.enableAssignHost,
                    candidates: t.conferenceMembers
                },
                on: {
                    inviting: t.onInviting
                }
            })], 1), t._v(" "), s("choose-inboxes", {
                ref: "chooseInboxes",
                attrs: {
                    "user-id": t.transferSelectRes && t.transferSelectRes.target && t.transferSelectRes.target.isInbox ? t.transferSelectRes.target.id : ""
                },
                on: {
                    transfer: t.handleChooseInbox
                }
            })], 1), t._v(" "), s("Confirm", {
                attrs: {
                    visible: t.confirmVisible,
                    title: t.confirmTitle,
                    message: t.confirmMessage,
                    "cancel-text": t.cancelButtonText,
                    "confirm-text": t.confirmButtonText,
                    "confirmbutton-loading": t.confirmbuttonLoading,
                    danger: t.confirmDanger
                },
                on: {
                    confirm: function(b) {
                        return t.onConfirm()
                    },
                    close: function(b) {
                        t.confirmVisible = !1
                    }
                }
            }), t._v(" "), t.transcriptEnabled ? s("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.showTranscription,
                    expression: "showTranscription"
                }],
                staticClass: "transcript__wrapper"
            }, [t.isAgentAssistTranscription ? s("Transcript", {
                staticClass: "transcript-container",
                staticStyle: {
                    height: "100%"
                },
                attrs: {
                    "business-id": t.businessId,
                    "is-agent-assist-transcription": t.isAgentAssistTranscription,
                    visible: t.showTranscription,
                    "enable-change": t.showLanguageButton,
                    "show-close": !1
                },
                on: {
                    "change-language": t.handleChangeLanguage,
                    confirmOpenTranscript: t.toggleTranscription
                }
            }) : s("Transcript", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: t.transcriptionLoading,
                    expression: "transcriptionLoading"
                }],
                staticClass: "transcript-container",
                staticStyle: {
                    height: "100%"
                },
                attrs: {
                    "enable-change": t.showLanguageButton,
                    "show-close": !1
                },
                on: {
                    "change-language": t.handleChangeLanguage
                }
            }), t._v(" "), t.showTranscription ? s("zm-button", {
                staticClass: "transcript__button--back",
                attrs: {
                    icon: "zm-icon-left",
                    type: "link"
                },
                on: {
                    click: function(b) {
                        return t.updateShowTranscript(!1)
                    }
                }
            }, [t._v(`
      ` + t._s(t.$t("cci.callBar.call")) + `
    `)]) : t._e()], 1) : t._e(), t._v(" "), t.enableMessageHistory ? s("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.displayMessageHistory,
                    expression: "displayMessageHistory"
                }],
                staticClass: "message-history__wrapper"
            }, [s("MessageHistory", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.displayMessageHistory,
                    expression: "displayMessageHistory"
                }],
                attrs: {
                    "show-close": !1
                }
            }, [s("zm-button", {
                style: {
                    position: "absolute",
                    left: "12px",
                    padding: 0
                },
                attrs: {
                    icon: "zm-icon-left",
                    type: "link"
                },
                on: {
                    click: t.hideMessageHistory
                }
            }, [t._v(`
        ` + t._s(t.$t("cci.callBar.call")) + `
      `)])], 1)], 1) : t._e(), t._v(" "), s("TranscriptModal", {
                attrs: {
                    visible: t.showTranscriptModal,
                    languages: t.transcriptionLanguages,
                    "current-language-code": t.transcriptLanguageCode
                },
                on: {
                    start: t.handleStartTranscript,
                    close: t.closeModal
                }
            }), t._v(" "), s("TranscriptCloseConfirm", {
                attrs: {
                    visible: t.showTranscriptCloseConfirm
                },
                on: {
                    close: function(b) {
                        t.showTranscriptCloseConfirm = !1
                    },
                    confirm: t.handleConfirmStop
                }
            }), t._v(" "), t.mediaFailed ? s("MediaFailureWarning") : t._e()], 1)
        }
            , cr = [function() {
            var u = this
                , t = u._self._c;
            return t("div", {
                staticClass: "cus-call-btns cus-btn-red"
            }, [t("i", {
                staticClass: "cus-btn-hangup"
            })])
        }
        ]
            , Rr = a(12608)
            , Pr = a.n(Rr)
            , rt = a(37082)
            , ae = a.n(rt)
            , de = a(76856)
            , ye = a(5513)
            , Le = a(29500)
            , Te = a(13447);
        function be(u) {
            "@babel/helpers - typeof";
            return be = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                be(u)
        }
        function me(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function He(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = me(Object(b), !0)).call(s, function(S) {
                    Ct(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = me(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function Ct(u, t, s) {
            return (t = wt(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function wt(u) {
            var t = Bt(u, "string");
            return be(t) == "symbol" ? t : t + ""
        }
        function Bt(u, t) {
            if (be(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (be(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        var En = function() {
            var t, s = this, h = s._self._c;
            return h("div", {
                staticClass: "idlepanel-container"
            }, [h("div", {
                staticClass: "idlepanel"
            }, [h("div", {
                staticClass: "add-call"
            }, [s._v(s._s(s.$t("callbar.phone.addCall")))]), s._v(" "), h("div", {
                staticClass: "number"
            }, [h("contact-search", {
                ref: "contactsearch",
                attrs: {
                    zp: s.enableSearchZPContacts,
                    addressbook: s.enableSearchAddressBookContacts,
                    zcc: "",
                    label: s.$t("cci.dialPanel.enterANumber"),
                    "show-flow": !1,
                    ZCCAgentsNotShow: s.ZCCAgentsNotShow,
                    "enable-assign-host": s.enableAssignHost,
                    "business-id": s.businessId,
                    "queue-id": s.queueId,
                    "is-add-call": "",
                    "is-active-call": ""
                },
                on: {
                    select: s.onSelectContact,
                    input: s.clearContactInfo,
                    enter: function(S) {
                        return s.invite("direct")
                    },
                    startLoadingQueueList: function(S) {
                        s.loadingQueueList = !0
                    },
                    stopLoadingQueueList: function(S) {
                        s.loadingQueueList = !1
                    },
                    dropdownVisibleChange: s.onDropdownVisibleChange
                },
                model: {
                    value: s.obcallTo,
                    callback: function(S) {
                        s.obcallTo = S
                    },
                    expression: "obcallTo"
                }
            })], 1), s._v(" "), s.targetQueue && s.targetQueue.name ? h("div", {
                staticClass: "invited-name"
            }, [s._v(`
      (` + s._s(s.targetQueue.name) + `)
    `)]) : !((t = s.invitedTarget) !== null && t !== void 0 && t.isQueue) && s.invitedName ? h("div", {
                staticClass: "invited-name"
            }, [s._v(`
      (` + s._s(s.invitedName) + `)
    `)]) : s._e(), s._v(" "), h("key-pad", {
                staticStyle: {
                    margin: "0 auto"
                },
                on: {
                    press: s.press
                }
            }), s._v(" "), s.enableConferenceWithoutSelection ? h("div", {
                staticStyle: {
                    width: "320px"
                }
            }, [h("div", {
                class: {
                    call: !0,
                    disabled: s.disabledNewInviteButton
                },
                attrs: {
                    tabindex: "0",
                    role: "button",
                    "aria-label": "Add call button"
                },
                on: {
                    click: s.handleConferenceWithoutSelection
                }
            })]) : h("AddCallBtn", {
                attrs: {
                    disabled: s.disableInviteButton
                },
                on: {
                    direct: function() {
                        return s.invite("direct")
                    },
                    warm: function() {
                        return s.invite("warm")
                    }
                }
            }), s._v(" "), s.enableNewCallerIdSelector && s.callerIdList.length > 0 ? h("new-caller-id-selector", {
                ref: "callerIdSelector"
            }) : s.enableNewCallerIdSelector ? s._e() : h("caller-id-selector", {
                ref: "callerIdSelector",
                attrs: {
                    value: s.callerid,
                    "checked-id": s.checkedId,
                    numbers: s.numbers,
                    loading: s.loadingNumbers
                },
                on: {
                    change: s.onCallerIdChange,
                    open: s.getNumbers,
                    refreshCallerNumberList: function() {
                        var S = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                        return s.getNumbers(He({
                            needRefresh: !0
                        }, S))
                    }
                }
            }), s._v(" "), h("choose-skills", {
                ref: "addCallchooseSkills",
                attrs: {
                    "is-add-call": "",
                    "queue-id": s.invitedTarget && s.invitedTarget.isQueue ? s.invitedTarget.id : ""
                },
                on: {
                    transfer: s.handleChooseAddCallSkill
                },
                model: {
                    value: s.chooseAddCallSkillVisible,
                    callback: function(S) {
                        s.chooseAddCallSkillVisible = S
                    },
                    expression: "chooseAddCallSkillVisible"
                }
            })], 1)])
        }
            , Pe = []
            , W = a(15094)
            , Ee = a.n(W)
            , nt = a(72402)
            , Ie = a(27313)
            , Be = function() {
            var t, s = this, h = s._self._c;
            return h("div", {
                directives: [{
                    name: "clickoutside",
                    rawName: "v-clickoutside",
                    value: function() {
                        return s.isShowChoose = !1
                    },
                    expression: "() => (isShowChoose = false)"
                }],
                staticClass: "zm-dial-panel-caller-id"
            }, [h("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: s.loading,
                    expression: "loading"
                }],
                ref: "callerid",
                staticClass: "call-ids-wrap",
                style: s.loading ? {
                    cursor: "not-allowed"
                } : {},
                attrs: {
                    tabindex: "0",
                    type: "button",
                    "aria-haspopup": "true",
                    "aria-label": Pr()(t = "".concat(s.$t("callbar.callerId.name"), " ")).call(t, s.callerid),
                    "aria-controls": "callerids-menu",
                    "aria-expanded": s.isShowChoose
                },
                on: {
                    click: function(S) {
                        s.isShowChoose = !s.isShowChoose
                    },
                    keydown: [function(b) {
                        var S;
                        return !tn()(S = b.type).call(S, "key") && s._k(b.keyCode, "space", 32, b.key, [" ", "Spacebar"]) ? null : s.openFromKeyboard.apply(null, arguments)
                    }
                        , function(b) {
                            var S;
                            return !tn()(S = b.type).call(S, "key") && s._k(b.keyCode, "enter", 13, b.key, "Enter") ? null : s.openFromKeyboard.apply(null, arguments)
                        }
                    ]
                }
            }, [h("span", [s._v(`
      ` + s._s(s.$t("callbar.callerId.name")) + `:
      ` + s._s(s._f("phoneNumber")(s.callerid, s.currentAgent.countryOrRegion)) + `
    `)]), s._v(" "), h("div", {
                staticClass: "showmore"
            })]), s._v(" "), s.isShowChoose ? h("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: s.loading,
                    expression: "loading"
                }],
                ref: "menu",
                staticClass: "call-ids-cont",
                attrs: {
                    id: "callerids-menu",
                    role: "menu"
                }
            }, [h("div", {
                staticClass: "call-ids-cont_title"
            }, [s._v(s._s(s.$t("callbar.callerId.name")))]), s._v(" "), h("zm-input", {
                ref: "searchRef",
                attrs: {
                    placeholder: s.$t("cci.phoneNumber.search"),
                    clearable: ""
                },
                model: {
                    value: s.keyword,
                    callback: function(S) {
                        s.keyword = S
                    },
                    expression: "keyword"
                }
            }), s._v(" "), h("div", {
                staticClass: "caller-id-list-wrapper"
            }, s._l(s.filteredCallerIdList, function(b, S) {
                var B, se, Z, oe, Wt, $t, Yn, Qn, mn, Fn, Vt;
                return h("button", {
                    key: s.getSelfId(b),
                    staticClass: "call-ids-cont_list",
                    class: {
                        "call-ids-cont_list_disabled": b.subStatus === 1,
                        active: s.checkedId === s.getSelfId(b)
                    },
                    attrs: {
                        tabindex: "-1",
                        role: "menuitem",
                        disabled: b.subStatus === 1,
                        "aria-label": Pr()(B = "".concat(b.queueName, " ")).call(B, b.number)
                    },
                    on: {
                        click: function(Cr) {
                            return s.onselect(b)
                        },
                        keydown: [function(Ir) {
                            var Cr;
                            return !tn()(Cr = Ir.type).call(Cr, "key") && s._k(Ir.keyCode, "down", 40, Ir.key, ["Down", "ArrowDown"]) ? null : function(On) {
                                return s.buttonOnkeydown(On, S, 1)
                            }
                                .apply(null, arguments)
                        }
                            , function(Ir) {
                                var Cr;
                                return !tn()(Cr = Ir.type).call(Cr, "key") && s._k(Ir.keyCode, "up", 38, Ir.key, ["Up", "ArrowUp"]) ? null : function(On) {
                                    return s.buttonOnkeydown(On, S, -1)
                                }
                                    .apply(null, arguments)
                            }
                        ]
                    }
                }, [s.checkedId === s.getSelfId(b) ? h("div", {
                    staticClass: "call-ids-cont_list_icon"
                }) : s._e(), s._v(" "), h("div", {
                    staticClass: "call-ids-cont_list_name"
                }, [b.highlightQueueName ? [h("span", [s._v(s._s((se = (Z = b.highlightQueueName) === null || Z === void 0 ? void 0 : Z.prefix) !== null && se !== void 0 ? se : "")), h("strong", [s._v(s._s((oe = b.highlightQueueName) === null || oe === void 0 ? void 0 : oe.highlight))]), s._v(s._s((Wt = ($t = b.highlightQueueName) === null || $t === void 0 ? void 0 : $t.suffix) !== null && Wt !== void 0 ? Wt : "") + `
            `)]), s._v(`
            ` + s._s(b.defaultQueue ? " (default)" : "") + `
          `)] : [s._v(`
            ` + s._s(b.queueName) + s._s(b.defaultQueue ? " (default)" : "") + `
          `)]], 2), s._v(" "), h("div", {
                    staticClass: "call-ids-cont_list_num"
                }, [b.highlightPhoneNumber ? [h("span", [s._v(s._s((Yn = (Qn = b.highlightPhoneNumber) === null || Qn === void 0 ? void 0 : Qn.prefix) !== null && Yn !== void 0 ? Yn : "")), h("strong", [s._v(s._s((mn = b.highlightPhoneNumber) === null || mn === void 0 ? void 0 : mn.highlight))]), s._v(s._s((Fn = (Vt = b.highlightPhoneNumber) === null || Vt === void 0 ? void 0 : Vt.suffix) !== null && Fn !== void 0 ? Fn : "") + `
            `)])] : [s._v(`
            ` + s._s(s._f("phoneNumber")(b.number, s.currentAgent.countryOrRegion)) + `
          `)]], 2)])
            }), 0), s._v(" "), h("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: s.keyword && s.filteredCallerIdList.length === 0,
                    expression: "keyword && filteredCallerIdList.length === 0"
                }],
                staticClass: "filtered-caller-ids"
            }, [s._v(`
      ` + s._s(s.$t("cci.common.noData")) + `
    `)])], 1) : s._e()])
        }
            , st = []
            , jt = a(18854)
            , _t = a.n(jt);
        function Ge(u) {
            "@babel/helpers - typeof";
            return Ge = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                Ge(u)
        }
        function It(u) {
            return De(u) || ct(u) || _n(u) || cn()
        }
        function cn() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function ct(u) {
            if (typeof Ae() < "u" && Tt()(u) != null || u["@@iterator"] != null)
                return rr()(u)
        }
        function De(u) {
            if (en()(u))
                return Jn(u)
        }
        function bt() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            bt = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && Ge(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(Ge(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function un(u, t) {
            return xe(u) || Ut(u, t) || _n(u, t) || ur()
        }
        function ur() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function _n(u, t) {
            if (u) {
                var s;
                if (typeof u == "string")
                    return Jn(u, t);
                var h = Ne()(s = {}.toString.call(u)).call(s, 8, -1);
                return h === "Object" && u.constructor && (h = u.constructor.name),
                    h === "Map" || h === "Set" ? rr()(u) : h === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(h) ? Jn(u, t) : void 0
            }
        }
        function Jn(u, t) {
            (t == null || t > u.length) && (t = u.length);
            for (var s = 0, h = Array(t); s < t; s++)
                h[s] = u[s];
            return h
        }
        function Ut(u, t) {
            var s = u == null ? null : typeof Ae() < "u" && Tt()(u) || u["@@iterator"];
            if (s != null) {
                var h, b, S, B, se = [], Z = !0, oe = !1;
                try {
                    if (S = (s = s.call(u)).next,
                    t === 0) {
                        if (Object(s) !== s)
                            return;
                        Z = !1
                    } else
                        for (; !(Z = (h = S.call(s)).done) && (se.push(h.value),
                        se.length !== t); Z = !0)
                            ;
                } catch (Wt) {
                    oe = !0,
                        b = Wt
                } finally {
                    try {
                        if (!Z && s.return != null && (B = s.return(),
                        Object(B) !== B))
                            return
                    } finally {
                        if (oe)
                            throw b
                    }
                }
                return se
            }
        }
        function xe(u) {
            if (en()(u))
                return u
        }
        function We(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function Nt(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            We(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            We(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        function hn(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function Ln(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = hn(Object(b), !0)).call(s, function(S) {
                    fn(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = hn(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function fn(u, t, s) {
            return (t = $e(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function $e(u) {
            var t = tt(u, "string");
            return Ge(t) == "symbol" ? t : t + ""
        }
        function tt(u, t) {
            if (Ge(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (Ge(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        var ot = Qe.phoneUtils.voiceApi
            , on = null;
        const Mr = {
            mixins: [Le.A],
            directives: {
                Clickoutside: ye.Clickoutside
            },
            props: {
                numbers: {
                    type: Array,
                    default: function() {
                        return []
                    }
                },
                value: {
                    type: String,
                    required: !0
                },
                checkedId: {
                    type: String,
                    default: ""
                },
                loading: {
                    type: Boolean,
                    default: !1
                }
            },
            data: function() {
                return {
                    keyword: "",
                    filteredCallerIdList: [],
                    isShowChoose: !1,
                    callerIdChangedTimeStamp: null,
                    isUpdatingCallerID: !1,
                    lastCallerIdNeedToUpdate: null
                }
            },
            model: {
                event: "change"
            },
            computed: Ln(Ln(Ln({}, (0,
                Yt.mapGetters)({
                currentAgent: "user"
            })), (0,
                Yt.mapGetters)("coreVoice", ["callerIdInfoFromZpns", "lastUsedCallerInfo", "callerIdList"])), {}, {
                selectedQueueName: function() {
                    var t, s = this, h = G()(t = this.callerIdList).call(t, function(b) {
                        return b.id === s.callerid
                    });
                    return h ? h.name : ""
                },
                callerid: function() {
                    var t, s, h;
                    return (t = (s = (h = this.lastUsedCallerInfo) === null || h === void 0 ? void 0 : h.number) !== null && s !== void 0 ? s : this.value) !== null && t !== void 0 ? t : ""
                },
                callerList: function() {
                    var t;
                    return (t = this.callerIdList) !== null && t !== void 0 && t.length ? this.callerIdList : this.numbers
                }
            }),
            methods: Ln(Ln({}, (0,
                Yt.mapActions)("coreVoice", ["setLastUsedCallerInfo"])), {}, {
                showCallerIdChangedNotification: function() {
                    on && (on.close(),
                        on = null),
                        on = this.nativeNotify(this.$t("callbar.phone.default.callerid.hasBeenChanged"), "", {}, 8e3)
                },
                callerIdChangedBySystem: function(t) {
                    var s = this
                        , h = typeof t.timestamp == "number" ? t.timestamp : null
                        , b = function(se) {
                        var Z, oe = se.phoneNumberId, Wt = se.queueId;
                        return G()(Z = s.numbers).call(Z, function($t) {
                            return $t.numberId === oe && $t.queueId === Wt
                        })
                    }
                        , S = b(t);
                    S ? (!this.callerIdChangedTimeStamp || _t()(h).isAfter(this.callerIdChangedTimeStamp)) && (this.callerIdChangedTimeStamp = h,
                        this.$emit("change", S),
                        this.setLastUsedCallerInfo(S)) : (S = t,
                        this.showCallerIdChangedNotification(),
                        this.$emit("refreshCallerNumberList", {
                            fromZpns: !0,
                            numberInfo: S
                        }))
                },
                checkIfLastCallerIdExist: function() {
                    if (this.lastCallerIdNeedToUpdate) {
                        var t = this.lastCallerIdNeedToUpdate;
                        this.lastCallerIdNeedToUpdate = null,
                            this.updateOutboundCallerId(t)
                    }
                },
                updateOutboundCallerId: function(t) {
                    var s = this;
                    return Nt(bt().mark(function h() {
                        var b, S, B, se, Z, oe, Wt, $t;
                        return bt().wrap(function(Qn) {
                            for (; ; )
                                switch (Qn.prev = Qn.next) {
                                    case 0:
                                        if (!s.isUpdatingCallerID) {
                                            Qn.next = 3;
                                            break
                                        }
                                        return s.lastCallerIdNeedToUpdate = t,
                                            Qn.abrupt("return");
                                    case 3:
                                        if (B = (b = t?.queueId) !== null && b !== void 0 ? b : "",
                                            se = (S = t?.numberId) !== null && S !== void 0 ? S : "",
                                            !(!B || !se)) {
                                            Qn.next = 7;
                                            break
                                        }
                                        return Qn.abrupt("return");
                                    case 7:
                                        return s.isUpdatingCallerID = !0,
                                            Qn.next = 10,
                                            (0,
                                                Qe.tryApiCatch)(ot.updateOutboundCallerId, {
                                                channel: Qe.QUEUE_CHANNEL_TYPE.VOICE,
                                                queueId: B,
                                                phoneNumberId: se
                                            });
                                    case 10:
                                        if (Z = Qn.sent,
                                            oe = un(Z, 2),
                                            Wt = oe[0],
                                            $t = oe[1],
                                            s.isUpdatingCallerID = !1,
                                            !Wt) {
                                            Qn.next = 18;
                                            break
                                        }
                                        return s.checkIfLastCallerIdExist(),
                                            Qn.abrupt("return", s.$message.error(Wt));
                                    case 18:
                                        $t === "needRefresh" ? (s.lastCallerIdNeedToUpdate = null,
                                            s.showCallerIdChangedNotification(),
                                            s.$emit("refreshCallerNumberList")) : s.checkIfLastCallerIdExist();
                                    case 19:
                                    case "end":
                                        return Qn.stop()
                                }
                        }, h)
                    }))()
                },
                onselect: function(t) {
                    this.$emit("change", t),
                        this.$refs.callerid.focus(),
                        this.setLastUsedCallerInfo(t),
                        this.updateOutboundCallerId(t)
                },
                openFromKeyboard: function() {
                    var t = this;
                    return Nt(bt().mark(function s() {
                        var h;
                        return bt().wrap(function(S) {
                            for (; ; )
                                switch (S.prev = S.next) {
                                    case 0:
                                        if (t.isShowChoose = !t.isShowChoose,
                                            !t.isShowChoose) {
                                            S.next = 6;
                                            break
                                        }
                                        return S.next = 4,
                                            t.$nextTick();
                                    case 4:
                                        h = t.$refs.menu.querySelector("button"),
                                        h && (h.setAttribute("tabindex", "0"),
                                            h.focus());
                                    case 6:
                                    case "end":
                                        return S.stop()
                                }
                        }, s)
                    }))()
                },
                buttonOnkeydown: function(t, s, h) {
                    t.target.setAttribute("tabindex", "-1");
                    var b = this.$refs.menu.querySelectorAll("button")
                        , S = b[s + h];
                    S && (S.setAttribute("tabindex", "0"),
                        S.focus())
                },
                getSelfId: function(t) {
                    var s = t.queueId
                        , h = t.number
                        , b = t.studioId;
                    return s + h + b
                }
            }),
            watch: {
                isShowChoose: function(t) {
                    var s = this;
                    t ? (this.$emit("open"),
                        this.$nextTick(function() {
                            var h;
                            return (h = s.$refs.searchRef) === null || h === void 0 ? void 0 : h.focus()
                        })) : this.keyword = ""
                },
                callerIdInfoFromZpns: function(t) {
                    (0,
                        Qe.isPlainObject)(t) && D()(t).length && this.callerIdChangedBySystem(t)
                },
                callerIdList: function(t) {
                    this.keyword || (this.filteredCallerIdList = It(t ?? []))
                },
                keyword: {
                    handler: function(t) {
                        var s, h;
                        if (!t) {
                            this.filteredCallerIdList = It(this.callerIdList);
                            return
                        }
                        this.filteredCallerIdList = (0,
                            Qe.searchCallerIDs)({
                            numbers: this.callerIdList,
                            keyword: t,
                            countryOrRegion: (s = (h = this.currentAgent) === null || h === void 0 ? void 0 : h.countryOrRegion) !== null && s !== void 0 ? s : ""
                        })
                    },
                    immediate: !0
                }
            }
        };
        var Jt = (0,
            Ue.A)(Mr, Be, st, !1, null, "3b1eb3de", null);
        const Dt = Jt.exports;
        var an = function() {
            var t = this
                , s = t._self._c
                , h = t._self._setupProxy;
            return s(h.ContactSearch, t._g(t._b({
                ref: "contactSearchRef",
                on: {
                    dropdownVisibleChange: h.handleUpdateShowPopper
                }
            }, "ContactSearch", t.$attrs, !1), t.$listeners))
        }
            , Bn = []
            , vn = a(11876)
            , nn = a.n(vn);
        const tr = nn();
        var Ve = (0,
            Ue.A)(tr, an, Bn, !1, null, null, null);
        const R = Ve.exports;
        var ce = function() {
            var t = this
                , s = t._self._c;
            return s("div", {
                staticClass: "keypad",
                attrs: {
                    "aria-label": "Keypad list",
                    tabindex: 0
                },
                on: {
                    keydown: t.handleKeyPadKeyDown,
                    focus: t.handleKeyPadFocus
                }
            }, [s("div", [s("span", {
                ref: "key_1",
                staticClass: "key",
                attrs: {
                    role: "button",
                    tabindex: t.activeIndex === 1 ? 0 : -1,
                    "aria-label": "1"
                },
                on: {
                    click: function(b) {
                        return t.onpress("1")
                    },
                    mousedown: function(b) {
                        return t.handleMouseDown("1")
                    },
                    mouseup: t.handleMouseUp
                }
            }, [s("span", {
                staticClass: "number"
            }, [t._v("1")])]), t._v(" "), s("span", {
                ref: "key_2",
                staticClass: "key",
                attrs: {
                    role: "button",
                    tabindex: t.activeIndex === 2 ? 0 : -1,
                    "aria-label": "2"
                },
                on: {
                    click: function(b) {
                        return t.onpress("2")
                    },
                    mousedown: function(b) {
                        return t.handleMouseDown("2")
                    },
                    mouseup: t.handleMouseUp
                }
            }, [s("span", {
                staticClass: "number"
            }, [t._v("2")]), t._v(" "), s("span", {
                staticClass: "text ABC"
            })]), t._v(" "), s("span", {
                ref: "key_3",
                staticClass: "key",
                attrs: {
                    role: "button",
                    tabindex: t.activeIndex === 3 ? 0 : -1,
                    "aria-label": "3"
                },
                on: {
                    click: function(b) {
                        return t.onpress("3")
                    },
                    mousedown: function(b) {
                        return t.handleMouseDown("3")
                    },
                    mouseup: t.handleMouseUp
                }
            }, [s("span", {
                staticClass: "number"
            }, [t._v("3")]), t._v(" "), s("span", {
                staticClass: "text DEF"
            })])]), t._v(" "), s("div", [s("span", {
                ref: "key_4",
                staticClass: "key",
                attrs: {
                    role: "button",
                    tabindex: t.activeIndex === 4 ? 0 : -1,
                    "aria-label": "4"
                },
                on: {
                    click: function(b) {
                        return t.onpress("4")
                    },
                    mousedown: function(b) {
                        return t.handleMouseDown("4")
                    },
                    mouseup: t.handleMouseUp
                }
            }, [s("span", {
                staticClass: "number"
            }, [t._v("4")]), t._v(" "), s("span", {
                staticClass: "text GHI"
            })]), t._v(" "), s("span", {
                ref: "key_5",
                staticClass: "key",
                attrs: {
                    role: "button",
                    tabindex: t.activeIndex === 5 ? 0 : -1,
                    "aria-label": "5"
                },
                on: {
                    click: function(b) {
                        return t.onpress("5")
                    },
                    mousedown: function(b) {
                        return t.handleMouseDown("5")
                    },
                    mouseup: t.handleMouseUp
                }
            }, [s("span", {
                staticClass: "number"
            }, [t._v("5")]), t._v(" "), s("span", {
                staticClass: "text JKL"
            })]), t._v(" "), s("span", {
                ref: "key_6",
                staticClass: "key",
                attrs: {
                    role: "button",
                    tabindex: t.activeIndex === 6 ? 0 : -1,
                    "aria-label": "6"
                },
                on: {
                    click: function(b) {
                        return t.onpress("6")
                    },
                    mousedown: function(b) {
                        return t.handleMouseDown("6")
                    },
                    mouseup: t.handleMouseUp
                }
            }, [s("span", {
                staticClass: "number"
            }, [t._v("6")]), t._v(" "), s("span", {
                staticClass: "text MNO"
            })])]), t._v(" "), s("div", [s("span", {
                ref: "key_7",
                staticClass: "key",
                attrs: {
                    role: "button",
                    tabindex: t.activeIndex === 7 ? 0 : -1,
                    "aria-label": "7"
                },
                on: {
                    click: function(b) {
                        return t.onpress("7")
                    },
                    mousedown: function(b) {
                        return t.handleMouseDown("7")
                    },
                    mouseup: t.handleMouseUp
                }
            }, [s("span", {
                staticClass: "number"
            }, [t._v("7")]), t._v(" "), s("span", {
                staticClass: "text PQRS"
            })]), t._v(" "), s("span", {
                ref: "key_8",
                staticClass: "key",
                attrs: {
                    role: "button",
                    tabindex: t.activeIndex === 8 ? 0 : -1,
                    "aria-label": "8"
                },
                on: {
                    click: function(b) {
                        return t.onpress("8")
                    },
                    mousedown: function(b) {
                        return t.handleMouseDown("8")
                    },
                    mouseup: t.handleMouseUp
                }
            }, [s("span", {
                staticClass: "number"
            }, [t._v("8")]), t._v(" "), s("span", {
                staticClass: "text TUV"
            })]), t._v(" "), s("span", {
                ref: "key_9",
                staticClass: "key",
                attrs: {
                    role: "button",
                    tabindex: t.activeIndex === 9 ? 0 : -1,
                    "aria-label": "9"
                },
                on: {
                    click: function(b) {
                        return t.onpress("9")
                    },
                    mousedown: function(b) {
                        return t.handleMouseDown("9")
                    },
                    mouseup: t.handleMouseUp
                }
            }, [s("span", {
                staticClass: "number"
            }, [t._v("9")]), t._v(" "), s("span", {
                staticClass: "text WXYZ"
            })])]), t._v(" "), s("div", [s("span", {
                ref: "key_10",
                staticClass: "key key-star",
                attrs: {
                    role: "button",
                    "aria-label": "*",
                    tabindex: t.activeIndex === 10 ? 0 : -1
                },
                on: {
                    click: function(b) {
                        return t.onpress("*")
                    },
                    mousedown: function(b) {
                        return t.handleMouseDown("*")
                    },
                    mouseup: t.handleMouseUp
                }
            }), t._v(" "), t.enableCrmLongPress ? s("span", {
                directives: [{
                    name: "longClick",
                    rawName: "v-longClick",
                    value: {
                        longPress: function() {
                            return t.onpress("+")
                        },
                        click: function(b) {
                            return t.onpress("0")
                        }
                    },
                    expression: `{
        longPress: () => onpress('+'),
        click: e => onpress('0'),
      }`
                }],
                ref: "key_11",
                staticClass: "key",
                attrs: {
                    role: "button",
                    tabindex: t.activeIndex === 11 ? 0 : -1,
                    "aria-label": "0"
                },
                on: {
                    mousedown: function(b) {
                        return t.handleMouseDown("0")
                    },
                    mouseup: t.handleMouseUp
                }
            }, [s("span", {
                staticClass: "number"
            }, [t._v("0")]), t._v(" "), s("span", {
                staticClass: "text plus"
            })]) : s("span", {
                ref: "key_11",
                staticClass: "key",
                attrs: {
                    role: "button",
                    tabindex: t.activeIndex === 11 ? 0 : -1,
                    "aria-label": "0"
                },
                on: {
                    click: function(b) {
                        return t.onpress("0")
                    },
                    mousedown: function(b) {
                        return t.handleMouseDown("0")
                    },
                    mouseup: t.handleMouseUp
                }
            }, [s("span", {
                staticClass: "number"
            }, [t._v("0")]), t._v(" "), s("span", {
                staticClass: "text plus"
            })]), t._v(" "), s("span", {
                ref: "key_12",
                staticClass: "key key-hash",
                attrs: {
                    role: "button",
                    "aria-label": "#",
                    tabindex: t.activeIndex === 12 ? 0 : -1
                },
                on: {
                    click: function(b) {
                        return t.onpress("#")
                    },
                    mousedown: function(b) {
                        return t.handleMouseDown("#")
                    },
                    mouseup: t.handleMouseUp
                }
            })])])
        }
            , gt = [];
        function Ft(u) {
            "@babel/helpers - typeof";
            return Ft = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                Ft(u)
        }
        function Kt(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function St(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = Kt(Object(b), !0)).call(s, function(S) {
                    Xt(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = Kt(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function Xt(u, t, s) {
            return (t = Rn(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function Rn(u) {
            var t = kn(u, "string");
            return Ft(t) == "symbol" ? t : t + ""
        }
        function kn(u, t) {
            if (Ft(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (Ft(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        var pr = (0,
            Ot.vLongClick)({
            delay: 1e3
        }), Or = {
            TAB: 9,
            SPACE: 32,
            LEFT: 37,
            UP: 38,
            RIGHT: 39,
            DOWN: 40
        }, we = {
            10: "*",
            11: "0",
            12: "#"
        }, lr;
        function Tr(u) {
            (0,
                Qe.playDtmf)(u),
            lr && clearTimeout(lr),
                lr = K()(function() {
                    (0,
                        Qe.stopDtmf)(),
                        lr = null
                }, 500)
        }
        const Ur = {
            name: "Keypad",
            directives: {
                longClick: pr
            },
            data: function() {
                return {
                    keyPadIsFocus: !1,
                    activeIndex: -1
                }
            },
            watch: {
                activeIndex: function(t) {
                    var s;
                    t !== -1 && ((s = this.$refs["key_".concat(t)]) === null || s === void 0 || s.focus())
                }
            },
            computed: St(St(St({}, (0,
                Yt.mapState)("common", ["features"])), (0,
                Yt.mapGetters)(["nacosConfig"])), {}, {
                enableCrmLongPress: function() {
                    var t;
                    return ((t = this.nacosConfig) === null || t === void 0 ? void 0 : t.disableCrmLongPress) !== "true"
                }
            }),
            mounted: function() {
                var t;
                (t = this.features) !== null && t !== void 0 && t.enableKeyboardSound && (0,
                    Qe.initialDtmf)()
            },
            methods: {
                onpress: function(t) {
                    this.$emit("press", t)
                },
                handleMouseDown: function(t) {
                    Tr(t)
                },
                handleMouseUp: function() {
                    (0,
                        Qe.stopDtmf)()
                },
                handleKeyPadKeyDown: function(t) {
                    var s;
                    if (this.keyPadIsFocus) {
                        if (t.keyCode === Or.TAB) {
                            this.activeIndex = -1,
                                this.keyPadIsFocus = !1;
                            return
                        }
                        if (t.preventDefault(),
                            O()(s = [Or.LEFT, Or.UP, Or.RIGHT, Or.DOWN]).call(s, t.keyCode)) {
                            if (this.activeIndex === -1) {
                                this.activeIndex = 1;
                                return
                            }
                            Or.LEFT === t.keyCode && this.activeIndex - 1 > 0 && (this.activeIndex -= 1),
                            Or.RIGHT === t.keyCode && this.activeIndex + 1 < 13 && (this.activeIndex += 1),
                            Or.UP === t.keyCode && this.activeIndex - 3 > 0 && (this.activeIndex -= 3),
                            Or.DOWN === t.keyCode && this.activeIndex + 3 < 13 && (this.activeIndex += 3)
                        }
                        t.keyCode === 32 && this.activeIndex !== -1 && this.$emit("press", this.activeIndex > 9 ? we[this.activeIndex] : this.activeIndex)
                    }
                },
                handleKeyPadFocus: function() {
                    this.activeIndex = -1,
                        this.keyPadIsFocus = !0
                }
            }
        };
        var Hr = (0,
            Ue.A)(Ur, ce, gt, !1, null, "0aadce5c", null);
        const Yr = Hr.exports;
        var mr = function() {
            var t = this
                , s = t._self._c;
            return s("zm-dropdown", {
                staticClass: "addconferenceoption-popover",
                staticStyle: {
                    width: "320px"
                },
                attrs: {
                    placement: "top",
                    trigger: "click",
                    disabled: t.disabled
                },
                on: {
                    command: t.handleAddCallCommand
                }
            }, [s("div", {
                class: {
                    call: !0,
                    disabled: t.disabled
                },
                attrs: {
                    tabindex: "0",
                    role: "button",
                    "aria-label": "Call button"
                }
            }), t._v(" "), s("zm-dropdown-menu", {
                attrs: {
                    slot: "dropdown"
                },
                slot: "dropdown"
            }, [s("zm-dropdown-item", {
                staticClass: "addconferenceoption",
                attrs: {
                    command: "direct"
                }
            }, [s("div", {
                staticClass: "addconferenceoption-name"
            }, [t._v(`
        ` + t._s(t.$t("callbar.phone.directConferenceTitle")) + `
      `)]), t._v(" "), s("div", {
                staticClass: "addconferenceoption-desc"
            }, [t._v(`
        ` + t._s(t.$t("callbar.phone.directConferenceDesc")) + `
      `)])]), t._v(" "), s("zm-dropdown-item", {
                class: {
                    addconferenceoption: !0,
                    disabled: t.disableWarmAddCall
                },
                staticStyle: {
                    "margin-top": "0"
                },
                attrs: {
                    command: "warm",
                    disabled: t.disableWarmAddCall
                }
            }, [s("div", {
                staticClass: "addconferenceoption-name"
            }, [t._v(`
        ` + t._s(t.$t("callbar.phone.warmConferenceTitle")) + `
      `)]), t._v(" "), s("div", {
                staticClass: "addconferenceoption-desc"
            }, [t._v(`
        ` + t._s(t.$t("callbar.phone.warmConferenceDesc")) + `
      `)])]), t._v(" "), s("zm-dropdown-item", {
                staticClass: "cancel-line",
                attrs: {
                    command: "cancel"
                }
            }, [s("a", [t._v(t._s(t.$t("cci.common.button.cancel")))])])], 1)], 1)
        }
            , Je = [];
        const bn = {
            name: "Addcallbtn",
            props: {
                disabled: {
                    type: Boolean,
                    default: !1
                }
            },
            setup: function() {
                var t = (0,
                    Ot.usePstnCall)()
                    , s = t.isPstn;
                return {
                    isPstn: s
                }
            },
            computed: {
                disableWarmAddCall: function() {
                    return this.isPstn
                }
            },
            methods: {
                handleAddCallCommand: function(t) {
                    (t === "direct" || t === "warm") && this.$emit(t)
                }
            }
        };
        var br = (0,
            Ue.A)(bn, mr, Je, !1, null, "280d9cef", null);
        const xr = br.exports;
        function ir(u) {
            "@babel/helpers - typeof";
            return ir = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                ir(u)
        }
        function Gr(u) {
            return aa(u) || Xr(u) || na(u) || Zr()
        }
        function Zr() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function na(u, t) {
            if (u) {
                var s;
                if (typeof u == "string")
                    return ra(u, t);
                var h = Ne()(s = {}.toString.call(u)).call(s, 8, -1);
                return h === "Object" && u.constructor && (h = u.constructor.name),
                    h === "Map" || h === "Set" ? rr()(u) : h === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(h) ? ra(u, t) : void 0
            }
        }
        function Xr(u) {
            if (typeof Ae() < "u" && Tt()(u) != null || u["@@iterator"] != null)
                return rr()(u)
        }
        function aa(u) {
            if (en()(u))
                return ra(u)
        }
        function ra(u, t) {
            (t == null || t > u.length) && (t = u.length);
            for (var s = 0, h = Array(t); s < t; s++)
                h[s] = u[s];
            return h
        }
        function kt() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            kt = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && ir(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(ir(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function et(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function ut(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            et(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            et(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        function Nn(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function qn(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = Nn(Object(b), !0)).call(s, function(S) {
                    zn(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = Nn(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function zn(u, t, s) {
            return (t = Vr(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function Vr(u) {
            var t = qr(u, "string");
            return ir(t) == "symbol" ? t : t + ""
        }
        function qr(u, t) {
            if (ir(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (ir(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        var Jr = {
            DID: 2,
            QUEUE: 1,
            USER: 0
        };
        const sa = {
            name: "AddcallPanel",
            mixins: [dt.A, Zt.A, ar.A, Le.A],
            props: {
                reservation: {
                    type: Object,
                    required: !0
                },
                candidates: {
                    type: Array,
                    default: function() {
                        return []
                    }
                },
                enableAssignHost: {
                    type: Boolean,
                    default: !1
                }
            },
            setup: function() {
                var t = (0,
                    Ot.useOutboundCaller)()
                    , s = (0,
                    Ot.useConferenceMode)()
                    , h = s.conferencingMode
                    , b = s.enableConferenceWithoutSelection
                    , S = s.disableWarmAddCallWithOnlyWarm;
                return {
                    caller: t,
                    isAutomaticCallerId: t.isAutomaticCallerId,
                    conferencingMode: h,
                    enableConferenceWithoutSelection: b,
                    disableWarmAddCallWithOnlyWarm: S
                }
            },
            data: function() {
                return {
                    isShowChoose: !1,
                    select: "",
                    callerid: "",
                    selectedFlowId: "",
                    outboundQueueId: "",
                    outboundQueueName: "",
                    gettingQueues: !1,
                    numbers: [],
                    queues: [],
                    countryCode: "",
                    obcallTo: "",
                    validNum: !1,
                    preferredCountries: [],
                    phoneInstance: null,
                    checkedId: "",
                    loadingNumbers: !1,
                    invitedTarget: null,
                    invitedName: "",
                    inviteType: "direct",
                    conference_id: "",
                    target_task_id: "",
                    target_channel_id: "",
                    inviting: !1,
                    cancelingInviting: !1,
                    cancelInvitingNotification: null,
                    notifications: new (Ee()),
                    chooseAddCallSkillVisible: !1,
                    checkingSkills: !1,
                    targetQueue: null,
                    loadingQueueList: !1
                }
            },
            components: {
                KeyPad: Yr,
                callerIdSelector: Dt,
                NewCallerIdSelector: Ot.CallerIdSelector,
                ContactSearch: R,
                AddCallBtn: xr,
                ChooseSkills: Ot.ChooseSkill
            },
            methods: qn(qn(qn({}, (0,
                Yt.mapActions)("callbar", ["setInvitingValue"])), (0,
                Yt.mapActions)("coreVoice", ["conferenceInvite", "cancelInvite", "updatePhoneContainerLoading", "setLastUsedCallerInfo", "setCallerIdList"])), {}, {
                handleChooseAddCallSkill: function(t) {
                    this.inviteAction(this.inviteType, {
                        input_skill_map: t
                    })
                },
                press: function(t) {
                    this.clearContactInfo(),
                        this.obcallTo += t
                },
                validate: function(t) {
                    this.validNum = t.valid
                },
                inviteAction: function(t) {
                    var s = arguments
                        , h = this;
                    return ut(kt().mark(function b() {
                        var S, B, se, Z, oe, Wt, $t, Yn, Qn;
                        return kt().wrap(function(Fn) {
                            for (; ; )
                                switch (Fn.prev = Fn.next) {
                                    case 0:
                                        return S = s.length > 1 && s[1] !== void 0 ? s[1] : {},
                                            h.inviting = !0,
                                            B = h.invitedTarget ? h.invitedTarget.id : h.$options.filters.E164Number(h.obcallTo, h.user.countryOrRegion),
                                            Fn.prev = 3,
                                            Z = h.reservation.task,
                                            oe = function() {
                                                if (!h.invitedTarget)
                                                    return Jr.DID;
                                                if (h.invitedTarget.ZccType === "user")
                                                    return Jr.USER;
                                                if (h.invitedTarget.ZccType === "queue")
                                                    return Jr.QUEUE
                                            }
                                            ,
                                            Wt = h.caller.outboundCaller,
                                            $t = h.enableNewCallerIdSelector ? Wt.value.callerid : h.callerid,
                                            Yn = qn({
                                                target: B,
                                                type: t,
                                                callee_type: oe(),
                                                task_id: Z.id,
                                                session_id: Z.attributes.businessId,
                                                engagement_id: Z.attributes.engagementId,
                                                conference_id: h.conference_id,
                                                invite_name: h.invitedName || B,
                                                caller_number: $t,
                                                original_queue_id: h.queueId,
                                                isAutomaticCallerId: h.isAutomaticCallerId
                                            }, S),
                                        Yn.callee_type === Jr.DID && (Yn.didNumberType = h.didNumberType,
                                            Yn.isExtensionNumber = h.isExtensionNumber),
                                            Qn = h.targetQueue,
                                        Qn != null && Qn.id && (Yn.queue_id = Qn.id),
                                            (0,
                                                gr.Log)("Start add call:", Yn),
                                            Fn.next = 15,
                                            h.conferenceInvite({
                                                data: Yn,
                                                callSyncId: h.$callId()
                                            });
                                    case 15:
                                        se = Fn.sent,
                                            h.conference_id = se.conference_id,
                                            h.invitedName = "",
                                            h.obcallTo = "",
                                            h.targetQueue = null,
                                            (0,
                                                gr.Log)("Start add call response:", se),
                                            Fn.next = 27;
                                        break;
                                    case 23:
                                        Fn.prev = 23,
                                            Fn.t0 = Fn.catch(3),
                                            console.error("Start add call error:", Fn.t0),
                                            h.showCallError(Fn.t0);
                                    case 27:
                                        return Fn.prev = 27,
                                            h.inviting = !1,
                                            Fn.finish(27);
                                    case 30:
                                        return Fn.abrupt("return", se);
                                    case 31:
                                    case "end":
                                        return Fn.stop()
                                }
                        }, b, null, [[3, 23, 27, 30]])
                    }))()
                },
                invite: function(t) {
                    var s = this;
                    return ut(kt().mark(function h() {
                        var b, S, B, se;
                        return kt().wrap(function(oe) {
                            for (; ; )
                                switch (oe.prev = oe.next) {
                                    case 0:
                                        if (!s.disableInviteButton) {
                                            oe.next = 2;
                                            break
                                        }
                                        return oe.abrupt("return");
                                    case 2:
                                        if (s.inviteType = t,
                                            s.$refs.contactsearch.cancel(),
                                        s.obcallTo !== "") {
                                            oe.next = 7;
                                            break
                                        }
                                        return s.$message.warning(s.$t("callbar.phone.warning.invalidNumber")),
                                            oe.abrupt("return");
                                    case 7:
                                        if (!((b = s.invitedTarget) !== null && b !== void 0 && b.isQueue && ((S = s.invitedTarget) === null || S === void 0 ? void 0 : S.enableAllowSelectSkillForTransfer) !== !1)) {
                                            oe.next = 17;
                                            break
                                        }
                                        return s.updatePhoneContainerLoading(!0),
                                            s.checkingSkills = !0,
                                            oe.next = 12,
                                            (B = s.$refs) === null || B === void 0 || (B = B.addCallchooseSkills) === null || B === void 0 ? void 0 : B.querySkills();
                                    case 12:
                                        if (se = oe.sent,
                                            s.checkingSkills = !1,
                                            s.updatePhoneContainerLoading(!1),
                                            !se) {
                                            oe.next = 17;
                                            break
                                        }
                                        return oe.abrupt("return", s.chooseAddCallSkillVisible = !0);
                                    case 17:
                                        s.inviteAction(t);
                                    case 18:
                                    case "end":
                                        return oe.stop()
                                }
                        }, h)
                    }))()
                },
                getNumbers: function() {
                    var t = arguments
                        , s = this;
                    return ut(kt().mark(function h() {
                        var b, S, B, se, Z, oe, Wt, $t, Yn;
                        return kt().wrap(function(mn) {
                            for (; ; )
                                switch (mn.prev = mn.next) {
                                    case 0:
                                        if (b = t.length > 0 && t[0] !== void 0 ? t[0] : {},
                                            !s.enableNewCallerIdSelector) {
                                            mn.next = 3;
                                            break
                                        }
                                        return mn.abrupt("return", s.caller.getNumbers(b));
                                    case 3:
                                        if (S = !!b.needRefresh,
                                            !(S || !s.numbers.length)) {
                                            mn.next = 20;
                                            break
                                        }
                                        return s.loadingNumbers = !0,
                                            mn.prev = 6,
                                            mn.next = 9,
                                            (0,
                                                Ie.I9)();
                                    case 9:
                                        B = mn.sent,
                                            mn.next = 15;
                                        break;
                                    case 12:
                                        return mn.prev = 12,
                                            mn.t0 = mn.catch(6),
                                            mn.abrupt("return");
                                    case 15:
                                        return mn.prev = 15,
                                            s.loadingNumbers = !1,
                                            mn.finish(15);
                                    case 18:
                                        s.numbers = B.data.result,
                                            s.setCallerIdList(s.numbers);
                                    case 20:
                                        s.numbers.length || (s.setLastUsedCallerInfo(null),
                                            s.callerid = "",
                                            s.outboundQueueId = "",
                                            s.checkedId = ""),
                                        s.numbers.length > 0 && (S || s.callerid === "") && (Wt = G()(se = s.numbers).call(se, function(Fn) {
                                            return Fn.defaultQueue
                                        }) || s.numbers[0],
                                        S && b.fromZpns && ($t = G()(Yn = s.numbers).call(Yn, function(Fn) {
                                            var Vt, Ir, Cr = Fn.numberId, On = Fn.queueId;
                                            return Cr === ((Vt = b.numberInfo) === null || Vt === void 0 ? void 0 : Vt.phoneNumberId) && On === ((Ir = b.numberInfo) === null || Ir === void 0 ? void 0 : Ir.queueId)
                                        })),
                                            s.onCallerIdChange((Z = $t) !== null && Z !== void 0 ? Z : Wt),
                                            s.setLastUsedCallerInfo((oe = $t) !== null && oe !== void 0 ? oe : Wt));
                                    case 22:
                                    case "end":
                                        return mn.stop()
                                }
                        }, h, null, [[6, 12, 15, 18]])
                    }))()
                },
                onCallerIdChange: function(t) {
                    this.callerid = t.number,
                        this.outboundQueueId = t.queueId,
                        this.outboundQueueName = t.queueName,
                        this.checkedId = this.getSelfId(t)
                },
                getSelfId: function(t) {
                    var s = t.queueId
                        , h = t.number
                        , b = t.studioId;
                    return s + h + b
                },
                onSelectContact: function(t, s) {
                    if (t.isZcc) {
                        this.targetQueue = s;
                        var h = t?.ZccType === "queue";
                        t.isQueue = h,
                            this.invitedTarget = t,
                            this.obcallTo = t.name,
                            this.invitedName = t.name;
                        return
                    }
                    if (this.invitedTarget = null,
                        this.invitedName = t.name,
                        this.didNumberType = t.GetBuddyType,
                        this.isExtensionNumber = t.type === "Extension",
                        t.isNumber) {
                        this.obcallTo = t.value;
                        return
                    }
                    var b = t.children[0];
                    b && (this.obcallTo = b.value)
                },
                clearContactInfo: function() {
                    this.invitedTarget = null,
                        this.invitedName = "",
                        this.isExtensionNumber = !1,
                        this.didNumberType = 0,
                        this.targetQueue = null
                },
                cancelInviting: function(t, s, h) {
                    var b = this;
                    return ut(kt().mark(function S() {
                        return kt().wrap(function(se) {
                            for (; ; )
                                switch (se.prev = se.next) {
                                    case 0:
                                        return se.prev = 0,
                                            se.next = 3,
                                            b.cancelInvite({
                                                callSyncId: b.$callId(),
                                                taskId: s,
                                                channelId: h
                                            });
                                    case 3:
                                        se.next = 8;
                                        break;
                                    case 5:
                                        se.prev = 5,
                                            se.t0 = se.catch(0),
                                            console.error(se.t0.message);
                                    case 8:
                                    case "end":
                                        return se.stop()
                                }
                        }, S, null, [[0, 5]])
                    }))()
                },
                onInvitationAccepted: function(t) {
                    var s;
                    if (t.target_task_id !== this.reservation.task.id && this.getUserId() === t.inviter_userId) {
                        var h = G()(s = t.member_info).call(s, function(b) {
                            return b.channelId === t.target_channel_id
                        });
                        h?.role !== "Supervisor" && this.showInvitationNotification(t.target_task_id || t.target_channel_id, this.$t("callbar.phone.agentAcceptedInvite", {
                            name: this.formatTarget(t.target_name)
                        }))
                    }
                },
                onInvitationDropped: function(t) {
                    this.callState.cancelInvitationChannelId !== t.target_channel_id && this.getUserId() === t.inviter_userId && this.showInvitationNotification(t.target_task_id || t.target_channel_id, this.$t("callbar.phone.agentDropped", {
                        name: this.formatTarget(t.target_name)
                    }))
                },
                onInvitationRejected: function(t) {
                    this.getUserId() === t.inviter_userId && this.showInvitationNotification(t.target_task_id || t.target_channel_id, this.$t("callbar.phone.agentRejectedInvite", {
                        name: this.formatTarget(t.target_name)
                    }), "error")
                },
                onInvitationNoRespond: function(t) {
                    this.getUserId() === t.inviter_userId && this.showInvitationNotification(t.target_task_id || t.target_channel_id, this.$t("callbar.phone.inviteNoResponse", {
                        name: this.formatTarget(t.target_name)
                    }), "error")
                },
                onInvitationStarted: function(t) {
                    var s = this
                        , h = t.target_task_id || t.target_channel_id;
                    if (!this.notifications.get(h)) {
                        var b = this.chatNotify(this.$t("callbar.phone.invitingAgent", {
                            name: this.formatTarget(t.target_name)
                        }), "", {
                            text: this.$t("cci.common.button.cancel"),
                            callback: function() {
                                return s.cancelInviting(b, t.target_task_id, t.target_channel_id)
                            }
                        }, -1);
                        this.notifications.set(h, b)
                    }
                },
                onbridged: function(t) {
                    var s = t.target_task_id || t.target_channel_id
                        , h = this.notifications.get(s);
                    h && (h.close(),
                        this.notifications.delete(s))
                },
                showInvitationNotification: function(t) {
                    var s, h = this.notifications.get(t);
                    (s = h) === null || s === void 0 || s.close();
                    for (var b = arguments.length, S = new Array(b > 1 ? b - 1 : 0), B = 1; B < b; B++)
                        S[B - 1] = arguments[B];
                    h = this.chatNotify.apply(this, S),
                        this.notifications.set(t, h)
                },
                formatTarget: function(t) {
                    var s, h, b, S, B, se = (s = this.$options) === null || s === void 0 ? void 0 : s.filters.CheckNumber(t, (h = this.user) === null || h === void 0 ? void 0 : h.countryOrRegion), Z = se ? this.$options.filters.E164Number(t, (b = this.user) === null || b === void 0 ? void 0 : b.countryOrRegion) : t;
                    return se ? (S = this.$options) === null || S === void 0 ? void 0 : S.filters.phoneNumber(Z, (B = this.user) === null || B === void 0 ? void 0 : B.countryOrRegion) : Z
                },
                onDropdownVisibleChange: function(t) {
                    var s = this;
                    t || K()(function() {
                        return s.loadingQueueList = !1
                    })
                },
                handleConferenceWithoutSelection: function() {
                    this.disabledNewInviteButton || (this.conferencingMode === Qe.ConferenceMode.ONLY_DIRECT ? this.invite("direct") : this.invite("warm"))
                }
            }),
            computed: qn(qn(qn({}, (0,
                Yt.mapGetters)({
                currentAgent: "user",
                nacosConfig: "nacosConfig"
            })), (0,
                Yt.mapGetters)("coreVoice", ["lastUsedCallerInfo", "callerIdList"])), {}, {
                enableNewCallerIdSelector: function() {
                    var t = this.nacosConfig.enableNewCallerIdSelectorForCTI;
                    return t ? t === "true" : !0
                },
                enableSearchZPContacts: function() {
                    var t, s;
                    return ((t = this.callState) === null || t === void 0 || (t = t.featureFlags) === null || t === void 0 ? void 0 : t.enableSearchZPContacts) && ((s = this.account) === null || s === void 0 ? void 0 : s.enableTransferToZpUsersQueues)
                },
                enableSearchAddressBookContacts: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 || (t = t.featureFlags) === null || t === void 0 ? void 0 : t.enableSearchAddressBookContacts
                },
                ZCCAgentsNotShow: function() {
                    var t;
                    return k()(t = this.candidates).call(t, function(s) {
                        return s.role === "Agent"
                    })
                },
                inviteNotification: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 ? void 0 : t.UIState.inviteNotification
                },
                disableInviteButton: function() {
                    return this.chooseAddCallSkillVisible || this.inviting || this.checkingSkills || this.loadingQueueList
                },
                disabledNewInviteButton: function() {
                    return this.disableInviteButton || this.disableWarmAddCallWithOnlyWarm
                },
                queueId: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 ? void 0 : t.queueId
                },
                businessId: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 ? void 0 : t.businessId
                }
            }),
            mounted: function() {
                var t;
                this.lastUsedCallerInfo && this.onCallerIdChange(this.lastUsedCallerInfo),
                    this.numbers = Gr((t = this.callerIdList) !== null && t !== void 0 ? t : [])
            },
            beforeDestroy: function() {
                var t;
                ie()(t = this.notifications).call(t, function(s) {
                    return s.close()
                }),
                    this.notifications.clear()
            },
            watch: {
                inviteNotification: function(t, s) {
                    if (!(t.type === s.type && t.target_channel_id === s.target_channel_id)) {
                        var h = t.type;
                        if (h === "invite.started")
                            this.onInvitationStarted(t);
                        else if (h === "invite.accepted")
                            this.onInvitationAccepted(t);
                        else if (h === "invite.rejected")
                            this.onInvitationRejected(t);
                        else if (h === "invite.dropped")
                            this.onInvitationDropped(t);
                        else if (h === "invite.norespond")
                            this.onInvitationNoRespond(t);
                        else if (h === "invite.bridged")
                            this.onInvitationAccepted(t);
                        else if (!h) {
                            var b;
                            ie()(b = this.notifications).call(b, function(S) {
                                return S.close()
                            })
                        }
                    }
                },
                lastUsedCallerInfo: function(t) {
                    var s, h, b = G()(s = (h = this.callerIdList) !== null && h !== void 0 ? h : []).call(s, function(S) {
                        var B = S.numberId
                            , se = S.queueId;
                        return B === t?.numberId && se === t?.queueId
                    });
                    b && this.onCallerIdChange(b)
                }
            }
        };
        var fa = (0,
            Ue.A)(sa, En, Pe, !1, null, "1dac1a4d", null);
        const Do = fa.exports;
        var ma = a(49019)
            , Ro = function() {
            var t = this
                , s = t._self._c;
            return s("div", {
                staticClass: "assign-agent-item",
                on: {
                    click: function() {
                        return t.handleChooseAgent(t.data.userId)
                    }
                }
            }, [s("zm-avatar", {
                key: "avatar",
                staticClass: "assign-agent-avatar",
                style: "background: ".concat(t.calcColor(t.data.name)),
                attrs: {
                    size: 24,
                    shape: "square"
                }
            }, [s("span", [t._v(t._s(t.splitName(t.data.name)))])]), t._v(" "), s("span", {
                staticClass: "agent-name"
            }, [s("ellipsis", {
                attrs: {
                    content: t.data.name
                }
            })], 1), t._v(" "), s("span", {
                staticClass: "agent-desc"
            }, [t._v(t._s(t.$t("callbar.conference.role.agent")))]), t._v(" "), s(ma.A, {
                staticClass: "queue-select-icon"
            }), t._v(" "), t.showQueueList ? s("assign-queue-list", {
                attrs: {
                    "queue-list": t.assignQueueList,
                    agent: t.data.name
                },
                on: {
                    close: t.close,
                    assignLeave: function(b) {
                        return t.$emit("assignLeave", {
                            agent: t.data,
                            queue: b,
                            isLeave: !0
                        })
                    }
                }
            }) : t._e()], 1)
        }
            , Hi = []
            , Mi = a(93752)
            , Ka = a.n(Mi)
            , Pi = a(84300)
            , jo = function() {
            var t = this
                , s = t._self._c;
            return t.queueList.length ? s("div", {
                directives: [{
                    name: "clickoutside",
                    rawName: "v-clickoutside",
                    value: t.close,
                    expression: "close"
                }],
                staticClass: "assign-queue-list"
            }, [s("p", {
                staticClass: "title"
            }, [t._v(t._s(t.$t("callbar.conference.role.assign.queue.title")))]), t._v(" "), s("p", {
                staticClass: "desc"
            }, [t._v(`
    ` + t._s(t.$t("callbar.conference.role.assign.queue.desc", {
                agent: t.agent
            })) + `
  `)]), t._v(" "), s("div", {
                staticClass: "assign-queue-item-wrapper"
            }, t._l(t.queueList, function(h, b) {
                return s("assign-queue-item", {
                    key: b,
                    attrs: {
                        item: h,
                        "is-leave": t.isLeave
                    },
                    on: {
                        assignLeave: function(B) {
                            return t.$emit("assignLeave", h)
                        }
                    }
                })
            }), 1)]) : t._e()
        }
            , Uo = []
            , Ki = function() {
            var t = this
                , s = t._self._c;
            return s("div", {
                staticClass: "assign-queue-item",
                on: {
                    mouseenter: function(b) {
                        t.hover = !0
                    },
                    mouseleave: function(b) {
                        t.hover = !1
                    }
                }
            }, [s("div", {
                staticClass: "right-area"
            }, [s("p", {
                staticClass: "queue-title"
            }, [s("ellipsis", {
                attrs: {
                    content: t.item.name
                }
            })], 1), t._v(" "), s("p", {
                staticClass: "queue-desc"
            }, [s("ellipsis", {
                attrs: {
                    content: t.item.description
                }
            })], 1)]), t._v(" "), t.hover ? s("div", {
                staticClass: "assign-button",
                on: {
                    click: function(b) {
                        return b.stopPropagation(),
                            t.$emit("assignLeave")
                    }
                }
            }, [t._v(`
    ` + t._s(t.isLeave ? t.$t("callbar.conference.role.assign.queue.assignButton") : t.$t("cci.analytics.label.assignEngagement")) + `
  `)]) : t._e()])
        }
            , Ps = [];
        const $o = {
            props: {
                item: {
                    required: !0,
                    type: Object
                },
                isLeave: {
                    type: Boolean,
                    default: !0
                }
            },
            components: {
                ellipsis: Pi.A
            },
            data: function() {
                return {
                    hover: !1
                }
            }
        };
        var Bo = (0,
            Ue.A)($o, Ki, Ps, !1, null, "5f690802", null);
        const Os = Bo.exports
            , zf = {
            props: {
                agent: {
                    required: !0,
                    type: String
                },
                queueList: {
                    required: !0,
                    type: Array
                },
                isLeave: {
                    type: Boolean,
                    default: !0
                }
            },
            directives: {
                Clickoutside: ye.Clickoutside
            },
            components: {
                AssignQueueItem: Os
            },
            methods: {
                close: function() {
                    this.$emit("close")
                }
            }
        };
        var gc = (0,
            Ue.A)(zf, jo, Uo, !1, null, "70d51b6a", null);
        const xs = gc.exports;
        function bo(u) {
            "@babel/helpers - typeof";
            return bo = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                bo(u)
        }
        function Co() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Co = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && bo(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(bo(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function yc(u, t) {
            return Cc(u) || Ds(u, t) || bc(u, t) || _c()
        }
        function _c() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function bc(u, t) {
            if (u) {
                var s;
                if (typeof u == "string")
                    return Za(u, t);
                var h = Ne()(s = {}.toString.call(u)).call(s, 8, -1);
                return h === "Object" && u.constructor && (h = u.constructor.name),
                    h === "Map" || h === "Set" ? rr()(u) : h === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(h) ? Za(u, t) : void 0
            }
        }
        function Za(u, t) {
            (t == null || t > u.length) && (t = u.length);
            for (var s = 0, h = Array(t); s < t; s++)
                h[s] = u[s];
            return h
        }
        function Ds(u, t) {
            var s = u == null ? null : typeof Ae() < "u" && Tt()(u) || u["@@iterator"];
            if (s != null) {
                var h, b, S, B, se = [], Z = !0, oe = !1;
                try {
                    if (S = (s = s.call(u)).next,
                    t === 0) {
                        if (Object(s) !== s)
                            return;
                        Z = !1
                    } else
                        for (; !(Z = (h = S.call(s)).done) && (se.push(h.value),
                        se.length !== t); Z = !0)
                            ;
                } catch (Wt) {
                    oe = !0,
                        b = Wt
                } finally {
                    try {
                        if (!Z && s.return != null && (B = s.return(),
                        Object(B) !== B))
                            return
                    } finally {
                        if (oe)
                            throw b
                    }
                }
                return se
            }
        }
        function Cc(u) {
            if (en()(u))
                return u
        }
        function Rs(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function Vo(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            Rs(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            Rs(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        var Ec = de.userApi.getUsersQueueList
            , js = ["#2ecc71", "#3498db", "#8e44ad", "#e67e22", "#e74c3c", "#1abc9c"];
        function wa(u) {
            for (var t = 0, s = 0; s < u.length; s++)
                t += u.charCodeAt(s);
            return t
        }
        const ii = {
            props: {
                data: {
                    required: !0,
                    type: Object
                }
            },
            data: function() {
                return {
                    assignQueueList: [],
                    showQueueList: !1
                }
            },
            components: {
                AssignQueueList: xs,
                ellipsis: Pi.A
            },
            methods: {
                close: function() {
                    this.showQueueList = !1
                },
                splitName: function(t) {
                    if (!t || t === "")
                        return "";
                    t = Ka()(t).call(t);
                    var s = t.split(" ")
                        , h = "";
                    if (s.length && s.length > 1) {
                        var b, S;
                        h = (((b = s[0][0]) === null || b === void 0 ? void 0 : b.toUpperCase()) || "") + (((S = s[1][0]) === null || S === void 0 ? void 0 : S.toUpperCase()) || "")
                    } else {
                        var B, se;
                        h = (((B = t[0]) === null || B === void 0 ? void 0 : B.toUpperCase()) || "") + (((se = t[1]) === null || se === void 0 ? void 0 : se.toUpperCase()) || "")
                    }
                    return h || ""
                },
                calcColor: function(t) {
                    var s = wa(t) % js.length;
                    return js[s]
                },
                handleGetUsersQueueList: function(t) {
                    return Vo(Co().mark(function s() {
                        var h, b, S, B;
                        return Co().wrap(function(Z) {
                            for (; ; )
                                switch (Z.prev = Z.next) {
                                    case 0:
                                        if (t) {
                                            Z.next = 2;
                                            break
                                        }
                                        return Z.abrupt("return");
                                    case 2:
                                        return Z.next = 4,
                                            (0,
                                                Pt.tryApiCatch)(Ec, {
                                                userId: t,
                                                channelType: 0
                                            });
                                    case 4:
                                        if (h = Z.sent,
                                            b = yc(h, 2),
                                            S = b[0],
                                            B = b[1],
                                            !S) {
                                            Z.next = 11;
                                            break
                                        }
                                        return console.error("handleGetUsersQueueList error:", S),
                                            Z.abrupt("return");
                                    case 11:
                                        return Z.abrupt("return", B);
                                    case 12:
                                    case "end":
                                        return Z.stop()
                                }
                        }, s)
                    }))()
                },
                handleChooseAgent: function(t) {
                    var s = this;
                    return Vo(Co().mark(function h() {
                        return Co().wrap(function(S) {
                            for (; ; )
                                switch (S.prev = S.next) {
                                    case 0:
                                        s.$emit("assignLeave", {
                                            agent: s.data,
                                            isLeave: !0
                                        });
                                    case 1:
                                    case "end":
                                        return S.stop()
                                }
                        }, h)
                    }))()
                }
            }
        };
        var Us = (0,
            Ue.A)(ii, Ro, Hi, !1, null, "119c2a1a", null);
        const ga = Us.exports;
        var wc = function() {
            var t = this
                , s = t._self._c;
            return s("div", {
                directives: [{
                    name: "clickoutside",
                    rawName: "v-clickoutside",
                    value: t.handleClose,
                    expression: "handleClose"
                }],
                staticClass: "candidates-container"
            }, [s("span", {
                staticClass: "names",
                attrs: {
                    tabindex: "0",
                    "aria-label": t.displayNamesAriaLabel
                },
                on: {
                    click: function(b) {
                        t.showCandidates = !t.showCandidates
                    },
                    keydown: [function(h) {
                        var b;
                        return !tn()(b = h.type).call(b, "key") && t._k(h.keyCode, "space", 32, h.key, [" ", "Spacebar"]) ? null : (h.preventDefault(),
                            t.openFromKeyboard.apply(null, arguments))
                    }
                        , function(h) {
                            var b;
                            return !tn()(b = h.type).call(b, "key") && t._k(h.keyCode, "enter", 13, h.key, "Enter") ? null : (h.preventDefault(),
                                t.openFromKeyboard.apply(null, arguments))
                        }
                    ]
                }
            }, [s("span", {
                staticClass: "names-content"
            }, [t._v(t._s(t.displayNames))]), t._v(" "), t.isDark ? s("arrowDownDark") : s("arrowDown")], 1), t._v(" "), s("zm-select-dropdown", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.showCandidates,
                    expression: "showCandidates"
                }],
                ref: "popper",
                staticClass: "candidates-dropdown",
                attrs: {
                    "append-to-body": !0,
                    "width-limit": ""
                }
            }, [s("div", {
                staticClass: "candidates-dropdown-title"
            }, [t._v("Callers")]), t._v(" "), s("div", {
                ref: "candidate",
                staticClass: "candidates-dropdown-list"
            }, t._l(t.candidatesToShow, function(h, b) {
                return s("Candidate", {
                    key: h.channelId,
                    attrs: {
                        index: b,
                        candidate: h,
                        reservation: t.reservation,
                        "current-user": t.currentUser,
                        "is-host": t.isHost,
                        "enable-assign-host": t.enableAssignHost
                    },
                    on: {
                        assignLeave: function(B) {
                            return t.$emit("assignLeave", B)
                        },
                        close: t.handleClose
                    }
                })
            }), 1)])], 1)
        }
            , Tc = []
            , Sc = a(41214)
            , Eo = a.n(Sc)
            , Ac = a(53584)
            , Qi = a.n(Ac)
            , Hf = a(53720)
            , $s = a.n(Hf)
            , Lc = a(9816)
            , Nc = a.n(Lc)
            , Mc = a(98353)
            , Pc = a.n(Mc)
            , Bs = a(4285)
            , kc = function() {
            var t = this
                , s = t._self._c;
            return s("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: t.cancelingInviting || t.assigning,
                    expression: "cancelingInviting || assigning"
                }],
                ref: "candidate_item",
                staticClass: "candidate-item",
                style: {
                    height: t.cancelingInviting || t.assigning ? "60px" : "auto"
                },
                attrs: {
                    "aria-label": t.axLabel
                },
                on: {
                    keydown: t.handleKeyDown
                }
            }, [s("div", {
                staticClass: "candidate-item-info"
            }, [s("div", {
                staticClass: "candidate-item-name"
            }, [s("span", {
                staticClass: "candidate-item-name-pre"
            }, [t._v(t._s(t.name))]), t._v(" "), t.isConsumer ? s("span", [t._v(t._s(t.$t("callbar.conference.role.consumer")))]) : t.isSelf && t.candidate.isHost ? s("span", [t._v(t._s(t.$t("callbar.conference.role.assignedyou")))]) : t.isSelf && !t.candidate.isHost ? s("span", [t._v(t._s(t.$t("callbar.conference.role.you")))]) : !t.isSelf && t.candidate.isHost ? s("span", [t._v(t._s(t.$t("callbar.conference.role.assignedAgent")))]) : t.isSupervisor ? s("span", [t._v(t._s(t.$t("callbar.conference.role.supervisor")))]) : t.isAgent ? s("span", [t._v(t._s(t.$t("callbar.conference.role.agent")))]) : t.isParticipant ? s("span", [t._v(t._s(t.$t("callbar.conference.role.participant")))]) : t.candidate.didNumberType === "6" ? s("span", [t._v(t._s(t.$t("callbar.conference.role.callQueue")))]) : t._e()]), t._v(" "), t.isQueue ? s("div", {
                staticClass: "candidate-item-number"
            }, [t._v(`
      ` + t._s(t.candidate.queueName) + `
    `)]) : t.showNumber ? s("div", {
                staticClass: "candidate-item-number"
            }, [t.candidate.isExtensionNumber ? s("span", [t._v(t._s(t.$t("callbar.conference.role.ext")))]) : t._e(), t._v(t._s(t.number) + `
    `)]) : t._e()]), t._v(" "), s("div", {
                staticClass: "candidate-right-icon"
            }, [t.showAssign ? s("div", {
                staticClass: "assign-icon-container"
            }, [t.disableAssign ? s("zm-tooltip", {
                attrs: {
                    "popper-class": "assign-icon-tooltip",
                    content: t.$t("callbar.conference.role.disableAssignText"),
                    placement: "top"
                }
            }, [s("disable-assign-agent-icon", {
                staticClass: "disable-assign-btn"
            })], 1) : t.canAssign ? s("zm-tooltip", {
                attrs: {
                    "popper-class": "assign-icon-tooltip",
                    content: t.$t("cci.analytics.label.assignEngagement"),
                    placement: "top"
                }
            }, [s("assign-agent-icon", {
                staticClass: "assign-btn",
                on: {
                    click: function(b) {
                        return t.handleChooseAgent(t.candidate.userId)
                    }
                }
            })], 1) : t._e()], 1) : t._e(), t._v(" "), s("div", {
                staticClass: "dropbtn",
                attrs: {
                    title: t.$t("cci.callBar.endCall")
                }
            }, [t.allowDrop ? s("end-call", {
                staticClass: "dropbtn",
                attrs: {
                    type: "button"
                },
                on: {
                    click: t.cancelInviting
                }
            }) : t._e()], 1), t._v(" "), s("zm-select-dropdown", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.showQueueList,
                    expression: "showQueueList"
                }],
                staticClass: "candidate-queue-list",
                attrs: {
                    "append-to-body": !0,
                    "width-limit": "",
                    placement: "right",
                    "popper-options": {}
                },
                model: {
                    value: t.showQueueList,
                    callback: function(b) {
                        t.showQueueList = b
                    },
                    expression: "showQueueList"
                }
            }, [t.showQueueList ? s("assign-queue-list", {
                attrs: {
                    "queue-list": t.assignQueueList,
                    agent: t.candidate.name,
                    "is-leave": !1
                },
                on: {
                    close: t.close,
                    assignLeave: function(b) {
                        return t.$emit("assignLeave", {
                            agent: t.candidate,
                            queue: b,
                            isLeave: !1
                        })
                    }
                }
            }) : t._e()], 1)], 1)])
        }
            , Oc = []
            , xc = a(95026)
            , Dc = a.n(xc)
            , oa = a(44349)
            , Vs = a.n(oa)
            , Rc = a(94632)
            , jc = a.n(Rc);
        function ka(u) {
            "@babel/helpers - typeof";
            return ka = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                ka(u)
        }
        function Aa() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Aa = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && ka(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(ka(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function Fo(u, t) {
            return $c(u) || Go(u, t) || Uc(u, t) || Fs()
        }
        function Fs() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Uc(u, t) {
            if (u) {
                var s;
                if (typeof u == "string")
                    return Wo(u, t);
                var h = Ne()(s = {}.toString.call(u)).call(s, 8, -1);
                return h === "Object" && u.constructor && (h = u.constructor.name),
                    h === "Map" || h === "Set" ? rr()(u) : h === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(h) ? Wo(u, t) : void 0
            }
        }
        function Wo(u, t) {
            (t == null || t > u.length) && (t = u.length);
            for (var s = 0, h = Array(t); s < t; s++)
                h[s] = u[s];
            return h
        }
        function Go(u, t) {
            var s = u == null ? null : typeof Ae() < "u" && Tt()(u) || u["@@iterator"];
            if (s != null) {
                var h, b, S, B, se = [], Z = !0, oe = !1;
                try {
                    if (S = (s = s.call(u)).next,
                    t === 0) {
                        if (Object(s) !== s)
                            return;
                        Z = !1
                    } else
                        for (; !(Z = (h = S.call(s)).done) && (se.push(h.value),
                        se.length !== t); Z = !0)
                            ;
                } catch (Wt) {
                    oe = !0,
                        b = Wt
                } finally {
                    try {
                        if (!Z && s.return != null && (B = s.return(),
                        Object(B) !== B))
                            return
                    } finally {
                        if (oe)
                            throw b
                    }
                }
                return se
            }
        }
        function $c(u) {
            if (en()(u))
                return u
        }
        function Ws(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function zo(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            Ws(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            Ws(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        function Kf(u) {
            throw new TypeError('"' + u + '" is read-only')
        }
        function Gs(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function Yi(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = Gs(Object(b), !0)).call(s, function(S) {
                    Bc(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = Gs(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function Bc(u, t, s) {
            return (t = Vc(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function Vc(u) {
            var t = Fc(u, "string");
            return ka(t) == "symbol" ? t : t + ""
        }
        function Fc(u, t) {
            if (ka(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (ka(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        var Wc = de.userApi.getUsersQueueList;
        const Gc = {
            props: {
                candidate: {
                    required: !0,
                    type: Object
                },
                reservation: {
                    type: Object,
                    required: !0
                },
                currentUser: {
                    type: Object,
                    required: !0
                },
                enableAssignHost: {
                    type: Boolean,
                    default: !1
                },
                isHost: {
                    type: Boolean,
                    default: !1
                },
                index: Number
            },
            components: {
                EndCall: jc(),
                AssignAgentIcon: Dc(),
                DisableAssignAgentIcon: Vs(),
                AssignQueueList: xs,
                ZmSelectDropdown: ye.ZmSelectDropdown
            },
            mixins: [Zt.A],
            setup: function() {
                var t = (0,
                    Ot.useCrmUser)()
                    , s = t.getCrmNameById;
                return {
                    getCrmNameById: s
                }
            },
            data: function() {
                return {
                    cancelingInviting: !1,
                    assigning: !1,
                    assignQueueList: [],
                    showQueueList: !1
                }
            },
            computed: Yi(Yi(Yi({}, (0,
                Yt.mapGetters)("coreVoice", ["currentCall"])), (0,
                Yt.mapGetters)("crm", ["getCurrentEngagementMap"])), {}, {
                axLabel: function() {
                    var t = this.name;
                    return this.isConsumer ? t += this.$t("callbar.conference.role.consumer") : this.isSelf && (t += this.$t("callbar.conference.role.you")),
                    this.showNumber && this.number && (t += ",".concat(this.number)),
                        t
                },
                allowDrop: function() {
                    var t;
                    return this.isHost && O()(t = ["Outbound", "Agent"]).call(t, this.candidate.role) && !this.candidate.isHost
                },
                isConsumer: function() {
                    return this.candidate.role === "Customer"
                },
                name: function() {
                    var t = this.candidate
                        , s = t.name
                        , h = t.phoneNumber;
                    return s === h ? this.$options.filters.phoneNumber(h, this.user.countryOrRegion) : this.isConsumer && this.selectedContact || s
                },
                selectedContact: function() {
                    var t;
                    return this.getCrmNameById((t = this.currentCall) === null || t === void 0 || (t = t.state) === null || t === void 0 ? void 0 : t.engagementId)
                },
                number: function() {
                    var t = this.candidate.phoneNumber;
                    return this.$options.filters.phoneNumber(t, this.user.countryOrRegion)
                },
                showNumber: function() {
                    var t = this.candidate
                        , s = t.name
                        , h = t.phoneNumber;
                    return s !== h
                },
                isSelf: function() {
                    var t, s;
                    return this.candidate.taskId && this.candidate.taskId === ((t = this.currentCall) === null || t === void 0 || (t = t.state) === null || t === void 0 ? void 0 : t.taskId) && !((s = this.currentCall) !== null && s !== void 0 && (s = s.state) !== null && s !== void 0 && s.isMonitor)
                },
                isSupervisor: function() {
                    return this.candidate.role === "Supervisor"
                },
                isAgent: function() {
                    return this.candidate.role === "Agent"
                },
                isQueue: function() {
                    return this.candidate.queueName
                },
                isParticipant: function() {
                    var t;
                    return O()(t = ["Outbound", "Outgoing"]).call(t, this.candidate.role)
                },
                canAssign: function() {
                    var t;
                    return !!(this.isAgent && !this.isSelf && (t = this.candidate) !== null && t !== void 0 && t.can_assign)
                },
                disableAssign: function() {
                    var t;
                    return !!(this.isAgent && !this.isSelf && !((t = this.candidate) !== null && t !== void 0 && t.can_assign))
                },
                showAssign: function() {
                    var t, s;
                    return ((t = this.currentUser) === null || t === void 0 ? void 0 : t.isHost) && this.enableAssignHost && !((s = this.currentCall) !== null && s !== void 0 && (s = s.state) !== null && s !== void 0 && s.hasTwoLegs)
                }
            }),
            methods: Yi(Yi({}, (0,
                Yt.mapActions)("coreVoice", ["kickoutParticipant"])), {}, {
                handleGetUsersQueueList: function(t) {
                    return zo(Aa().mark(function s() {
                        var h, b, S, B;
                        return Aa().wrap(function(Z) {
                            for (; ; )
                                switch (Z.prev = Z.next) {
                                    case 0:
                                        if (t) {
                                            Z.next = 2;
                                            break
                                        }
                                        return Z.abrupt("return");
                                    case 2:
                                        return Z.next = 4,
                                            (0,
                                                Qe.tryApiCatch)(Wc, {
                                                userId: t,
                                                channelType: 0
                                            });
                                    case 4:
                                        if (h = Z.sent,
                                            b = Fo(h, 2),
                                            S = b[0],
                                            B = b[1],
                                            !S) {
                                            Z.next = 11;
                                            break
                                        }
                                        return console.error("handleGetUsersQueueList error:", S),
                                            Z.abrupt("return");
                                    case 11:
                                        return Z.abrupt("return", B);
                                    case 12:
                                    case "end":
                                        return Z.stop()
                                }
                        }, s)
                    }))()
                },
                handleChooseAgent: function() {
                    var t = this;
                    return zo(Aa().mark(function s() {
                        return Aa().wrap(function(b) {
                            for (; ; )
                                switch (b.prev = b.next) {
                                    case 0:
                                        t.$emit("assignLeave", {
                                            agent: t.candidate,
                                            isLeave: !1
                                        });
                                    case 1:
                                    case "end":
                                        return b.stop()
                                }
                        }, s)
                    }))()
                },
                close: function() {
                    this.showQueueList = !1
                },
                cancelInviting: function() {
                    var t = this;
                    return zo(Aa().mark(function s() {
                        return Aa().wrap(function(b) {
                            for (; ; )
                                switch (b.prev = b.next) {
                                    case 0:
                                        return t.cancelingInviting = !0,
                                            b.prev = 1,
                                            b.next = 4,
                                            t.kickoutParticipant({
                                                callSyncId: t.$callId(),
                                                taskId: t.candidate.taskId,
                                                channelId: t.candidate.channelId
                                            });
                                    case 4:
                                        b.next = 9;
                                        break;
                                    case 6:
                                        b.prev = 6,
                                            b.t0 = b.catch(1),
                                            console.error(b.t0.message);
                                    case 9:
                                        t.cancelingInviting = !1;
                                    case 10:
                                    case "end":
                                        return b.stop()
                                }
                        }, s, null, [[1, 6]])
                    }))()
                },
                handleKeyDown: function(t) {
                    if ((t.keyCode === 32 || t.keyCode === 13) && this.allowDrop) {
                        this.cancelInviting();
                        return
                    }
                    if (t.keyCode === 9 || t.keyCode === 27) {
                        this.$emit("close");
                        return
                    }
                    if (t.keyCode === 40) {
                        this.buttonOnkeydown(t, 1);
                        return
                    }
                    if (t.keyCode === 38) {
                        this.buttonOnkeydown(t, -1);
                        return
                    }
                },
                buttonOnkeydown: function(t, s) {
                    var h;
                    t.preventDefault(),
                        t.target.setAttribute("tabindex", "-1");
                    var b = (h = this.$refs) === null || h === void 0 || (h = h.candidate_item) === null || h === void 0 || (h = h.parentNode) === null || h === void 0 ? void 0 : h.querySelectorAll(".candidate-item")
                        , S = b[this.index + s];
                    S && (S?.setAttribute("tabindex", "0"),
                        S?.focus())
                }
            }),
            inject: ["$callId"]
        };
        var zc = (0,
            Ue.A)(Gc, kc, Oc, !1, null, "1c6590fa", null);
        const Hc = zc.exports;
        function ki(u) {
            "@babel/helpers - typeof";
            return ki = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                ki(u)
        }
        function Ho() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Ho = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && ki(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(ki(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function zs(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function Kc(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            zs(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            zs(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        function Hs(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function oi(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = Hs(Object(b), !0)).call(s, function(S) {
                    Qc(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = Hs(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function Qc(u, t, s) {
            return (t = Yc(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function Yc(u) {
            var t = Zc(u, "string");
            return ki(t) == "symbol" ? t : t + ""
        }
        function Zc(u, t) {
            if (ki(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (ki(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        const Jc = {
            directives: {
                Clickoutside: ye.Clickoutside
            },
            mixins: [Bs.A, Zt.A, Te.A],
            props: {
                candidates: {
                    required: !0,
                    type: Array
                },
                currentUser: {
                    type: Object,
                    required: !0
                },
                enableAssignHost: {
                    type: Boolean,
                    default: !1
                },
                reservation: {
                    type: Object,
                    required: !0
                }
            },
            setup: function() {
                var t = (0,
                    Ot.useCrmUser)()
                    , s = t.getCrmNameById;
                return {
                    getCrmNameById: s
                }
            },
            data: function() {
                return {
                    showCandidates: !1,
                    hasSupervisor: !1
                }
            },
            components: {
                ZmSelectDropdown: ye.ZmSelectDropdown,
                Candidate: Hc,
                arrowDown: Pc(),
                arrowDownDark: Nc()
            },
            computed: oi(oi(oi({}, (0,
                Yt.mapGetters)("sessionPanels", ["activeTasks"])), (0,
                Yt.mapGetters)("crm", ["getCurrentEngagementMap"])), {}, {
                selectedContact: function() {
                    var t;
                    return this.getCrmNameById((t = this.currentCall) === null || t === void 0 || (t = t.state) === null || t === void 0 ? void 0 : t.engagementId)
                },
                displayNames: function() {
                    var t, s = this, h, b = this.candidatesToShow.length > 3 ? Ne()(t = this.candidatesToShow).call(t, 0, 3) : this.candidatesToShow, S = this.candidatesToShow.length - 3, B = Eo()(b).call(b, function(se, Z, oe) {
                        var Wt = s.$options.filters.phoneNumber(Z.name);
                        return Z.role === "Customer" && (Z.name && Z.name === Z.phoneNumber ? Wt = s.calcPhoneWithPhiMask(Z.name) : Wt = s.calcNameWithPhiMask(s.selectedContact || Z.name)),
                            oe === 0 ? se = Wt : oe !== b.length - 1 ? se += ", ".concat(Wt) : se += " and ".concat(Wt),
                            se
                    }, "");
                    return S > 0 ? Pr()(h = "".concat(B, " +")).call(h, S) : B
                },
                displayNamesAriaLabel: function() {
                    var t, s = this, h, b = this.candidatesToShow.length > 3 ? Ne()(t = this.candidatesToShow).call(t, 0, 3) : this.candidatesToShow, S = this.candidatesToShow.length - 3, B = Eo()(b).call(b, function(se, Z, oe) {
                        var Wt = s.$options.filters.phoneNumber(Z.name);
                        return Z.role === "Customer" && (Z.name && Z.name === Z.phoneNumber ? Wt = s.calcAriaLabelPhoneWithPhiMask(Z.name, {
                            scene: "active"
                        }) : Wt = s.calcAriaLabelNameWithPhiMask(Z.name, {
                            scene: "active"
                        })),
                            oe === 0 ? se = Wt : oe !== b.length - 1 ? se += ", ".concat(Wt) : se += " and ".concat(Wt),
                            se
                    }, "");
                    return S > 0 ? Pr()(h = "".concat(B, " +")).call(h, S) : B
                },
                isHost: function() {
                    var t, s, h = G()(t = this.candidates).call(t, function(b) {
                        return b.isHost
                    });
                    return this.getUserId() === h.userId && !((s = this.reservation) !== null && s !== void 0 && (s = s.task) !== null && s !== void 0 && (s = s.attributes) !== null && s !== void 0 && s.isMonitor)
                },
                candidatesToShow: function() {
                    var t, s, h = this, b = Qi()(t = k()(s = this.candidates).call(s, function(B) {
                        return !(B.role === "Supervisor" && B.monitorMode === "monitor")
                    })).call(t, function(B) {
                        return oi({}, B)
                    });
                    ie()(b).call(b, function(B) {
                        if (B.role === "Customer") {
                            if (B.name && B.name === B.phoneNumber) {
                                var se, Z = h.activeTasks[(se = h.reservation) === null || se === void 0 || (se = se.task) === null || se === void 0 ? void 0 : se.id];
                                Z != null && Z.tempCustomerName ? B.name = h.calcNameWithPhiMask(Z.tempCustomerName, {
                                    scene: "active"
                                }) : B.name = h.calcPhoneWithPhiMask(B.name, {
                                    scene: "active"
                                })
                            } else
                                B.name = h.calcNameWithPhiMask(B.name, {
                                    scene: "active"
                                });
                            B.phoneNumber = h.calcPhoneWithPhiMask(B.phoneNumber, {
                                scene: "active"
                            })
                        }
                    });
                    var S = function(se, Z) {
                        return se.isHost ? 1 : Z.isHost || se.role === "Customer" ? -1 : Z.role === "Customer" ? 1 : 0
                    };
                    return $s()(b).call(b, S)
                }
            }),
            methods: oi(oi(oi({}, (0,
                Yt.mapActions)("sessionPanels", ["updateAgentBeMonitorInfo"])), (0,
                Yt.mapActions)("callbar", ["setAgentBeMonitorInfo", "resetAgentBeMonitorInfo"])), {}, {
                handleClose: function() {
                    this.showCandidates = !1
                },
                openFromKeyboard: function() {
                    var t = this;
                    return Kc(Ho().mark(function s() {
                        var h, b;
                        return Ho().wrap(function(B) {
                            for (; ; )
                                switch (B.prev = B.next) {
                                    case 0:
                                        return t.showCandidates = !0,
                                            B.next = 3,
                                            t.$nextTick();
                                    case 3:
                                        b = (h = t.$refs) === null || h === void 0 || (h = h.candidate) === null || h === void 0 ? void 0 : h.querySelector(".candidate-item"),
                                        b && (b?.setAttribute("tabindex", "0"),
                                            b?.focus());
                                    case 5:
                                    case "end":
                                        return B.stop()
                                }
                        }, s)
                    }))()
                }
            }),
            watch: {
                candidates: {
                    immediate: !0,
                    handler: function(t) {
                        var s = G()(t).call(t, function(S) {
                            return S.role === "Supervisor" && S.monitorMode === "monitor"
                        });
                        if (s && s.userId !== this.getUserId()) {
                            var h;
                            this.hasSupervisor = !0,
                                this.updateAgentBeMonitorInfo({
                                    reservation: {
                                        task: {
                                            id: (h = this.reservation) === null || h === void 0 || (h = h.task) === null || h === void 0 ? void 0 : h.id,
                                            attributes: {
                                                isMonitorChannel: !0,
                                                monitorUserName: s.name,
                                                monitorMode: s.monitorMode
                                            }
                                        }
                                    },
                                    eventType: "monitor.agent-received"
                                }),
                                this.setAgentBeMonitorInfo({
                                    monitorUserName: s.name
                                })
                        } else if (this.hasSupervisor) {
                            var b;
                            this.hasSupervisor = !1,
                                this.updateAgentBeMonitorInfo({
                                    reservation: {
                                        task: {
                                            id: (b = this.reservation) === null || b === void 0 || (b = b.task) === null || b === void 0 ? void 0 : b.id
                                        }
                                    },
                                    eventType: "monitor.leave"
                                }),
                                this.resetAgentBeMonitorInfo()
                        }
                    }
                }
            }
        };
        var Xc = (0,
            Ue.A)(Jc, wc, Tc, !1, null, "f623da88", null);
        const si = Xc.exports;
        var qc = function() {
            var t = this
                , s = t._self._c;
            return s("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: t.loading,
                    expression: "loading"
                }],
                staticClass: "legs"
            }, [s("div", {
                class: {
                    leg: !0,
                    active: t.callState.leg === "main"
                }
            }, [s("div", {
                staticClass: "leg-name"
            }, [t._v(t._s(t.displayNames))]), t._v(" "), t.callState.leg === "sub" ? s("div", {
                staticClass: "leg-swaplink"
            }, [t._v(`
      ` + t._s(t.$t("cci.analytics.label.onHold"))), s("a", {
                on: {
                    click: t.swapLeg
                }
            }, [t._v(" - " + t._s(t.$t("callbar.phone.clickToSwap")))])]) : s("div", [t._v(t._s(t.formattedMainLegDuration))])]), t._v(" "), s("div", {
                class: {
                    leg: !0,
                    subleg: !0,
                    active: t.callState.leg === "sub"
                },
                staticStyle: {
                    "margin-top": "23px"
                }
            }, [s("div", [s("div", {
                staticClass: "leg-name"
            }, [t._v(`
        ` + t._s(t._f("phoneNumber")(t.callState.minorLegState.inviteeName)) + `
      `)]), t._v(" "), t.callState.leg === "main" ? s("div", {
                staticClass: "leg-swaplink"
            }, [t._v(`
        ` + t._s(t.$t("cci.analytics.label.onHold"))), s("a", {
                on: {
                    click: t.swapLeg
                }
            }, [t._v(" - " + t._s(t.$t("callbar.phone.clickToSwap")))])]) : s("div", [t.bridged ? s("span", [t._v(t._s(t.formattedSubLegDuration))]) : s("span", [t._v(t._s(t.$t("callbar.phone.calling")))])])]), t._v(" "), t.bridged ? s(t.mergeIcon, {
                tag: "component",
                staticClass: "merge-btn",
                on: {
                    click: t.doMergeCall
                }
            }) : t._e()], 1)])
        }
            , eu = []
            , Ks = a(27425)
            , Oa = a.n(Ks)
            , Qs = a(26658)
            , Ko = a.n(Qs)
            , Ys = a(23951)
            , Io = a.n(Ys)
            , Zs = a(63290);
        function li(u) {
            "@babel/helpers - typeof";
            return li = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                li(u)
        }
        function Qo() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Qo = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && li(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(li(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function tu(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function nu(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            tu(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            tu(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        function Js(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function Xs(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = Js(Object(b), !0)).call(s, function(S) {
                    Ji(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = Js(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function Ji(u, t, s) {
            return (t = qs(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function qs(u) {
            var t = el(u, "string");
            return li(t) == "symbol" ? t : t + ""
        }
        function el(u, t) {
            if (li(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (li(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        const ru = {
            name: "Warmconferencelegs",
            mixins: [dt.A, Zt.A],
            props: {
                candidates: {
                    required: !0,
                    type: Array
                },
                params: {
                    type: Object,
                    required: !0
                },
                callName: {
                    required: !0,
                    type: String
                }
            },
            data: function() {
                return {
                    loading: !1,
                    invitee_channel_id: "",
                    startTime: 0,
                    isDark: (0,
                        Qe.getThemeMode)() === "dark",
                    minorLegDuration: 0,
                    mainLegDuration: 0
                }
            },
            computed: {
                bridged: function() {
                    return this.callState.minorLegState.bridged
                },
                formattedSubLegDuration: function() {
                    return (0,
                        Pt.secsToHHMMSS)(this.minorLegDuration)
                },
                formattedMainLegDuration: function() {
                    return (0,
                        Pt.secsToHHMMSS)(this.mainLegDuration)
                },
                minorLegBridgedTime: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 ? void 0 : t.minorLegState.startTime
                },
                mainLegStartTime: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 ? void 0 : t.mainLegState.startTime
                },
                displayNames: function() {
                    var t, s = this, h, b = this.candidatesToShow.length > 3 ? Ne()(t = this.candidatesToShow).call(t, 0, 3) : this.candidatesToShow, S = this.candidatesToShow.length - 3, B = Eo()(b).call(b, function(Z, oe, Wt) {
                        var $t = s.$options.filters.phoneNumber(oe.name);
                        return Wt === 0 ? Z = $t : Wt !== b.length - 1 ? Z += ", ".concat($t) : Z += " and ".concat($t),
                            Z
                    }, ""), se = S > 0 ? Pr()(h = "".concat(B, " +")).call(h, S) : B;
                    return se || this.callName
                },
                candidatesToShow: function() {
                    var t, s = this, h = k()(t = this.candidates).call(t, function(S) {
                        return !(S.role === "Supervisor" && S.monitorMode === "monitor" || S.userId === s.getUserId())
                    }), b = function(B, se) {
                        return B.isHost ? -1 : se.isHost ? 1 : B.role === "Customer" ? -1 : se.role === "Customer" ? 1 : 0
                    };
                    return $s()(h).call(h, b)
                },
                mergeIcon: function() {
                    return this.isDark ? "DarkMergeCall" : "MergeCall"
                }
            },
            components: {
                MergeCall: Io(),
                DarkMergeCall: Ko()
            },
            methods: Xs(Xs({}, (0,
                Yt.mapActions)("coreVoice", ["swapCallLeg", "mergeCall"])), {}, {
                swapLeg: function() {
                    this.swapCallLeg({
                        callSyncId: this.$callId()
                    })
                },
                doMergeCall: function() {
                    var t = this;
                    return nu(Qo().mark(function s() {
                        return Qo().wrap(function(b) {
                            for (; ; )
                                switch (b.prev = b.next) {
                                    case 0:
                                        return b.prev = 0,
                                            b.next = 3,
                                            t.mergeCall({
                                                callSyncId: t.$callId()
                                            });
                                    case 3:
                                        b.next = 8;
                                        break;
                                    case 5:
                                        b.prev = 5,
                                            b.t0 = b.catch(0),
                                            console.error(b.t0.message);
                                    case 8:
                                    case "end":
                                        return b.stop()
                                }
                        }, s, null, [[0, 5]])
                    }))()
                },
                updateSubLegDuration: function() {
                    this.minorLegDuration = Math.floor((Oa()() - this.minorLegBridgedTime) / 1e3),
                        this.timer = K()(this.updateSubLegDuration, 1e3)
                },
                updateMainLegDuration: function() {
                    this.mainLegDuration = Math.floor((Oa()() - this.mainLegStartTime) / 1e3),
                        this.mainLegTimer = K()(this.updateMainLegDuration, 1e3)
                },
                darkModeChange: function() {
                    this.isDark = (0,
                        Qe.getThemeMode)() === "dark"
                }
            }),
            watch: {
                bridged: {
                    immediate: !0,
                    handler: function(t) {
                        t && this.minorLegBridgedTime && this.updateSubLegDuration()
                    }
                },
                mainLegStartTime: {
                    immediate: !0,
                    handler: function(t) {
                        t && this.updateMainLegDuration()
                    }
                }
            },
            mounted: function() {
                Zs.z.$on("THEME_MODE_CHANGE", this.darkModeChange)
            },
            beforeDestroy: function() {
                Zs.z.$off("THEME_MODE_CHANGE", this.darkModeChange),
                    clearTimeout(this.timer),
                    clearTimeout(this.mainLegTimer)
            }
        };
        var au = (0,
            Ue.A)(ru, qc, eu, !1, null, "3c8e64b7", null);
        const Zf = au.exports;
        var iu = function() {
            var t = this
                , s = t._self._c;
            return s("div", {
                staticClass: "call-actions"
            }, [s("callActionsBtn", {
                attrs: {
                    list: t.actionList
                }
            }), t._v(" "), s("ReleaseDialog", {
                attrs: {
                    "show-release": t.showRelease,
                    "request-func": t.handleRelease
                },
                on: {
                    close: function(b) {
                        return t.setUIState({
                            showRelease: !1
                        })
                    }
                }
            }), t._v(" "), t.enableUpgradeToVideoDialogWithWhiteList ? s("UpgradeVoiceToVideoDailog", {
                attrs: {
                    visible: t.showVideo
                },
                on: {
                    cancel: function(b) {
                        return t.setUIState({
                            showVideo: !1
                        })
                    },
                    confirm: function(b) {
                        return t.setUIState({
                            showVideo: !1
                        })
                    }
                }
            }) : s("OldUpgradeVoiceToVideoDialog", {
                attrs: {
                    visible: t.showVideo
                },
                on: {
                    cancel: function(b) {
                        return t.setUIState({
                            showVideo: !1
                        })
                    },
                    confirm: function(b) {
                        return t.setUIState({
                            showVideo: !1
                        })
                    }
                }
            }), t._v(" "), s("PCIPaymentModal", {
                attrs: {
                    visible: t.showPCIModal,
                    submit: t.handleStartPCIPayment,
                    width: "350px"
                },
                on: {
                    close: t.closePCIModal
                }
            })], 1)
        }
            , ou = []
            , su = a(36512)
            , Ja = a.n(su)
            , Yo = a(76709)
            , tl = a(73979)
            , nl = a.n(tl)
            , lu = a(17877)
            , rl = a.n(lu)
            , cu = a(70184)
            , al = a.n(cu);
        const uu = `class Vumeter extends AudioWorkletProcessor {
  _volume
  _updateIntervalInMS
  _nextUpdateFrame
  _currentTime

  constructor() {
    super()
    this._rms = 0
    this._volume = 0
    this._updateIntervalInMS = 25
    this._nextUpdateFrame = this._updateIntervalInMS
    this._currentTime = 0
  }

  get intervalInFrames() {
    // eslint-disable-next-line
    return (this._updateIntervalInMS / 1000) * sampleRate
  }

  process(inputs) {
    if (inputs && inputs[0]) {
      const [leftChannel, rightChannel] = inputs[0]
      const mergedChannel = []
      const length = Math.min(leftChannel.length, rightChannel.length)

      let sum = 0
      /** Room Mean Square */
      let rms = 0

      // merge to mono
      for (let i = 0; i < length; i++) {
        mergedChannel.push(leftChannel[i] + rightChannel[i])
      }

      // Calculate the squared-sum.
      for (const signalValue of mergedChannel) {
        sum += signalValue * signalValue
      }

      // Calculate the RMS level and update the volume.
      rms = Math.sqrt(sum / mergedChannel.length)
      this._volume = rms

      this._nextUpdateFrame -= mergedChannel.length

      if (0 > this._nextUpdateFrame) {
        this._nextUpdateFrame += this.intervalInFrames

        // eslint-disable-next-line
        if (!this._currentTime || 0.125 < currentTime - this._currentTime) {
          // eslint-disable-next-line
          this._currentTime = currentTime
          this.port.postMessage({ volume: this._volume })
        }
      }
    }

    return true
  }
}

registerProcessor('vumeter', Vumeter)
`;
        function ci(u) {
            "@babel/helpers - typeof";
            return ci = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                ci(u)
        }
        function Zo() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Zo = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && ci(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(ci(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function wo(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function Jo(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            wo(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            wo(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        function il(u, t) {
            if (!(u instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function ol(u, t) {
            for (var s = 0; s < t.length; s++) {
                var h = t[s];
                h.enumerable = h.enumerable || !1,
                    h.configurable = !0,
                "value"in h && (h.writable = !0),
                    ne()(u, du(h.key), h)
            }
        }
        function Jf(u, t, s) {
            return t && ol(u.prototype, t),
            s && ol(u, s),
                ne()(u, "prototype", {
                    writable: !1
                }),
                u
        }
        function du(u) {
            var t = fu(u, "string");
            return ci(t) == "symbol" ? t : t + ""
        }
        function fu(u, t) {
            if (ci(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (ci(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        function Oi(u) {
            var t, s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
            console.log(Pr()(t = "ZCC Voice vumeter -- ".concat(u, " ")).call(t, s ? ": " : ""), s)
        }
        var ui = function() {
            function u() {
                il(this, u),
                    this.talkingInterval = null,
                    this.audioContext = null,
                    this.audioWorkletNode = null,
                    this.mediaStream = null,
                    this.mediaStreamSource = null,
                    this.vumeterUrl = ""
            }
            return Jf(u, [{
                key: "startVumeter",
                value: function() {
                    var s = this;
                    if (!navigator.mediaDevices) {
                        var h = new Error("unsupported browser");
                        throw h.code = 501,
                            h
                    }
                    navigator.mediaDevices.getUserMedia({
                        audio: !0
                    }).then(function(b) {
                        return s.connect(b)
                    }).catch(function(b) {
                        s.stopVumeter(),
                            Oi("getUserMedia failed", b)
                    })
                }
            }, {
                key: "stopVumeter",
                value: function() {
                    var s, h, b, S, B, se = this;
                    (s = this.audioContext) === null || s === void 0 || s.close(),
                        this.audioContext = null,
                    (h = this.audioWorkletNode) === null || h === void 0 || h.disconnect(),
                        this.audioWorkletNode = null,
                    (b = this.mediaStreamSource) === null || b === void 0 || b.disconnect(),
                        this.mediaStreamSource = null,
                    (S = this.mediaStream) === null || S === void 0 || ie()(B = S.getAudioTracks()).call(B, function(Z) {
                        var oe;
                        Z.stop(),
                            Z.removeEventListener("ended", nl()(oe = se.__trackEndedListener).call(oe, se))
                    }),
                        this.mediaStream = null,
                        rl().revokeObjectURL(this.vumeterUrl),
                        Oi("stop vumeter")
                }
            }, {
                key: "setVumeter",
                value: function(s) {
                    var h, b, S = document.querySelector(".vumeter");
                    if (S) {
                        var B = Math.round(((h = s == null || (b = s.data) === null || b === void 0 ? void 0 : b.volume) !== null && h !== void 0 ? h : 0) * 100);
                        this.clearTalkingInterval(),
                            B ? this.talkingInterval = al()(function() {
                                var se = Number(S.style.height.split("%")[0]);
                                S.style.height = "".concat(se + 15, "%")
                            }, 100) : S.style.height = "0%"
                    }
                }
            }, {
                key: "__trackEndedListener",
                value: function(s) {
                    this.stopVumeter(),
                        this.startVumeter(),
                        Oi("Audio track was ended", s),
                        Oi("Try to recover...")
                }
            }, {
                key: "detectAudioTrack",
                value: function() {
                    var s = this;
                    if (this.mediaStream) {
                        var h = this.mediaStream.getAudioTracks();
                        ie()(h).call(h, function(b) {
                            var S;
                            return b.addEventListener("ended", nl()(S = s.__trackEndedListener).call(S, s))
                        })
                    }
                }
            }, {
                key: "connect",
                value: function() {
                    var t = Jo(Zo().mark(function h(b) {
                        var S = this;
                        return Zo().wrap(function(se) {
                            for (; ; )
                                switch (se.prev = se.next) {
                                    case 0:
                                        if (window.AudioContext) {
                                            se.next = 2;
                                            break
                                        }
                                        throw new Error("AudioContext is not supported");
                                    case 2:
                                        if (!(!(b instanceof MediaStream) || !b.getAudioTracks().length || !b.active)) {
                                            se.next = 4;
                                            break
                                        }
                                        throw new Error("Invalid MediaStream");
                                    case 4:
                                        return this.mediaStream = b,
                                            this.audioContext = new AudioContext,
                                            this.mediaStreamSource = this.audioContext.createMediaStreamSource(b),
                                            se.prev = 7,
                                            this.vumeterUrl = rl().createObjectURL(new Blob([uu],{
                                                type: "text/javascript"
                                            })),
                                            se.next = 11,
                                            this.audioContext.audioWorklet.addModule(this.vumeterUrl);
                                    case 11:
                                        this.audioWorkletNode = new AudioWorkletNode(this.audioContext,"vumeter"),
                                            this.audioWorkletNode.port.onmessage = function(Z) {
                                                return S.setVumeter(Z)
                                            }
                                            ,
                                        this.audioContext.state !== "running" && this.audioContext.resume(),
                                            this.detectAudioTrack(),
                                            this.mediaStreamSource.connect(this.audioWorkletNode).connect(this.audioContext.destination),
                                            Oi("start vumeter"),
                                            se.next = 23;
                                        break;
                                    case 19:
                                        se.prev = 19,
                                            se.t0 = se.catch(7),
                                            this.stopVumeter(),
                                            Oi("start vumeter error", se.t0);
                                    case 23:
                                    case "end":
                                        return se.stop()
                                }
                        }, h, this, [[7, 19]])
                    }));
                    function s(h) {
                        return t.apply(this, arguments)
                    }
                    return s
                }()
            }, {
                key: "clearTalkingInterval",
                value: function() {
                    this.talkingInterval && window.clearInterval(this.talkingInterval)
                }
            }])
        }();
        function ja(u) {
            "@babel/helpers - typeof";
            return ja = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                ja(u)
        }
        function Xo(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function Xi(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = Xo(Object(b), !0)).call(s, function(S) {
                    sl(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = Xo(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function sl(u, t, s) {
            return (t = To(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function To(u) {
            var t = pu(u, "string");
            return ja(t) == "symbol" ? t : t + ""
        }
        function pu(u, t) {
            if (ja(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (ja(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        const hu = {
            data: function() {
                return {
                    vumeter: null
                }
            },
            computed: Xi(Xi(Xi({}, (0,
                Yt.mapState)("common", ["features"])), (0,
                Yt.mapGetters)(["nacosConfig"])), {}, {
                enableVumeterWhenPageVisible: function() {
                    return this.nacosConfig.disableVumeterWhenPageVisible !== "true" && !!window.__subBroadcast__
                }
            }),
            methods: {
                handleVisibilityChange: function() {
                    var t = document.visibilityState === "visible";
                    if (t) {
                        var s;
                        (s = this.vumeter) === null || s === void 0 || s.startVumeter()
                    } else {
                        var h;
                        (h = this.vumeter) === null || h === void 0 || h.stopVumeter()
                    }
                }
            },
            mounted: function() {
                var t;
                if ((t = this.features) !== null && t !== void 0 && t.enableZccVoiceVumeter) {
                    var s = new ui;
                    this.vumeter = s,
                        this.enableVumeterWhenPageVisible ? (document.addEventListener("visibilitychange", this.handleVisibilityChange),
                        document.visibilityState === "visible" && s.startVumeter()) : s.startVumeter()
                }
            },
            beforeDestroy: function() {
                var t;
                (t = this.vumeter) === null || t === void 0 || t.stopVumeter(),
                this.enableVumeterWhenPageVisible && document.removeEventListener("visibilitychange", this.handleVisibilityChange)
            }
        };
        function qi(u) {
            "@babel/helpers - typeof";
            return qi = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                qi(u)
        }
        function vu(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function ll(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = vu(Object(b), !0)).call(s, function(S) {
                    mu(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = vu(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function mu(u, t, s) {
            return (t = gu(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function gu(u) {
            var t = yu(u, "string");
            return qi(t) == "symbol" ? t : t + ""
        }
        function yu(u, t) {
            if (qi(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (qi(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        const _u = {
            mixins: [hu],
            props: {
                list: {
                    type: Array,
                    required: !0
                }
            },
            render: function() {
                var t, s = this;
                return (0,
                    Et.h)("div", {
                    class: "btn-row"
                }, [Qi()(t = this.list).call(t, function(h) {
                    var b = (0,
                        Et.h)("div", Ja()([{
                        directives: [{
                            name: "loading",
                            value: h?.loading
                        }],
                        attrs: {
                            "aria-label": h?.text,
                            "aria-disabled": h?.disabled,
                            disabled: h?.disabled,
                            tabindex: h != null && h.disabled ? -1 : 0,
                            role: "button"
                        },
                        class: ["cus-call-btns", h != null && h.selected ? "cus-btn-selected" : "", h != null && h.disabled ? "cus-btn-disabled" : "", h != null && h.focued ? "focused" : "", h != null && h.className ? h.className : ""]
                    }, {
                        on: ll(ll({}, h?.events), {}, {
                            mousedown: function(se) {
                                return se.preventDefault()
                            }
                        })
                    }]), [h?.slot])
                        , S = (0,
                        Et.h)("zm-tooltip", {
                        attrs: {
                            content: h.tooltip,
                            placement: s.fixTooltipPlacement(h?.tooltipPlacement)
                        }
                    }, [b]);
                    return (0,
                        Et.h)("a", {
                        directives: [{
                            name: "show",
                            value: h?.isDisplay
                        }],
                        key: h?.key
                    }, [h.tooltip ? S : b, (0,
                        Et.h)("span", [h?.text])])
                })])
            },
            methods: {
                fixTooltipPlacement: function(t) {
                    return {
                        top: 1,
                        bottom: 1,
                        left: 1,
                        right: 1
                    }[t] ? t : "top"
                }
            }
        };
        var qo, xa, cl = (0,
            Ue.A)(_u, qo, xa, !1, null, "081bb774", null);
        const bu = cl.exports;
        var Cu = function() {
            var t = this
                , s = t._self._c;
            return s("ZccDialog", {
                staticClass: "upgrade_voice",
                attrs: {
                    visible: t.visible,
                    title: t.$t("cci.client.phone.panel.video.upgradeToVideo"),
                    width: "90vw",
                    "modal-append-to-body": !1,
                    "custom-class": "voice__upgradeVideo",
                    "mini-screen-enlargement": !1
                }
            }, [s("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: t.isLodingContact,
                    expression: "isLodingContact"
                }]
            }, [s("div", [s("p", [t._v(`
        ` + t._s(t.$t("cci.client.phone.panel.video.description")) + `
      `)]), t._v(" "), s("zm-radio-group", {
                staticClass: "upgrade_voice-radio",
                attrs: {
                    "aria-labelledby": "group_label_1",
                    name: "Audio-Type-1",
                    vertical: ""
                },
                model: {
                    value: t.sendMethod,
                    callback: function(b) {
                        t.sendMethod = b
                    },
                    expression: "sendMethod"
                }
            }, [t._l(t.contactList, function(h) {
                return s("zm-radio", {
                    key: h.type + h.value,
                    attrs: {
                        label: h.value
                    }
                }, [t._v(`
          ` + t._s(h.label) + `
        `)])
            }), t._v(" "), s("zm-radio", {
                key: "customerContact",
                staticClass: "input-radio",
                attrs: {
                    label: t.CUSTOMER_CONTACT_TAG
                }
            }, [s("div", {
                staticStyle: {
                    width: "1px",
                    height: "1px",
                    overflow: "hidden"
                }
            }, [t._v(`
            ` + t._s(t.inputPleaceHolder) + `
          `)]), t._v(" "), s("zm-input", {
                staticStyle: {
                    width: "70vw",
                    "max-width": "400px"
                },
                attrs: {
                    placeholder: t.inputPleaceHolder
                },
                on: {
                    input: t.handleValidContact
                },
                model: {
                    value: t.customerContact,
                    callback: function(b) {
                        t.customerContact = b
                    },
                    expression: "customerContact"
                }
            })], 1), t._v(" "), t.validateMessage ? s("span", {
                staticClass: "error-msg zm-form-item__error",
                attrs: {
                    role: "alert"
                }
            }, [t._v(`
          ` + t._s(t.validateMessage) + `
        `)]) : t._e()], 2)], 1), t._v(" "), s("div", {
                staticClass: "upgrade_voice-footer"
            }, [s("zm-button", {
                attrs: {
                    disabled: t.disableConfirm,
                    type: "primary"
                },
                on: {
                    click: t.handleConfirm
                }
            }, [t._v(`
        ` + t._s(t.$t("cci.client.phone.panel.video.confirm")) + `
      `)]), t._v(" "), s("zm-button", {
                on: {
                    click: t.handleCancel
                }
            }, [t._v(`
        ` + t._s(t.$t("cci.common.button.cancel")) + `
      `)])], 1)])])
        }
            , Eu = []
            , Iu = a(34788)
            , So = a.n(Iu)
            , wu = a(97951);
        function Bh(u) {
            return request({
                url: "/sub-reason/listAll",
                method: "get",
                params: u
            })
        }
        function qf(u) {
            return request({
                url: "/sub-reason/assign",
                method: "post",
                data: u
            })
        }
        function ep(u) {
            return request({
                url: "/sub-reason/ids",
                method: "delete",
                params: u
            })
        }
        function tp(u) {
            return request({
                url: "/sub-reason/list",
                method: "get",
                params: u
            })
        }
        function Ao(u) {
            return request({
                url: "/account/settings",
                method: "get",
                params: u
            })
        }
        function Tu(u) {
            return request({
                url: "/account/settings",
                method: "put",
                data: u
            })
        }
        function Su(u) {
            return request({
                url: "/sub-reason",
                method: "post",
                data: u
            })
        }
        function np(u) {
            return request({
                url: "/sub-reason",
                method: "put",
                data: u
            })
        }
        function rp(u) {
            return request({
                url: "/sub-reason",
                method: "delete",
                params: u
            })
        }
        function ap(u) {
            return request({
                url: "/sub-reason/select",
                method: "patch",
                data: u
            })
        }
        function ip(u) {
            return request({
                url: "/account/feature",
                method: "put",
                params: u
            })
        }
        function Au(u) {
            return request({
                url: "/account/feature",
                method: "get",
                params: u
            })
        }
        function Vh(u) {
            return request({
                url: "/account/reset",
                method: "put",
                params: u
            })
        }
        function op(u) {
            return request({
                url: "/account/lock",
                method: "put",
                params: u
            })
        }
        function sp() {
            return request({
                url: "/account/data-retention-default-policy",
                method: "get"
            })
        }
        function lp(u) {
            return request({
                url: "/account/settings/data-retention-enable",
                method: "put",
                params: u
            })
        }
        function xi(u) {
            return request({
                url: "/account/data-retention-policy",
                method: "put",
                data: u
            })
        }
        function cp(u) {
            return request({
                url: "/account/recording",
                method: "get",
                params: u
            })
        }
        function up(u) {
            return request({
                url: "/account/recording",
                method: "post",
                data: u
            })
        }
        function dp(u) {
            return request({
                url: "/account/recording",
                method: "put",
                data: u
            })
        }
        function fp(u) {
            return request({
                url: "/account/recording",
                method: "delete",
                data: u
            })
        }
        function pp(u) {
            return request({
                url: "/account/lock",
                method: "put",
                params: u
            })
        }
        function hp(u) {
            return request({
                url: "/account/settings/invite-template",
                method: "post",
                data: u
            })
        }
        function Lu(u) {
            return request({
                url: "/account/settings/invite-template",
                method: "get",
                params: {
                    type: u
                }
            })
        }
        function vp(u) {
            return request({
                url: "/account/settings/voicemail_notification?".concat(u),
                method: "put"
            })
        }
        function mp(u) {
            var t, s = new FormData;
            return _forEachInstanceProperty(t = _Object$keys(u)).call(t, function(h) {
                return s.append(h, u[h])
            }),
                request({
                    url: "/account/messaging-settings",
                    method: "put",
                    data: s
                })
        }
        function ul() {
            return request({
                url: "/account/hipaa/setting",
                method: "get"
            })
        }
        function dl(u, t) {
            return request({
                url: t ? "/account/hipaa/".concat(t, "/setting") : "/account/hipaa/setting",
                method: "put",
                data: u
            })
        }
        function Nu(u, t) {
            return request({
                url: t ? "/account/hipaa/".concat(t, "/setting") : "/account/hipaa/setting",
                method: "delete",
                data: u
            })
        }
        function gp() {
            return request({
                url: "/webRole/hipaa",
                method: "get"
            })
        }
        function es() {
            return (0,
                wu.default)({
                url: "/account/sms/number",
                method: "get"
            })
        }
        function Ua() {
            return request({
                url: "/account/outbound/settings",
                method: "get"
            })
        }
        function yp() {
            return request({
                url: "/account/port-out-pin",
                method: "get"
            })
        }
        function _p(u) {
            return request({
                url: "/site",
                method: "get",
                params: u
            })
        }
        function bp() {
            return request({
                url: "/site/list_sip_zone",
                method: "get"
            })
        }
        function Cp(u) {
            return request({
                url: "/site/creation",
                method: "post",
                data: u
            })
        }
        function eo(u) {
            return request({
                url: "/site/rename",
                method: "post",
                data: u
            })
        }
        function Fh(u) {
            return request({
                url: "/site/change_sip_zone",
                method: "post",
                data: u
            })
        }
        function Ep(u) {
            return request({
                url: "/site/detail",
                method: "get",
                params: u
            })
        }
        function Ip(u) {
            return request({
                url: "site/query_user",
                method: "get",
                params: u
            })
        }
        function wp(u) {
            return request({
                url: "/site/bind_user",
                method: "post",
                data: u
            })
        }
        function Tp(u) {
            return request({
                url: "site/query_site_member",
                method: "get",
                params: u
            })
        }
        function Sp(u) {
            return request({
                url: "/site/list_role",
                method: "get",
                params: u
            })
        }
        function Ap(u) {
            return request({
                url: "/site/move_user",
                method: "post",
                data: u
            })
        }
        function Mu(u) {
            return request({
                url: "/site/deletion",
                method: "post",
                data: u
            })
        }
        function Lp() {
            return request({
                url: "/account/performance/settings",
                method: "get"
            })
        }
        function Np(u) {
            return request({
                url: "/account/performance/setting",
                method: "put",
                data: u
            })
        }
        function Mp(u) {
            return request({
                url: "/account/content_storage",
                method: "get",
                params: u
            })
        }
        function Wh(u) {
            return request({
                url: "/account/content_storage_chat",
                method: "get",
                params: u
            })
        }
        function Pp(u) {
            return request({
                url: "/account/personal/data/entities",
                method: "get",
                params: u
            })
        }
        function kp(u) {
            return request({
                url: "/account/defaultMediaList",
                method: "get",
                params: u
            })
        }
        function Op(u) {
            return request({
                url: "/account/assetFile",
                method: "get",
                params: u
            })
        }
        var fl = a(97508);
        function di(u) {
            "@babel/helpers - typeof";
            return di = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                di(u)
        }
        function fi() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            fi = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && di(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(di(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function ts(u, t) {
            return xu(u) || Ou(u, t) || ku(u, t) || Pu()
        }
        function Pu() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function ku(u, t) {
            if (u) {
                var s;
                if (typeof u == "string")
                    return pl(u, t);
                var h = Ne()(s = {}.toString.call(u)).call(s, 8, -1);
                return h === "Object" && u.constructor && (h = u.constructor.name),
                    h === "Map" || h === "Set" ? rr()(u) : h === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(h) ? pl(u, t) : void 0
            }
        }
        function pl(u, t) {
            (t == null || t > u.length) && (t = u.length);
            for (var s = 0, h = Array(t); s < t; s++)
                h[s] = u[s];
            return h
        }
        function Ou(u, t) {
            var s = u == null ? null : typeof Ae() < "u" && Tt()(u) || u["@@iterator"];
            if (s != null) {
                var h, b, S, B, se = [], Z = !0, oe = !1;
                try {
                    if (S = (s = s.call(u)).next,
                    t === 0) {
                        if (Object(s) !== s)
                            return;
                        Z = !1
                    } else
                        for (; !(Z = (h = S.call(s)).done) && (se.push(h.value),
                        se.length !== t); Z = !0)
                            ;
                } catch (Wt) {
                    oe = !0,
                        b = Wt
                } finally {
                    try {
                        if (!Z && s.return != null && (B = s.return(),
                        Object(B) !== B))
                            return
                    } finally {
                        if (oe)
                            throw b
                    }
                }
                return se
            }
        }
        function xu(u) {
            if (en()(u))
                return u
        }
        function hl(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function ns(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            hl(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            hl(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        function vl(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function Di(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = vl(Object(b), !0)).call(s, function(S) {
                    Du(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = vl(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function Du(u, t, s) {
            return (t = Ru(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function Ru(u) {
            var t = ju(u, "string");
            return di(t) == "symbol" ? t : t + ""
        }
        function ju(u, t) {
            if (di(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (di(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        var Uu = de.livevideoApi.upgradeVoiceToVideo
            , $u = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+\.)+[a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{2,}))$/
            , rs = function(t) {
            return t && $u.test(t)
        }
            , ml = function(t) {
            return t && /^\+?\d+$/.test(t)
        }
            , as = "__CUSTOMER_CONTACT_TAG__";
        const Dp = {
            props: {
                visible: Boolean,
                isConference: Boolean
            },
            mixins: [Zt.A],
            data: function() {
                return {
                    CUSTOMER_CONTACT_TAG: as,
                    isLodingContact: !1,
                    contactList: [],
                    customerContact: "",
                    sendMethod: "",
                    hasOutboundNumber: !1,
                    validateMessage: ""
                }
            },
            computed: Di(Di(Di({}, (0,
                Yt.mapGetters)("sessionPanels", ["currentActiveTask"])), (0,
                Yt.mapGetters)({
                currentAgent: "user"
            })), {}, {
                isSMS: function() {
                    var t = this.currentActiveTask || {}
                        , s = t.tkType;
                    return s === "sms"
                },
                profileUserDetailNumber: function() {
                    var t = this.currentActiveTask || {}
                        , s = t.tkType
                        , h = t.direction;
                    if (s === "phone")
                        return h === "outbound" ? this.currentActiveTask.to : this.currentActiveTask.from;
                    if (s === "video" || s === "sms")
                        return this.currentActiveTask.customerName
                },
                disableConfirm: function() {
                    return !this.sendMethod || this.sendMethod === as && this.customerContact && !!this.validateMessage
                },
                inputPleaceHolder: function() {
                    return this.hasOutboundNumber ? "Enter a new phone number or email address" : "Enter an email address"
                }
            }),
            created: function() {
                this.fetchAccSetting()
            },
            beforeDestroy: function() {
                this.changeShowSMSWarning({
                    isSMSWarningVisible: !1
                })
            },
            watch: {
                visible: function(t) {
                    t && (this.getContactListByNum(),
                        this.sendMethod = "",
                        this.customerContact = "")
                }
            },
            methods: Di(Di(Di({}, (0,
                Yt.mapActions)("video", ["addSentApiEngagements"])), (0,
                Yt.mapActions)("sms", ["changeShowSMSWarning"])), {}, {
                handleValidContact: (0,
                    Pt.debounce)(function() {
                    if (!this.customerContact)
                        return this.validateMessage = !1;
                    if (!this.hasOutboundNumber) {
                        this.validateMessage = !rs(this.customerContact) && this.$t("cci.client.phone.panel.video.emailError");
                        return
                    }
                    rs(this.customerContact) ? this.validateMessage = !1 : ml(this.customerContact) ? this.validateMessage = !1 : this.validateMessage = this.$t("cci.client.phone.panel.video.errorMessage")
                }, 50),
                handleConfirm: function() {
                    var t = this;
                    return ns(fi().mark(function s() {
                        var h, b, S, B, se, Z, oe, Wt, $t;
                        return fi().wrap(function(Qn) {
                            for (; ; )
                                switch (Qn.prev = Qn.next) {
                                    case 0:
                                        if (h = t.currentActiveTask.engagementId,
                                            b = {
                                                engagementId: t.currentActiveTask.engagementId,
                                                taskId: t.currentActiveTask.taskId,
                                                channelType: "CALL"
                                            },
                                        t.account.enableVoiceConferenceUpgradeToVideo && (b.isVoiceConference = t.isConference),
                                            S = t.sendMethod,
                                        t.sendMethod === as && (S = t.customerContact),
                                            !rs(S)) {
                                            Qn.next = 9;
                                            break
                                        }
                                        b.email = S,
                                            Qn.next = 14;
                                        break;
                                    case 9:
                                        if (!ml(S)) {
                                            Qn.next = 13;
                                            break
                                        }
                                        b.mobile = (S[0] === "+" ? "" : "+1") + S,
                                            Qn.next = 14;
                                        break;
                                    case 13:
                                        return Qn.abrupt("return");
                                    case 14:
                                        return t.isLodingContact = !0,
                                            Qn.next = 17,
                                            (0,
                                                Pt.tryApiCatch)(Uu, b);
                                    case 17:
                                        if (B = Qn.sent,
                                            se = ts(B, 2),
                                            Z = se[0],
                                            oe = se[1],
                                            t.isLodingContact = !1,
                                            !Z) {
                                            Qn.next = 29;
                                            break
                                        }
                                        if ($t = oe == null || (Wt = oe.data) === null || Wt === void 0 ? void 0 : Wt.errorCode,
                                        $t !== "150018") {
                                            Qn.next = 27;
                                            break
                                        }
                                        return t.changeShowSMSWarning({
                                            isSMSWarningVisible: !0
                                        }),
                                            Qn.abrupt("return");
                                    case 27:
                                        return t.$message.error(Z),
                                            Qn.abrupt("return");
                                    case 29:
                                        t.addSentApiEngagements(h),
                                            t.$emit("confirm");
                                    case 31:
                                    case "end":
                                        return Qn.stop()
                                }
                        }, s)
                    }))()
                },
                handleCancel: function() {
                    this.$emit("cancel")
                },
                getContactListByNum: function() {
                    var t = this;
                    return ns(fi().mark(function s() {
                        var h, b, S, B, se, Z, oe, Wt, $t, Yn, Qn;
                        return fi().wrap(function(Fn) {
                            for (; ; )
                                switch (Fn.prev = Fn.next) {
                                    case 0:
                                        if (h = [],
                                            b = new (So()),
                                            S = new (So()),
                                            B = t.profileUserDetailNumber,
                                            B) {
                                            Fn.next = 6;
                                            break
                                        }
                                        return Fn.abrupt("return");
                                    case 6:
                                        return t.hasOutboundNumber && h.push({
                                            value: B,
                                            type: "mobile",
                                            label: t.$options.filters.phoneNumber(B, t.currentAgent.countryOrRegion)
                                        }),
                                            b.add(B),
                                            t.isLodingContact = !0,
                                            Fn.next = 11,
                                            (0,
                                                Pt.tryApiCatch)(fl.kK, {
                                                phoneNumber: B
                                            });
                                    case 11:
                                        se = Fn.sent,
                                            Z = ts(se, 2),
                                            oe = Z[0],
                                            Wt = Z[1],
                                            t.isLodingContact = !1,
                                        oe || ($t = Wt || {},
                                            Yn = $t.items,
                                            Qn = Yn === void 0 ? [] : Yn,
                                            ie()(Qn).call(Qn, function(Vt) {
                                                var Ir;
                                                if (ie()(Ir = Vt.directNumbers).call(Ir, function(On) {
                                                    var Br;
                                                    On = (Br = On) === null || Br === void 0 ? void 0 : Ka()(Br).call(Br),
                                                    !(!On || !t.hasOutboundNumber || b.has(On)) && (h.push({
                                                        value: On,
                                                        type: "mobile",
                                                        label: t.$options.filters.phoneNumber(On, t.currentAgent.countryOrRegion)
                                                    }),
                                                        b.add(On))
                                                }),
                                                    !!Vt.email) {
                                                    var Cr = Vt.email.split(",");
                                                    ie()(Cr).call(Cr, function(On) {
                                                        On = Ka()(On).call(On),
                                                        !S.has(On) && (h.push({
                                                            value: On,
                                                            type: "email",
                                                            label: On
                                                        }),
                                                            S.add(On))
                                                    })
                                                }
                                            })),
                                            t.contactList = h,
                                            t.sendMethod = h[0].value;
                                    case 19:
                                    case "end":
                                        return Fn.stop()
                                }
                        }, s)
                    }))()
                },
                fetchAccSetting: function() {
                    var t = this;
                    return ns(fi().mark(function s() {
                        var h, b, S, B;
                        return fi().wrap(function(Z) {
                            for (; ; )
                                switch (Z.prev = Z.next) {
                                    case 0:
                                        return Z.next = 2,
                                            (0,
                                                Pt.tryApiCatch)(es);
                                    case 2:
                                        if (h = Z.sent,
                                            b = ts(h, 2),
                                            S = b[0],
                                            B = b[1],
                                            !S) {
                                            Z.next = 9;
                                            break
                                        }
                                        return t.hasOutboundNumber = !1,
                                            Z.abrupt("return", t.$message.error(S));
                                    case 9:
                                        t.hasOutboundNumber = !!B;
                                    case 10:
                                    case "end":
                                        return Z.stop()
                                }
                        }, s)
                    }))()
                }
            })
        };
        var Bu = (0,
            Ue.A)(Dp, Cu, Eu, !1, null, "f26d5d20", null);
        const Vu = Bu.exports;
        var Fu = function() {
            var t = this
                , s = t._self._c;
            return s("ZccDialog", {
                ref: "releaseDialog",
                staticClass: "release_dialog",
                attrs: {
                    title: t.$t("cci.client.livevideo.release.title"),
                    visible: t.showRelease,
                    width: "90vw",
                    "modal-append-to-body": !1,
                    "custom-class": "voice__release",
                    "mini-screen-enlargement": !1
                },
                on: {
                    opened: t.handleOpened,
                    close: function(b) {
                        return t.$emit("close")
                    }
                }
            }, [s("p", [t._v(t._s(t.$t("cci.client.livevideo.release.description")))]), t._v(" "), s("div", {
                staticClass: "dialog-footer",
                attrs: {
                    slot: "footer"
                },
                slot: "footer"
            }, [s("zm-button", {
                staticStyle: {
                    "font-weight": "400"
                },
                on: {
                    click: function(b) {
                        return t.$emit("close")
                    }
                }
            }, [t._v(`
      ` + t._s(t.$t("cci.common.button.cancel")) + `
    `)]), t._v(" "), s("zm-button", {
                attrs: {
                    loading: t.loading,
                    type: "primary"
                },
                on: {
                    click: t.handleRelease
                }
            }, [t._v(`
      ` + t._s(t.$t("cci.common.button.release")) + `
    `)])], 1)])
        }
            , Wu = [];
        function Lo(u) {
            "@babel/helpers - typeof";
            return Lo = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                Lo(u)
        }
        function is() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            is = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && Lo(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(Lo(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function No(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function Rp(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            No(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            No(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        const Gu = {
            props: {
                showRelease: Boolean,
                requestFunc: Function
            },
            data: function() {
                return {
                    loading: !1
                }
            },
            methods: {
                handleOpened: function() {
                    var t = this;
                    this.$nextTick(function() {
                        var s;
                        (s = t.$refs.releaseDialog) === null || s === void 0 || s.refreshAria()
                    })
                },
                handleRelease: function() {
                    var t = this;
                    return Rp(is().mark(function s() {
                        var h;
                        return is().wrap(function(S) {
                            for (; ; )
                                switch (S.prev = S.next) {
                                    case 0:
                                        return t.loading = !0,
                                            S.prev = 1,
                                            S.next = 4,
                                            (h = t.requestFunc) === null || h === void 0 ? void 0 : h.call(t);
                                    case 4:
                                        S.next = 9;
                                        break;
                                    case 6:
                                        S.prev = 6,
                                            S.t0 = S.catch(1),
                                            console.log(S.t0);
                                    case 9:
                                        return S.prev = 9,
                                            t.loading = !1,
                                            S.finish(9);
                                    case 12:
                                    case "end":
                                        return S.stop()
                                }
                        }, s, null, [[1, 6, 9, 12]])
                    }))()
                }
            }
        };
        var zu = (0,
            Ue.A)(Gu, Fu, Wu, !1, null, "b5bd1a22", null);
        const Hu = zu.exports;
        var Ku = a(99203)
            , Qu = function() {
            var t = this
                , s = t._self._c;
            return s("ZccDialog", {
                staticClass: "upgrade_voice",
                attrs: {
                    visible: t.visible,
                    title: t.$t("cci.client.phone.panel.video.upgradeToVideo"),
                    width: "90vw",
                    "modal-append-to-body": !1,
                    "custom-class": "voice__upgradeVideo",
                    "mini-screen-enlargement": !1
                }
            }, [s("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: t.isLodingContact,
                    expression: "isLodingContact"
                }]
            }, [s("div", [s("p", [t._v(`
        ` + t._s(t.$t("cci.client.phone.panel.video.description")) + `
      `)]), t._v(" "), s("zm-radio-group", {
                staticClass: "upgrade_voice-radio",
                attrs: {
                    "aria-labelledby": "group_label_1",
                    name: "Audio-Type-1",
                    vertical: ""
                },
                model: {
                    value: t.sendMethod,
                    callback: function(b) {
                        t.sendMethod = b
                    },
                    expression: "sendMethod"
                }
            }, [t._l(t.contactList, function(h) {
                return s("zm-radio", {
                    key: h.type + h.value,
                    attrs: {
                        label: h.value,
                        disabled: h.disabled
                    }
                }, [t._v(`
          ` + t._s(h.label) + `
          `), s("span", {
                    attrs: {
                        slot: "suffix"
                    },
                    slot: "suffix"
                }, [s("zm-tooltip", {
                    attrs: {
                        content: h.disabledReason,
                        placement: "top"
                    }
                }, [h.disabledReason ? s("zm-button", {
                    attrs: {
                        type: "icon",
                        ghost: "",
                        icon: "zm-icon-info-outline",
                        "aria-label": h.disabledReason
                    }
                }) : t._e()], 1)], 1)])
            }), t._v(" "), s("zm-radio", {
                key: "customerContact",
                staticClass: "input-radio",
                attrs: {
                    label: t.CUSTOMER_CONTACT_TAG
                }
            }, [s("div", {
                staticStyle: {
                    width: "1px",
                    height: "1px",
                    overflow: "hidden"
                }
            }, [t._v(`
            ` + t._s(t.inputPleaceHolder) + `
          `)]), t._v(" "), s("zm-input", {
                staticStyle: {
                    width: "70vw",
                    "max-width": "400px"
                },
                attrs: {
                    placeholder: t.inputPleaceHolder
                },
                on: {
                    input: t.handleValidContact,
                    focus: t.handleInputFocus
                },
                model: {
                    value: t.customerContact,
                    callback: function(b) {
                        t.customerContact = b
                    },
                    expression: "customerContact"
                }
            })], 1), t._v(" "), s("span", {
                staticClass: "error-msg zm-form-item__error",
                style: {
                    height: t.validateMessage ? "auto" : "18px"
                },
                attrs: {
                    role: "alert"
                }
            }, [t.validateMessage ? s(Ku.A, {
                staticClass: "alert"
            }) : t._e(), t._v(" "), s("span", [t._v(`
            ` + t._s(t.validationError) + `
            `), s("zm-tooltip", {
                attrs: {
                    placement: "top"
                }
            }, [s("div", {
                attrs: {
                    slot: "content"
                },
                slot: "content"
            }, t._l(t.emailWhiteList, function(h) {
                return s("span", {
                    key: h,
                    style: {
                        display: "block",
                        marginBottom: "4px"
                    }
                }, [t._v(`
                  ` + t._s(h) + `
                `)])
            }), 0), t._v(" "), s("span", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.showSpecificEmailList,
                    expression: "showSpecificEmailList"
                }],
                staticClass: "error-msg__email-whitelist"
            }, [t._v(`
                ` + t._s(t.$t("cci.video.email.whitlist.lightText")) + `
              `)])])], 1)], 1)], 2)], 1), t._v(" "), s("div", {
                staticClass: "upgrade_voice-footer"
            }, [s("zm-button", {
                attrs: {
                    disabled: t.disableConfirm,
                    type: "primary"
                },
                on: {
                    click: t.handleConfirm
                }
            }, [t._v(`
        ` + t._s(t.$t("cci.client.phone.panel.video.confirm")) + `
      `)]), t._v(" "), s("zm-button", {
                on: {
                    click: t.handleCancel
                }
            }, [t._v(`
        ` + t._s(t.$t("cci.common.button.cancel")) + `
      `)])], 1)])])
        }
            , Yu = []
            , Zu = a(17225)
            , Ju = a.n(Zu);
        function pi(u) {
            "@babel/helpers - typeof";
            return pi = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                pi(u)
        }
        function hi() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            hi = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && pi(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(pi(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function os(u, t) {
            return td(u) || ed(u, t) || qu(u, t) || Xu()
        }
        function Xu() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function qu(u, t) {
            if (u) {
                var s;
                if (typeof u == "string")
                    return gl(u, t);
                var h = Ne()(s = {}.toString.call(u)).call(s, 8, -1);
                return h === "Object" && u.constructor && (h = u.constructor.name),
                    h === "Map" || h === "Set" ? rr()(u) : h === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(h) ? gl(u, t) : void 0
            }
        }
        function gl(u, t) {
            (t == null || t > u.length) && (t = u.length);
            for (var s = 0, h = Array(t); s < t; s++)
                h[s] = u[s];
            return h
        }
        function ed(u, t) {
            var s = u == null ? null : typeof Ae() < "u" && Tt()(u) || u["@@iterator"];
            if (s != null) {
                var h, b, S, B, se = [], Z = !0, oe = !1;
                try {
                    if (S = (s = s.call(u)).next,
                    t === 0) {
                        if (Object(s) !== s)
                            return;
                        Z = !1
                    } else
                        for (; !(Z = (h = S.call(s)).done) && (se.push(h.value),
                        se.length !== t); Z = !0)
                            ;
                } catch (Wt) {
                    oe = !0,
                        b = Wt
                } finally {
                    try {
                        if (!Z && s.return != null && (B = s.return(),
                        Object(B) !== B))
                            return
                    } finally {
                        if (oe)
                            throw b
                    }
                }
                return se
            }
        }
        function td(u) {
            if (en()(u))
                return u
        }
        function yl(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function ss(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            yl(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            yl(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        function _l(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function Ri(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = _l(Object(b), !0)).call(s, function(S) {
                    bl(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = _l(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function bl(u, t, s) {
            return (t = Cl(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function Cl(u) {
            var t = nd(u, "string");
            return pi(t) == "symbol" ? t : t + ""
        }
        function nd(u, t) {
            if (pi(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (pi(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        var rd = de.livevideoApi.upgradeVoiceToVideo
            , El = function(t) {
            return t && /^\+?\d+$/.test(t)
        }
            , Qa = "__CUSTOMER_CONTACT_TAG__";
        const ad = {
            props: {
                visible: Boolean,
                isConference: Boolean
            },
            mixins: [Zt.A],
            setup: function() {
                var t = (0,
                    Ot.useEmailWhiteList)()
                    , s = t.emailWhiteList
                    , h = t.validateEmail
                    , b = t.getEmailWhiteList;
                return {
                    emailWhiteList: s,
                    validateEmail: h,
                    getEmailWhiteList: b
                }
            },
            data: function() {
                return {
                    CUSTOMER_CONTACT_TAG: Qa,
                    isLodingContact: !1,
                    contactList: [],
                    customerContact: "",
                    sendMethod: "",
                    hasOutboundNumber: !1,
                    validateMessage: "",
                    showSpecificEmailList: !1
                }
            },
            computed: Ri(Ri(Ri({}, (0,
                Yt.mapGetters)("sessionPanels", ["currentActiveTask"])), (0,
                Yt.mapGetters)({
                currentAgent: "user"
            })), {}, {
                validationError: function() {
                    return typeof this.validateMessage == "string" ? this.validateMessage : ""
                },
                isSMS: function() {
                    var t = this.currentActiveTask || {}
                        , s = t.tkType;
                    return s === "sms"
                },
                profileUserDetailNumber: function() {
                    var t = this.currentActiveTask || {}
                        , s = t.tkType
                        , h = t.direction;
                    if (s === "phone")
                        return h === "outbound" ? this.currentActiveTask.to : this.currentActiveTask.from;
                    if (s === "video" || s === "sms")
                        return this.currentActiveTask.customerName
                },
                disableConfirm: function() {
                    return !this.sendMethod || this.sendMethod === Qa && this.customerContact && !!this.validateMessage
                },
                inputPleaceHolder: function() {
                    return this.hasOutboundNumber ? "Enter a new phone number or email address" : "Enter an email address"
                }
            }),
            created: function() {
                this.fetchAccSetting()
            },
            beforeDestroy: function() {
                this.changeShowSMSWarning({
                    isSMSWarningVisible: !1
                })
            },
            watch: {
                visible: function(t) {
                    t && (this.getEmailWhiteList(),
                        this.getContactListByNum(),
                        this.sendMethod = "",
                        this.customerContact = "",
                        this.validateMessage = "",
                        this.showSpecificEmailList = !1)
                }
            },
            methods: Ri(Ri(Ri({}, (0,
                Yt.mapActions)("video", ["addSentApiEngagements"])), (0,
                Yt.mapActions)("sms", ["changeShowSMSWarning"])), {}, {
                _validateEmail: function() {
                    var t = this.validateEmail(this.customerContact)
                        , s = t.showSpecificEmailList
                        , h = t.errorMessage;
                    this.validateMessage = h.length ? h : !1,
                        this.showSpecificEmailList = h.length ? s : !1
                },
                handleInputFocus: function() {
                    this.sendMethod = Qa
                },
                handleValidContact: (0,
                    Pt.debounce)(function() {
                    if (!this.customerContact) {
                        this.validateMessage = !1,
                            this.showSpecificEmailList = !1;
                        return
                    }
                    if (!this.hasOutboundNumber)
                        return this._validateEmail();
                    (0,
                        Ot.isEmail)(this.customerContact) ? this._validateEmail() : El(this.customerContact) ? this.validateMessage = !1 : (this.validateMessage = this.$t("cci.client.phone.panel.video.errorMessage"),
                        this.showSpecificEmailList = !1)
                }, 50),
                handleConfirm: function() {
                    var t = this;
                    return ss(hi().mark(function s() {
                        var h, b, S, B, se, Z, oe, Wt, $t;
                        return hi().wrap(function(Qn) {
                            for (; ; )
                                switch (Qn.prev = Qn.next) {
                                    case 0:
                                        if (h = t.currentActiveTask.engagementId,
                                            b = {
                                                engagementId: t.currentActiveTask.engagementId,
                                                taskId: t.currentActiveTask.taskId,
                                                channelType: "CALL"
                                            },
                                        t.account.enableVoiceConferenceUpgradeToVideo && (b.isVoiceConference = t.isConference),
                                            S = t.sendMethod,
                                        t.sendMethod === Qa && (S = t.customerContact),
                                            !(0,
                                                Ot.isEmail)(S)) {
                                            Qn.next = 9;
                                            break
                                        }
                                        b.email = S,
                                            Qn.next = 14;
                                        break;
                                    case 9:
                                        if (!El(S)) {
                                            Qn.next = 13;
                                            break
                                        }
                                        b.mobile = (S[0] === "+" ? "" : "+1") + S,
                                            Qn.next = 14;
                                        break;
                                    case 13:
                                        return Qn.abrupt("return");
                                    case 14:
                                        return t.isLodingContact = !0,
                                            Qn.next = 17,
                                            (0,
                                                Pt.tryApiCatch)(rd, b);
                                    case 17:
                                        if (B = Qn.sent,
                                            se = os(B, 2),
                                            Z = se[0],
                                            oe = se[1],
                                            t.isLodingContact = !1,
                                            !Z) {
                                            Qn.next = 29;
                                            break
                                        }
                                        if ($t = oe == null || (Wt = oe.data) === null || Wt === void 0 ? void 0 : Wt.errorCode,
                                        $t !== "150018") {
                                            Qn.next = 27;
                                            break
                                        }
                                        return t.changeShowSMSWarning({
                                            isSMSWarningVisible: !0
                                        }),
                                            Qn.abrupt("return");
                                    case 27:
                                        return t.$message.error(Z),
                                            Qn.abrupt("return");
                                    case 29:
                                        t.addSentApiEngagements(h),
                                            t.$emit("confirm");
                                    case 31:
                                    case "end":
                                        return Qn.stop()
                                }
                        }, s)
                    }))()
                },
                handleCancel: function() {
                    this.$emit("cancel")
                },
                getContactListByNum: function() {
                    var t = this;
                    return ss(hi().mark(function s() {
                        var h, b, S, B, se, Z, oe, Wt, $t, Yn, Qn, mn, Fn, Vt, Ir, Cr, On, Br, Sr, jr;
                        return hi().wrap(function(Kr) {
                            for (; ; )
                                switch (Kr.prev = Kr.next) {
                                    case 0:
                                        if (h = [],
                                            b = new (So()),
                                            S = new (So()),
                                            B = t.profileUserDetailNumber,
                                            B) {
                                            Kr.next = 6;
                                            break
                                        }
                                        return Kr.abrupt("return");
                                    case 6:
                                        return t.hasOutboundNumber && h.push({
                                            value: B,
                                            type: "mobile",
                                            label: t.$options.filters.phoneNumber(B, t.currentAgent.countryOrRegion)
                                        }),
                                            b.add(B),
                                            t.isLodingContact = !0,
                                            Kr.next = 11,
                                            (0,
                                                Pt.tryApiCatch)(fl.kK, {
                                                phoneNumber: B
                                            });
                                    case 11:
                                        se = Kr.sent,
                                            Z = os(se, 2),
                                            oe = Z[0],
                                            Wt = Z[1],
                                            t.isLodingContact = !1,
                                        oe || ($t = Wt || {},
                                            Yn = $t.items,
                                            Qn = Yn === void 0 ? [] : Yn,
                                            ie()(Qn).call(Qn, function(Ar) {
                                                var ta, Qr;
                                                if (ie()(ta = Ar.directNumbers).call(ta, function($r) {
                                                    var Er;
                                                    $r = (Er = $r) === null || Er === void 0 ? void 0 : Ka()(Er).call(Er),
                                                    !(!$r || !t.hasOutboundNumber || b.has($r)) && (h.push({
                                                        value: $r,
                                                        type: "mobile",
                                                        label: t.$options.filters.phoneNumber($r, t.currentAgent.countryOrRegion)
                                                    }),
                                                        b.add($r))
                                                }),
                                                    !!Ar.email) {
                                                    var ea = Ar.email.split(",")
                                                        , Wr = Eo()(Qr = Ar.emailState).call(Qr, function($r, Er) {
                                                        var m = D()(Er)[0];
                                                        return $r[m] = Er[m],
                                                            $r
                                                    }, {});
                                                    ie()(ea).call(ea, function($r) {
                                                        if ($r = Ka()($r).call($r),
                                                            !S.has($r)) {
                                                            var Er = !Wr[$r];
                                                            h.push({
                                                                value: $r,
                                                                type: "email",
                                                                label: $r,
                                                                disabled: Er,
                                                                disabledReason: Er ? t.$t("cci.video.email.whitlist.errAll") : ""
                                                            }),
                                                                S.add($r)
                                                        }
                                                    })
                                                }
                                            })),
                                            mn = k()(h).call(h, function(Ar) {
                                                return Ar.type === "email"
                                            }),
                                            Fn = k()(h).call(h, function(Ar) {
                                                return Ar.type === "mobile"
                                            }),
                                            Vt = Fn.length > 0,
                                            Ir = mn.length > 0,
                                            Cr = Ir && Ju()(mn).call(mn, function(Ar) {
                                                return Ar.disabled
                                            }),
                                            t.contactList = h,
                                            h.length === 0 ? t.sendMethod = Qa : Vt ? t.sendMethod = (On = (Br = Fn[0]) === null || Br === void 0 ? void 0 : Br.value) !== null && On !== void 0 ? On : Qa : Ir ? (jr = G()(mn).call(mn, function(Ar) {
                                                return !Ar.disabled
                                            }),
                                                t.sendMethod = Cr ? Qa : (Sr = jr?.value) !== null && Sr !== void 0 ? Sr : Qa) : t.sendMethod = Qa;
                                    case 24:
                                    case "end":
                                        return Kr.stop()
                                }
                        }, s)
                    }))()
                },
                fetchAccSetting: function() {
                    var t = this;
                    return ss(hi().mark(function s() {
                        var h, b, S, B;
                        return hi().wrap(function(Z) {
                            for (; ; )
                                switch (Z.prev = Z.next) {
                                    case 0:
                                        return Z.next = 2,
                                            (0,
                                                Pt.tryApiCatch)(es);
                                    case 2:
                                        if (h = Z.sent,
                                            b = os(h, 2),
                                            S = b[0],
                                            B = b[1],
                                            !S) {
                                            Z.next = 9;
                                            break
                                        }
                                        return t.hasOutboundNumber = !1,
                                            Z.abrupt("return", t.$message.error(S));
                                    case 9:
                                        t.hasOutboundNumber = !!B;
                                    case 10:
                                    case "end":
                                        return Z.stop()
                                }
                        }, s)
                    }))()
                }
            })
        };
        var id = (0,
            Ue.A)(ad, Qu, Yu, !1, null, "42e45a74", null);
        const od = id.exports;
        function vi(u) {
            "@babel/helpers - typeof";
            return vi = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                vi(u)
        }
        function ba() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            ba = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && vi(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(vi(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function Il(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function Xa(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            Il(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            Il(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        function wl(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function qa(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = wl(Object(b), !0)).call(s, function(S) {
                    sd(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = wl(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function sd(u, t, s) {
            return (t = mi(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function mi(u) {
            var t = ls(u, "string");
            return vi(t) == "symbol" ? t : t + ""
        }
        function ls(u, t) {
            if (vi(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (vi(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        var cs = 9
            , Tl = ["", "start", "", "pause", "", "resume"]
            , Sl = ["cus-btn-record", "", "cus-btn-record-pause", "", "cus-btn-record-resume"]
            , Da = ["cus-btn-record", "", "cus-btn-record-ahcr-pause", "", "cus-btn-record-ahcr-resume"];
        const ld = {
            name: "Callactions",
            props: {
                transferring: {
                    type: Boolean,
                    required: !0
                },
                isConference: {
                    type: Boolean,
                    default: !1
                },
                candidates: {
                    type: Array,
                    required: !0
                },
                transcribing: {
                    type: Boolean,
                    required: !0
                },
                disableLiveTranscriptionButton: {
                    type: Boolean,
                    default: !1
                },
                showTranscriptButton: {
                    type: Boolean,
                    default: !1
                }
            },
            mixins: [Zt.A, ar.A, dt.A],
            components: {
                OldUpgradeVoiceToVideoDialog: Vu,
                UpgradeVoiceToVideoDailog: od,
                ReleaseDialog: Hu,
                callActionsBtn: bu,
                PCIPaymentModal: Ot.PCIPaymentModal
            },
            setup: function() {
                var t = (0,
                    Ot.useMessageHistory)()
                    , s = t.enableMessageHistory
                    , h = t.messageChannelName
                    , b = t.messageHistoryInfo
                    , S = (0,
                    Ot.usePCIPalApp)()
                    , B = S.pciRedirectStarted
                    , se = S.handlePCIPalZPNS
                    , Z = (0,
                    Ot.usePCIPayment)()
                    , oe = Z.showPCIPayment
                    , Wt = Z.disablePCIPayment
                    , $t = Z.disablePCIPaymentTip
                    , Yn = Z.showPCIModal
                    , Qn = Z.closePCIModal
                    , mn = Z.handlePciPayment
                    , Fn = Z.handleStartPCIPayment
                    , Vt = (0,
                    Ot.usePstnCall)()
                    , Ir = Vt.disabledByCompanionModeNotEnabled
                    , Cr = (0,
                    Ot.useConferenceMode)()
                    , On = Cr.disableWarmAddCallWithOnlyWarm;
                return {
                    messageChannelName: h,
                    messageHistoryInfo: b,
                    enableMessageHistory: s,
                    showPCIPayment: oe,
                    pciRedirectStarted: B,
                    disablePCIPayment: Wt,
                    disablePCIPaymentTip: $t,
                    showPCIModal: Yn,
                    closePCIModal: Qn,
                    handlePciPayment: mn,
                    handleStartPCIPayment: Fn,
                    handlePCIPalZPNS: se,
                    disabledByCompanionModeNotEnabled: Ir,
                    disableWarmAddCallWithOnlyWarm: On
                }
            },
            data: function() {
                return {
                    handlingMute: !1,
                    handlingHold: !1,
                    handlingRecord: !1,
                    accessibilityFocusButton: null,
                    activeElement: null,
                    recordPopoverVisible: !1
                }
            },
            computed: qa(qa({}, (0,
                Yt.mapGetters)("coreVoice", ["enableUpgradeToVideoDialogWithWhiteList", "enableFixWarmConferenceMergeRecording"])), {}, {
                isNewWarmConferenceRecording: function() {
                    return this.enableCTIWarmConferenceRecording || this.callState.merged && !this.isHost && this.account.enableWarmConferenceAllLegsRecording && this.enableFixWarmConferenceMergeRecording
                },
                canAction: function() {
                    var t;
                    return this === null || this === void 0 || (t = this.callState) === null || t === void 0 ? void 0 : t.bridged
                },
                muteState: function() {
                    return this.currentLegState.muteState
                },
                holdState: function() {
                    return this.currentLegState.holdState
                },
                recordingPausedBySystem: function() {
                    var t;
                    return !!((t = this.callState) !== null && t !== void 0 && t.recordingPausedBySystem)
                },
                recordingStatus: function() {
                    var t;
                    if (this.isConferenceMinorLeg) {
                        var s;
                        return (s = this.callState.minorLegState) === null || s === void 0 ? void 0 : s.recordingStatus
                    }
                    return (t = this.callState.mainLegState) === null || t === void 0 ? void 0 : t.recordingStatus
                },
                isConferenceMinorLeg: function() {
                    return this.isWarmConferenceTwoLegs && !this.isMainLeg
                },
                transcriptStr: function() {
                    return this.transcribing ? this.$t("callbar.phone.transcript.stop") : this.$t("callbar.phone.transcript.start")
                },
                disableLiveTranscriptionTooltip: function() {
                    return this.conferenceInviting || this.isConference ? this.$t("callbar.phone.transcript.addCall.tooltip") : ""
                },
                actionBtnList: function() {
                    var t = this, s;
                    return [{
                        isDisplay: !0,
                        slot: (0,
                            Et.h)("p", [this.muteState ? (0,
                            Et.h)("i", {
                            class: "cus-btn-unmute"
                        }) : (0,
                            Et.h)("i", {
                            class: "cus-btn-mute"
                        }, [(0,
                            Et.h)("div", {
                            class: "vumeter-wrapper"
                        }, [(0,
                            Et.h)("div", {
                            class: "vumeter"
                        })])])]),
                        key: "mute",
                        loading: this.handlingMute,
                        disabled: this.disableMute,
                        selected: this.muteState,
                        focued: this.accessibilityFocusButton === "mute" && !this.handlingMute,
                        text: this.muteStr,
                        events: this.getCallBtnEvents("mute", "handleMute")
                    }, {
                        isDisplay: !0,
                        slot: (0,
                            Et.h)("i", {
                            class: "cus-btn-keypad"
                        }),
                        key: "keypad",
                        disabled: this.disableKeypad,
                        focued: this.accessibilityFocusButton === "keypad",
                        text: this.$t("callbar.phone.keypad"),
                        events: this.getCallBtnEvents("keypad", function() {
                            t.disableKeypad || t.setUIState({
                                showKeypad: !0
                            })
                        })
                    }, {
                        isDisplay: this.showAddCall,
                        slot: (0,
                            Et.h)("i", {
                            class: "cus-btn-addcall"
                        }),
                        key: "addCall",
                        disabled: this.disableAddCall,
                        focued: this.accessibilityFocusButton === "addCall",
                        text: this.$t("callbar.phone.addCall"),
                        events: this.getCallBtnEvents("addCall", function() {
                            t.disableAddCall || t.setUIState({
                                showAddCallPanel: !0
                            })
                        }),
                        tooltip: this.disableAddCallTip
                    }, {
                        isDisplay: !0,
                        slot: (0,
                            Et.h)("i", {
                            class: "cus-btn-transfer"
                        }),
                        key: "transfer",
                        disabled: !this.enableTransfer,
                        focued: this.accessibilityFocusButton === "transfer",
                        text: this.$t("callbar.phone.transfer"),
                        events: this.getCallBtnEvents("transfer", function() {
                            t.enableTransfer && t.setUIState({
                                showTransferPad: !0
                            })
                        }),
                        tooltip: this.disableTransferTip
                    }, {
                        isDisplay: !0,
                        slot: this.holdState ? (0,
                            Et.h)("i", {
                            class: "cus-btn-unhold"
                        }) : (0,
                            Et.h)("i", {
                            class: "cus-btn-hold"
                        }),
                        loading: this.handlingHold,
                        key: "hold",
                        disabled: this.disableHold,
                        selected: this.holdState,
                        focued: this.accessibilityFocusButton === "hold" && !this.handlingHold,
                        text: this.holdStr,
                        events: this.getCallBtnEvents("hold", "handleHold")
                    }, {
                        isDisplay: this.enableRecording,
                        slot: (0,
                            Et.h)("div", {
                            class: "cus-call-record-btn-warpper"
                        }, [this.enableStopRecordButton && this.recordingStatus !== 0 && !this.disableRecord ? (0,
                            Et.h)("zm-popover", {
                            attrs: {
                                placement: "top",
                                width: "183",
                                trigger: "click"
                            },
                            model: {
                                value: t.recordPopoverVisible,
                                callback: function(b) {
                                    t.recordPopoverVisible = b
                                }
                            },
                            on: {
                                show: this.popoverShow,
                                hide: this.popoverHide
                            }
                        }, [(0,
                            Et.h)("div", {
                            class: "ahcr-record-popover"
                        }, [(0,
                            Et.h)("p", {
                            style: "cursor: pointer;",
                            on: {
                                click: function(b) {
                                    t.recordPopoverVisible = !1,
                                        t.handleRecord(b, !1, !0)
                                }
                            }
                        }, [(0,
                            Et.h)("span", [this.recordingStatus === 2 ? this.$t("callbar.phone.PauseRecording") : this.$t("callbar.phone.ResumeRecording")]), (0,
                            Et.h)("i", {
                            class: this.recordingStatus === 2 ? "cus-btn-record-ahcr-single-pause" : "cus-btn-record-ahcr-single-resume"
                        })]), (0,
                            Et.h)("p", {
                            style: "cursor: pointer;",
                            on: {
                                click: this.handleStopRecord
                            }
                        }, [(0,
                            Et.h)("span", [this.$t("callbar.phone.StopRecording")]), (0,
                            Et.h)("i", {
                            class: "cus-btn-record-ahcr-stop"
                        })])]), (0,
                            Et.h)("i", {
                            slot: "reference",
                            class: this.recordButtonIcon
                        })]) : (0,
                            Et.h)("i", {
                            class: this.recordButtonIcon
                        })]),
                        key: "record",
                        className: "cus-call-record-btn",
                        disabled: this.disableRecord,
                        loading: this.handlingRecord,
                        selected: this.recordingStatus === 2,
                        focued: this.accessibilityFocusButton === "record",
                        text: this.recordingStr,
                        events: this.getCallBtnEvents("record", "handleRecord"),
                        tooltip: this.disableRecordTip,
                        tooltipPlacement: "bottom"
                    }, {
                        isDisplay: this.allowUpgradeToVideo,
                        slot: (0,
                            Et.h)("i", {
                            class: "cus-btn-video-upgrade"
                        }),
                        key: "video",
                        disabled: this.disableVideo,
                        focued: this.accessibilityFocusButton === "video",
                        text: this.$t("cci.common.label.video"),
                        events: this.getCallBtnEvents("video", function() {
                            t.disableVideo || (t.$emit("click-video"),
                                t.setUIState({
                                    showVideo: !0
                                }))
                        }),
                        tooltip: this.disableVideoTip
                    }, {
                        isDisplay: this.showTranscriptButton,
                        slot: this.transcribing ? (0,
                            Et.h)("i", {
                            class: "transcript--disable"
                        }) : (0,
                            Et.h)("i", {
                            class: "zm-icon-cc-transcript"
                        }),
                        key: "transcript",
                        disabled: this.disableLiveTranscriptionButton,
                        selected: this.transcribing,
                        focused: this.accessibilityFocusButton === "transcript",
                        text: this.transcriptStr,
                        events: this.getCallBtnEvents("transcript", function() {
                            t.$emit("click-transcribe")
                        }),
                        tooltip: this.disableLiveTranscriptionTooltip
                    }, {
                        isDisplay: this.allowRelease,
                        slot: (0,
                            Et.h)("i", {
                            class: "cus-btn-release"
                        }),
                        key: "release",
                        disabled: this.disableRelease,
                        focused: this.accessibilityFocusButton === "release",
                        text: this.$t("cci.common.button.release"),
                        events: this.getCallBtnEvents("release", function() {
                            t.disableRelease || t.setUIState({
                                showRelease: !0
                            })
                        })
                    }, {
                        isDisplay: this.enableMessageHistory,
                        slot: ((s = this.messageHistoryInfo) === null || s === void 0 ? void 0 : s.upgradeFromChannel) === Qe.MessageChannelType.SMS ? (0,
                            Et.h)("i", {
                            class: "cus-btn-sms-history"
                        }) : (0,
                            Et.h)("i", {
                            class: "cus-btn-chat-history"
                        }),
                        key: "messageHistory",
                        text: this.messageChannelName,
                        events: this.getCallBtnEvents("messageHistory", function() {
                            t.$emit("click-message-history")
                        })
                    }, {
                        isDisplay: this.showPCIPayment,
                        slot: (0,
                            Et.h)("i", {
                            class: "pci-payment-btn"
                        }),
                        key: "PCIPayment",
                        disabled: this.disablePCIPayment,
                        tooltip: this.disablePCIPayment ? this.disablePCIPaymentTip : "",
                        text: this.$t("cci.client.voice.cti.action.processPCIPayment"),
                        events: this.getCallBtnEvents("PCIPayment", function() {
                            t.disablePCIPayment || t.handlePciPayment()
                        })
                    }]
                },
                actionCountToDisplay: function() {
                    var t;
                    return k()(t = this.actionBtnList).call(t, function(s) {
                        var h = s.isDisplay;
                        return !!h
                    }).length
                },
                actionList: function() {
                    if (this.actionCountToDisplay > cs) {
                        var t = this.tagActionDisplayInMore()
                            , s = k()(t).call(t, function(h) {
                            var b = h.isDisplayInMore;
                            return b
                        });
                        return t.push(this.createMoreAction(s)),
                            k()(t).call(t, function(h) {
                                var b = h.isDisplay;
                                return !!b
                            })
                    }
                    return this.actionBtnList
                },
                recordButtonIcon: function() {
                    return this.enableStopRecordButton ? Da[this.recordingStatus] : Sl[this.recordingStatus]
                },
                muteStr: function() {
                    return this.muteState ? this.$t("callbar.phone.Unmute") : this.$t("callbar.phone.mute")
                },
                holdStr: function() {
                    return this.holdState ? this.$t("callbar.phone.Unhold") : this.$t("callbar.phone.hold")
                },
                recStrings: function() {
                    return [this.$t("callbar.phone.Record"), this.$t("callbar.phone.RecordPreparing"), this.enableStopRecordButton ? this.$t("callbar.phone.PauseStopRecording") : this.$t("callbar.phone.PauseRecording"), "", this.enableStopRecordButton ? this.$t("callbar.phone.ResumeStopRecording") : this.$t("callbar.phone.ResumeRecording"), this.$t("callbar.phone.RecordPreparing")]
                },
                recordingStr: function() {
                    return this.unableStopRecording ? "REC" : this.recStrings[this.recordingStatus]
                },
                enableTransfer: function() {
                    var t;
                    return this.getSettingEnabled("transfer-engagement") && !this.pciRedirectStarted && !this.transferring && !this.callingExt && !this.isConference && !this.callState.hasTwoLegs && this.canAction && !this.disableRecordBeforeConsent && !this.conferenceInviting && !this.isWarmTransfer && ((t = this.callState) === null || t === void 0 || (t = t.featureFlags) === null || t === void 0 ? void 0 : t.enableTransfer) && !this.disabledByCompanionModeNotEnabled
                },
                disableTransferTip: function() {
                    var t;
                    return this.isConference && this.isHost ? "Not supported on conference calls" : this.pciRedirectStarted ? this.$t("cci.voice.oncall.securePay.button.disable.tips") : this.isConference ? "Not supported because you are not the assigned agent" : (t = this.callState) !== null && t !== void 0 && (t = t.featureFlags) !== null && t !== void 0 && t.enableTransfer ? "" : this.$t("callbar.phone.transfer.disable.byQueue")
                },
                disableHold: function() {
                    return this.callingExt || this.handlingHold || this.disabledByCompanionModeNotEnabled
                },
                disableVideo: function() {
                    if (!this.isVideoChannelEnabled || this.conferenceInviting || this.pciRedirectStarted || this.disabledByCompanionModeNotEnabled)
                        return !0;
                    if (this.account.enableVoiceConferenceUpgradeToVideo && this.isConference) {
                        var t;
                        return ((t = this.callState) === null || t === void 0 ? void 0 : t.hasTwoLegs) || !this.isHost
                    }
                    return this.isConference
                },
                disableRelease: function() {
                    return !this.canAction || this.isConference || this.conferenceInviting || this.disabledByCompanionModeNotEnabled
                },
                disableVideoTip: function() {
                    return this.disableVideo ? this.videoChannelDisabledTips ? this.videoChannelDisabledTips : this.pciRedirectStarted ? this.$t("cci.voice.oncall.securePay.button.disable.tips") : this.isConference ? "Not supported on conference calls" : "" : ""
                },
                isVideoChannelEnabled: function() {
                    return Yo.storeUtils.crm.isVideoChannelEnabled()
                },
                videoChannelDisabledTips: function() {
                    return Yo.storeUtils.crm.getVideoChannelDisabledTips()
                },
                allowUpgradeToVideo: function() {
                    var t, s, h, b;
                    if (!((t = this.account) !== null && t !== void 0 && t.enableVideoChannel))
                        return !1;
                    var S = (s = this.settings) === null || s === void 0 ? void 0 : G()(s).call(s, function(se) {
                        return se.settingId === "upgrade-engagements"
                    });
                    if (!(S != null && S.enabled))
                        return !1;
                    var B = G()(h = S.childs).call(h, function(se) {
                        return se.settingId === "upgrade-voice-video"
                    });
                    return !((b = this.currentEngagement) !== null && b !== void 0 && b.superVisor) && B?.enabled && this.enableUpgradeToVideo
                },
                disableMute: function() {
                    return this.handlingMute || this.disabledByCompanionModeNotEnabled
                },
                disableKeypad: function() {
                    return this.disabledByCompanionModeNotEnabled
                },
                disableRecord: function() {
                    return this.enableCTIWarmConferenceRecording ? this.callingExt || this.holdState || this.pciRedirectStarted || this.disableRecordBeforeConsent || this.recordingPausedBySystem || this.disabledByCompanionModeNotEnabled || this.unableStopRecording : this.callingExt || this.holdState || this.pciRedirectStarted || this.disableRecordBeforeConsent || this.isConference && !this.isHost || this.isConferenceMinorLeg || !this.canAction || this.recordingPausedBySystem || this.disabledByCompanionModeNotEnabled
                },
                disableRecordTip: function() {
                    return this.recordingPausedBySystem ? this.$t("cci.client.voice.record.controls.disable.tip") : this.isConference && !this.isHost && !this.enableCTIWarmConferenceRecording ? "Not supported because you are not the assigned agent" : this.pciRedirectStarted ? this.$t("cci.voice.oncall.securePay.button.disable.tips") : ""
                },
                showAddCall: function() {
                    return this.account.enableVoiceConference
                },
                disableAddCall: function() {
                    var t;
                    return this.pciRedirectStarted || this.conferenceInviting || this.isConference && !this.isHost || this.candidates.length > 9 || this.disableRecordBeforeConsent || this.transferring || this.isWarmTransfer || !this.canAction || !((t = this.callState) !== null && t !== void 0 && (t = t.featureFlags) !== null && t !== void 0 && t.enableConference) || this.disabledByCompanionModeNotEnabled || this.disableWarmAddCallWithOnlyWarm
                },
                disableAddCallTip: function() {
                    var t;
                    return this.isConference && !this.isHost ? "Not supported because you are not the assigned agent" : this.pciRedirectStarted ? this.$t("cci.voice.oncall.securePay.button.disable.tips") : (t = this.callState) !== null && t !== void 0 && (t = t.featureFlags) !== null && t !== void 0 && t.enableConference ? this.disableWarmAddCallWithOnlyWarm ? this.$t("callbar.phone.addCall.warm.pstn.disabled") : "" : this.$t("callbar.phone.addCall.disable.byQueue")
                },
                isHost: function() {
                    var t, s = G()(t = this.candidates).call(t, function(h) {
                        return h.isHost
                    });
                    return this.getUserId() === s?.userId
                },
                transferCompleted: function() {
                    return this.callState.transferCompleted
                },
                isWarmTransfer: function() {
                    var t, s = ((t = this.callReservation) === null || t === void 0 || (t = t.task) === null || t === void 0 ? void 0 : t.attributes) || {}, h = s.isTransfer, b = s.isTransferToQueue, S = s.transferType;
                    return S === "attended" && (h || b) && !this.transferCompleted
                },
                conferenceInviting: function() {
                    return this.callState.conferenceInviting
                },
                conferenceMembers: function() {
                    return this.callState.conferenceMembers
                },
                conferenceMembersWithoutSupervisor: function() {
                    var t;
                    return ((t = this.conferenceMembers) === null || t === void 0 ? void 0 : k()(t).call(t, function(s) {
                        return !(s?.role === "Supervisor" && (s?.monitorMode === "monitor" || s?.monitorMode === "barge"))
                    })) || []
                },
                enableUpgradeToVideo: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 || (t = t.featureFlags) === null || t === void 0 ? void 0 : t.enableUpgradeToVideo
                },
                allowRelease: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 || (t = t.featureFlags) === null || t === void 0 ? void 0 : t.allowRelease
                },
                enableAssignHost: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 || (t = t.featureFlags) === null || t === void 0 ? void 0 : t.enableAssignHost
                },
                enableRecording: function() {
                    var t;
                    return this.isNewWarmConferenceRecording ? this.currentLegRecordState.enableRecording : (t = this.callState) === null || t === void 0 || (t = t.featureFlags) === null || t === void 0 ? void 0 : t.enableRecording
                },
                enableStopRecordButton: function() {
                    var t;
                    return this.isNewWarmConferenceRecording ? this.currentLegRecordState.showStopRecordButton : (t = this.callState) === null || t === void 0 || (t = t.featureFlags) === null || t === void 0 ? void 0 : t.enableStopRecordButton
                },
                disableRecordBeforeConsent: function() {
                    var t;
                    return this.isNewWarmConferenceRecording ? this.currentLegRecordState.disableRecordBeforeConsent : (t = this.currentLegState) === null || t === void 0 ? void 0 : t.disableRecordBeforeConsent
                },
                unableStopRecording: function() {
                    var t;
                    return this.isNewWarmConferenceRecording ? this.currentLegRecordState.unableStopRecording : (t = this.currentLegState) === null || t === void 0 ? void 0 : t.unableStopRecording
                },
                callingExt: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 ? void 0 : t.callingExt
                },
                showVideo: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 || (t = t.UIState) === null || t === void 0 ? void 0 : t.showVideo
                },
                showRelease: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 || (t = t.UIState) === null || t === void 0 ? void 0 : t.showRelease
                }
            }),
            inject: ["$agent"],
            mounted: function() {
                var t = this.$agent()
                    , s = t.zpns;
                s.on("message", this.handlePCIPalZPNS)
            },
            beforeDestroy: function() {
                var t = this.$agent()
                    , s = t.zpns;
                s.off("message", this.handlePCIPalZPNS)
            },
            methods: qa(qa({}, (0,
                Yt.mapActions)("coreVoice", ["recordCall", "muteCall", "holdCall", "releaseCall"])), {}, {
                getCallBtnEvents: function(t, s) {
                    var h = this;
                    return {
                        keydown: function(S) {
                            h.handleActionKeyDown(S, s)
                        },
                        focus: function(S) {
                            h.handleActionFocus(S, t)
                        },
                        blur: this.handleActionBlur,
                        click: typeof s == "function" ? s : this[s]
                    }
                },
                tagActionDisplayInMore: function() {
                    var t, s = 0;
                    return Qi()(t = this.actionBtnList).call(t, function(h) {
                        return h.isDisplay ? s >= cs - 1 ? qa(qa({}, h), {}, {
                            isDisplay: !1,
                            isDisplayInMore: !!h.isDisplay
                        }) : (s++,
                            h) : h
                    })
                },
                createMoreAction: function(t) {
                    return {
                        isDisplay: !0,
                        disabled: this.disabledByCompanionModeNotEnabled,
                        key: "more",
                        className: "more-actions",
                        slot: (0,
                            Et.h)("zm-dropdown", {
                            attrs: {
                                placement: "bottom-start"
                            }
                        }, [(0,
                            Et.h)("zm-button", {
                            attrs: {
                                type: "icon",
                                icon: "zm-icon-more"
                            },
                            class: "call-actions-more-button"
                        }), (0,
                            Et.h)("zm-dropdown-menu", {
                            class: "call-actions-more-dropdown-menu",
                            slot: "dropdown"
                        }, [Qi()(t).call(t, function(s) {
                            return (0,
                                Et.h)("zm-dropdown-item", Ja()([{
                                key: s.key,
                                attrs: {
                                    disabled: s.disabled
                                }
                            }, {
                                nativeOn: qa(qa({}, s?.events), {}, {
                                    mousedown: function(b) {
                                        return b.preventDefault()
                                    }
                                })
                            }]), [(0,
                                Et.h)("span", {
                                attrs: {
                                    title: s.text
                                }
                            }, [s.text])])
                        })])])
                    }
                },
                handleActionKeyDown: function(t, s) {
                    t.keyCode === 32 && (t.preventDefault(),
                        typeof s == "function" ? s() : this[s] && this[s](t, !0))
                },
                handleActionFocus: function(t, s) {
                    this.activeElement = document.activeElement,
                        this.accessibilityFocusButton = s
                },
                handleActionBlur: function() {
                    this.accessibilityFocusButton = null
                },
                muteLeg: function(t, s) {
                    var h = this;
                    return Xa(ba().mark(function b() {
                        var S, B;
                        return ba().wrap(function(Z) {
                            for (; ; )
                                switch (Z.prev = Z.next) {
                                    case 0:
                                        if (console.log("handleMute called"),
                                            !h.disableMute) {
                                            Z.next = 3;
                                            break
                                        }
                                        return Z.abrupt("return");
                                    case 3:
                                        return B = {
                                            taskSid: (S = h.callReservation) === null || S === void 0 || (S = S.task) === null || S === void 0 ? void 0 : S.id,
                                            muteStatus: t,
                                            callSyncId: h.$callId(),
                                            isMainLeg: s
                                        },
                                            h.handlingMute = !0,
                                            Z.prev = 5,
                                            Z.next = 8,
                                            h.muteCall(B);
                                    case 8:
                                        Z.next = 13;
                                        break;
                                    case 10:
                                        Z.prev = 10,
                                            Z.t0 = Z.catch(5),
                                            console.error(Z.t0);
                                    case 13:
                                        h.handlingMute = !1;
                                    case 14:
                                    case "end":
                                        return Z.stop()
                                }
                        }, b, null, [[5, 10]])
                    }))()
                },
                handleMute: function(t, s) {
                    var h = this;
                    return Xa(ba().mark(function b() {
                        var S, B;
                        return ba().wrap(function(Z) {
                            for (; ; )
                                switch (Z.prev = Z.next) {
                                    case 0:
                                        if (console.log("handleMute called"),
                                            !h.disableMute) {
                                            Z.next = 3;
                                            break
                                        }
                                        return Z.abrupt("return");
                                    case 3:
                                        return B = {
                                            taskSid: (S = h.callReservation) === null || S === void 0 || (S = S.task) === null || S === void 0 ? void 0 : S.id,
                                            muteStatus: h.muteState ? "off" : "on",
                                            callSyncId: h.$callId(),
                                            isMainLeg: h.isMainLeg
                                        },
                                            h.handlingMute = !0,
                                            Z.prev = 5,
                                            Z.next = 8,
                                            h.muteCall(B);
                                    case 8:
                                        Z.next = 13;
                                        break;
                                    case 10:
                                        Z.prev = 10,
                                            Z.t0 = Z.catch(5),
                                            console.error(Z.t0);
                                    case 13:
                                        h.handlingMute = !1,
                                        s && h.activeElement && h.activeElement.focus();
                                    case 15:
                                    case "end":
                                        return Z.stop()
                                }
                        }, b, null, [[5, 10]])
                    }))()
                },
                handleLoadingRecord: function(t) {
                    this.handlingRecord = t
                },
                recordingToggle: function() {
                    var t = this;
                    return Xa(ba().mark(function s() {
                        var h, b, S, B, se, Z, oe;
                        return ba().wrap(function($t) {
                            for (; ; )
                                switch ($t.prev = $t.next) {
                                    case 0:
                                        if (!(t.enableStopRecordButton && t.recordingStatus !== 0)) {
                                            $t.next = 2;
                                            break
                                        }
                                        return $t.abrupt("return", !1);
                                    case 2:
                                        if (!t.disableRecord) {
                                            $t.next = 4;
                                            break
                                        }
                                        return $t.abrupt("return", !1);
                                    case 4:
                                        if (!t.unableStopRecording) {
                                            $t.next = 6;
                                            break
                                        }
                                        return $t.abrupt("return", "Admin set voice calls to be automatically recorded");
                                    case 6:
                                        if (t.handlingRecord = !0,
                                            b = t.recordingStatus,
                                            S = 0,
                                            B = t.recordingStatus,
                                        t.recordingStatus !== 0) {
                                            $t.next = 15;
                                            break
                                        }
                                        B = 1,
                                            S = 2,
                                            $t.next = 26;
                                        break;
                                    case 15:
                                        if (t.recordingStatus !== 2) {
                                            $t.next = 20;
                                            break
                                        }
                                        B = 3,
                                            S = 4,
                                            $t.next = 26;
                                        break;
                                    case 20:
                                        if (t.recordingStatus !== 4) {
                                            $t.next = 25;
                                            break
                                        }
                                        B = 5,
                                            S = 2,
                                            $t.next = 26;
                                        break;
                                    case 25:
                                        return $t.abrupt("return");
                                    case 26:
                                        return se = {
                                            taskSid: (h = t.callReservation) === null || h === void 0 || (h = h.task) === null || h === void 0 ? void 0 : h.id,
                                            status: Tl[B],
                                            callSyncId: t.$callId(),
                                            oldRecordingStatus: b,
                                            targetStatus: S
                                        },
                                            $t.prev = 27,
                                            console.log("handleRecord", se),
                                            $t.next = 31,
                                            t.recordCall(se);
                                    case 31:
                                        return t.$store.dispatch("crm/setVoiceManuallyRecordStatus", {
                                            engagementId: t.callReservation.task.attributes.engagementId,
                                            value: !0
                                        }),
                                            $t.abrupt("return", !0);
                                    case 35:
                                        if ($t.prev = 35,
                                            $t.t0 = $t.catch(27),
                                            console.error($t.t0),
                                        ($t.t0 === null || $t.t0 === void 0 || (Z = $t.t0.data) === null || Z === void 0 ? void 0 : Z.errorCode) !== "100023") {
                                            $t.next = 40;
                                            break
                                        }
                                        return $t.abrupt("return", $t.t0 === null || $t.t0 === void 0 || (oe = $t.t0.data) === null || oe === void 0 ? void 0 : oe.errorMessage);
                                    case 40:
                                        return $t.prev = 40,
                                            t.handlingRecord = !1,
                                            $t.finish(40);
                                    case 43:
                                    case "end":
                                        return $t.stop()
                                }
                        }, s, null, [[27, 35, 40, 43]])
                    }))()
                },
                handleRecord: function(t, s, h) {
                    var b = this;
                    return Xa(ba().mark(function S() {
                        var B, se, Z, oe, Wt, $t, Yn;
                        return ba().wrap(function(mn) {
                            for (; ; )
                                switch (mn.prev = mn.next) {
                                    case 0:
                                        if (!(b.enableStopRecordButton && b.recordingStatus !== 0 && !h)) {
                                            mn.next = 3;
                                            break
                                        }
                                        return t.preventDefault(),
                                            mn.abrupt("return");
                                    case 3:
                                        if (!b.disableRecord) {
                                            mn.next = 5;
                                            break
                                        }
                                        return mn.abrupt("return");
                                    case 5:
                                        if (!b.unableStopRecording) {
                                            mn.next = 8;
                                            break
                                        }
                                        return b.chatNotify("Admin set voice calls to be automatically recorded"),
                                            mn.abrupt("return");
                                    case 8:
                                        if (b.handlingRecord = !0,
                                            se = b.recordingStatus,
                                            Z = 0,
                                            oe = b.recordingStatus,
                                        b.recordingStatus !== 0) {
                                            mn.next = 17;
                                            break
                                        }
                                        oe = 1,
                                            Z = 2,
                                            mn.next = 28;
                                        break;
                                    case 17:
                                        if (b.recordingStatus !== 2) {
                                            mn.next = 22;
                                            break
                                        }
                                        oe = 3,
                                            Z = 4,
                                            mn.next = 28;
                                        break;
                                    case 22:
                                        if (b.recordingStatus !== 4) {
                                            mn.next = 27;
                                            break
                                        }
                                        oe = 5,
                                            Z = 2,
                                            mn.next = 28;
                                        break;
                                    case 27:
                                        return mn.abrupt("return");
                                    case 28:
                                        return Wt = {
                                            taskSid: (B = b.callReservation) === null || B === void 0 || (B = B.task) === null || B === void 0 ? void 0 : B.id,
                                            status: Tl[oe],
                                            callSyncId: b.$callId(),
                                            oldRecordingStatus: se,
                                            targetStatus: Z
                                        },
                                            mn.prev = 29,
                                            console.log("handleRecord", Wt),
                                            mn.next = 33,
                                            b.recordCall(Wt);
                                    case 33:
                                        b.$store.dispatch("crm/setVoiceManuallyRecordStatus", {
                                            engagementId: b.callReservation.task.attributes.engagementId,
                                            value: !0
                                        }),
                                            mn.next = 40;
                                        break;
                                    case 36:
                                        mn.prev = 36,
                                            mn.t0 = mn.catch(29),
                                            console.error(mn.t0),
                                        (mn.t0 === null || mn.t0 === void 0 || ($t = mn.t0.data) === null || $t === void 0 ? void 0 : $t.errorCode) === "100023" && b.chatNotify(mn.t0 === null || mn.t0 === void 0 || (Yn = mn.t0.data) === null || Yn === void 0 ? void 0 : Yn.errorMessage);
                                    case 40:
                                        return mn.prev = 40,
                                            b.handlingRecord = !1,
                                        s && b.activeElement && b.activeElement.focus(),
                                            mn.finish(40);
                                    case 44:
                                    case "end":
                                        return mn.stop()
                                }
                        }, S, null, [[29, 36, 40, 44]])
                    }))()
                },
                handleStopRecord: function() {
                    var t = this;
                    return Xa(ba().mark(function s() {
                        var h, b, S, B, se;
                        return ba().wrap(function(oe) {
                            for (; ; )
                                switch (oe.prev = oe.next) {
                                    case 0:
                                        if (!t.disableRecord) {
                                            oe.next = 2;
                                            break
                                        }
                                        return oe.abrupt("return");
                                    case 2:
                                        if (!t.unableStopRecording) {
                                            oe.next = 5;
                                            break
                                        }
                                        return t.chatNotify("Admin set voice calls to be automatically recorded"),
                                            oe.abrupt("return");
                                    case 5:
                                        return t.recordPopoverVisible = !1,
                                            t.handlingRecord = !0,
                                            b = t.recordingStatus,
                                            S = {
                                                taskSid: (h = t.callReservation) === null || h === void 0 || (h = h.task) === null || h === void 0 ? void 0 : h.id,
                                                status: "stop",
                                                callSyncId: t.$callId(),
                                                oldRecordingStatus: b,
                                                targetStatus: 0
                                            },
                                            oe.prev = 9,
                                            oe.next = 12,
                                            t.recordCall(S);
                                    case 12:
                                        oe.next = 18;
                                        break;
                                    case 14:
                                        oe.prev = 14,
                                            oe.t0 = oe.catch(9),
                                            console.error(oe.t0),
                                        (oe.t0 === null || oe.t0 === void 0 || (B = oe.t0.data) === null || B === void 0 ? void 0 : B.errorCode) === "100023" && t.chatNotify(oe.t0 === null || oe.t0 === void 0 || (se = oe.t0.data) === null || se === void 0 ? void 0 : se.errorMessage);
                                    case 18:
                                        return oe.prev = 18,
                                            t.handlingRecord = !1,
                                            oe.finish(18);
                                    case 21:
                                    case "end":
                                        return oe.stop()
                                }
                        }, s, null, [[9, 14, 18, 21]])
                    }))()
                },
                popoverShow: function() {
                    this.recordPopoverVisible = !0
                },
                popoverHide: function() {
                    this.recordPopoverVisible = !1
                },
                holdLeg: function(t, s) {
                    var h = this;
                    return Xa(ba().mark(function b() {
                        var S, B, se, Z;
                        return ba().wrap(function(Wt) {
                            for (; ; )
                                switch (Wt.prev = Wt.next) {
                                    case 0:
                                        if (!(h.handlingHold || h.disableHold)) {
                                            Wt.next = 2;
                                            break
                                        }
                                        return Wt.abrupt("return");
                                    case 2:
                                        return console.log("handleHold called"),
                                            se = {
                                                taskSid: (S = h.callReservation) === null || S === void 0 || (S = S.task) === null || S === void 0 ? void 0 : S.id,
                                                holdStatus: t,
                                                callSyncId: h.$callId(),
                                                isMainLeg: s,
                                                agentHold: !0
                                            },
                                        ((B = h.callReservation) === null || B === void 0 ? void 0 : B.type) === "outbound" && (se.callSid = (Z = h.callReservation) === null || Z === void 0 || (Z = Z.task) === null || Z === void 0 || (Z = Z.attributes) === null || Z === void 0 ? void 0 : Z.call_sid),
                                            h.handlingHold = !0,
                                            Wt.prev = 6,
                                            Wt.next = 9,
                                            h.holdCall(se);
                                    case 9:
                                        Wt.next = 14;
                                        break;
                                    case 11:
                                        Wt.prev = 11,
                                            Wt.t0 = Wt.catch(6),
                                            console.error(Wt.t0);
                                    case 14:
                                        h.handlingHold = !1;
                                    case 15:
                                    case "end":
                                        return Wt.stop()
                                }
                        }, b, null, [[6, 11]])
                    }))()
                },
                handleHold: function(t, s) {
                    var h = this;
                    return Xa(ba().mark(function b() {
                        var S, B, se, Z;
                        return ba().wrap(function(Wt) {
                            for (; ; )
                                switch (Wt.prev = Wt.next) {
                                    case 0:
                                        if (!(h.handlingHold || h.disableHold)) {
                                            Wt.next = 2;
                                            break
                                        }
                                        return Wt.abrupt("return");
                                    case 2:
                                        return console.log("handleHold called"),
                                            se = {
                                                taskSid: (S = h.callReservation) === null || S === void 0 || (S = S.task) === null || S === void 0 ? void 0 : S.id,
                                                holdStatus: h.holdState ? "off" : "on",
                                                callSyncId: h.$callId(),
                                                isMainLeg: h.isMainLeg,
                                                agentHold: !!t
                                            },
                                        ((B = h.callReservation) === null || B === void 0 ? void 0 : B.type) === "outbound" && (se.callSid = (Z = h.callReservation) === null || Z === void 0 || (Z = Z.task) === null || Z === void 0 || (Z = Z.attributes) === null || Z === void 0 ? void 0 : Z.call_sid),
                                            h.handlingHold = !0,
                                            Wt.prev = 6,
                                            Wt.next = 9,
                                            h.holdCall(se);
                                    case 9:
                                        Wt.next = 14;
                                        break;
                                    case 11:
                                        Wt.prev = 11,
                                            Wt.t0 = Wt.catch(6),
                                            console.error(Wt.t0);
                                    case 14:
                                        h.handlingHold = !1,
                                        s && h.activeElement && h.activeElement.focus();
                                    case 16:
                                    case "end":
                                        return Wt.stop()
                                }
                        }, b, null, [[6, 11]])
                    }))()
                },
                handleRelease: function() {
                    var t = this;
                    return Xa(ba().mark(function s() {
                        var h, b;
                        return ba().wrap(function(B) {
                            for (; ; )
                                switch (B.prev = B.next) {
                                    case 0:
                                        return b = {
                                            taskSid: (h = t.callReservation) === null || h === void 0 || (h = h.task) === null || h === void 0 ? void 0 : h.id,
                                            callSyncId: t.$callId()
                                        },
                                            B.prev = 1,
                                            B.next = 4,
                                            t.releaseCall(b);
                                    case 4:
                                        B.next = 10;
                                        break;
                                    case 6:
                                        return B.prev = 6,
                                            B.t0 = B.catch(1),
                                            console.error(B.t0),
                                            B.abrupt("return");
                                    case 10:
                                        t.setUIState({
                                            showRelease: !1
                                        });
                                    case 11:
                                    case "end":
                                        return B.stop()
                                }
                        }, s, null, [[1, 6]])
                    }))()
                },
                onTransferEnded: function() {
                    this.holdState && this.handleHold()
                }
            })
        };
        var cd = (0,
            Ue.A)(ld, iu, ou, !1, null, "95ef8184", null);
        const ud = cd.exports;
        var Bp = function() {
            var t = this
                , s = t._self._c;
            return s("div", {
                staticClass: "ext-line"
            }, [t.showEnter ? s("a", {
                staticClass: "enter-extension",
                on: {
                    click: t.enterExtension
                }
            }, [t._v("Click to Enter Extension " + t._s(t.ext))]) : t._e(), t._v(" "), t.showCalling ? s("span", [t._v("Calling extension...")]) : t._e(), t._v(" "), t.showExt ? s("span", [t._v("Extension " + t._s(t.ext))]) : t._e()])
        }
            , dd = [];
        function gi(u) {
            "@babel/helpers - typeof";
            return gi = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                gi(u)
        }
        function us() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            us = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && gi(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(gi(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function Al(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function fd(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            Al(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            Al(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        function Ll(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function Nl(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = Ll(Object(b), !0)).call(s, function(S) {
                    pd(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = Ll(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function pd(u, t, s) {
            return (t = hd(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function hd(u) {
            var t = vd(u, "string");
            return gi(t) == "symbol" ? t : t + ""
        }
        function vd(u, t) {
            if (gi(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (gi(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        var Fa = {
            BEFORECALL: 0,
            CALLING: 1,
            AFTERCALL: 2
        };
        const Pl = {
            name: "Extension",
            props: ["ext", "taskId"],
            mixins: [ar.A, dt.A],
            data: function() {
                return {
                    status: Fa.BEFORECALL
                }
            },
            computed: {
                showEnter: function() {
                    return this.status === Fa.BEFORECALL
                },
                showCalling: function() {
                    return this.status === Fa.CALLING
                },
                showExt: function() {
                    return this.status === Fa.AFTERCALL
                }
            },
            methods: Nl(Nl({}, (0,
                Yt.mapActions)("coreVoice", ["sendExtDtmf"])), {}, {
                enterExtension: function() {
                    var t = this;
                    return fd(us().mark(function s() {
                        return us().wrap(function(b) {
                            for (; ; )
                                switch (b.prev = b.next) {
                                    case 0:
                                        return b.prev = 0,
                                            t.status = Fa.CALLING,
                                            b.next = 4,
                                            t.sendExtDtmf({
                                                opts: {
                                                    taskSid: t.taskId,
                                                    dtmfStr: t.ext
                                                },
                                                callSyncId: t.$callId()
                                            });
                                    case 4:
                                        b.next = 11;
                                        break;
                                    case 6:
                                        return b.prev = 6,
                                            b.t0 = b.catch(0),
                                            t.chatNotify("Unable to connect the extension. Please try again."),
                                            t.status = Fa.BEFORECALL,
                                            b.abrupt("return");
                                    case 11:
                                        t.status = Fa.AFTERCALL;
                                    case 12:
                                    case "end":
                                        return b.stop()
                                }
                        }, s, null, [[0, 6]])
                    }))()
                }
            })
        };
        var md = (0,
            Ue.A)(Pl, Bp, dd, !1, null, "77df7948", null);
        const Vp = md.exports;
        var gd = function() {
            var t = this
                , s = t._self._c;
            return s("ZccDialog", {
                attrs: {
                    "aria-labelledby": "inboxDialog",
                    visible: t.visible,
                    width: "500px",
                    modal: !1,
                    "mini-screen-enlargement": !1
                },
                on: {
                    "update:visible": function(b) {
                        t.visible = b
                    }
                },
                scopedSlots: t._u([{
                    key: "footer",
                    fn: function() {
                        return [s("zm-button", {
                            attrs: {
                                type: "primary",
                                disabled: t.inboxId === ""
                            },
                            on: {
                                click: t.handleTransfer
                            }
                        }, [t._v(`
      ` + t._s(t.$t("cci.common.transfer")) + `
    `)]), t._v(" "), s("zm-button", {
                            on: {
                                click: t.dismiss
                            }
                        }, [t._v(`
      ` + t._s(t.$t("table.cancel")) + `
    `)])]
                    },
                    proxy: !0
                }])
            }, [s("span", {
                staticClass: "dialogTitle",
                attrs: {
                    slot: "title",
                    id: "inboxDialog"
                },
                slot: "title"
            }, [t._v(`
    ` + t._s(t.$t("cci.client.inboxSelect.title")) + `
  `)]), t._v(" "), s("div", {
                staticClass: "info"
            }, [t._v(`
    ` + t._s(t.$t("cci.client.inboxSelect.tip")) + `
  `)]), t._v(" "), s("div", {
                staticClass: "info"
            }, [t._v(`
    ` + t._s(t.$t("cci.inbox")) + `
  `)]), t._v(" "), s("zm-select", {
                staticClass: "inputbox",
                attrs: {
                    "popper-append-to-body": !1,
                    modal: !1,
                    placeholder: t.$t("cci.common.select_an_option"),
                    "no-data-text": t.$t("cci.common.noData"),
                    label: t.$t("cci.inbox"),
                    loading: t.loading,
                    "select-options": t.queryResult,
                    remote: "",
                    "remote-method": t.getUserInboxes
                },
                model: {
                    value: t.inboxId,
                    callback: function(b) {
                        t.inboxId = b
                    },
                    expression: "inboxId"
                }
            }, t._l(t.queryResult, function(h) {
                return s("zm-option", {
                    key: h.uid,
                    attrs: {
                        label: h.queueName ? h.name + t.$t("cci.common.space") + t.$t("cci.common.parentheses", {
                            text: h.queueName
                        }) : h.name,
                        value: h.uid
                    }
                }, [s("span", {
                    staticClass: "zm-dropdown__item-title"
                }, [t._v(t._s(h.name))]), t._v(" "), h.queueName ? s("span", {
                    staticClass: "info-text zm-dropdown__item-desc"
                }, [t._v(`
        ` + t._s(t.$t("cci.common.space") + t.$t("cci.common.parentheses", {
                    text: h.queueName
                })) + `
      `)]) : t._e()])
            }), 1)], 1)
        }
            , yd = []
            , _d = a(44301)
            , bd = a(38236);
        function yi(u) {
            "@babel/helpers - typeof";
            return yi = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                yi(u)
        }
        function ds() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            ds = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && yi(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(yi(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function fs(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function kl(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = fs(Object(b), !0)).call(s, function(S) {
                    Cd(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = fs(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function Cd(u, t, s) {
            return (t = Ed(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function Ed(u) {
            var t = Id(u, "string");
            return yi(t) == "symbol" ? t : t + ""
        }
        function Id(u, t) {
            if (yi(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (yi(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        function wd(u, t) {
            return xl(u) || _i(u, t) || Sd(u, t) || Td()
        }
        function Td() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Sd(u, t) {
            if (u) {
                var s;
                if (typeof u == "string")
                    return Ol(u, t);
                var h = Ne()(s = {}.toString.call(u)).call(s, 8, -1);
                return h === "Object" && u.constructor && (h = u.constructor.name),
                    h === "Map" || h === "Set" ? rr()(u) : h === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(h) ? Ol(u, t) : void 0
            }
        }
        function Ol(u, t) {
            (t == null || t > u.length) && (t = u.length);
            for (var s = 0, h = Array(t); s < t; s++)
                h[s] = u[s];
            return h
        }
        function _i(u, t) {
            var s = u == null ? null : typeof Ae() < "u" && Tt()(u) || u["@@iterator"];
            if (s != null) {
                var h, b, S, B, se = [], Z = !0, oe = !1;
                try {
                    if (S = (s = s.call(u)).next,
                    t === 0) {
                        if (Object(s) !== s)
                            return;
                        Z = !1
                    } else
                        for (; !(Z = (h = S.call(s)).done) && (se.push(h.value),
                        se.length !== t); Z = !0)
                            ;
                } catch (Wt) {
                    oe = !0,
                        b = Wt
                } finally {
                    try {
                        if (!Z && s.return != null && (B = s.return(),
                        Object(B) !== B))
                            return
                    } finally {
                        if (oe)
                            throw b
                    }
                }
                return se
            }
        }
        function xl(u) {
            if (en()(u))
                return u
        }
        function Dl(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function Ad(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            Dl(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            Dl(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        const Rl = {
            name: "InboxSelectDialog",
            components: {},
            props: {
                userId: {
                    type: String,
                    default: ""
                }
            },
            data: function() {
                return {
                    visible: !1,
                    inboxId: "",
                    queryResult: [],
                    loading: !1
                }
            },
            methods: {
                show: function() {
                    this.visible = !0
                },
                dismiss: function() {
                    this.visible = !1,
                        this.reset()
                },
                reset: function() {
                    this.inboxId = ""
                },
                handleTransfer: function() {
                    var t, s = this, h, b, S, B, se = k()(t = this.queryResult).call(t, function(Wt) {
                        return Wt.uid === s.inboxId
                    }), Z = {
                        inboxId: (h = se[0]) === null || h === void 0 ? void 0 : h.id,
                        inboxName: (b = se[0]) === null || b === void 0 ? void 0 : b.name,
                        queueName: (S = se[0]) === null || S === void 0 ? void 0 : S.queueName
                    };
                    if ((B = se[0]) !== null && B !== void 0 && B.queueId) {
                        var oe;
                        Z.queueId = (oe = se[0]) === null || oe === void 0 ? void 0 : oe.queueId
                    }
                    this.$emit("transfer", Z),
                        this.dismiss()
                },
                getUserInboxes: function() {
                    var t = this;
                    return Ad(ds().mark(function s() {
                        var h, b, S, B, se, Z, oe, Wt, $t, Yn;
                        return ds().wrap(function(mn) {
                            for (; ; )
                                switch (mn.prev = mn.next) {
                                    case 0:
                                        if (t.userId) {
                                            mn.next = 2;
                                            break
                                        }
                                        return mn.abrupt("return");
                                    case 2:
                                        return b = {
                                            page: 1,
                                            size: 1e3,
                                            userId: t.userId,
                                            orderKey: "name",
                                            orderRule: "asc",
                                            type: 0
                                        },
                                            t.loading = !0,
                                            mn.next = 6,
                                            (0,
                                                Qe.tryApiCatch)(bd.getUserInboxes, b);
                                    case 6:
                                        if (S = mn.sent,
                                            B = wd(S, 2),
                                            se = B[0],
                                            Z = B[1],
                                            t.loading = !1,
                                            !(se || !en()(Z.records) || Z.total === 0)) {
                                            mn.next = 13;
                                            break
                                        }
                                        return mn.abrupt("return", !1);
                                    case 13:
                                        if (Z.total !== 1) {
                                            mn.next = 17;
                                            break
                                        }
                                        return $t = {
                                            inboxId: (oe = Z.records[0]) === null || oe === void 0 ? void 0 : oe.id
                                        },
                                        (Wt = Z.records[0]) !== null && Wt !== void 0 && Wt.queueId && ($t.queueId = (Yn = Z.records[0]) === null || Yn === void 0 ? void 0 : Yn.queueId),
                                            mn.abrupt("return", $t);
                                    case 17:
                                        t.queryResult = Qi()(h = Z.records).call(h, function(Fn) {
                                            return kl(kl({}, Fn), {}, {
                                                uid: (0,
                                                    _d.A)()
                                            })
                                        });
                                    case 18:
                                    case "end":
                                        return mn.stop()
                                }
                        }, s)
                    }))()
                }
            }
        };
        var Wp = (0,
            Ue.A)(Rl, gd, yd, !1, null, "03b0117d", null);
        const Ld = Wp.exports;
        var Nd = function() {
            var t = this
                , s = t._self._c;
            return s("span")
        }
            , Md = [];
        const to = {
            name: "MediaFailureWarning",
            mixins: [ar.A],
            mounted: function() {
                var t;
                (t = this.notification) === null || t === void 0 || t.close(),
                    this.notification = this.chatNotify(this.$t("callbar.phone.warning.phoneConnectedFailure"), "", {}, -1)
            },
            beforeDestroy: function() {
                var t;
                (t = this.notification) === null || t === void 0 || t.close()
            }
        };
        var ps = (0,
            Ue.A)(to, Nd, Md, !1, null, null, null);
        const Pd = ps.exports;
        var kd = function() {
            var t = this
                , s = t._self._c;
            return s("ZccDialog", {
                attrs: {
                    title: t.title,
                    visible: t.visible,
                    "append-to-body": "",
                    width: "400px",
                    "custom-class": "voice-confirm",
                    "mini-screen-enlargement": !1
                }
            }, [s("span", {
                staticClass: "content"
            }, [t._v(t._s(t.message) + " ")]), t._v(" "), s("span", {
                staticClass: "dialog-footer",
                attrs: {
                    slot: "footer"
                },
                slot: "footer"
            }, [s("zm-button", {
                attrs: {
                    plain: ""
                },
                on: {
                    click: function(b) {
                        return t.$emit("close")
                    }
                }
            }, [t._v(t._s(t.cancelText))]), t._v(" "), s("zm-button", {
                attrs: {
                    type: t.confirmButtonType,
                    loading: t.confirmbuttonLoading
                },
                on: {
                    click: function(b) {
                        return t.$emit("confirm")
                    }
                }
            }, [t._v(t._s(t.confirmText))])], 1)])
        }
            , jl = [];
        const Od = {
            props: {
                visible: {
                    required: !0,
                    type: Boolean
                },
                danger: {
                    type: Boolean,
                    default: !1
                },
                confirmbuttonLoading: {
                    type: Boolean,
                    default: !1
                },
                title: String,
                message: String,
                confirmText: String,
                cancelText: String
            },
            data: function() {
                return {}
            },
            computed: {
                confirmButtonType: function() {
                    return this.danger ? "danger" : "primary"
                }
            }
        };
        var Ul = (0,
            Ue.A)(Od, kd, jl, !1, null, "04c62f87", null);
        const $l = Ul.exports;
        var Bl = a(54329)
            , no = function() {
            var t, s = this, h = s._self._c, b = s._self._setupProxy;
            return h("ZccDialog", {
                attrs: {
                    title: s.$t("cci.client.voice.transfer.modal.title"),
                    visible: s.visible,
                    width: "400px",
                    "append-to-body": "",
                    "mini-screen-enlargement": !1
                },
                on: {
                    closed: function(B) {
                        return b.emit("closed")
                    }
                }
            }, [s.transferWithNote ? s._e() : h("div", {
                staticClass: "select-transfer-option"
            }, [s._v(`
    ` + s._s(s.$t("cci.client.voice.transfer.modal.selectTransferOption")) + `
  `)]), s._v(" "), h("ul", {
                staticClass: "transfer-modal-options",
                attrs: {
                    role: "group",
                    "aria-label": s.$t("callbar.phone.transfer.ax")
                },
                on: {
                    keydown: function(B) {
                        var se;
                        return !tn()(se = B.type).call(se, "key") && s._k(B.keyCode, "esc", 27, B.key, ["Esc", "Escape"]) ? null : b.emit("close")
                    }
                }
            }, [s._l(b.transferOptionsList, function(S) {
                var B = S.type
                    , se = S.title
                    , Z = S.subTitle
                    , oe = S.ariaLabel
                    , Wt = S.ariaDescription
                    , $t = S.disabled
                    , Yn = S.handler
                    , Qn = S.tooltip;
                return [h("li", {
                    key: B,
                    class: {
                        option: !0,
                        disabled: $t,
                        selected: B === b.transferType
                    },
                    attrs: {
                        role: "button",
                        tabindex: "0",
                        "aria-label": oe,
                        "aria-description": Wt,
                        "aria-disabled": $t
                    },
                    on: {
                        keydown: [function(mn) {
                            var Fn;
                            return !tn()(Fn = mn.type).call(Fn, "key") && s._k(mn.keyCode, "space", 32, mn.key, [" ", "Spacebar"]) ? null : Yn.apply(null, arguments)
                        }
                            , function(mn) {
                                var Fn;
                                return !tn()(Fn = mn.type).call(Fn, "key") && s._k(mn.keyCode, "enter", 13, mn.key, "Enter") ? null : Yn.apply(null, arguments)
                            }
                        ],
                        click: Yn
                    }
                }, [h("zm-tooltip", {
                    attrs: {
                        content: Qn || s.$t("callbar.phone.transferDisabledTip"),
                        "aria-label": s.$t("callbar.phone.transferDisabledTip"),
                        placement: "right",
                        disabled: !$t
                    }
                }, [h("div", {
                    staticClass: "title"
                }, [s._v(`
            ` + s._s(se) + `
            `), h("div", {
                    staticClass: "sub-title"
                }, [s._v(`
              ` + s._s(Z) + `
            `)])])])], 1)]
            })], 2), s._v(" "), b.enableTransferNote ? [h("div", {
                staticClass: "transfer-note-wrapper",
                style: {
                    marginTop: s.transferWithNote ? "0" : "20px"
                }
            }, [b.enableConversationSummary ? h("div", {
                staticClass: "conversation-summary"
            }, [h("i", {
                staticClass: "conversation-summary-icon"
            }), s._v(" "), h("span", {
                staticClass: "summary"
            }, [s._v(s._s(s.$t("cci.client.voice.transfer.modal.summary")))]), s._v(" "), h("zm-tooltip", {
                attrs: {
                    placement: "top",
                    "popper-class": "conversation-summary-tips-popper"
                },
                scopedSlots: s._u([{
                    key: "content",
                    fn: function() {
                        return [h("div", {
                            staticClass: "summary-tips"
                        }, [h("span", {
                            staticStyle: {
                                "margin-bottom": "8px"
                            }
                        }, [s._v(s._s(s.$t("cci.client.voice.transfer.modal.clearSummary.tips-1")))]), s._v(" "), h("span", [s._v(s._s(s.$t("cci.client.voice.transfer.modal.clearSummary.tips-2")))])])]
                    },
                    proxy: !0
                }], null, !1, 3807132909)
            }, [s._v(" "), h("i", {
                staticClass: "conversation-summary-info-icon"
            })])], 1) : h("div", {
                staticClass: "note"
            }, [s._v(`
        ` + s._s(s.$t("cci.client.voice.transfer.modal.note")) + `
        `), h("span", {
                staticClass: "optional"
            }, [s._v(s._s("(".concat(s.$t("cci.flows.optional"), ")")))])]), s._v(" "), h("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: b.summaryFetching,
                    expression: "summaryFetching"
                }],
                staticClass: "summary-generating"
            }, [h("div", {
                staticClass: "summary-generating-loading"
            }, [h(Bl.A, {
                staticClass: "summary-generating-loading-icon"
            }), s._v(`
          ` + s._s(s.$t("cci.client.voice.transfer.modal.generating")) + `
        `)], 1)]), s._v(" "), b.summaryFetching ? s._e() : [h("textarea", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: b.transferNote,
                    expression: "transferNote"
                }],
                staticClass: "textarea",
                attrs: {
                    rows: 3,
                    maxlength: b.TEXTBOX_LIMIT,
                    draggable: "false"
                },
                domProps: {
                    value: b.transferNote
                },
                on: {
                    input: function(B) {
                        B.target.composing || (b.transferNote = B.target.value)
                    }
                }
            })], s._v(" "), h("div", {
                staticClass: "operation"
            }, [h("div", {
                staticClass: "left"
            }, [h("zm-tooltip", {
                attrs: {
                    value: !b.enableGenerateSummary && b.enableGenerateSummaryTipsVisible,
                    manual: "",
                    content: s.$t("cci.client.voice.transfer.modal.clearSummary.tips-2"),
                    "aria-label": s.$t("cci.client.voice.transfer.modal.clearSummary.tips-2"),
                    placement: "top",
                    "popper-class": "generate-tips-popper"
                }
            }, [b.enableConversationSummary ? h("span", {
                class: ["generate", b.enableGenerateSummary ? "" : "disabled"],
                on: {
                    click: b.onReGenerateSummary,
                    focus: function(B) {
                        b.enableGenerateSummaryTipsVisible = !0
                    },
                    blur: function(B) {
                        b.enableGenerateSummaryTipsVisible = !1
                    },
                    mouseenter: function(B) {
                        b.enableGenerateSummaryTipsVisible = !0
                    },
                    mouseleave: function(B) {
                        b.enableGenerateSummaryTipsVisible = !1
                    }
                }
            }, [s._v(s._s(s.$t("cci.client.voice.transfer.modal.generate")))]) : s._e()]), s._v(" "), h("span", {
                class: ["clear", b.summaryFetching || !b.transferNote ? "disabled" : ""],
                on: {
                    click: function() {
                        return b.transferNote = ""
                    }
                }
            }, [s._v(s._s(s.$t("cci.client.voice.transfer.modal.clear")))])], 1), s._v(" "), h("div", {
                staticClass: "count"
            }, [s._v(`
          ` + s._s(Pr()(t = "".concat(b.summaryFetching ? 0 : b.noteCount, "/")).call(t, b.TEXTBOX_LIMIT)) + `
        `)])])], 2)] : s._e(), s._v(" "), h("div", {
                staticClass: "transfer-modal-footer"
            }, [h("zm-button", {
                on: {
                    click: function(B) {
                        return b.emit("close")
                    }
                }
            }, [s._v(s._s(s.$t("cci.common.button.cancel")))]), s._v(" "), h("zm-button", {
                attrs: {
                    type: "primary",
                    loading: b.isTransferring,
                    disabled: b.transferType === b.TransferTypeEnum.Unknown
                },
                on: {
                    click: b.transferHandler
                }
            }, [s._v(s._s(s.$t("cci.common.transfer")) + `
    `)])], 1)], 2)
        }
            , xd = []
            , Dd = a(42119)
            , Rd = a.n(Dd);
        const jd = Rd();
        var Ud = (0,
            Ue.A)(jd, no, xd, !1, null, "0b929dd2", null);
        const $d = Ud.exports;
        var zp = function() {
            var t = this
                , s = t._self._c;
            return s("div", {
                staticClass: "legs"
            }, [s("div", {
                class: {
                    leg: !0,
                    active: t.callState.leg === "main"
                }
            }, [s("div", {
                staticClass: "leg-name"
            }, [t._v(t._s(t.displayNames))]), t._v(" "), t.callState.leg === "sub" ? s("div", {
                staticClass: "leg-swaplink"
            }, [t._v(`
      ` + t._s(t.$t("cci.analytics.label.onHold"))), s("a", {
                attrs: {
                    tabindex: "0",
                    role: "button",
                    "aria-label": t.$t("callbar.phone.clickToSwap")
                },
                on: {
                    click: t.handleSwapLeg,
                    keydown: [function(h) {
                        var b;
                        return !tn()(b = h.type).call(b, "key") && t._k(h.keyCode, "enter", 13, h.key, "Enter") ? null : t.handleSwapLeg.apply(null, arguments)
                    }
                        , function(h) {
                            var b;
                            return !tn()(b = h.type).call(b, "key") && t._k(h.keyCode, "space", 32, h.key, [" ", "Spacebar"]) ? null : t.handleSwapLeg.apply(null, arguments)
                        }
                    ]
                }
            }, [t._v(`
        - ` + t._s(t.$t("callbar.phone.clickToSwap")))])]) : s("div", [t._v(t._s(t.formattedMainLegDuration))])]), t._v(" "), s("div", {
                class: {
                    leg: !0,
                    subleg: !0,
                    active: t.callState.leg === "sub"
                },
                staticStyle: {
                    "margin-top": "23px"
                }
            }, [s("div", [s("div", {
                staticClass: "leg-name"
            }, [t._v(`
        ` + t._s(t._f("phoneNumber")(t.callState.minorLegState.inviteeName)) + `
      `)]), t._v(" "), t.callState.leg === "main" ? s("div", {
                staticClass: "leg-swaplink"
            }, [t._v(`
        ` + t._s(t.$t("cci.analytics.label.onHold"))), s("a", {
                attrs: {
                    tabindex: "0",
                    role: "button",
                    "aria-label": t.$t("callbar.phone.clickToSwap")
                },
                on: {
                    click: t.handleSwapLeg,
                    keydown: [function(h) {
                        var b;
                        return !tn()(b = h.type).call(b, "key") && t._k(h.keyCode, "enter", 13, h.key, "Enter") ? null : t.handleSwapLeg.apply(null, arguments)
                    }
                        , function(h) {
                            var b;
                            return !tn()(b = h.type).call(b, "key") && t._k(h.keyCode, "space", 32, h.key, [" ", "Spacebar"]) ? null : t.handleSwapLeg.apply(null, arguments)
                        }
                    ]
                }
            }, [t._v(`
          - ` + t._s(t.$t("callbar.phone.clickToSwap")))])]) : s("div", [t.bridged ? s("span", [t._v(t._s(t.formattedSubLegDuration))]) : s("span", [t._v(t._s(t.$t("callbar.phone.calling")))])])])])])
        }
            , Bd = [];
        function ro(u) {
            "@babel/helpers - typeof";
            return ro = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                ro(u)
        }
        function Mo(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function Vl(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = Mo(Object(b), !0)).call(s, function(S) {
                    Vd(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = Mo(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function Vd(u, t, s) {
            return (t = ao(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function ao(u) {
            var t = bi(u, "string");
            return ro(t) == "symbol" ? t : t + ""
        }
        function bi(u, t) {
            if (ro(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (ro(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        const Wl = {
            name: "Warmtransferlegs",
            mixins: [dt.A, Zt.A],
            props: {
                callName: {
                    required: !0,
                    type: String
                }
            },
            data: function() {
                return {
                    invitee_channel_id: "",
                    minorLegDuration: 0,
                    mainLegDuration: 0
                }
            },
            computed: {
                bridged: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 ? void 0 : t.minorLegState.bridged
                },
                minorLegBridgedTime: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 ? void 0 : t.minorLegState.startTime
                },
                mainLegStartTime: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 ? void 0 : t.mainLegState.startTime
                },
                formattedSubLegDuration: function() {
                    return (0,
                        Pt.secsToHHMMSS)(this.minorLegDuration)
                },
                formattedMainLegDuration: function() {
                    return (0,
                        Pt.secsToHHMMSS)(this.mainLegDuration)
                },
                displayNames: function() {
                    return this.callName
                }
            },
            watch: {
                bridged: {
                    immediate: !0,
                    handler: function(t) {
                        t && this.minorLegBridgedTime && this.updateSubLegDuration()
                    }
                },
                mainLegStartTime: {
                    immediate: !0,
                    handler: function(t) {
                        t && this.updateMainLegDuration()
                    }
                }
            },
            methods: Vl(Vl({}, (0,
                Yt.mapActions)("coreVoice", ["swapCallLeg"])), {}, {
                updateSubLegDuration: function() {
                    this.minorLegDuration = Math.floor((Oa()() - this.minorLegBridgedTime) / 1e3),
                        this.timer = K()(this.updateSubLegDuration, 1e3)
                },
                updateMainLegDuration: function() {
                    this.mainLegDuration = Math.floor((Oa()() - this.mainLegStartTime) / 1e3),
                        this.mainLegTimer = K()(this.updateMainLegDuration, 1e3)
                },
                handleSwapLeg: function() {
                    this.swapCallLeg({
                        callSyncId: this.$callId()
                    })
                }
            }),
            beforeDestroy: function() {
                clearTimeout(this.timer),
                    clearTimeout(this.mainLegTimer)
            }
        };
        var Fd = (0,
            Ue.A)(Wl, zp, Bd, !1, null, "15ca1048", null);
        const Gl = Fd.exports;
        function Ra(u) {
            "@babel/helpers - typeof";
            return Ra = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                Ra(u)
        }
        function Wa(u, t) {
            return Kd(u) || Hd(u, t) || Gd(u, t) || Wd()
        }
        function Wd() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Gd(u, t) {
            if (u) {
                var s;
                if (typeof u == "string")
                    return zd(u, t);
                var h = Ne()(s = {}.toString.call(u)).call(s, 8, -1);
                return h === "Object" && u.constructor && (h = u.constructor.name),
                    h === "Map" || h === "Set" ? rr()(u) : h === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(h) ? zd(u, t) : void 0
            }
        }
        function zd(u, t) {
            (t == null || t > u.length) && (t = u.length);
            for (var s = 0, h = Array(t); s < t; s++)
                h[s] = u[s];
            return h
        }
        function Hd(u, t) {
            var s = u == null ? null : typeof Ae() < "u" && Tt()(u) || u["@@iterator"];
            if (s != null) {
                var h, b, S, B, se = [], Z = !0, oe = !1;
                try {
                    if (S = (s = s.call(u)).next,
                    t === 0) {
                        if (Object(s) !== s)
                            return;
                        Z = !1
                    } else
                        for (; !(Z = (h = S.call(s)).done) && (se.push(h.value),
                        se.length !== t); Z = !0)
                            ;
                } catch (Wt) {
                    oe = !0,
                        b = Wt
                } finally {
                    try {
                        if (!Z && s.return != null && (B = s.return(),
                        Object(B) !== B))
                            return
                    } finally {
                        if (oe)
                            throw b
                    }
                }
                return se
            }
        }
        function Kd(u) {
            if (en()(u))
                return u
        }
        function hs(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function Ca(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = hs(Object(b), !0)).call(s, function(S) {
                    vs(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = hs(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function vs(u, t, s) {
            return (t = Ci(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function Ci(u) {
            var t = Qd(u, "string");
            return Ra(t) == "symbol" ? t : t + ""
        }
        function Qd(u, t) {
            if (Ra(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (Ra(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        function zr() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            zr = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && Ra(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(Ra(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function La(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function Ea(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            La(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            La(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        var Ui = Qe.phoneUtils.Call.CONFERENCE_HANGUP_TYPE
            , zl = de.notesApi.getNotes
            , Yd = de.notesApi.createNote;
        const Hl = {
            name: "OnPhonePanel",
            mixins: [Zt.A, ar.A, dt.A, Te.A, Le.A],
            directives: {
                Clickoutside: ye.Clickoutside
            },
            props: {
                menuTab: {
                    type: Number,
                    default: -1
                }
            },
            setup: function() {
                var t = (0,
                    Et.ref)(!1)
                    , s = (0,
                    Ot.useTranscript)()
                    , h = s.transcriptLanguageCode
                    , b = s.toggleTranscription
                    , S = s.showTranscription
                    , B = s.transcriptEnabled
                    , se = s.isAgentAssistTranscription
                    , Z = s.enableLiveTranscription
                    , oe = s.transcriptionLoading
                    , Wt = s.showTranscriptModal
                    , $t = s.disableLiveTranscriptionButton
                    , Yn = s.transcriptionLanguages
                    , Qn = s.showLanguageButton
                    , mn = s.updateShowTranscript
                    , Fn = s.onBeforeTranscript
                    , Vt = s.startTranscript
                    , Ir = s.stopTranscript
                    , Cr = s.closeModal
                    , On = (0,
                    Ot.useMessageHistory)()
                    , Br = On.enableMessageHistory
                    , Sr = On.displayMessageHistory
                    , jr = On.showMessageHistory
                    , dr = On.hideMessageHistory
                    , Kr = (0,
                    Ot.useAgentAssist)()
                    , Ar = Kr.enableValues
                    , ta = Kr.getEnableValue
                    , Qr = (0,
                    Et.computed)(function() {
                    return Z.value && !se.value
                });
                function ea() {
                    Wt.value = !0
                }
                function Wr() {
                    for (var ft = arguments.length, Xn = new Array(ft), Un = 0; Un < ft; Un++)
                        Xn[Un] = arguments[Un];
                    Vt.apply(void 0, Pr()(Xn).call(Xn, [B.value ? "update" : "start"]))
                }
                function $r() {
                    return Er.apply(this, arguments)
                }
                function Er() {
                    return Er = Ea(zr().mark(function ft() {
                        return zr().wrap(function(Un) {
                            for (; ; )
                                switch (Un.prev = Un.next) {
                                    case 0:
                                        if (!$t.value) {
                                            Un.next = 2;
                                            break
                                        }
                                        return Un.abrupt("return");
                                    case 2:
                                        if (!se.value) {
                                            Un.next = 5;
                                            break
                                        }
                                        return b({}),
                                            Un.abrupt("return");
                                    case 5:
                                        if (!B.value) {
                                            Un.next = 8;
                                            break
                                        }
                                        return t.value = !0,
                                            Un.abrupt("return");
                                    case 8:
                                        return Un.next = 10,
                                            Fn();
                                    case 10:
                                    case "end":
                                        return Un.stop()
                                }
                        }, ft)
                    })),
                        Er.apply(this, arguments)
                }
                function m() {
                    Ir(),
                        t.value = !1
                }
                var d = (0,
                    Ot.useTransferMode)()
                    , v = d.transferMode
                    , C = d.enableDirectTransfer
                    , L = d.directTransferType
                    , w = d.enableTransferWithoutSelection
                    , ge = d.canTransferToZccWithoutSelection
                    , qe = d.isOnlyWarmTransferWithPSTN;
                return {
                    enableValues: Ar,
                    getEnableValue: ta,
                    transcriptLanguageCode: h,
                    displayMessageHistory: Sr,
                    enableMessageHistory: Br,
                    showMessageHistory: jr,
                    hideMessageHistory: dr,
                    showTranscription: S,
                    transcriptEnabled: B,
                    isAgentAssistTranscription: se,
                    showTranscriptButton: Qr,
                    transcriptionLoading: oe,
                    disableLiveTranscriptionButton: $t,
                    showTranscriptModal: Wt,
                    showLanguageButton: Qn,
                    showTranscriptCloseConfirm: t,
                    transcriptionLanguages: Yn,
                    toggleTranscription: b,
                    updateShowTranscript: mn,
                    onClickTranscript: $r,
                    handleConfirmStop: m,
                    closeModal: Cr,
                    handleChangeLanguage: ea,
                    handleStartTranscript: Wr,
                    transferMode: v,
                    enableDirectTransfer: C,
                    canTransferToZccWithoutSelection: ge,
                    directTransferType: L,
                    enableTransferWithoutSelection: w,
                    isOnlyWarmTransferWithPSTN: qe
                }
            },
            data: function() {
                return {
                    confirmVisible: !1,
                    confirmDanger: !1,
                    confirmTitle: "",
                    confirmMessage: "",
                    confirmButtonText: "",
                    cancelButtonText: this.$t("cci.common.button.cancel"),
                    onConfirm: function() {},
                    transferto: "",
                    transferTarget: "",
                    targetEmail: "",
                    targetFirstname: "",
                    targetLastname: "",
                    targetName: "",
                    targetQueue: null,
                    tdVal: "",
                    transferSelectRes: null,
                    warmTransferAborted: !1,
                    transferDropdownVisible: !1,
                    chooseSkillVisible: !1,
                    transferCommand: null,
                    warmConferenceParams: {},
                    showAssignLeave: !1,
                    showChooseAssignAgent: !1,
                    confirmbuttonLoading: !1,
                    ZPVoicemailMap: {},
                    transferDropdownLoading: !1,
                    transferContext: {
                        transferNote: "",
                        summaryChanged: !1
                    },
                    transferActionVisible: !1,
                    transferDetails: "",
                    onlyTransferNoteMode: !1
                }
            },
            computed: Ca(Ca(Ca(Ca(Ca(Ca(Ca({}, (0,
                Yt.mapState)("common", ["features"])), {}, {
                engagementId: function() {
                    var t;
                    return (t = this.currentActiveTask) === null || t === void 0 ? void 0 : t.engagementId
                },
                transferNumber: function() {
                    if (this.transferSelectRes !== null)
                        return null;
                    var t = this.transferTarget.replace(/[^a-zA-Z0-9]/g, "");
                    return isNaN(t) ? null : t
                },
                isZPVoicemail: function() {
                    return this.ZPVoicemailMap[this.transferNumber]
                },
                enableAicSummary: function() {
                    var t;
                    return !!((t = this.callState) !== null && t !== void 0 && (t = t.featureFlags) !== null && t !== void 0 && (t = t.agentAssistFeatures) !== null && t !== void 0 && t.enableAicSummary)
                },
                showVoiceAnalysis: function() {
                    var t, s;
                    return !this.isMonitorCall && !!((t = this.callState) !== null && t !== void 0 && t.bridged) && !!((s = this.callState) !== null && s !== void 0 && (s = s.featureFlags) !== null && s !== void 0 && (s = s.agentAssistFeatures) !== null && s !== void 0 && s.enableAicTalkMetric)
                },
                showScreenRecordingTip: function() {
                    var t, s, h;
                    return O()(t = [Qe.recordingStatesMap.start, Qe.recordingStatesMap.pause]).call(t, (s = this.callState) === null || s === void 0 || (s = s.screenRecordingController) === null || s === void 0 ? void 0 : s.recordingStatus) && !((h = this.callState) !== null && h !== void 0 && h.hideScreenRecordingBanner)
                },
                ZPTransferLoading: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 || (t = t.UIState) === null || t === void 0 ? void 0 : t.ZPTransferLoading
                },
                transferring: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 ? void 0 : t.transferring
                },
                transferAccepted: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 ? void 0 : t.transferAccepted
                },
                transferCanceled: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 ? void 0 : t.transferCanceled
                },
                transferCompleted: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 ? void 0 : t.transferCompleted
                },
                enableWarmTransferSecondVersion: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 || (t = t.featureFlags) === null || t === void 0 ? void 0 : t.enableWarmTransferSecondVersion
                },
                enableSearchZPContacts: function() {
                    var t, s;
                    return ((t = this.callState) === null || t === void 0 || (t = t.featureFlags) === null || t === void 0 ? void 0 : t.enableSearchZPContacts) && ((s = this.account) === null || s === void 0 ? void 0 : s.enableTransferToZpUsersQueues)
                },
                enableSearchAddressBookContacts: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 || (t = t.featureFlags) === null || t === void 0 ? void 0 : t.enableSearchAddressBookContacts
                },
                enableAssignHost: function() {
                    var t;
                    return (t = this.callState) === null || t === void 0 || (t = t.featureFlags) === null || t === void 0 ? void 0 : t.enableAssignHost
                },
                isOutboundCall: function() {
                    try {
                        var t;
                        return ((t = this.callReservation) === null || t === void 0 || (t = t.task) === null || t === void 0 || (t = t.attributes) === null || t === void 0 ? void 0 : t.mDirection) === "outbound"
                    } catch {
                        return !1
                    }
                },
                isMonitorCall: function() {
                    try {
                        var t;
                        return (t = this.callReservation) === null || t === void 0 || (t = t.task) === null || t === void 0 || (t = t.attributes) === null || t === void 0 ? void 0 : t.isMonitor
                    } catch {
                        return !1
                    }
                },
                showInbox: function() {
                    var t;
                    return (t = this.transferSelectRes) === null || t === void 0 || (t = t.target) === null || t === void 0 ? void 0 : t.isInbox
                },
                hideWarmTransfer: function() {
                    var t;
                    return (this.account.enableWarmTransfersToFlows ? !1 : (t = this.transferSelectRes) === null || t === void 0 ? void 0 : t.isFlow) || this.transferMode === Qe.TransferMode.ONLY_DIRECT
                },
                disableWarmTransferButton: function() {
                    return this.showInbox || this.callState.isPSTN
                },
                callName: function() {
                    var t;
                    return this.calcPhoneWithPhiMask((t = this.callReservation) === null || t === void 0 || (t = t.task) === null || t === void 0 ? void 0 : t.attributes.to)
                },
                businessId: function() {
                    var t;
                    return (t = this.callReservation) === null || t === void 0 || (t = t.task) === null || t === void 0 || (t = t.attributes) === null || t === void 0 ? void 0 : t.businessId
                },
                queueId: function() {
                    var t;
                    return (t = this.callReservation) === null || t === void 0 || (t = t.task) === null || t === void 0 || (t = t.attributes) === null || t === void 0 ? void 0 : t.queueId
                },
                showEnterExt: function() {
                    try {
                        var t, s = ((t = this.callReservation) === null || t === void 0 || (t = t.task) === null || t === void 0 ? void 0 : t.attributes) || {}, h = s.isCallback, b = s.callExtensionNumber;
                        return b && h
                    } catch {
                        return !1
                    }
                },
                currentUser: function() {
                    var t, s = this;
                    return (t = this.conferenceMembers) === null || t === void 0 ? void 0 : G()(t).call(t, function(h) {
                        return h?.userId === s.getUserId()
                    })
                },
                conferenceMembers: function() {
                    return this.callState.conferenceMembers
                },
                isConference: function() {
                    return this.callState.isConference
                },
                isHost: function() {
                    var t, s, h = G()(t = this.conferenceMembers).call(t, function(b) {
                        return b?.isHost
                    });
                    return this.getUserId() === h?.userId && !((s = this.callReservation) !== null && s !== void 0 && (s = s.task) !== null && s !== void 0 && (s = s.attributes) !== null && s !== void 0 && s.isMonitor)
                },
                conferenceMembersWithoutSupervisor: function() {
                    var t;
                    return ((t = this.conferenceMembers) === null || t === void 0 ? void 0 : k()(t).call(t, function(s) {
                        return !(s?.role === "Supervisor" && (s?.monitorMode === "monitor" || s?.monitorMode === "barge"))
                    })) || []
                },
                needLeaveAssign: function() {
                    var t, s;
                    return this.isConference && this.isHost && this.enableAssignHost && ((t = this.conferenceMembersWithoutSupervisor) === null || t === void 0 ? void 0 : t.length) > 2 && ((s = this.callState) === null || s === void 0 ? void 0 : s.leg) !== "sub"
                },
                canAssignAgents: function() {
                    var t, s = this;
                    return (t = this.callState) === null || t === void 0 || (t = t.conferenceMembers) === null || t === void 0 ? void 0 : k()(t).call(t, function(h) {
                        return h?.can_assign && h.userId !== s.getUserId()
                    })
                }
            }, (0,
                Yt.mapGetters)({
                user: "user"
            })), (0,
                Yt.mapGetters)("coreVoice", ["callReservation", "phoneContainerLoading", "instanceId", "enableTrimTransferDID"])), (0,
                Yt.mapState)("crm", ["mapping"])), (0,
                Yt.mapGetters)("crm", ["getCurrentEngagementNotes"])), (0,
                Yt.mapGetters)("sessionPanels", ["currentActiveTask", "selectedContactId"])), {}, {
                transferAborted: function() {
                    return this.callState.transferAborted
                },
                conferenceInviting: function() {
                    return this.callState.conferenceInviting
                },
                isWarmTransferMainleg: function() {
                    return this.isWarmTransferTwoLegs && this.isMainLeg
                },
                showAddCallPanel: function() {
                    var t;
                    return (t = this.callState.UIState) === null || t === void 0 ? void 0 : t.showAddCallPanel
                },
                showTransferPad: function() {
                    var t;
                    return (t = this.callState.UIState) === null || t === void 0 ? void 0 : t.showTransferPad
                },
                showKeypad: function() {
                    var t;
                    return (t = this.callState.UIState) === null || t === void 0 ? void 0 : t.showKeypad
                },
                pressedKeys: function() {
                    var t;
                    return (t = this.callState.UIState) === null || t === void 0 ? void 0 : t.pressedKeys
                },
                mediaFailed: function() {
                    return this.callState.mediaFailed
                },
                disableTransferButton: function() {
                    return this.onlyWarmTransferWithPSTNAndVoicemailNotSupported
                },
                onlyWarmTransferWithPSTNAndVoicemailNotSupported: function() {
                    return this.transferTarget && this.isOnlyWarmTransferWithPSTN && !(this.showInbox || this.isZPVoicemail === !0)
                },
                showTransferNote: function() {
                    return this.enableTransferWithoutSelection && !this.isOnlyWarmTransferWithPSTN && this.features.enableTransferNote && !this.showInbox && this.isZccData
                },
                isZccData: function() {
                    var t;
                    return (0,
                        Ot.isZccData)(((t = this.transferSelectRes) === null || t === void 0 ? void 0 : t.target) || {})
                }
            }),
            components: {
                KeyPad: Yr,
                Extension: Vp,
                CallActions: ud,
                ContactSearch: R,
                ChooseSkills: Ot.ChooseSkill,
                AddCall: Do,
                CandidateList: si,
                ChooseInboxes: Ld,
                ConferenceLegs: Zf,
                TransferLegs: Gl,
                AssignAgent: ga,
                Confirm: $l,
                MessageHistory: Ot.MessageHistory,
                Transcript: Ot.Transcript,
                TranscriptCloseConfirm: Ot.TranscriptCloseConfirm,
                TransferModal: $d,
                TranscriptModal: Ot.TranscriptModal,
                MediaFailureWarning: Pd,
                VoiceAnalysis: Ot.SpeechAnalyze,
                ScreenRecordingTip: Ot.ScreenRecordingTip
            },
            methods: Ca(Ca(Ca({}, (0,
                Yt.mapActions)("crm", ["setTransferDetails", "setNotes"])), (0,
                Yt.mapActions)("coreVoice", {
                updatePhoneContainerLoading: "updatePhoneContainerLoading",
                transferToDIDAction: "transferToDID",
                doTransfer: "transfer",
                completeTransferAction: "completeTransfer",
                cancelTransferAction: "cancelTransfer",
                sendDtmf: "sendDtmf",
                hangUpCallAction: "hangUpCall",
                hangUpCrmCallAction: "hangUpCrmCall",
                assignCall: "assignCall",
                updateTransferTo: "updateTransferTo",
                transferZPVoicemailAction: "transferZPVoicemail",
                isZPNumber: "isZPNumber"
            })), {}, {
                setTransferContext: function(t) {
                    this.transferContext = t
                },
                showTransferModal: function() {
                    this.onlyTransferNoteMode = !1,
                        this.transferActionVisible = !0
                },
                onShowTransferModal: function() {
                    var t = this;
                    return Ea(zr().mark(function s() {
                        var h;
                        return zr().wrap(function(S) {
                            for (; ; )
                                switch (S.prev = S.next) {
                                    case 0:
                                        if (!t.disableTransferButton) {
                                            S.next = 2;
                                            break
                                        }
                                        return S.abrupt("return");
                                    case 2:
                                        if (!t.enableTransferWithoutSelection) {
                                            S.next = 8;
                                            break
                                        }
                                        return S.next = 5,
                                            t.handleTransferWithoutSelection();
                                    case 5:
                                        if (h = S.sent,
                                            h) {
                                            S.next = 8;
                                            break
                                        }
                                        return S.abrupt("return");
                                    case 8:
                                        t.showTransferModal(),
                                            t.checkIfZPNumber();
                                    case 10:
                                    case "end":
                                        return S.stop()
                                }
                        }, s)
                    }))()
                },
                handleTransferWithoutSelection: function() {
                    var t = this;
                    return Ea(zr().mark(function s() {
                        var h, b, S;
                        return zr().wrap(function(se) {
                            for (; ; )
                                switch (se.prev = se.next) {
                                    case 0:
                                        return b = ((h = t.transferSelectRes) === null || h === void 0 ? void 0 : h.target) || {},
                                            S = !0,
                                            t.canTransferToZccWithoutSelection(b) ? (t.transferWithoutSelection(),
                                                S = !1) : t.isZccData || (t.isZPVoicemail ? t.showTransferModal() : t.transferWithoutSelection(),
                                                S = !1),
                                            se.abrupt("return", S);
                                    case 4:
                                    case "end":
                                        return se.stop()
                                }
                        }, s)
                    }))()
                },
                handleTransferNote: function() {
                    this.transferActionVisible = !0,
                        this.onlyTransferNoteMode = !0
                },
                transferWithoutSelection: function() {
                    this.directTransferType === Qe.TransferConferenceType.DIRECT ? this.directTransferHandler() : this.warmTransferHandler()
                },
                toggleTransferDropdown: function(t) {
                    this.transferDropdownVisible = t,
                    t && this.checkIfZPNumber()
                },
                checkIfZPNumber: function() {
                    var t = this;
                    return Ea(zr().mark(function s() {
                        var h, b, S, B, se, Z, oe, Wt, $t;
                        return zr().wrap(function(Qn) {
                            for (; ; )
                                switch (Qn.prev = Qn.next) {
                                    case 0:
                                        if (b = t.transferNumber,
                                            S = t.ZPVoicemailMap,
                                            B = t.account,
                                            !(!B.enableTransfersToZPVoicemail || !b || S.hasOwnProperty(b))) {
                                            Qn.next = 3;
                                            break
                                        }
                                        return Qn.abrupt("return");
                                    case 3:
                                        return t.transferDropdownLoading = !0,
                                            Qn.next = 6,
                                            t.isZPNumber({
                                                phoneNumber: b,
                                                callSyncId: t.$callId()
                                            });
                                    case 6:
                                        if (se = Qn.sent,
                                            Z = Wa(se, 2),
                                            oe = Z[0],
                                            Wt = Z[1],
                                            $t = (Wt == null || (h = Wt.data) === null || h === void 0 ? void 0 : h.errorCode) === "20008",
                                        $t && t.$set(t.ZPVoicemailMap, b, !1),
                                            !oe) {
                                            Qn.next = 15;
                                            break
                                        }
                                        return t.transferDropdownLoading = !1,
                                            Qn.abrupt("return");
                                    case 15:
                                        t.$set(t.ZPVoicemailMap, b, !0),
                                            t.transferDropdownLoading = !1;
                                    case 17:
                                    case "end":
                                        return Qn.stop()
                                }
                        }, s)
                    }))()
                },
                transferZPVoicemail: function() {
                    var t = this;
                    return Ea(zr().mark(function s() {
                        var h, b, S, B, se;
                        return zr().wrap(function(oe) {
                            for (; ; )
                                switch (oe.prev = oe.next) {
                                    case 0:
                                        h = t.callReservation,
                                            b = t.instanceId,
                                            S = t.transferTarget,
                                            B = t.user,
                                            se = t.$options.filters.E164Number(S, B.countryOrRegion),
                                            t.transferZPVoicemailAction({
                                                callSyncId: t.$callId(),
                                                taskSid: h.task.id,
                                                reservationSid: h.id,
                                                instanceId: b,
                                                answerMode: "Auto",
                                                callTo: se
                                            });
                                    case 3:
                                    case "end":
                                        return oe.stop()
                                }
                        }, s)
                    }))()
                },
                handleSendDtmf: function(t) {
                    var s, h;
                    if (!this.currentLegState.holdState) {
                        var b = {
                            taskSid: (s = this.callReservation) === null || s === void 0 || (s = s.task) === null || s === void 0 ? void 0 : s.id,
                            dtmfStr: t
                        };
                        if (((h = this.callReservation) === null || h === void 0 ? void 0 : h.type) === "outbound") {
                            var S;
                            b.callSid = (S = this.callReservation) === null || S === void 0 || (S = S.task) === null || S === void 0 || (S = S.attributes) === null || S === void 0 ? void 0 : S.call_sid
                        }
                        this.setPressedKeys(t),
                            this.sendDtmf({
                                callSyncId: this.$callId(),
                                isMainLeg: this.isMainLeg,
                                opts: b
                            })
                    }
                },
                setPressedKeys: function(t) {
                    var s, h = this.pressedKeys;
                    ((s = h) === null || s === void 0 ? void 0 : s.length) < 20 ? h += t : h = Ne()(h).call(h, 1) + t,
                        this.setUIState({
                            pressedKeys: h
                        })
                },
                normalHangUp: function() {
                    this.isConference && this.conferenceMembersWithoutSupervisor.length < 3 && !(this.callState.conferenceType === "warm" && !this.callState.merged) ? this.hangUpCall(Ui.HOST_END_ALL) : this.conferenceInviting ? this.hangUpCall(Ui.HOST_END_ALL) : this.hangUpCall()
                },
                hangUpCall: function() {
                    var t = arguments
                        , s = this;
                    return Ea(zr().mark(function h() {
                        var b;
                        return zr().wrap(function(B) {
                            for (; ; )
                                switch (B.prev = B.next) {
                                    case 0:
                                        return b = t.length > 0 && t[0] !== void 0 ? t[0] : Ui.NO_HOST_LEAVE,
                                            B.prev = 1,
                                            B.next = 4,
                                            s.hangUpCallAction({
                                                callSyncId: s.$callId(),
                                                conferenceHangUpType: b
                                            });
                                    case 4:
                                        B.next = 9;
                                        break;
                                    case 6:
                                        B.prev = 6,
                                            B.t0 = B.catch(1),
                                            console.error(B.t0.message);
                                    case 9:
                                    case "end":
                                        return B.stop()
                                }
                        }, h, null, [[1, 6]])
                    }))()
                },
                hangUpCrmCall: function(t) {
                    var s = arguments
                        , h = this;
                    return Ea(zr().mark(function b() {
                        var S;
                        return zr().wrap(function(se) {
                            for (; ; )
                                switch (se.prev = se.next) {
                                    case 0:
                                        return S = s.length > 1 && s[1] !== void 0 ? s[1] : Ui.NO_HOST_LEAVE,
                                            se.prev = 1,
                                            se.next = 4,
                                            h.hangUpCrmCallAction({
                                                callSyncId: h.$callId(),
                                                isMainLeg: t,
                                                conferenceHangUpType: S
                                            });
                                    case 4:
                                        se.next = 9;
                                        break;
                                    case 6:
                                        se.prev = 6,
                                            se.t0 = se.catch(1),
                                            console.error(se.t0.message);
                                    case 9:
                                    case "end":
                                        return se.stop()
                                }
                        }, b, null, [[1, 6]])
                    }))()
                },
                transferPadPress: function(t) {
                    this.transferTarget += t,
                        this.clearContactInfo()
                },
                resetTransferSelectRes: function() {
                    console.log("resetTransferSelectRes", this.transferTarget),
                    this.transferSelectRes && this.transferSelectRes.target.name !== this.transferTarget && (this.transferSelectRes = null,
                        this.updateTransferTo({}))
                },
                handleTransferSelect: function(t, s) {
                    if (this.targetQueue = s,
                        !t.isZcc) {
                        this.transferSelectRes = null,
                            this.handleTransferDIDSelect(t);
                        return
                    }
                    var h = t.ZccType === "queue"
                        , b = t.ZccType === "flow";
                    this.transferSelectRes = {
                        target: t,
                        isQueue: h,
                        isFlow: b
                    },
                        this.updateTransferTo({
                            target: t,
                            isQueue: h
                        }),
                        this.transferTarget = t.name
                },
                handleTransferDIDSelect: function(t) {
                    if (t.isNumber)
                        this.transferTarget = t.value;
                    else {
                        var s = t.children[0];
                        s && (this.transferTarget = s.value)
                    }
                    this.targetEmail = t.email,
                        this.targetFirstname = t.firstname,
                        this.targetLastname = t.lastname,
                        this.targetName = t.name
                },
                directTransferHandler: function() {
                    this.handleTransferCommand("blind")
                },
                warmTransferHandler: function() {
                    this.handleTransferCommand("warm")
                },
                voicemailTransferHandler: function() {
                    this.handleTransferCommand("inbox")
                },
                voicemailZPTransferHandler: function() {
                    this.handleTransferCommand("voicemailZP")
                },
                handleTransferCommand: function(t) {
                    var s = this;
                    return Ea(zr().mark(function h() {
                        var b, S, B, se, Z, oe, Wt;
                        return zr().wrap(function(Yn) {
                            for (; ; )
                                switch (Yn.prev = Yn.next) {
                                    case 0:
                                        if (s.transferCommand = t,
                                            s.transferActionVisible = !1,
                                            !((b = s.transferSelectRes) !== null && b !== void 0 && b.isQueue && ((S = s.transferSelectRes) === null || S === void 0 || (S = S.target) === null || S === void 0 ? void 0 : S.enableAllowSelectSkillForTransfer) !== !1)) {
                                            Yn.next = 10;
                                            break
                                        }
                                        return s.updatePhoneContainerLoading(!0),
                                            Yn.next = 6,
                                            (B = s.$refs.chooseSkills) === null || B === void 0 ? void 0 : B.querySkills();
                                    case 6:
                                        if (se = Yn.sent,
                                            s.updatePhoneContainerLoading(!1),
                                            !se) {
                                            Yn.next = 10;
                                            break
                                        }
                                        return Yn.abrupt("return", s.chooseSkillVisible = !0);
                                    case 10:
                                        if (t !== "blind") {
                                            Yn.next = 14;
                                            break
                                        }
                                        s.transferAction("blind"),
                                            Yn.next = 31;
                                        break;
                                    case 14:
                                        if (t !== "warm") {
                                            Yn.next = 19;
                                            break
                                        }
                                        s.checkIfZPNumber(),
                                            s.transferAction("warm"),
                                            Yn.next = 31;
                                        break;
                                    case 19:
                                        if (t !== "inbox") {
                                            Yn.next = 30;
                                            break
                                        }
                                        return Yn.next = 22,
                                            (Z = s.$refs.chooseInboxes) === null || Z === void 0 ? void 0 : Z.getUserInboxes();
                                    case 22:
                                        if (oe = Yn.sent,
                                            !oe) {
                                            Yn.next = 27;
                                            break
                                        }
                                        s.handleChooseInbox(oe),
                                            Yn.next = 28;
                                        break;
                                    case 27:
                                        return Yn.abrupt("return", (Wt = s.$refs.chooseInboxes) === null || Wt === void 0 ? void 0 : Wt.show());
                                    case 28:
                                        Yn.next = 31;
                                        break;
                                    case 30:
                                        t === "voicemailZP" && s.transferZPVoicemail();
                                    case 31:
                                    case "end":
                                        return Yn.stop()
                                }
                        }, h)
                    }))()
                },
                handleChooseSkill: function(t) {
                    this.transferAction(this.transferCommand, {
                        inputSkillMap: t
                    })
                },
                handleChooseInbox: function(t) {
                    this.transferAction("inbox", t)
                },
                setTransferDetailsInStore: function(t, s) {
                    var h, b = this.user.name, S = b === void 0 ? "" : b, B = "";
                    if (s != null && (h = s.target) !== null && h !== void 0 && h.isInbox) {
                        var se;
                        B = "Engagement transfered to Voicemail Inbox by ".concat(S);
                        var Z = s == null || (se = s.inboxDetails) === null || se === void 0 ? void 0 : se.inboxName;
                        if (Z) {
                            var oe, Wt;
                            B = Pr()(oe = "Engagement transfered to Voicemail Inbox (".concat(Z, ") by ")).call(oe, S);
                            var $t = s == null || (Wt = s.inboxDetails) === null || Wt === void 0 ? void 0 : Wt.queueName;
                            if ($t) {
                                var Yn, Qn;
                                B = Pr()(Yn = Pr()(Qn = "Engagement transfered to Voicemail Inbox (".concat(Z, " - ")).call(Qn, $t, ") by ")).call(Yn, S)
                            }
                        }
                        this.setTransferDetails({
                            engagementId: this.engagementId,
                            transferDetails: B
                        }),
                            this.transferDetails = B;
                        return
                    }
                    if (t && S) {
                        var mn, Fn;
                        if (t === S) {
                            B = "Engagement transfered by ".concat(S),
                                this.setTransferDetails({
                                    engagementId: this.engagementId,
                                    transferDetails: B
                                }),
                                this.transferDetails = B;
                            return
                        }
                        if (B = Pr()(mn = "".concat(S, " transferred the engagement to ")).call(mn, t),
                        (Fn = this.targetQueue) !== null && Fn !== void 0 && Fn.name) {
                            var Vt;
                            B += " (".concat((Vt = this.targetQueue) === null || Vt === void 0 ? void 0 : Vt.name, ")")
                        }
                    } else if (S)
                        B = "Engagement transfered by ".concat(S);
                    else if (t) {
                        var Ir;
                        if (B = "Engagement transferred to ".concat(t),
                        (Ir = this.targetQueue) !== null && Ir !== void 0 && Ir.name) {
                            var Cr;
                            B += " (".concat((Cr = this.targetQueue) === null || Cr === void 0 ? void 0 : Cr.name, ")")
                        }
                    }
                    this.setTransferDetails({
                        engagementId: this.engagementId,
                        transferDetails: B
                    }),
                        this.transferDetails = B
                },
                transferAction: function(t) {
                    var s = arguments
                        , h = this;
                    return Ea(zr().mark(function b() {
                        var S, B, se, Z, oe, Wt, $t, Yn, Qn, mn, Fn, Vt, Ir, Cr, On;
                        return zr().wrap(function(Sr) {
                            for (; ; )
                                switch (Sr.prev = Sr.next) {
                                    case 0:
                                        if (B = s.length > 1 && s[1] !== void 0 ? s[1] : {},
                                            !(t !== "warm" && t !== "blind" && t !== "inbox")) {
                                            Sr.next = 3;
                                            break
                                        }
                                        return Sr.abrupt("return");
                                    case 3:
                                        if (h.transferSelectRes !== null) {
                                            Sr.next = 6;
                                            break
                                        }
                                        return h.transferToDID(t),
                                            Sr.abrupt("return");
                                    case 6:
                                        return se = h.transferSelectRes,
                                            Z = se.isQueue,
                                            oe = se.isFlow,
                                            Wt = se.target,
                                            $t = h.transferContext,
                                            Sr.prev = 8,
                                            Sr.next = 11,
                                            (0,
                                                zt.getCRMInstance)();
                                    case 11:
                                        if (Yn = Sr.sent,
                                            Qn = null,
                                            !((0,
                                                Qe.isInCoreTab)() && Yn.getEngagementContext)) {
                                            Sr.next = 19;
                                            break
                                        }
                                        return Sr.next = 16,
                                            Yn.getEngagementContext(h.engagementId);
                                    case 16:
                                        Qn = Sr.sent,
                                            Sr.next = 20;
                                        break;
                                    case 19:
                                        Yn.getEngagementContext && (Qn = Yn.getEngagementContext(h.engagementId));
                                    case 20:
                                        Qn && ($t = Ca(Ca({}, $t), {}, {
                                            crm: Qn
                                        })),
                                            Sr.next = 26;
                                        break;
                                    case 23:
                                        Sr.prev = 23,
                                            Sr.t0 = Sr.catch(8),
                                            console.error("Error while setting crm context", Sr.t0);
                                    case 26:
                                        return mn = Ca({
                                            type: t,
                                            taskSid: (S = h.callReservation) === null || S === void 0 || (S = S.task) === null || S === void 0 ? void 0 : S.id,
                                            inviteeName: Wt.name,
                                            transferContext: $t
                                        }, B),
                                            Z ? mn.queueId = Wt.id : oe ? mn.flowId = Wt.id : Wt != null && Wt.isInbox ? (mn.userId = Wt.id,
                                                mn.transferContext.transferNote = "") : (mn.workerSid = Wt.routerAgentId,
                                                Fn = h.targetQueue,
                                            Fn != null && Fn.id && (mn.queueId = Fn.id)),
                                            t === "inbox" ? h.setTransferDetailsInStore("", Ca(Ca({}, h.transferSelectRes), {}, {
                                                inboxDetails: {
                                                    inboxName: B?.inboxName,
                                                    queueName: B.queueName
                                                }
                                            })) : t === "blind" && (Ir = h.targetFirstname || h.targetLastname ? Pr()(Vt = "".concat(h.targetFirstname, " ")).call(Vt, h.targetLastname) : h.$options.filters.phoneNumber(h.transferTarget, h.user.countryOrRegion),
                                                h.setTransferDetailsInStore(Ir, h.transferSelectRes)),
                                            Sr.prev = 29,
                                            Cr = t === "warm" && !(Wt != null && Wt.isInbox) && !oe && h.enableWarmTransferSecondVersion,
                                            Sr.next = 33,
                                            h.doTransfer({
                                                options: mn,
                                                isNewWarmTransfer: Cr,
                                                target: Wt,
                                                callSyncId: h.$callId()
                                            });
                                    case 33:
                                        return On = Sr.sent,
                                            h.setUIState({
                                                showTransferPad: !1
                                            }),
                                            Sr.abrupt("return", On);
                                    case 38:
                                        Sr.prev = 38,
                                            Sr.t1 = Sr.catch(29),
                                            console.error(Sr.t1.message);
                                    case 41:
                                    case "end":
                                        return Sr.stop()
                                }
                        }, b, null, [[8, 23], [29, 38]])
                    }))()
                },
                transferToDID: function(t) {
                    var s = this;
                    return Ea(zr().mark(function h() {
                        var b, S, B, se, Z, oe;
                        return zr().wrap(function($t) {
                            for (; ; )
                                switch ($t.prev = $t.next) {
                                    case 0:
                                        if (S = s.transferTarget.replace(/\s/g, ""),
                                            S) {
                                            $t.next = 4;
                                            break
                                        }
                                        return s.transferTarget = "",
                                            $t.abrupt("return");
                                    case 4:
                                        return B = t === "warm" && s.enableWarmTransferSecondVersion,
                                            se = {
                                                type: t,
                                                taskSid: (b = s.callReservation) === null || b === void 0 || (b = b.task) === null || b === void 0 ? void 0 : b.id,
                                                targetDidNumber: s.$options.filters.E164Number(s.enableTrimTransferDID ? S : s.transferTarget, s.user.countryOrRegion),
                                                firstname: s.targetFirstname,
                                                lastname: s.targetLastname,
                                                email: s.targetEmail,
                                                originalQueueId: s.queueId,
                                                inviteeName: s.targetName
                                            },
                                        t === "blind" && (oe = s.targetFirstname || s.targetLastname ? Pr()(Z = "".concat(s.targetFirstname, " ")).call(Z, s.targetLastname) : s.$options.filters.phoneNumber(s.enableTrimTransferDID ? S : s.transferTarget, s.user.countryOrRegion),
                                            s.setTransferDetailsInStore(oe, s.transferSelectRes)),
                                            $t.prev = 7,
                                            s.updateTransferTo({
                                                target: {
                                                    name: S
                                                },
                                                isQueue: !1
                                            }),
                                            $t.next = 11,
                                            s.transferToDIDAction({
                                                options: se,
                                                isNewWarmTransfer: B,
                                                callSyncId: s.$callId()
                                            });
                                    case 11:
                                        s.setUIState({
                                            showTransferPad: !1
                                        }),
                                            $t.next = 17;
                                        break;
                                    case 14:
                                        $t.prev = 14,
                                            $t.t0 = $t.catch(7),
                                            console.error($t.t0.message);
                                    case 17:
                                    case "end":
                                        return $t.stop()
                                }
                        }, h, null, [[7, 14]])
                    }))()
                },
                cancelTransfer: function() {
                    var t = arguments
                        , s = this;
                    return Ea(zr().mark(function h() {
                        var b, S;
                        return zr().wrap(function(se) {
                            for (; ; )
                                switch (se.prev = se.next) {
                                    case 0:
                                        return b = t.length > 0 && t[0] !== void 0 ? t[0] : !1,
                                            S = b !== !0,
                                            se.prev = 2,
                                            se.next = 5,
                                            s.cancelTransferAction({
                                                callSyncId: s.$callId(),
                                                showMessage: S
                                            });
                                    case 5:
                                        s.warmTransferAborted && (s.warmTransferAborted = !1),
                                            se.next = 12;
                                        break;
                                    case 8:
                                        se.prev = 8,
                                            se.t0 = se.catch(2),
                                            console.error(se.t0.message),
                                        s.warmTransferAborted && (s.warmTransferAborted = !1);
                                    case 12:
                                    case "end":
                                        return se.stop()
                                }
                        }, h, null, [[2, 8]])
                    }))()
                },
                completeTransfer: function() {
                    var t = this;
                    return Ea(zr().mark(function s() {
                        var h, b, S;
                        return zr().wrap(function(se) {
                            for (; ; )
                                switch (se.prev = se.next) {
                                    case 0:
                                        return (h = t.transferSelectRes) !== null && h !== void 0 && h.isFlow && t.setTransferDetailsInStore(t.transferTarget),
                                            se.prev = 1,
                                            se.next = 4,
                                            t.completeTransferAction({
                                                callSyncId: t.$callId()
                                            });
                                    case 4:
                                        se.next = 12;
                                        break;
                                    case 6:
                                        se.prev = 6,
                                            se.t0 = se.catch(1),
                                            console.error(se.t0.message),
                                            S = se.t0 === null || se.t0 === void 0 || (b = se.t0.data) === null || b === void 0 ? void 0 : b.errorCode,
                                            console.error("completeTransfer errorCode:", S),
                                        S === "100018" && t.onTransferAborted();
                                    case 12:
                                    case "end":
                                        return se.stop()
                                }
                        }, s, null, [[1, 6]])
                    }))()
                },
                onTransferAborted: function() {
                    this.warmTransferAborted = !0,
                    this.transferCanceled || this.cancelTransfer(!0)
                },
                clearContactInfo: function() {
                    this.targetEmail = "",
                        this.targetFirstname = "",
                        this.targetLastname = "",
                        this.targetName = "",
                        this.targetQueue = null
                },
                onInviting: function(t) {
                    this.showAddCallPanel = !1,
                    t.type === "warm" && (this.warmConferenceParams = t,
                        this.addSubLeg({
                            inviteeName: t.invite_name
                        }),
                        this.call.updateHoldStatus({
                            holdStatus: "on"
                        }))
                },
                leaveWithoutAssign: function() {
                    var t = this;
                    return Ea(zr().mark(function s() {
                        return zr().wrap(function(b) {
                            for (; ; )
                                switch (b.prev = b.next) {
                                    case 0:
                                        return t.confirmbuttonLoading = !0,
                                            b.prev = 1,
                                            b.next = 4,
                                            t.hangUpCall(Ui.HOST_LEAVE_WITHOUT_ASSIGN);
                                    case 4:
                                        t.confirmVisible = !1,
                                            b.next = 10;
                                        break;
                                    case 7:
                                        b.prev = 7,
                                            b.t0 = b.catch(1),
                                            console.error(b.t0.message);
                                    case 10:
                                        return b.prev = 10,
                                            t.confirmbuttonLoading = !1,
                                            b.finish(10);
                                    case 13:
                                    case "end":
                                        return b.stop()
                                }
                        }, s, null, [[1, 7, 10, 13]])
                    }))()
                },
                chooseAssignAgent: function() {
                    var t, s = this;
                    if ((this === null || this === void 0 || (t = this.canAssignAgents) === null || t === void 0 ? void 0 : t.length) < 1) {
                        this.confirmVisible = !0,
                            this.confirmDanger = !0,
                            this.confirmTitle = this.$t("callbar.monitor.barge.leave"),
                            this.confirmMessage = this.$t("callbar.conference.role.leave.without.assign.message"),
                            this.confirmButtonText = this.$t("callbar.monitor.barge.leave"),
                            this.onConfirm = function() {
                                return s.leaveWithoutAssign()
                            }
                        ;
                        return
                    }
                    this.showAssignLeave = !1,
                        this.showChooseAssignAgent = !0
                },
                assignEngagement: function(t) {
                    var s = this;
                    return Ea(zr().mark(function h() {
                        var b, S, B, se, Z, oe;
                        return zr().wrap(function($t) {
                            for (; ; )
                                switch ($t.prev = $t.next) {
                                    case 0:
                                        return b = t.agent,
                                            S = t.isLeave,
                                            s.confirmbuttonLoading = !0,
                                            $t.prev = 2,
                                            Z = s.callReservation.task,
                                            oe = {
                                                is_recording: !!O()(B = [2, 4]).call(B, (se = s.$refs) === null || se === void 0 || (se = se.callActions) === null || se === void 0 ? void 0 : se.recordingStatus),
                                                session_id: Z.attributes.businessId,
                                                engagement_id: Z.attributes.engagementId,
                                                is_leave: !!S,
                                                assignee_queue_id: b.queueId,
                                                assignee_queue_name: b.queueName
                                            },
                                            $t.next = 7,
                                            s.assignCall({
                                                data: oe,
                                                current: s.currentUser,
                                                assignee: b,
                                                callSyncId: s.$callId()
                                            });
                                    case 7:
                                        s.confirmVisible = !1,
                                            $t.next = 13;
                                        break;
                                    case 10:
                                        $t.prev = 10,
                                            $t.t0 = $t.catch(2),
                                            console.error($t.t0.message);
                                    case 13:
                                        return $t.prev = 13,
                                            s.confirmbuttonLoading = !1,
                                            $t.finish(13);
                                    case 16:
                                    case "end":
                                        return $t.stop()
                                }
                        }, h, null, [[2, 10, 13, 16]])
                    }))()
                },
                handleAssign: function(t) {
                    var s = this
                        , h = t.agent
                        , b = t.isLeave;
                    this.showChooseAssignAgent = !1,
                        this.confirmVisible = !0,
                        this.confirmDanger = !1,
                        this.confirmTitle = this.$t("cci.analytics.label.assignEngagement"),
                        this.confirmMessage = b ? this.$t("callbar.conference.role.assign.modal.desc", {
                            agentName: h.name,
                            queueName: h.queueName
                        }) : this.$t("callbar.conference.role.assign.modal.notLeave.desc", {
                            agentName: h.name,
                            queueName: h.queueName
                        }),
                        this.confirmButtonText = this.$t("cci.analytics.label.assignEngagement"),
                        this.onConfirm = function() {
                            return s.assignEngagement({
                                agent: h,
                                isLeave: b
                            })
                        }
                },
                getNoteParams: function(t) {
                    var s = null
                        , h = (this === null || this === void 0 ? void 0 : this.currentActiveTask) || {}
                        , b = h.engagementId
                        , S = h.contactId
                        , B = S === void 0 ? "" : S
                        , se = h.callId
                        , Z = se === void 0 ? "" : se
                        , oe = h.businessId
                        , Wt = h.participantLegId
                        , $t = Wt === void 0 ? "" : Wt;
                    return s = {
                        engagementId: b,
                        enterId: Z,
                        participantLegId: $t,
                        contactId: B || (this === null || this === void 0 ? void 0 : this.selectedContactId) || "",
                        notes: t,
                        channelType: "PHONE",
                        sessionId: oe
                    },
                        s
                },
                getCallNotes: function() {
                    var t = this;
                    return Ea(zr().mark(function s() {
                        var h, b, S, B, se, Z;
                        return zr().wrap(function(Wt) {
                            for (; ; )
                                switch (Wt.prev = Wt.next) {
                                    case 0:
                                        return Wt.next = 2,
                                            (0,
                                                Qe.tryApiCatch)(zl, {
                                                engagementId: t.engagementId,
                                                page: 1,
                                                size: 1e3
                                            });
                                    case 2:
                                        if (b = Wt.sent,
                                            S = Wa(b, 2),
                                            B = S[0],
                                            se = S[1],
                                            !B) {
                                            Wt.next = 9;
                                            break
                                        }
                                        return t.$message(B?.errorMessage || B?.message),
                                            Wt.abrupt("return");
                                    case 9:
                                        if (se) {
                                            Wt.next = 11;
                                            break
                                        }
                                        return Wt.abrupt("return");
                                    case 11:
                                        Z = se == null || (h = se.result) === null || h === void 0 ? void 0 : h.records,
                                            en()(Z) ? t.setNotes({
                                                notes: Z,
                                                engagementId: t.engagementId
                                            }) : t.setNotes({
                                                notes: [],
                                                engagementId: t.engagementId
                                            });
                                    case 13:
                                    case "end":
                                        return Wt.stop()
                                }
                        }, s)
                    }))()
                },
                createNoteSF: function(t) {
                    var s = this;
                    return Ea(zr().mark(function h() {
                        var b, S, B, se, Z, oe;
                        return zr().wrap(function($t) {
                            for (; ; )
                                switch ($t.prev = $t.next) {
                                    case 0:
                                        if (b = t,
                                        t instanceof Object)
                                            try {
                                                b = t
                                            } catch {}
                                        if (S = s.getNoteParams(b),
                                            S) {
                                            $t.next = 5;
                                            break
                                        }
                                        return $t.abrupt("return");
                                    case 5:
                                        return $t.next = 7,
                                            (0,
                                                Qe.tryApiCatch)(Yd, S);
                                    case 7:
                                        if (B = $t.sent,
                                            se = Wa(B, 2),
                                            Z = se[0],
                                            oe = se[1],
                                            !Z) {
                                            $t.next = 14;
                                            break
                                        }
                                        return s.$message(Z?.errorMessage || Z?.message),
                                            $t.abrupt("return");
                                    case 14:
                                        if (oe) {
                                            $t.next = 16;
                                            break
                                        }
                                        return $t.abrupt("return");
                                    case 16:
                                        s.getCallNotes();
                                    case 17:
                                    case "end":
                                        return $t.stop()
                                }
                        }, h)
                    }))()
                },
                createAdditionalNote: function(t) {
                    var s = this;
                    return Ea(zr().mark(function h() {
                        var b, S, B;
                        return zr().wrap(function(Z) {
                            for (; ; )
                                switch (Z.prev = Z.next) {
                                    case 0:
                                        if (b = s?.getSettingEnabled("add-edit-note"),
                                            b) {
                                            Z.next = 3;
                                            break
                                        }
                                        return Z.abrupt("return");
                                    case 3:
                                        if (t) {
                                            Z.next = 5;
                                            break
                                        }
                                        return Z.abrupt("return");
                                    case 5:
                                        if (S = s.getCurrentEngagementNotes(s.engagementId),
                                            B = !1,
                                        S && S.length && (B = !!G()(S).call(S, function(oe) {
                                            var Wt;
                                            return oe == null || (Wt = oe.notes) === null || Wt === void 0 ? void 0 : O()(Wt).call(Wt, t)
                                        })),
                                            !(!B && t)) {
                                            Z.next = 11;
                                            break
                                        }
                                        return Z.next = 11,
                                            s.createNoteSF("".concat(t, `
`));
                                    case 11:
                                    case "end":
                                        return Z.stop()
                                }
                        }, h)
                    }))()
                },
                onSETerminateEngagementRequest: function(t) {
                    var s = t.engagementId
                        , h = t.channelType
                        , b = t.requestId;
                    s === this.callState.engagementId && !this.callState.isMonitor && h === "voice" && (Qe.monitor.dispatchMonitor({
                        engagementId: s,
                        name: "onSETerminateEngagementRequest"
                    }),
                        this.normalHangUp(),
                        Qe.eventBus.$emit("SE_TERMINATE_ENGAGEMENT_RESPONSE", {
                            status: !0,
                            requestId: b
                        }))
                }
            }),
            watch: {
                transferNumber: function() {
                    this.enableTransferWithoutSelection && (this.isZccData || this.checkIfZPNumber())
                },
                transferDetails: function(t) {
                    this.createAdditionalNote(t)
                },
                transferTarget: {
                    handler: function(t) {
                        this.tdVal = t,
                            this.resetTransferSelectRes(),
                            console.log(this.tdVal)
                    }
                },
                transferAborted: function(t, s) {
                    if (ae()(t) !== ae()(s)) {
                        console.log("transferAborted", t);
                        var h = t.businessId;
                        h && this.onTransferAborted()
                    }
                }
            },
            mounted: function() {
                this.$emit("on-call-accepted", this.callReservation),
                    this.getEnableValue("enableAicTalkMetric"),
                    Qe.eventBus.$on("SE_TERMINATE_ENGAGEMENT_REQUEST", this.onSETerminateEngagementRequest)
            },
            beforeDestroy: function() {
                Qe.eventBus.$off("SE_TERMINATE_ENGAGEMENT_REQUEST", this.onSETerminateEngagementRequest)
            }
        };
        var ya = (0,
            Ue.A)(Hl, Hn, cr, !1, null, "53c7d8fd", null);
        const Kl = ya.exports;
        var Ta = function() {
            var t = this
                , s = t._self._c;
            return s("div", {
                staticClass: "idlepanel-container"
            }, [s("div", {
                staticClass: "zm-dial-panel"
            }, [t._m(0), t._v(" "), s("div", {
                staticClass: "number-from"
            }, [s("Ellipsis", {
                attrs: {
                    content: t.selectedUserName || t.formatPhoneNumber
                }
            })], 1), t._v(" "), s("div", {
                staticClass: "number-to"
            }, [s("span", [t._v(t._s(t.$t("callbar.phone.callFor")) + " " + t._s(t.formatPhoneNumber))])]), t._v(" "), t.callReservation.type !== "outbound" ? [s("div", {
                staticClass: "cus-button-area"
            }, [s("div", [s("span", {
                staticClass: "cus-call-btns cus-btn-hangup",
                on: {
                    click: t.rejectCall
                }
            }), t._v(" "), s("div", {
                staticClass: "btn-text"
            }, [t._v(t._s(t.$t("callbar.phone.declineCall")))])]), t._v(" "), s("div", [s("span", {
                staticClass: "cus-call-btns cus-btn-accept",
                on: {
                    click: t.acceptCall
                }
            }), t._v(" "), s("div", {
                staticClass: "btn-text"
            }, [t._v(t._s(t.$t("callbar.phone.acceptCall")))])])])] : [s("div", {
                staticClass: "cus-button-area",
                staticStyle: {
                    "justify-content": "center"
                }
            }, [s("div", {
                staticClass: "cus-button"
            }, [s("span", {
                staticClass: "cus-call-btns cus-btn-hangup",
                on: {
                    click: t.cancelOutbound
                }
            }), t._v(" "), s("div", {
                staticClass: "btn-text"
            }, [t._v(t._s(t.$t("cci.common.button.cancel")))])])])]], 2)])
        }
            , Zd = [function() {
            var u = this
                , t = u._self._c;
            return t("div", {
                staticClass: "avatar-from"
            }, [t("div", {
                staticClass: "inner-circle"
            }, [t("div", {
                staticClass: "avatar-icon"
            }, [t("i", {
                staticClass: "zm-icon-user"
            })])])])
        }
        ]
            , ms = a(30824)
            , Jd = a(73680);
        function ei(u) {
            "@babel/helpers - typeof";
            return ei = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                ei(u)
        }
        function Ei() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Ei = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && ei(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(ei(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function gs(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function ys(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            gs(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            gs(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        function Ql(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function $i(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = Ql(Object(b), !0)).call(s, function(S) {
                    Xd(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = Ql(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function Xd(u, t, s) {
            return (t = Yl(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function Yl(u) {
            var t = Zl(u, "string");
            return ei(t) == "symbol" ? t : t + ""
        }
        function Zl(u, t) {
            if (ei(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (ei(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        var Bi = 5e3;
        const qd = {
            name: "RingingPanel",
            props: {
                callId: {
                    type: String,
                    required: !0
                }
            },
            mixins: [dt.A],
            data: function() {
                return {
                    handling: !1
                }
            },
            components: {
                Ellipsis: Pi.A
            },
            computed: $i($i($i($i({}, (0,
                Yt.mapGetters)({
                currentAgent: "user"
            })), (0,
                Yt.mapGetters)("coreVoice", ["callReservation"])), (0,
                Yt.mapGetters)("crm", ["getCurrentEngagementMap"])), {}, {
                formatPhoneNumber: function() {
                    return (0,
                        Jd.phoneNumber)(this.callReservation.task.attributes.from, this.currentAgent.countryOrRegion)
                },
                selectedUserName: function() {
                    var t = (0,
                        ms.getPreparationPhaseKey)() || (0,
                        ms.getCurrentActiveTaskKey)()
                        , s = this.getCurrentEngagementMap(t) || this.getCurrentEngagementMap("OUTBOUND_CALL_CRMSTORE") || {}
                        , h = s.users
                        , b = s.selectedUser
                        , S = "";
                    if (h && h.length > 0) {
                        if (b != null && b.name || b != null && b.phone)
                            return b.name || b.phone;
                        var B = h[0].name || h[0].phone;
                        if (!B && h[0].email) {
                            var se;
                            B = (se = h[0].email) === null || se === void 0 ? void 0 : se.split("@")[0]
                        }
                        B && (S = (0,
                            Qe.getUsersDisplayString)(B, h.length - 1, "or"))
                    }
                    return S
                }
            }),
            inject: ["$agent"],
            methods: $i($i({}, (0,
                Yt.mapActions)("coreVoice", {
                acceptCallAction: "acceptCall",
                rejectCallAction: "rejectCall",
                cancelOutboundAction: "cancelOutbound"
            })), {}, {
                acceptCall: function() {
                    var t = this;
                    return ys(Ei().mark(function s() {
                        var h;
                        return Ei().wrap(function(S) {
                            for (; ; )
                                switch (S.prev = S.next) {
                                    case 0:
                                        if (!t.handling) {
                                            S.next = 2;
                                            break
                                        }
                                        return S.abrupt("return");
                                    case 2:
                                        return t.handling = !0,
                                            Qe.monitor.dispatchMonitor({
                                                name: "user_click_acceptCall"
                                            }),
                                            S.prev = 4,
                                            S.next = 7,
                                            t.acceptCallAction({
                                                callSyncId: t.callId
                                            });
                                    case 7:
                                        h = S.sent,
                                            console.log("accept call res", h),
                                            t.$emit("on-call-accepted", t.callReservation),
                                            S.next = 15;
                                        break;
                                    case 12:
                                        S.prev = 12,
                                            S.t0 = S.catch(4),
                                            console.error("accept call error:", S.t0);
                                    case 15:
                                        t.handling = !1;
                                    case 16:
                                    case "end":
                                        return S.stop()
                                }
                        }, s, null, [[4, 12]])
                    }))()
                },
                rejectCall: function() {
                    var t = this;
                    return ys(Ei().mark(function s() {
                        var h, b, S, B, se;
                        return Ei().wrap(function(oe) {
                            for (; ; )
                                switch (oe.prev = oe.next) {
                                    case 0:
                                        if (!t.handling) {
                                            oe.next = 2;
                                            break
                                        }
                                        return oe.abrupt("return");
                                    case 2:
                                        if ((0,
                                            gr.Log)("rejectCall called", t.callReservation),
                                            S = t.$agent(),
                                            B = S.zpns,
                                            t.handling = !0,
                                            B.isReady) {
                                            oe.next = 8;
                                            break
                                        }
                                        return oe.next = 8,
                                            (0,
                                                Pt.once)(B, "ready", Bi).catch(function() {});
                                    case 8:
                                        return se = {
                                            taskSid: (h = t.callReservation) === null || h === void 0 ? void 0 : h.task.id,
                                            reservationSid: (b = t.callReservation) === null || b === void 0 ? void 0 : b.id,
                                            callSyncId: t.callId
                                        },
                                            Qe.monitor.dispatchMonitor({
                                                name: "user_click_rejectCall"
                                            }),
                                            oe.prev = 10,
                                            oe.next = 13,
                                            t.rejectCallAction(se);
                                    case 13:
                                        oe.next = 18;
                                        break;
                                    case 15:
                                        oe.prev = 15,
                                            oe.t0 = oe.catch(10),
                                            console.error(oe.t0.message);
                                    case 18:
                                        t.handling = !1;
                                    case 19:
                                    case "end":
                                        return oe.stop()
                                }
                        }, s, null, [[10, 15]])
                    }))()
                },
                cancelOutbound: function() {
                    var t = this;
                    return ys(Ei().mark(function s() {
                        return Ei().wrap(function(b) {
                            for (; ; )
                                switch (b.prev = b.next) {
                                    case 0:
                                        return Qe.monitor.dispatchMonitor({
                                            name: "user_click_cancelOutbound"
                                        }),
                                            b.prev = 1,
                                            b.next = 4,
                                            t.cancelOutboundAction({
                                                callSyncId: t.callId
                                            });
                                    case 4:
                                        b.next = 9;
                                        break;
                                    case 6:
                                        b.prev = 6,
                                            b.t0 = b.catch(1),
                                            console.error(b.t0.message);
                                    case 9:
                                    case "end":
                                        return b.stop()
                                }
                        }, s, null, [[1, 6]])
                    }))()
                }
            })
        };
        var ef = (0,
            Ue.A)(qd, Ta, Zd, !1, null, "f6dd5010", null);
        const tf = ef.exports;
        function io(u) {
            "@babel/helpers - typeof";
            return io = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                io(u)
        }
        function Jl(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function Xl(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = Jl(Object(b), !0)).call(s, function(S) {
                    nf(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = Jl(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function nf(u, t, s) {
            return (t = rf(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function rf(u) {
            var t = Kp(u, "string");
            return io(t) == "symbol" ? t : t + ""
        }
        function Kp(u, t) {
            if (io(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (io(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        const af = {
            name: "Call",
            mixins: [Zt.A, ar.A],
            props: {
                id: {
                    type: String,
                    required: !0
                }
            },
            computed: Xl(Xl({
                component: function() {
                    var t;
                    return ["", ((t = this.callReservation) === null || t === void 0 ? void 0 : t.type) !== "outbound" ? "RingingPanel" : "RingingPanelOutbound", "", "OnPhonePanel", ""][this.callStatus]
                }
            }, (0,
                Yt.mapGetters)("coreVoice", ["callReservation", "callStatus"])), (0,
                Yt.mapGetters)("sessionPanels", ["agentBeMonitorInfo"])),
            components: {
                RingingPanel: Qt,
                OnPhonePanel: Kl,
                RingingPanelOutbound: tf
            },
            methods: {
                cancelOutbound: function() {
                    var t;
                    (t = this.$refs) === null || t === void 0 || (t = t.call) === null || t === void 0 || t.cancelOutbound()
                },
                onCallAccepted: function(t) {
                    this.$emit("on-call-accepted", t)
                },
                onCallComing: function(t) {
                    this.$emit("in-coming-call", t)
                },
                onNextCall: function(t) {
                    this.$emit("on-next-call", t)
                }
            },
            provide: function() {
                var t = this;
                return {
                    $callId: function() {
                        return t.id
                    }
                }
            }
        };
        var of = (0,
            Ue.A)(af, Mn, U, !1, null, null, null);
        const sf = of.exports;
        var lf = function() {
            var t = this
                , s = t._self._c;
            return s("ZccDialog", {
                attrs: {
                    title: "Turn Off Microphone",
                    visible: t.visible,
                    modal: !1,
                    width: "400px",
                    "mini-screen-enlargement": !1
                }
            }, [s("span", {
                staticClass: "content"
            }, [t._v(`Your microphone will turn on again when you start your next engagement.
  `)]), t._v(" "), s("span", {
                staticClass: "dialog-footer",
                attrs: {
                    slot: "footer"
                },
                slot: "footer"
            }, [s("zm-button", {
                attrs: {
                    plain: ""
                },
                on: {
                    click: function(b) {
                        return t.$emit("close")
                    }
                }
            }, [t._v(t._s(t.$t("btn.cancel")))]), t._v(" "), s("zm-button", {
                attrs: {
                    type: "primary"
                },
                on: {
                    click: function(b) {
                        return t.$emit("turnoff")
                    }
                }
            }, [t._v("Turn Off")])], 1)])
        }
            , cf = [];
        const uf = {
            props: {
                visible: {
                    required: !0,
                    type: Boolean
                }
            },
            data: function() {
                return {}
            }
        };
        var df = (0,
            Ue.A)(uf, lf, cf, !1, null, "c864ec20", null);
        const ff = df.exports;
        var Zp = function() {
            var t = this
                , s = t._self._c;
            return s("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.show,
                    expression: "show"
                }],
                staticClass: "alert-container",
                style: {
                    top: "".concat(t.top, "px")
                }
            }, [s("div", {
                staticClass: "alert-content"
            }, [s("i", {
                staticClass: "icon-phone-alert"
            }), t._v(" "), t.reason === t.PHONE_DISCONNECT_REASON.NotSupported ? s("span", [t._v(t._s(t.$t("callbar.phone.warning.webphoneNotSupported")))]) : t.reason === t.PHONE_DISCONNECT_REASON.DeviceNotAllowed ? s("span", [t._v(t._s(t.$t("callbar.phone.error.permissionDenied")) + `
      `), s("a", {
                attrs: {
                    tabindex: "0"
                },
                on: {
                    click: t.clearPermissionCache,
                    keydown: [function(h) {
                        var b;
                        return !tn()(b = h.type).call(b, "key") && t._k(h.keyCode, "enter", 13, h.key, "Enter") ? null : t.clearPermissionCache.apply(null, arguments)
                    }
                        , function(h) {
                            var b;
                            return !tn()(b = h.type).call(b, "key") && t._k(h.keyCode, "space", 32, h.key, [" ", "Spacebar"]) ? null : t.clearPermissionCache.apply(null, arguments)
                        }
                    ]
                }
            }, [t._v(t._s(t.$t("cci.common.grantAccessToMicrophone")))])]) : t.reason === t.PHONE_DISCONNECT_REASON.DeviceNotFound ? s("span", [t._v(`
      ` + t._s(t.$t("callbar.phone.error.noDevice")) + `
      `), s("p", [s("a", {
                on: {
                    click: t.reconnect
                }
            }, [t._v(t._s(t.$t("callbar.phone.retry")))])])]) : t.reason === t.PHONE_DISCONNECT_REASON.Disconnect && t.showReConnnect ? s("span", [t._v(t._s(t.$t("callbar.phone.warning.phoneNotConnectedAndConnecting")) + `
      `), s("p", [s("a", {
                on: {
                    click: t.reconnect
                }
            }, [t._v(t._s(t.$t("callbar.phone.trynow")))])])]) : t.reason === t.PHONE_DISCONNECT_REASON.Disconnect ? s("span", [t._v(t._s(t.$t("callbar.phone.connecting")) + `
    `)]) : t.reason === t.PHONE_DISCONNECT_REASON.Deactive ? s("span", [t._v(t._s(t.$t("callbar.phone.warning.tabInactive")) + `
      `), s("p", [s("a", {
                on: {
                    click: t.reload
                }
            }, [t._v(t._s(t.$t("cci.client.error.button")))])])]) : s("span", [t._v(`
      ` + t._s(t.$t("callbar.phone.warning.phoneNotConnected")) + `
      `), s("p", [s("a", {
                on: {
                    click: t.reconnect
                }
            }, [t._v(t._s(t.$t("callbar.phone.tryAgain")))])])])])])
        }
            , pf = []
            , ql = {
            NotSupported: 1,
            DeviceNotAllowed: 2,
            DisconnectTemporarily: 3,
            Disconnect: 4,
            DeviceNotFound: 5,
            Deactive: 6
        }
            , hf = {
            Incoming: 1,
            Outbound: 2,
            Monitor: 3
        };
        function _s(u, t) {
            var s = typeof Ae() < "u" && Tt()(u) || u["@@iterator"];
            if (!s) {
                if (en()(u) || (s = vf(u)) || t && u && typeof u.length == "number") {
                    s && (u = s);
                    var h = 0
                        , b = function() {};
                    return {
                        s: b,
                        n: function() {
                            return h >= u.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: u[h++]
                            }
                        },
                        e: function(oe) {
                            throw oe
                        },
                        f: b
                    }
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
            }
            var S, B = !0, se = !1;
            return {
                s: function() {
                    s = s.call(u)
                },
                n: function() {
                    var oe = s.next();
                    return B = oe.done,
                        oe
                },
                e: function(oe) {
                    se = !0,
                        S = oe
                },
                f: function() {
                    try {
                        B || s.return == null || s.return()
                    } finally {
                        if (se)
                            throw S
                    }
                }
            }
        }
        function vf(u, t) {
            if (u) {
                var s;
                if (typeof u == "string")
                    return ec(u, t);
                var h = Ne()(s = {}.toString.call(u)).call(s, 8, -1);
                return h === "Object" && u.constructor && (h = u.constructor.name),
                    h === "Map" || h === "Set" ? rr()(u) : h === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(h) ? ec(u, t) : void 0
            }
        }
        function ec(u, t) {
            (t == null || t > u.length) && (t = u.length);
            for (var s = 0, h = Array(t); s < t; s++)
                h[s] = u[s];
            return h
        }
        var mf = document.body
            , bs = null;
        const gf = {
            props: {
                reason: {
                    type: Number,
                    required: !0
                }
            },
            data: function() {
                var t;
                return {
                    PHONE_DISCONNECT_REASON: ql,
                    showReConnnect: !1,
                    show: !1,
                    phoneDisconnectTimer: void 0,
                    phoneDisconnectedTime: 0,
                    showTimer: void 0,
                    top: (t = document) !== null && t !== void 0 && t.querySelector(".zm-notification") ? 115 : 20
                }
            },
            created: function() {
                var t = this, s;
                bs = new MutationObserver(function(h) {
                        var b = _s(h), S;
                        try {
                            for (b.s(); !(S = b.n()).done; ) {
                                var B = S.value;
                                if (B?.type === "childList") {
                                    var se = _s(B?.addedNodes), Z;
                                    try {
                                        for (se.s(); !(Z = se.n()).done; ) {
                                            var oe, Wt = Z.value;
                                            Wt != null && (oe = Wt.classList) !== null && oe !== void 0 && oe.contains("chat-notification") && (t.top += 95)
                                        }
                                    } catch (Fn) {
                                        se.e(Fn)
                                    } finally {
                                        se.f()
                                    }
                                    var $t = _s(B?.removedNodes), Yn;
                                    try {
                                        for ($t.s(); !(Yn = $t.n()).done; ) {
                                            var Qn, mn = Yn.value;
                                            mn != null && (Qn = mn.classList) !== null && Qn !== void 0 && Qn.contains("chat-notification") && (t.top -= 95),
                                            t.top < 0 && (t.top = 20)
                                        }
                                    } catch (Fn) {
                                        $t.e(Fn)
                                    } finally {
                                        $t.f()
                                    }
                                }
                            }
                        } catch (Fn) {
                            b.e(Fn)
                        } finally {
                            b.f()
                        }
                    }
                ),
                (s = bs) === null || s === void 0 || s.observe(mf, {
                    subtree: !1,
                    childList: !0,
                    attributes: !1
                })
            },
            mounted: function() {
                var t = this;
                this.showTimer = K()(function() {
                    t.show = !0
                }, 5e3)
            },
            beforeDestroy: function() {
                var t;
                clearInterval(this.phoneDisconnectTimer),
                    clearTimeout(this.showTimer),
                (t = bs) === null || t === void 0 || t.disconnect()
            },
            methods: {
                clearPermissionCache: function() {
                    var t;
                    (t = window.zoomSdk) === null || t === void 0 || t.postJsMessage({
                        functionName: "CCIUIAPI_ResetMediaDevicePermission",
                        params: {}
                    }),
                        K()(function() {
                            location.reload()
                        }, 1e3)
                },
                animate: function() {
                    var t, s = document.querySelector(".alert-container");
                    s == null || (t = s.classList) === null || t === void 0 || t.add("bounceIn");
                    var h = function() {
                        var S;
                        s == null || (S = s.classList) === null || S === void 0 || S.remove("bounceIn"),
                            s?.removeEventListener("animationend", h)
                    };
                    s?.addEventListener("animationend", h)
                },
                reconnect: function() {
                    (0,
                        gr.Log)("PhoneAlert:emit reconnect."),
                        Qe.monitor.dispatchMonitor({
                            name: "PhoneAlert:emit reconnect"
                        }),
                        this.show = !1,
                        this.$emit("reconnect")
                },
                reload: function() {
                    location.reload()
                }
            },
            watch: {
                reason: {
                    immediate: !0,
                    handler: function(t) {
                        var s = this;
                        t === ql.Disconnect ? (this.phoneDisconnectedTime = Oa()(),
                            this.phoneDisconnectTimer = al()(function() {
                                var h = Oa()() - s.phoneDisconnectedTime;
                                h > 2e4 && (s.showReConnnect = !0)
                            }, 5e3)) : (this.showReConnnect = !1,
                            clearInterval(this.phoneDisconnectTimer))
                    }
                }
            }
        };
        var yf = (0,
            Ue.A)(gf, Zp, pf, !1, null, "79e84c22", null);
        const _f = yf.exports;
        function oo(u) {
            "@babel/helpers - typeof";
            return oo = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                oo(u)
        }
        function tc(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function bf(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = tc(Object(b), !0)).call(s, function(S) {
                    Xp(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = tc(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function Xp(u, t, s) {
            return (t = Cf(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function Cf(u) {
            var t = Ef(u, "string");
            return oo(t) == "symbol" ? t : t + ""
        }
        function Ef(u, t) {
            if (oo(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (oo(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        var If = function() {
            var t = this
                , s = t._self._c;
            return s("div", {
                staticClass: "idlepanel-container",
                staticStyle: {
                    "min-height": "480px"
                }
            }, [s("div", {
                staticClass: "idlepanel"
            }, [s("div", {
                staticClass: "number"
            }, [s("contact-search", {
                ref: "contactsearch",
                attrs: {
                    "search-c-r-m-contact": "",
                    zp: t.enableSearchZPContacts,
                    addressbook: t.enableSearchAddressBookContacts,
                    label: t.$t("cci.dialPanel.enterANumber"),
                    "click-to-call": ""
                },
                on: {
                    select: t.onSelectContact,
                    input: t.clearContactInfo,
                    enter: t.handleOutboundCall
                },
                model: {
                    value: t.obcallTo,
                    callback: function(b) {
                        t.obcallTo = b
                    },
                    expression: "obcallTo"
                }
            })], 1), t._v(" "), s("key-pad", {
                staticStyle: {
                    margin: "0 auto"
                },
                on: {
                    press: t.press
                }
            }), t._v(" "), s("zm-tooltip", {
                attrs: {
                    disabled: !t.disabledOutboundBtn,
                    content: t.disabledOutboundBtnTooltip,
                    placement: "top"
                }
            }, [s("div", {
                class: {
                    call: !0,
                    disabled: t.disabledOutboundBtn
                },
                attrs: {
                    tabindex: "0",
                    role: "button",
                    "aria-label": "Call"
                },
                on: {
                    click: t.handleOutboundCall,
                    keydown: function(b) {
                        var S;
                        return !tn()(S = b.type).call(S, "key") && t._k(b.keyCode, "space", 32, b.key, [" ", "Spacebar"]) ? null : t.handleOutboundCall.apply(null, arguments)
                    }
                }
            })]), t._v(" "), t.enableNewCallerIdSelector && t.callerIdList.length > 0 ? s("new-caller-id-selector", {
                ref: "callerIdSelector"
            }) : t.enableNewCallerIdSelector ? t._e() : s("caller-id-selector", {
                ref: "callerIdSelector",
                attrs: {
                    value: t.callerid,
                    "checked-id": t.checkedId,
                    numbers: t.numbers,
                    loading: t.loadingNumbers
                },
                on: {
                    change: t.onCallerIdChange,
                    open: t.getNumbers,
                    refreshCallerNumberList: function() {
                        var b = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                        return t.getNumbers(bf({
                            needRefresh: !0
                        }, b))
                    }
                }
            })], 1)])
        }
            , qp = []
            , wf = a(4439);
        function Ii(u) {
            "@babel/helpers - typeof";
            return Ii = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                Ii(u)
        }
        function Tf(u, t) {
            return Sf(u) || rc(u, t) || Vi(u, t) || nc()
        }
        function nc() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Vi(u, t) {
            if (u) {
                var s;
                if (typeof u == "string")
                    return ti(u, t);
                var h = Ne()(s = {}.toString.call(u)).call(s, 8, -1);
                return h === "Object" && u.constructor && (h = u.constructor.name),
                    h === "Map" || h === "Set" ? rr()(u) : h === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(h) ? ti(u, t) : void 0
            }
        }
        function ti(u, t) {
            (t == null || t > u.length) && (t = u.length);
            for (var s = 0, h = Array(t); s < t; s++)
                h[s] = u[s];
            return h
        }
        function rc(u, t) {
            var s = u == null ? null : typeof Ae() < "u" && Tt()(u) || u["@@iterator"];
            if (s != null) {
                var h, b, S, B, se = [], Z = !0, oe = !1;
                try {
                    if (S = (s = s.call(u)).next,
                    t === 0) {
                        if (Object(s) !== s)
                            return;
                        Z = !1
                    } else
                        for (; !(Z = (h = S.call(s)).done) && (se.push(h.value),
                        se.length !== t); Z = !0)
                            ;
                } catch (Wt) {
                    oe = !0,
                        b = Wt
                } finally {
                    try {
                        if (!Z && s.return != null && (B = s.return(),
                        Object(B) !== B))
                            return
                    } finally {
                        if (oe)
                            throw b
                    }
                }
                return se
            }
        }
        function Sf(u) {
            if (en()(u))
                return u
        }
        function $a() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            $a = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && Ii(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(Ii(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function Cs(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function so(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            Cs(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            Cs(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        function ac(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function ua(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = ac(Object(b), !0)).call(s, function(S) {
                    ic(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = ac(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function ic(u, t, s) {
            return (t = Fi(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function Fi(u) {
            var t = oc(u, "string");
            return Ii(t) == "symbol" ? t : t + ""
        }
        function oc(u, t) {
            if (Ii(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (Ii(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        var ni = Qe.phoneUtils.voiceApi
            , Af = ni.outboundNumberList
            , Lf = ni.getLastUsedCallerId
            , Po = null;
        const Nf = {
            name: "IdlePanel",
            props: {
                phoneAlertInatance: {
                    type: Object
                }
            },
            mixins: [Zt.A, Le.A],
            setup: function() {
                var t = (0,
                    Ot.useVoiceOutboundPermission)()
                    , s = t.roleHasVoiceOutboundPermission
                    , h = (0,
                    Ot.useOutboundCaller)()
                    , b = (0,
                    Ot.usePstnCall)()
                    , S = b.useOutboundCallMeOn;
                return {
                    roleHasVoiceOutboundPermission: s,
                    caller: h,
                    isAutomaticCallerId: h.isAutomaticCallerId,
                    useOutboundCallMeOn: S
                }
            },
            data: function() {
                return {
                    callerid: "",
                    outboundQueueId: "",
                    outboundQueueName: "",
                    numbers: [],
                    queues: [],
                    obcallTo: "",
                    obCallEmail: "",
                    crmOutboundContext: {},
                    obCallFirstname: "",
                    obCallLastname: "",
                    checkedId: "",
                    loadingNumbers: !1,
                    outbounding: !1
                }
            },
            components: {
                KeyPad: Yr,
                callerIdSelector: Dt,
                NewCallerIdSelector: Ot.CallerIdSelector,
                ContactSearch: Ot.ContactSearch
            },
            methods: ua(ua(ua({}, (0,
                Yt.mapActions)("crm", ["setContactsMap"])), (0,
                Yt.mapActions)("coreVoice", ["outboundCall", "setLastUsedCallerInfo", "setCallerIdList"])), {}, {
                press: function(t) {
                    this.clearContactInfo(),
                        this.obcallTo += t
                },
                getNumbers: function() {
                    var t = arguments
                        , s = this;
                    return so($a().mark(function h() {
                        var b, S, B, se, Z, oe, Wt, $t, Yn;
                        return $a().wrap(function(mn) {
                            for (; ; )
                                switch (mn.prev = mn.next) {
                                    case 0:
                                        if (b = t.length > 0 && t[0] !== void 0 ? t[0] : {},
                                            !s.enableNewCallerIdSelector) {
                                            mn.next = 3;
                                            break
                                        }
                                        return mn.abrupt("return", s.caller.getNumbers());
                                    case 3:
                                        if (S = !!b.needRefresh,
                                            !(!S && s.callerid)) {
                                            mn.next = 6;
                                            break
                                        }
                                        return mn.abrupt("return");
                                    case 6:
                                        if (!(S || !s.numbers.length)) {
                                            mn.next = 21;
                                            break
                                        }
                                        return s.loadingNumbers = !0,
                                            mn.prev = 8,
                                            mn.next = 11,
                                            Af();
                                    case 11:
                                        B = mn.sent,
                                            mn.next = 17;
                                        break;
                                    case 14:
                                        return mn.prev = 14,
                                            mn.t0 = mn.catch(8),
                                            mn.abrupt("return");
                                    case 17:
                                        return mn.prev = 17,
                                            s.loadingNumbers = !1,
                                            mn.finish(17);
                                    case 20:
                                        s.numbers = B.data.result;
                                    case 21:
                                        s.$store.dispatch("voice/setOutboundNumbers", s.numbers),
                                            s.setCallerIdList(s.numbers),
                                            s.numbers.length ? (Wt = G()(se = s.numbers).call(se, function(Fn) {
                                                return Fn.defaultQueue
                                            }) || s.numbers[0],
                                            S && b.fromZpns && ($t = G()(Yn = s.numbers).call(Yn, function(Fn) {
                                                var Vt, Ir;
                                                return Fn.numberId === ((Vt = b.numberInfo) === null || Vt === void 0 ? void 0 : Vt.phoneNumberId) && Fn.queueId === ((Ir = b.numberInfo) === null || Ir === void 0 ? void 0 : Ir.queueId)
                                            })),
                                                s.onCallerIdChange((Z = $t) !== null && Z !== void 0 ? Z : Wt),
                                                s.setLastUsedCallerInfo((oe = $t) !== null && oe !== void 0 ? oe : Wt)) : (s.$getMenuTab && Qe.eMenuName.phonePanel === s.$getMenuTab() && s.$initMenuTab && s.$initMenuTab(!1),
                                                s.setLastUsedCallerInfo(null),
                                                s.callerid = "",
                                                s.outboundQueueId = "",
                                                s.outboundEnableUpgradeToVideo = !1,
                                                s.checkedId = "");
                                    case 24:
                                    case "end":
                                        return mn.stop()
                                }
                        }, h, null, [[8, 14, 17, 20]])
                    }))()
                },
                performCrmActions: function(t) {
                    var s = this;
                    return so($a().mark(function h() {
                        var b, S, B, se, Z, oe, Wt, $t;
                        return $a().wrap(function(Qn) {
                            for (; ; )
                                switch (Qn.prev = Qn.next) {
                                    case 0:
                                        return b = t.crmContext,
                                            S = t.engagementId,
                                            B = t.opts,
                                            se = t.taskSid,
                                            Z = t.channelSid,
                                            Qn.next = 3,
                                            (0,
                                                zt.getCRMInstance)();
                                    case 3:
                                        oe = Qn.sent,
                                        oe != null && oe.beforeMakingOutBoundCall && (b?.id && s.$store.dispatch("crm/setSelectedUser", {
                                            engagementId: S,
                                            userId: b?.id,
                                            entity: b?.entity
                                        }),
                                            Wt = ua(ua({}, B), {}, {
                                                engagementId: S,
                                                taskSid: se,
                                                channelSid: Z,
                                                channelType: "Voice"
                                            }),
                                            oe.beforeMakingOutBoundCall(Wt)),
                                        oe != null && oe.obCallStarted && ($t = ua(ua({}, B), {}, {
                                            engagementId: S
                                        }),
                                            oe.obCallStarted($t));
                                    case 6:
                                    case "end":
                                        return Qn.stop()
                                }
                        }, h)
                    }))()
                },
                handleOutboundCall: function(t) {
                    var s = this;
                    return so($a().mark(function h() {
                        var b, S, B, se, Z, oe, Wt, $t, Yn, Qn, mn, Fn, Vt, Ir, Cr, On, Br, Sr, jr, dr, Kr, Ar, ta, Qr, ea, Wr;
                        return $a().wrap(function(Er) {
                            for (; ; )
                                switch (Er.prev = Er.next) {
                                    case 0:
                                        if (Wt = s.crmOutboundContext,
                                            $t = !!(t != null && t.isSMS),
                                            !(!$t && !s.roleHasVoiceOutboundPermission)) {
                                            Er.next = 4;
                                            break
                                        }
                                        return Er.abrupt("return");
                                    case 4:
                                        if (!(!$t && s.enableNewCallerIdSelector && !s.callerIdList.length)) {
                                            Er.next = 6;
                                            break
                                        }
                                        return Er.abrupt("return");
                                    case 6:
                                        if (!s.outbounding) {
                                            Er.next = 8;
                                            break
                                        }
                                        return Er.abrupt("return");
                                    case 8:
                                        if (s.$refs.contactsearch.cancel(),
                                            Yn = s.caller.outboundCaller,
                                            Qn = s.enableNewCallerIdSelector ? (b = (S = Yn.value) === null || S === void 0 ? void 0 : S.callerid) !== null && b !== void 0 ? b : "" : s.callerid,
                                            mn = s.enableNewCallerIdSelector ? (B = (se = Yn.value) === null || se === void 0 ? void 0 : se.outboundQueueId) !== null && B !== void 0 ? B : "" : s.outboundQueueId,
                                            Fn = s.enableNewCallerIdSelector ? (Z = (oe = Yn.value) === null || oe === void 0 ? void 0 : oe.outboundQueueName) !== null && Z !== void 0 ? Z : "" : s.outboundQueueName,
                                            Vt = s.enableNewCallerIdSelector ? Yn.value.outboundEnableUpgradeToVideo : s.outboundEnableUpgradeToVideo,
                                            Ir = $t ? t.callFrom : Qn,
                                        Ir !== "") {
                                            Er.next = 18;
                                            break
                                        }
                                        return s.$message.warning(s.$t("callbar.phone.warning.noCallerID")),
                                            Er.abrupt("return");
                                    case 18:
                                        if (!(!mn && s.queues.length && !$t)) {
                                            Er.next = 21;
                                            break
                                        }
                                        return s.$message.warning(s.$t("callbar.phone.warning.noQueueID")),
                                            Er.abrupt("return");
                                    case 21:
                                        if (!(s.obcallTo.replace(/\s/g, "") === "" && !$t)) {
                                            Er.next = 24;
                                            break
                                        }
                                        return s.$message.warning(s.$t("callbar.phone.warning.invalidNumber")),
                                            Er.abrupt("return");
                                    case 24:
                                        return Qe.monitor.dispatchMonitor({
                                            name: "user_click_outboundCall"
                                        }),
                                            Cr = $t ? t.callTo.replace(/\s/g, "") : s.obcallTo.replace(/\s/g, ""),
                                            On = s.currentAgent.countryOrRegion,
                                            Br = $t ? ua(ua({}, t), {}, {
                                                callTo: s.$options.filters.E164Number(t.callTo, On),
                                                isEnableUpgradeToVideo: Vt
                                            }) : {
                                                callFrom: Ir,
                                                callTo: s.$options.filters.E164Number(Cr, On),
                                                queueId: mn,
                                                queueName: Fn,
                                                isEnableUpgradeToVideo: Vt,
                                                firstname: s.obCallFirstname,
                                                lastname: s.obCallLastname,
                                                email: s.obCallEmail,
                                                isAutomaticCallerId: s.isAutomaticCallerId,
                                                clientLanguage: window.__global_lang__ || "en-US"
                                            },
                                            Br.agentOutboundType = s.useOutboundCallMeOn ? Qe.OUTBOUND_TYPES.pstn : Qe.OUTBOUND_TYPES.normal,
                                            (0,
                                                gr.Log)("makeOutboundCall apps crm", Br),
                                            s.outbounding = !0,
                                            Er.prev = 31,
                                            Er.next = 34,
                                            s.outboundCall(Br);
                                    case 34:
                                        Kr = Er.sent,
                                            dr = (Ar = Kr) === null || Ar === void 0 ? void 0 : Ar.engagementId,
                                            s.$emit("on-outbound-call", Cr, {
                                                from: Cr,
                                                engagementId: dr,
                                                crmOutboundContext: ua({}, Wt)
                                            }),
                                            console.log("makeOutboundCall: ", Kr),
                                            Sr = (ta = Kr) === null || ta === void 0 ? void 0 : ta.taskSid,
                                            jr = (Qr = Kr) === null || Qr === void 0 ? void 0 : Qr.channelSid,
                                            s.$store.dispatch("crm/swapOutboundContactsMap", {
                                                engagementId: dr
                                            }),
                                            console.log("outboundCall res", dr),
                                        dr && s.performCrmActions({
                                            crmContext: Wt,
                                            engagementId: dr,
                                            opts: Br,
                                            taskSid: Sr,
                                            channelSid: jr
                                        }),
                                            Er.next = 50;
                                        break;
                                    case 45:
                                        Er.prev = 45,
                                            Er.t0 = Er.catch(31),
                                            console.log("makeOutboundCall error", Er.t0),
                                        (Er.t0 === null || Er.t0 === void 0 || (ea = Er.t0.data) === null || ea === void 0 ? void 0 : ea.errorCode) === "100026" && (s.nativeNotify(s.$t("callbar.phone.callerid.invalid"), "", {}, 8e3),
                                            s.getNumbers({
                                                needRefresh: !0
                                            })),
                                        s.showPhoneAlert && (s == null || (Wr = s.phoneAlertInatance) === null || Wr === void 0 || (Wr = Wr.$children[0]) === null || Wr === void 0 || Wr.animate());
                                    case 50:
                                        return Er.prev = 50,
                                            s.outbounding = !1,
                                            s.setContactsMap({
                                                engagementId: "OUTBOUND_CALL_CRMSTORE",
                                                users: []
                                            }),
                                            Er.finish(50);
                                    case 54:
                                        return Er.abrupt("return", Kr);
                                    case 55:
                                    case "end":
                                        return Er.stop()
                                }
                        }, h, null, [[31, 45, 50, 54]])
                    }))()
                },
                onCallerIdChange: function(t) {
                    this.callerid = t.number,
                        this.outboundQueueId = t.queueId,
                        this.outboundEnableUpgradeToVideo = t.enableUpgradeToVideo,
                        this.outboundQueueName = t.queueName,
                        this.checkedId = this.getSelfId(t)
                },
                getSelfId: function(t) {
                    var s = t.queueId
                        , h = t.number
                        , b = t.studioId;
                    return s + h + b
                },
                onSelectContact: function(t) {
                    var s = (0,
                        ms.getCRM)();
                    if (s === wf.CRMS.Salesforce && t.isZpContactNumber && (this.crmOutboundContext = t),
                        t.isCRMContact) {
                        var h, b;
                        this.crmOutboundContext = t;
                        var S = t.entity || t.userEntity
                            , B = (h = t.children) === null || h === void 0 ? void 0 : h[0]
                            , se = "children"in t ? B?.rawValue || B?.value : t.rawValue || t.value;
                        this.setContactsMap({
                            engagementId: "OUTBOUND_CALL_CRMSTORE",
                            users: [{
                                id: t.id,
                                name: t.name,
                                phone: se,
                                email: t.email || ((b = t.emails) === null || b === void 0 ? void 0 : b[0]),
                                emails: t.emails,
                                entity: S,
                                userEntity: S,
                                avatar: t.avatar,
                                avatarStyles: t.avatarStyles
                            }]
                        })
                    }
                    if (this.obCallEmail = t.email,
                        this.obCallFirstname = t.firstname,
                        this.obCallLastname = t.lastname,
                        t.isNumber)
                        return this.obcallTo = t.value,
                            this.handleOutboundCall();
                    var Z = t.children[0];
                    if (Z)
                        return this.obcallTo = Z.value,
                            this.handleOutboundCall()
                },
                clearContactInfo: function() {
                    this.obCallEmail = "",
                        this.obCallFirstname = "",
                        this.obCallLastname = "",
                        this.crmOutboundContext = {}
                },
                clearInput: function() {
                    var t;
                    (t = this.$refs.contactsearch) === null || t === void 0 || t.onclear()
                },
                showCallerIdChangedNotification: function() {
                    Po && (Po.close(),
                        Po = null),
                        Po = this.nativeNotify(this.$t("callbar.phone.default.callerid.hasBeenChanged"), "", {}, 8e3)
                },
                getLastUsedCallerId: function() {
                    var t = this;
                    return so($a().mark(function s() {
                        var h, b, S, B, se, Z, oe, Wt, $t, Yn;
                        return $a().wrap(function(mn) {
                            for (; ; )
                                switch (mn.prev = mn.next) {
                                    case 0:
                                        if (!t.enableNewCallerIdSelector) {
                                            mn.next = 2;
                                            break
                                        }
                                        return mn.abrupt("return", t.caller.getLastUsedCallerId());
                                    case 2:
                                        return t.loadingNumbers = !0,
                                            mn.next = 5,
                                            (0,
                                                Qe.tryApiCatch)(Lf, {
                                                channel: Qe.QUEUE_CHANNEL_TYPE.VOICE
                                            });
                                    case 5:
                                        if (b = mn.sent,
                                            S = Tf(b, 2),
                                            B = S[0],
                                            se = S[1],
                                            !B) {
                                            mn.next = 12;
                                            break
                                        }
                                        return t.loadingNumbers = !1,
                                            mn.abrupt("return", t.$message.error(B));
                                    case 12:
                                        t.loadingNumbers = !1,
                                            Z = G()(h = t.numbers).call(h, function(Fn) {
                                                return Fn.defaultQueue
                                            }) || t.numbers[0],
                                            t.numbers.length && se !== null && se !== void 0 && se.phoneNumberId ? (Wt = G()(oe = t.numbers).call(oe, function(Fn) {
                                                return Fn.numberId === se.phoneNumberId && Fn.queueId === se.queueId
                                            }),
                                                Wt ? (t.onCallerIdChange(Wt),
                                                    t.setLastUsedCallerInfo(Wt)) : (t.showCallerIdChangedNotification(),
                                                ($t = t.$refs.callerIdSelector) === null || $t === void 0 || $t.updateOutboundCallerId(Z))) : se || (Yn = t.$refs.callerIdSelector) === null || Yn === void 0 || Yn.updateOutboundCallerId(Z);
                                    case 15:
                                    case "end":
                                        return mn.stop()
                                }
                        }, s)
                    }))()
                },
                initCallerId: function() {
                    var t = this;
                    return so($a().mark(function s() {
                        return $a().wrap(function(b) {
                            for (; ; )
                                switch (b.prev = b.next) {
                                    case 0:
                                        return b.next = 2,
                                            t.getNumbers();
                                    case 2:
                                        return b.next = 4,
                                            t.getLastUsedCallerId();
                                    case 4:
                                    case "end":
                                        return b.stop()
                                }
                        }, s)
                    }))()
                }
            }),
            computed: ua(ua(ua(ua(ua(ua({}, (0,
                Yt.mapGetters)("voice", ["outboundNumbers"])), (0,
                Yt.mapGetters)({
                currentAgent: "user",
                nacosConfig: "nacosConfig"
            })), (0,
                Yt.mapGetters)({
                obNeedToCallNumber: "voice/obNeedToCallNumber",
                clickToDialSelectedUser: "crm/clickToDialSelectedUser"
            })), (0,
                Yt.mapGetters)("client", ["isSupportGetCapabilities"])), (0,
                Yt.mapGetters)("coreVoice", ["phoneContainerLoading", "showPhoneAlert", "lastUsedCallerInfo", "callerIdList"])), {}, {
                enableNewCallerIdSelector: function() {
                    var t = this.nacosConfig.enableNewCallerIdSelectorForCTI;
                    return t ? t === "true" : !0
                },
                enableSearchZPContacts: function() {
                    var t, s;
                    return ((t = this.account) === null || t === void 0 ? void 0 : t.enableSearchZPContacts) && ((s = this.account) === null || s === void 0 ? void 0 : s.enableTransferToZpUsersQueues)
                },
                enableSearchAddressBookContacts: function() {
                    var t;
                    return (t = this.account) === null || t === void 0 ? void 0 : t.enableSearchAddressBookContacts
                },
                callerList: function() {
                    return this.callerIdList.length ? this.callerIdList : this.numbers
                },
                disabledOutboundBtn: function() {
                    return !this.roleHasVoiceOutboundPermission || !(this.callerIdList && this.callerIdList.length)
                },
                disabledOutboundBtnTooltip: function() {
                    return this.roleHasVoiceOutboundPermission ? this.callerIdList.length ? "" : this.$t("cci.home.disableOutbound") : this.$t("cci.dialPanel.hasNoOutboundPermission")
                }
            }),
            watch: {
                obNeedToCallNumber: function(t, s) {
                    console.log("catch obNeedToCallNumber in idle panel"),
                    t !== "" && s === "" && (this.obcallTo = t,
                        this.handleOutboundCall(),
                        this.$store.dispatch("voice/dialOutboundCall", ""))
                },
                clickToDialSelectedUser: function(t) {
                    t && t.to === "CALL" && t.number && (this.obcallTo = t.number,
                        this.$store.dispatch("crm/setClickToDialSelectedUser", {}))
                },
                lastUsedCallerInfo: function(t) {
                    var s, h = G()(s = this.callerList).call(s, function(b) {
                        var S = b.numberId
                            , B = b.queueId;
                        return S === t?.numberId && B === t?.queueId
                    });
                    h && this.onCallerIdChange(h)
                }
            },
            mounted: function() {
                this.initCallerId()
            },
            inject: {
                $initMenuTab: {
                    name: "$initMenuTab",
                    default: null
                },
                $getMenuTab: {
                    name: "$getMenuTab",
                    default: null
                }
            }
        };
        var Mf = (0,
            Ue.A)(Nf, If, qp, !1, null, "c4a774c4", null);
        const Pf = Mf.exports;
        function wi(u) {
            "@babel/helpers - typeof";
            return wi = typeof Ae() == "function" && typeof Re() == "symbol" ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && typeof Ae() == "function" && t.constructor === Ae() && t !== Ae().prototype ? "symbol" : typeof t
                }
                ,
                wi(u)
        }
        function kf(u) {
            return xf(u) || Of(u) || Is(u) || Es()
        }
        function Es() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Is(u, t) {
            if (u) {
                var s;
                if (typeof u == "string")
                    return Wi(u, t);
                var h = Ne()(s = {}.toString.call(u)).call(s, 8, -1);
                return h === "Object" && u.constructor && (h = u.constructor.name),
                    h === "Map" || h === "Set" ? rr()(u) : h === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(h) ? Wi(u, t) : void 0
            }
        }
        function Of(u) {
            if (typeof Ae() < "u" && Tt()(u) != null || u["@@iterator"] != null)
                return rr()(u)
        }
        function xf(u) {
            if (en()(u))
                return Wi(u)
        }
        function Wi(u, t) {
            (t == null || t > u.length) && (t = u.length);
            for (var s = 0, h = Array(t); s < t; s++)
                h[s] = u[s];
            return h
        }
        function la() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            la = function() {
                return t
            }
            ;
            var u, t = {}, s = Object.prototype, h = s.hasOwnProperty, b = ne() || function(m, d, v) {
                m[d] = v.value
            }
                , S = typeof Ae() == "function" ? Ae() : {}, B = S.iterator || "@@iterator", se = S.asyncIterator || "@@asyncIterator", Z = S.toStringTag || "@@toStringTag";
            function oe(m, d, v) {
                return ne()(m, d, {
                    value: v,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    m[d]
            }
            try {
                oe({}, "")
            } catch {
                oe = function(v, C, L) {
                    return v[C] = L
                }
            }
            function Wt(m, d, v, C) {
                var L = d && d.prototype instanceof Ir ? d : Ir
                    , w = mt()(L.prototype)
                    , ge = new $r(C || []);
                return b(w, "_invoke", {
                    value: ta(m, v, ge)
                }),
                    w
            }
            function $t(m, d, v) {
                try {
                    return {
                        type: "normal",
                        arg: m.call(d, v)
                    }
                } catch (C) {
                    return {
                        type: "throw",
                        arg: C
                    }
                }
            }
            t.wrap = Wt;
            var Yn = "suspendedStart"
                , Qn = "suspendedYield"
                , mn = "executing"
                , Fn = "completed"
                , Vt = {};
            function Ir() {}
            function Cr() {}
            function On() {}
            var Br = {};
            oe(Br, B, function() {
                return this
            });
            var Sr = ve()
                , jr = Sr && Sr(Sr(Er([])));
            jr && jr !== s && h.call(jr, B) && (Br = jr);
            var dr = On.prototype = Ir.prototype = mt()(Br);
            function Kr(m) {
                var d;
                ie()(d = ["next", "throw", "return"]).call(d, function(v) {
                    oe(m, v, function(C) {
                        return this._invoke(v, C)
                    })
                })
            }
            function Ar(m, d) {
                function v(L, w, ge, qe) {
                    var ft = $t(m[L], m, w);
                    if (ft.type !== "throw") {
                        var Xn = ft.arg
                            , Un = Xn.value;
                        return Un && wi(Un) == "object" && h.call(Un, "__await") ? d.resolve(Un.__await).then(function(er) {
                            v("next", er, ge, qe)
                        }, function(er) {
                            v("throw", er, ge, qe)
                        }) : d.resolve(Un).then(function(er) {
                            Xn.value = er,
                                ge(Xn)
                        }, function(er) {
                            return v("throw", er, ge, qe)
                        })
                    }
                    qe(ft.arg)
                }
                var C;
                b(this, "_invoke", {
                    value: function(w, ge) {
                        function qe() {
                            return new d(function(ft, Xn) {
                                    v(w, ge, ft, Xn)
                                }
                            )
                        }
                        return C = C ? C.then(qe, qe) : qe()
                    }
                })
            }
            function ta(m, d, v) {
                var C = Yn;
                return function(L, w) {
                    if (C === mn)
                        throw Error("Generator is already running");
                    if (C === Fn) {
                        if (L === "throw")
                            throw w;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (v.method = L,
                             v.arg = w; ; ) {
                        var ge = v.delegate;
                        if (ge) {
                            var qe = Qr(ge, v);
                            if (qe) {
                                if (qe === Vt)
                                    continue;
                                return qe
                            }
                        }
                        if (v.method === "next")
                            v.sent = v._sent = v.arg;
                        else if (v.method === "throw") {
                            if (C === Yn)
                                throw C = Fn,
                                    v.arg;
                            v.dispatchException(v.arg)
                        } else
                            v.method === "return" && v.abrupt("return", v.arg);
                        C = mn;
                        var ft = $t(m, d, v);
                        if (ft.type === "normal") {
                            if (C = v.done ? Fn : Qn,
                            ft.arg === Vt)
                                continue;
                            return {
                                value: ft.arg,
                                done: v.done
                            }
                        }
                        ft.type === "throw" && (C = Fn,
                            v.method = "throw",
                            v.arg = ft.arg)
                    }
                }
            }
            function Qr(m, d) {
                var v = d.method
                    , C = m.iterator[v];
                if (C === u)
                    return d.delegate = null,
                    v === "throw" && m.iterator.return && (d.method = "return",
                        d.arg = u,
                        Qr(m, d),
                    d.method === "throw") || v !== "return" && (d.method = "throw",
                        d.arg = new TypeError("The iterator does not provide a '" + v + "' method")),
                        Vt;
                var L = $t(C, m.iterator, d.arg);
                if (L.type === "throw")
                    return d.method = "throw",
                        d.arg = L.arg,
                        d.delegate = null,
                        Vt;
                var w = L.arg;
                return w ? w.done ? (d[m.resultName] = w.value,
                    d.next = m.nextLoc,
                d.method !== "return" && (d.method = "next",
                    d.arg = u),
                    d.delegate = null,
                    Vt) : w : (d.method = "throw",
                    d.arg = new TypeError("iterator result is not an object"),
                    d.delegate = null,
                    Vt)
            }
            function ea(m) {
                var d = {
                    tryLoc: m[0]
                };
                1 in m && (d.catchLoc = m[1]),
                2 in m && (d.finallyLoc = m[2],
                    d.afterLoc = m[3]),
                    this.tryEntries.push(d)
            }
            function Wr(m) {
                var d = m.completion || {};
                d.type = "normal",
                    delete d.arg,
                    m.completion = d
            }
            function $r(m) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(m).call(m, ea, this),
                    this.reset(!0)
            }
            function Er(m) {
                if (m || m === "") {
                    var d = m[B];
                    if (d)
                        return d.call(m);
                    if (typeof m.next == "function")
                        return m;
                    if (!isNaN(m.length)) {
                        var v = -1
                            , C = function L() {
                            for (; ++v < m.length; )
                                if (h.call(m, v))
                                    return L.value = m[v],
                                        L.done = !1,
                                        L;
                            return L.value = u,
                                L.done = !0,
                                L
                        };
                        return C.next = C
                    }
                }
                throw new TypeError(wi(m) + " is not iterable")
            }
            return Cr.prototype = On,
                b(dr, "constructor", {
                    value: On,
                    configurable: !0
                }),
                b(On, "constructor", {
                    value: Cr,
                    configurable: !0
                }),
                Cr.displayName = oe(On, Z, "GeneratorFunction"),
                t.isGeneratorFunction = function(m) {
                    var d = typeof m == "function" && m.constructor;
                    return !!d && (d === Cr || (d.displayName || d.name) === "GeneratorFunction")
                }
                ,
                t.mark = function(m) {
                    return pt() ? pt()(m, On) : (m.__proto__ = On,
                        oe(m, Z, "GeneratorFunction")),
                        m.prototype = mt()(dr),
                        m
                }
                ,
                t.awrap = function(m) {
                    return {
                        __await: m
                    }
                }
                ,
                Kr(Ar.prototype),
                oe(Ar.prototype, se, function() {
                    return this
                }),
                t.AsyncIterator = Ar,
                t.async = function(m, d, v, C, L) {
                    L === void 0 && (L = Ce());
                    var w = new Ar(Wt(m, d, v, C),L);
                    return t.isGeneratorFunction(d) ? w : w.next().then(function(ge) {
                        return ge.done ? ge.value : w.next()
                    })
                }
                ,
                Kr(dr),
                oe(dr, Z, "Generator"),
                oe(dr, B, function() {
                    return this
                }),
                oe(dr, "toString", function() {
                    return "[object Generator]"
                }),
                t.keys = function(m) {
                    var d = Object(m)
                        , v = [];
                    for (var C in d)
                        v.push(C);
                    return Ke()(v).call(v),
                        function L() {
                            for (; v.length; ) {
                                var w = v.pop();
                                if (w in d)
                                    return L.value = w,
                                        L.done = !1,
                                        L
                            }
                            return L.done = !0,
                                L
                        }
                }
                ,
                t.values = Er,
                $r.prototype = {
                    constructor: $r,
                    reset: function(d) {
                        var v;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = u,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = u,
                            ie()(v = this.tryEntries).call(v, Wr),
                            !d)
                            for (var C in this)
                                C.charAt(0) === "t" && h.call(this, C) && !isNaN(+Ne()(C).call(C, 1)) && (this[C] = u)
                    },
                    stop: function() {
                        this.done = !0;
                        var d = this.tryEntries[0].completion;
                        if (d.type === "throw")
                            throw d.arg;
                        return this.rval
                    },
                    dispatchException: function(d) {
                        if (this.done)
                            throw d;
                        var v = this;
                        function C(Xn, Un) {
                            return ge.type = "throw",
                                ge.arg = d,
                                v.next = Xn,
                            Un && (v.method = "next",
                                v.arg = u),
                                !!Un
                        }
                        for (var L = this.tryEntries.length - 1; L >= 0; --L) {
                            var w = this.tryEntries[L]
                                , ge = w.completion;
                            if (w.tryLoc === "root")
                                return C("end");
                            if (w.tryLoc <= this.prev) {
                                var qe = h.call(w, "catchLoc")
                                    , ft = h.call(w, "finallyLoc");
                                if (qe && ft) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0);
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                } else if (qe) {
                                    if (this.prev < w.catchLoc)
                                        return C(w.catchLoc, !0)
                                } else {
                                    if (!ft)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < w.finallyLoc)
                                        return C(w.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(d, v) {
                        for (var C = this.tryEntries.length - 1; C >= 0; --C) {
                            var L = this.tryEntries[C];
                            if (L.tryLoc <= this.prev && h.call(L, "finallyLoc") && this.prev < L.finallyLoc) {
                                var w = L;
                                break
                            }
                        }
                        w && (d === "break" || d === "continue") && w.tryLoc <= v && v <= w.finallyLoc && (w = null);
                        var ge = w ? w.completion : {};
                        return ge.type = d,
                            ge.arg = v,
                            w ? (this.method = "next",
                                this.next = w.finallyLoc,
                                Vt) : this.complete(ge)
                    },
                    complete: function(d, v) {
                        if (d.type === "throw")
                            throw d.arg;
                        return d.type === "break" || d.type === "continue" ? this.next = d.arg : d.type === "return" ? (this.rval = this.arg = d.arg,
                            this.method = "return",
                            this.next = "end") : d.type === "normal" && v && (this.next = v),
                            Vt
                    },
                    finish: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.finallyLoc === d)
                                return this.complete(C.completion, C.afterLoc),
                                    Wr(C),
                                    Vt
                        }
                    },
                    catch: function(d) {
                        for (var v = this.tryEntries.length - 1; v >= 0; --v) {
                            var C = this.tryEntries[v];
                            if (C.tryLoc === d) {
                                var L = C.completion;
                                if (L.type === "throw") {
                                    var w = L.arg;
                                    Wr(C)
                                }
                                return w
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(d, v, C) {
                        return this.delegate = {
                            iterator: Er(d),
                            resultName: v,
                            nextLoc: C
                        },
                        this.method === "next" && (this.arg = u),
                            Vt
                    }
                },
                t
        }
        function ko(u, t, s, h, b, S, B) {
            try {
                var se = u[S](B)
                    , Z = se.value
            } catch (oe) {
                return void s(oe)
            }
            se.done ? t(Z) : Ce().resolve(Z).then(h, b)
        }
        function Ba(u) {
            return function() {
                var t = this
                    , s = arguments;
                return new (Ce())(function(h, b) {
                        var S = u.apply(t, s);
                        function B(Z) {
                            ko(S, h, b, B, se, "next", Z)
                        }
                        function se(Z) {
                            ko(S, h, b, B, se, "throw", Z)
                        }
                        B(void 0)
                    }
                )
            }
        }
        function sc(u, t) {
            var s = D()(u);
            if (x()) {
                var h = x()(u);
                t && (h = k()(h).call(h, function(b) {
                    return q()(u, b).enumerable
                })),
                    s.push.apply(s, h)
            }
            return s
        }
        function Ti(u) {
            for (var t = 1; t < arguments.length; t++) {
                var s, h, b = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ie()(s = sc(Object(b), !0)).call(s, function(S) {
                    lc(u, S, b[S])
                }) : Oe() ? at()(u, Oe()(b)) : ie()(h = sc(Object(b))).call(h, function(S) {
                    ne()(u, S, q()(b, S))
                })
            }
            return u
        }
        function lc(u, t, s) {
            return (t = ws(t))in u ? ne()(u, t, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : u[t] = s,
                u
        }
        function ws(u) {
            var t = Ia(u, "string");
            return wi(t) == "symbol" ? t : t + ""
        }
        function Ia(u, t) {
            if (wi(u) != "object" || !u)
                return u;
            var s = u[ee()];
            if (s !== void 0) {
                var h = s.call(u, t || "default");
                if (wi(h) != "object")
                    return h;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (t === "string" ? String : Number)(u)
        }
        var cc = Qe.phoneUtils.SUB_EVENT_LIST;
        const uc = {
            name: "DialPanel",
            mixins: [ar.A, Zt.A, Lt.A],
            data: function() {
                return {
                    closeDeviceConfirmVisible: !1,
                    phoneAlertInatance: null,
                    phoneEnded: !1,
                    smsToVoiceNotify: null,
                    channelInstance: null
                }
            },
            inject: ["$getCapabilities", "$handleInitPhone", "$getChannelInstance"],
            computed: Ti({
                component: function() {
                    return ["IdlePanel", "RingingPanel", "", "OnPhonePanel", "onListeningPanel"][this.callStatus]
                }
            }, (0,
                Yt.mapGetters)("coreVoice", ["phoneDisconnectReason", "showPhoneAlert", "phoneDisconnected", "currentCall", "callStatus", "phoneContainerLoading", "callReservation", "showUpgradeToVoiceNotify"])),
            components: {
                call: sf,
                IdlePanel: Pf,
                closeDeviceConfirm: ff
            },
            created: function() {
                var t = this, s, h = new (An())({
                    i18n: gn.i18n,
                    render: function(B) {
                        return t.showPhoneAlert && !t.currentCall ? B(_f, {
                            ref: "phoneAlert",
                            props: {
                                reason: t.phoneDisconnectReason
                            },
                            on: {
                                reconnect: function() {
                                    t.$handleInitPhone()
                                }
                            }
                        }) : null
                    }
                }), b = h?.$mount();
                (s = document.body) === null || s === void 0 || s.appendChild(b?.$el),
                    this.phoneAlertInatance = b
            },
            mounted: function() {
                var t = this;
                return Ba(la().mark(function s() {
                    return la().wrap(function(b) {
                        for (; ; )
                            switch (b.prev = b.next) {
                                case 0:
                                    (0,
                                        gr.Log)("phone panel is mounted."),
                                        t.channelInstance = t.$getChannelInstance(),
                                        Qe.eventBus.$on("SE_CALL_HANGUP", t.handleVoiceHangup),
                                        Qe.eventBus.$on("SE_CALL_END", t.handleVoiceEnded),
                                        Qe.eventBus.$on("onCallCanceled", t.handleCallCancelled),
                                        Qe.eventBus.$on("onCallRejected", t.handleCallRejected),
                                        Qe.eventBus.$on("onCallTimeout", t.handleCallTimeout),
                                        Qe.eventBus.$on("onCallRescinded", t.handleCallRescinded),
                                        t.channelInstance;
                                case 9:
                                case "end":
                                    return b.stop()
                            }
                    }, s)
                }))()
            },
            beforeDestroy: function() {
                var t, s;
                Qe.eventBus.$off("SE_CALL_HANGUP", this.handleVoiceHangup),
                    Qe.eventBus.$off("SE_CALL_END", this.handleVoiceEnded),
                    Qe.eventBus.$off("onCallCanceled", this.handleCallCancelled),
                    Qe.eventBus.$off("onCallRejected", this.handleCallRejected),
                    Qe.eventBus.$off("onCallTimeout", this.handleCallTimeout),
                    Qe.eventBus.$off("onCallRescinded", this.handleCallRescinded),
                (t = document.body) === null || t === void 0 || t.removeChild((s = this.phoneAlertInatance) === null || s === void 0 ? void 0 : s.$el)
            },
            methods: Ti(Ti({}, (0,
                Yt.mapActions)("coreVoice", ["destroyStorePhone", "setIsOnCall", "setIsCalling"])), {}, {
                handlePlayRingSound: function(t) {
                    var s, h, b = this, S = t.tabId, B = t.tryRingFailTabs, se = B === void 0 ? {} : B;
                    if (S === ((s = this.channelInstance) === null || s === void 0 ? void 0 : s.tabId) && ((h = this.currentCall) === null || h === void 0 ? void 0 : h.type) !== Qe.CALL_TYPES.Outbound) {
                        var Z, oe;
                        (Z = this.$refs) === null || Z === void 0 || (Z = Z.ringAudio) === null || Z === void 0 || (oe = Z.play) === null || oe === void 0 || oe.call(Z).catch(function() {
                            var Wt, $t, Yn, Qn, mn = k()(Wt = kf(M()($t = b.channelInstance.tabMap).call($t))).call(Wt, function(Ir) {
                                var Cr;
                                return Ir.tabId !== S && !O()(Cr = D()(se)).call(Cr, Ir.tabId)
                            });
                            if (mn != null && mn.length) {
                                var Fn = G()(mn).call(mn, function(Ir) {
                                    return Ir.visible
                                })
                                    , Vt = Fn?.tabId || ((Yn = mn[0]) === null || Yn === void 0 ? void 0 : Yn.tabId);
                                (Qn = b.channelInstance) === null || Qn === void 0 || Qn.sendMessageToSub({
                                    eventType: cc.PLAY_RING_SOUND,
                                    data: {
                                        tabId: Vt,
                                        tryRingFailTabs: Ti(Ti({}, se), {}, lc({}, S, !0))
                                    }
                                })
                            }
                        })
                    }
                },
                smsOutboundCall: function(t) {
                    var s = this;
                    return Ba(la().mark(function h() {
                        var b;
                        return la().wrap(function(B) {
                            for (; ; )
                                switch (B.prev = B.next) {
                                    case 0:
                                        return B.prev = 0,
                                            B.next = 3,
                                            (b = s.$refs) === null || b === void 0 || (b = b.idlePanel) === null || b === void 0 ? void 0 : b.handleOutboundCall(Ti(Ti({}, t), {}, {
                                                isSMS: !0
                                            }));
                                    case 3:
                                        B.next = 8;
                                        break;
                                    case 5:
                                        B.prev = 5,
                                            B.t0 = B.catch(0),
                                            console.error(B.t0);
                                    case 8:
                                    case "end":
                                        return B.stop()
                                }
                        }, h, null, [[0, 5]])
                    }))()
                },
                openOutboundNotify: function() {
                    var t, s = this;
                    this.smsToVoiceNotify = this.chatNotify(this.$t("cci.upgrade.to.voice.calling", {
                        callerId: (t = this.callReservation) === null || t === void 0 || (t = t.task) === null || t === void 0 || (t = t.attributes) === null || t === void 0 ? void 0 : t.to
                    }), "", {
                        text: "Cancel",
                        data: null,
                        callback: function() {
                            var b;
                            s.cancelOutbound(),
                            (b = s.smsToVoiceNotify) === null || b === void 0 || b.close()
                        }
                    }, 0, !1)
                },
                cancelOutbound: function() {
                    var t;
                    (t = this.$refs) === null || t === void 0 || (t = t.currentCall) === null || t === void 0 || t.cancelOutbound()
                },
                onOutboundCall: function(t, s) {
                    this.$emit("on-outbound-call", t, s)
                },
                onCallAccepted: function(t) {
                    this.$emit("on-call-accepted", t)
                },
                onCallComing: function(t) {
                    this.$emit("in-coming-call", t)
                },
                onNextCall: function(t) {
                    this.$emit("on-next-call", t)
                },
                pauseAudio: function(t) {
                    this.$refs[t].pause(),
                        this.$refs[t].currentTime = 0
                },
                turnOffMic: function() {
                    var t = this;
                    return Ba(la().mark(function s() {
                        var h;
                        return la().wrap(function(S) {
                            for (; ; )
                                switch (S.prev = S.next) {
                                    case 0:
                                        return S.next = 2,
                                            (h = t.phoneInstance) === null || h === void 0 ? void 0 : h.disableInputDevice();
                                    case 2:
                                        t.closeDeviceConfirmVisible = !1;
                                    case 3:
                                    case "end":
                                        return S.stop()
                                }
                        }, s)
                    }))()
                },
                handleVoiceHangup: function(t) {
                    return Ba(la().mark(function s() {
                        var h;
                        return la().wrap(function(S) {
                            for (; ; )
                                switch (S.prev = S.next) {
                                    case 0:
                                        return S.next = 2,
                                            (0,
                                                zt.getCRMInstance)();
                                    case 2:
                                        h = S.sent,
                                        h != null && h.callHangup && h.callHangup(t);
                                    case 4:
                                    case "end":
                                        return S.stop()
                                }
                        }, s)
                    }))()
                },
                handleVoiceEnded: function(t) {
                    return Ba(la().mark(function s() {
                        var h;
                        return la().wrap(function(S) {
                            for (; ; )
                                switch (S.prev = S.next) {
                                    case 0:
                                        return S.next = 2,
                                            (0,
                                                zt.getCRMInstance)();
                                    case 2:
                                        h = S.sent,
                                        h != null && h.callEnded && h.callEnded(t);
                                    case 4:
                                    case "end":
                                        return S.stop()
                                }
                        }, s)
                    }))()
                },
                emitInboundNotConnected: function(t, s) {
                    return Ba(la().mark(function h() {
                        var b;
                        return la().wrap(function(B) {
                            for (; ; )
                                switch (B.prev = B.next) {
                                    case 0:
                                        return B.next = 2,
                                            (0,
                                                zt.getCRMInstance)();
                                    case 2:
                                        b = B.sent,
                                        b != null && b.inboundCallNotConnected && b.inboundCallNotConnected({
                                            reason: t,
                                            data: s
                                        });
                                    case 4:
                                    case "end":
                                        return B.stop()
                                }
                        }, h)
                    }))()
                },
                handleCallCancelled: function(t) {
                    var s = this;
                    return Ba(la().mark(function h() {
                        return la().wrap(function(S) {
                            for (; ; )
                                switch (S.prev = S.next) {
                                    case 0:
                                        s.emitInboundNotConnected("consumer-cancelled", t);
                                    case 1:
                                    case "end":
                                        return S.stop()
                                }
                        }, h)
                    }))()
                },
                handleCallRejected: function(t) {
                    var s = this;
                    return Ba(la().mark(function h() {
                        return la().wrap(function(S) {
                            for (; ; )
                                switch (S.prev = S.next) {
                                    case 0:
                                        s.emitInboundNotConnected("agent-rejected", t);
                                    case 1:
                                    case "end":
                                        return S.stop()
                                }
                        }, h)
                    }))()
                },
                handleCallRescinded: function(t) {
                    var s = this;
                    return Ba(la().mark(function h() {
                        return la().wrap(function(S) {
                            for (; ; )
                                switch (S.prev = S.next) {
                                    case 0:
                                        s.emitInboundNotConnected("call-rescinded", t);
                                    case 1:
                                    case "end":
                                        return S.stop()
                                }
                        }, h)
                    }))()
                },
                handleCallTimeout: function(t) {
                    var s = this;
                    return Ba(la().mark(function h() {
                        return la().wrap(function(S) {
                            for (; ; )
                                switch (S.prev = S.next) {
                                    case 0:
                                        s.emitInboundNotConnected("call-timeout", t);
                                    case 1:
                                    case "end":
                                        return S.stop()
                                }
                        }, h)
                    }))()
                }
            }),
            watch: {
                showUpgradeToVoiceNotify: function(t) {
                    if (t)
                        this.openOutboundNotify();
                    else {
                        var s;
                        (s = this.smsToVoiceNotify) === null || s === void 0 || s.close()
                    }
                },
                currentCall: function(t) {
                    var s = this;
                    t || (this.phoneEnded = !0,
                        K()(function() {
                            s.phoneEnded = !1
                        }, 2e3))
                },
                component: function() {
                    var u = Ba(la().mark(function s(h) {
                        var b, S;
                        return la().wrap(function(se) {
                            for (; ; )
                                switch (se.prev = se.next) {
                                    case 0:
                                        return se.next = 2,
                                            this.$nextTick();
                                    case 2:
                                        h === "RingingPanel" && ((b = this.callReservation) === null || b === void 0 ? void 0 : b.type) === "outbound" && ((S = this.$refs) === null || S === void 0 || (S = S.idlePanel) === null || S === void 0 || S.clearInput());
                                    case 3:
                                    case "end":
                                        return se.stop()
                                }
                        }, s, this)
                    }));
                    function t(s) {
                        return u.apply(this, arguments)
                    }
                    return t
                }(),
                callStatus: function(t) {
                    if (t !== 1) {
                        var s;
                        (s = this.smsToVoiceNotify) === null || s === void 0 || s.close()
                    }
                    t === 3 ? this.setIsOnCall(!0) : this.setIsOnCall(!1),
                        t === 1 ? this.setIsCalling(!0) : this.setIsCalling(!1)
                }
            }
        };
        var da = (0,
            Ue.A)(uc, Y, J, !1, null, "54909fae", null);
        const Df = da.exports
    }
    ,
    27711: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => M
            });
        var Y = a(30429)
            , J = a(48991)
            , $ = {};
        for (const Q in J)
            Q !== "default" && ($[Q] = () => J[Q]);
        a.d(E, $);
        var k = a(50855)
            , P = (0,
            k.A)(J.default, Y.X, Y.Y, !1, null, "68763ade", null);
        const M = P.exports
    }
    ,
    41685: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                __esModule: () => $.B,
                default: () => Q
            });
        var Y = function() {
            var F = this
                , D = F._self._c
                , z = F._self._setupProxy;
            return D("zm-tooltip", {
                attrs: {
                    disabled: z.disabled,
                    "poper-class": F.tooltipContentClass
                }
            }, [D("div", {
                class: [F.tooltipContentClass, "ellipsis_tooltip_content"],
                attrs: {
                    slot: "content"
                },
                slot: "content"
            }, [F._v(`
    ` + F._s(z.props.content) + `
  `)]), F._v(" "), D("div", {
                ref: "contentRef",
                class: ["zm_ellipsis", z.props.contentClass],
                on: {
                    mouseenter: z.handleTooltipUpdate,
                    mouseleave: z.handleTooltipUpdate
                }
            }, [F._v(`
    ` + F._s(z.props.content) + `
  `)])])
        }
            , J = []
            , $ = a(59546);
        const k = $.A;
        var P = a(50855)
            , M = (0,
            P.A)(k, Y, J, !1, null, null, null);
        const Q = M.exports
    }
    ,
    47276: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => Q
            });
        var Y = function() {
            var F = this
                , D = F._self._c;
            return D("ZccDialog", {
                staticClass: "chat-dialog",
                attrs: {
                    title: F.title,
                    visible: F.visible,
                    "modal-append-to-body": !1,
                    "mini-screen-enlargement": !1
                },
                on: {
                    close: F.onClose
                }
            }, [D("div", {
                staticClass: "chat-dialog__text"
            }, [F._v(`
    ` + F._s(F.text) + `
  `)]), F._v(" "), D("div", {
                attrs: {
                    slot: "footer"
                },
                slot: "footer"
            }, [D("zm-button", {
                staticClass: "chat-dialog__cancel",
                attrs: {
                    plain: "",
                    disabled: F.loading
                },
                on: {
                    click: F.onClose
                }
            }, [F._v(F._s(F.cancelText))]), F._v(" "), D("zm-button", {
                attrs: {
                    type: F.type,
                    disabled: F.loading,
                    loading: F.loading
                },
                on: {
                    click: F.onOk
                }
            }, [F._v(F._s(F.okText))])], 1)])
        }
            , J = [];
        const k = {
            props: {
                loading: {
                    type: Boolean,
                    default: !1
                },
                title: {
                    type: String,
                    default: ""
                },
                okText: {
                    type: String,
                    default: "Ok"
                },
                cancelText: {
                    type: String,
                    default: "Cancel"
                },
                visible: {
                    type: Boolean,
                    default: !1
                },
                text: {
                    type: String,
                    default: ""
                },
                type: {
                    type: String,
                    default: "primary"
                }
            },
            methods: {
                onOk: function() {
                    this.$emit("ok")
                },
                onClose: function() {
                    this.$emit("close")
                }
            }
        };
        var P = a(50855)
            , M = (0,
            P.A)(k, Y, J, !1, null, "49a79b76", null);
        const Q = M.exports
    }
    ,
    34409: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                __esModule: () => $.B,
                default: () => Q
            });
        var Y = function() {
            var F = this
                , D = F._self._c
                , z = F._self._setupProxy;
            return D("zm-button", F._b({
                staticClass: "cus-zm-icon",
                attrs: {
                    type: "icon",
                    icon: F.iconClassName,
                    "aria-label": F.propAriaLabel
                },
                on: {
                    click: z.handleClick
                }
            }, "zm-button", F.$attrs, !1))
        }
            , J = []
            , $ = a(25582);
        const k = $.A;
        var P = a(50855)
            , M = (0,
            P.A)(k, Y, J, !1, null, "982e4abe", null);
        const Q = M.exports
    }
    ,
    84300: (pn, E, a) => {
        "use strict";
        a.d(E, {
            A: () => O
        });
        var Y = a(74061);
        const $ = {
            props: {
                content: {
                    type: String,
                    default: ""
                }
            },
            data: function() {
                return {
                    isOverflowed: !1
                }
            },
            mounted: function() {
                var D = this;
                this.$nextTick(function() {
                    D.updateOverflowStatus()
                })
            },
            watch: {
                content: function() {
                    var D = this;
                    this.$nextTick(function() {
                        D.updateOverflowStatus()
                    })
                }
            },
            methods: {
                updateOverflowStatus: function() {
                    var D, z = (D = this.$refs) === null || D === void 0 ? void 0 : D.ellipsisElement;
                    this.isOverflowed = z?.scrollWidth > z?.clientWidth
                }
            },
            render: function() {
                var D = (0,
                    Y.h)("zm-tooltip", {
                    attrs: {
                        content: this.content,
                        "popper-class": "ellipsis-tooltip",
                        placement: "top"
                    },
                    class: "ellipsis-overflowed"
                }, [(0,
                    Y.h)("div", [this.content])]);
                return (0,
                    Y.h)("div", {
                    class: "ellipsis-overflowed-container"
                }, [this.isOverflowed ? D : (0,
                    Y.h)("div", {
                    ref: "ellipsisElement",
                    class: "ellipsis-overflowed"
                }, [this.content])])
            }
        };
        var k = a(50855), P, M, Q = (0,
            k.A)($, P, M, !1, null, null, null);
        const O = Q.exports
    }
    ,
    22731: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => or,
                isSafari: () => Ae
            });
        var Y = a(14950)
            , J = a.n(Y)
            , $ = function() {
            var je = this
                , Ke = je._self._c;
            return Ke("div", {
                staticClass: "play-bar flex-container flex-a-c",
                on: {
                    click: function(Ne) {
                        Ne.stopPropagation(),
                            Ne.preventDefault()
                    }
                }
            }, [Ke("div", {
                staticClass: "controls flex-container"
            }, [Ke("div", {
                staticClass: "backwards controls-icon",
                attrs: {
                    "aria-label": je.$t("cci.audioPlayer.skipBackward5Seconds"),
                    tabindex: "0",
                    role: "button"
                },
                on: {
                    click: function(Ne) {
                        return Ne.stopPropagation(),
                            je.backward5sec.apply(null, arguments)
                    },
                    keydown: [function(it) {
                        var Ne;
                        return !J()(Ne = it.type).call(Ne, "key") && je._k(it.keyCode, "space", 32, it.key, [" ", "Spacebar"]) ? null : (it.stopPropagation(),
                            je.backward5sec.apply(null, arguments))
                    }
                        , function(it) {
                            var Ne;
                            return !J()(Ne = it.type).call(Ne, "key") && je._k(it.keyCode, "enter", 13, it.key, "Enter") ? null : (it.stopPropagation(),
                                je.backward5sec.apply(null, arguments))
                        }
                    ]
                }
            }), je._v(" "), je.playing ? Ke("i", {
                staticClass: "zm-icon-pause controls-icon",
                attrs: {
                    "aria-label": je.$t("cci.audioPlayer.stop"),
                    tabindex: "0",
                    role: "button"
                },
                on: {
                    click: function(Ne) {
                        return Ne.stopPropagation(),
                            je.stopAudio.apply(null, arguments)
                    },
                    keydown: [function(it) {
                        var Ne;
                        return !J()(Ne = it.type).call(Ne, "key") && je._k(it.keyCode, "space", 32, it.key, [" ", "Spacebar"]) ? null : (it.stopPropagation(),
                            je.stopAudio.apply(null, arguments))
                    }
                        , function(it) {
                            var Ne;
                            return !J()(Ne = it.type).call(Ne, "key") && je._k(it.keyCode, "enter", 13, it.key, "Enter") ? null : (it.stopPropagation(),
                                je.stopAudio.apply(null, arguments))
                        }
                    ]
                }
            }) : Ke("i", {
                staticClass: "zm-icon-play controls-icon",
                attrs: {
                    "aria-label": je.$t("cci.audioPlayer.play"),
                    tabindex: "0",
                    role: "button"
                },
                on: {
                    click: function(Ne) {
                        return Ne.stopPropagation(),
                            je.playAudio.apply(null, arguments)
                    },
                    keydown: [function(it) {
                        var Ne;
                        return !J()(Ne = it.type).call(Ne, "key") && je._k(it.keyCode, "space", 32, it.key, [" ", "Spacebar"]) ? null : (it.stopPropagation(),
                            je.playAudio.apply(null, arguments))
                    }
                        , function(it) {
                            var Ne;
                            return !J()(Ne = it.type).call(Ne, "key") && je._k(it.keyCode, "enter", 13, it.key, "Enter") ? null : (it.stopPropagation(),
                                je.playAudio.apply(null, arguments))
                        }
                    ]
                }
            }), je._v(" "), Ke("div", {
                staticClass: "backwards next controls-icon",
                attrs: {
                    "aria-label": je.$t("cci.audioPlayer.skipForward5Seconds"),
                    tabindex: "0",
                    role: "button"
                },
                on: {
                    click: function(Ne) {
                        return Ne.stopPropagation(),
                            je.forward5sec.apply(null, arguments)
                    },
                    keydown: [function(it) {
                        var Ne;
                        return !J()(Ne = it.type).call(Ne, "key") && je._k(it.keyCode, "space", 32, it.key, [" ", "Spacebar"]) ? null : (it.stopPropagation(),
                            je.forward5sec.apply(null, arguments))
                    }
                        , function(it) {
                            var Ne;
                            return !J()(Ne = it.type).call(Ne, "key") && je._k(it.keyCode, "enter", 13, it.key, "Enter") ? null : (it.stopPropagation(),
                                je.forward5sec.apply(null, arguments))
                        }
                    ]
                }
            })]), je._v(" "), Ke("div", {
                staticClass: "progressBar",
                attrs: {
                    role: "progressbar",
                    "aria-valuenow": je.playPercentage + je.$t("cci.common.%")
                }
            }, [Ke("div", {
                staticClass: "current",
                style: "width:" + je.playPercentage + je.$t("cci.common.%")
            })]), je._v(" "), Ke("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: je.loading,
                    expression: "loading"
                }],
                staticClass: "time",
                staticStyle: {
                    "line-height": "normal"
                }
            }, [Ke("span", [je._v(`
      ` + je._s(je._f("getMinute")(je.currentTime)) + `
      ` + je._s(je.$t("cci.common./")) + `
      ` + je._s(je._f("getMinute")(je.displayDuration)) + `
    `)])]), je._v(" "), Ke("audio", {
                ref: "audio",
                staticClass: "hide",
                attrs: {
                    controls: "",
                    src: je.src
                },
                on: {
                    error: je.handleError,
                    loadedmetadata: je.loadAudio,
                    timeupdate: je.updatePlayTime,
                    ended: je.handleEnd
                }
            }), je._v(" "), je._t("more-options")], 2)
        }
            , k = []
            , P = a(78639)
            , M = a.n(P)
            , Q = a(83537)
            , O = a.n(Q)
            , F = a(61849)
            , D = a.n(F)
            , z = a(83030)
            , G = a.n(z)
            , V = a(65888)
            , K = a.n(V)
            , te = a(34187)
            , ee = a.n(te)
            , pe = a(44987)
            , ne = a.n(pe)
            , X = a(73007)
            , x = a.n(X)
            , H = a(23716)
            , q = a.n(H)
            , _e = a(2208)
            , ie = a.n(_e)
            , ze = a(5339)
            , Oe = a.n(ze);
        function Cn(pt) {
            "@babel/helpers - typeof";
            return Cn = typeof G() == "function" && typeof Oe() == "symbol" ? function(je) {
                    return typeof je
                }
                : function(je) {
                    return je && typeof G() == "function" && je.constructor === G() && je !== G().prototype ? "symbol" : typeof je
                }
                ,
                Cn(pt)
        }
        function at() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            at = function() {
                return je
            }
            ;
            var pt, je = {}, Ke = Object.prototype, it = Ke.hasOwnProperty, Ne = D() || function(dt, Xe, ht) {
                dt[Xe] = ht.value
            }
                , Gt = typeof G() == "function" ? G() : {}, en = Gt.iterator || "@@iterator", rn = Gt.asyncIterator || "@@asyncIterator", Tt = Gt.toStringTag || "@@toStringTag";
            function vr(dt, Xe, ht) {
                return D()(dt, Xe, {
                    value: ht,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    dt[Xe]
            }
            try {
                vr({}, "")
            } catch {
                vr = function(ht, yn, dn) {
                    return ht[yn] = dn
                }
            }
            function rr(dt, Xe, ht, yn) {
                var dn = Xe && Xe.prototype instanceof Qe ? Xe : Qe
                    , Gn = K()(dn.prototype)
                    , sr = new Pt(yn || []);
                return Ne(Gn, "_invoke", {
                    value: Kn(dt, ht, sr)
                }),
                    Gn
            }
            function kr(dt, Xe, ht) {
                try {
                    return {
                        type: "normal",
                        arg: dt.call(Xe, ht)
                    }
                } catch (yn) {
                    return {
                        type: "throw",
                        arg: yn
                    }
                }
            }
            je.wrap = rr;
            var Re = "suspendedStart"
                , Et = "suspendedYield"
                , An = "executing"
                , Yt = "completed"
                , gn = {};
            function Qe() {}
            function ar() {}
            function zt() {}
            var Zt = {};
            vr(Zt, en, function() {
                return this
            });
            var Lt = ee()
                , gr = Lt && Lt(Lt($n([])));
            gr && gr !== Ke && it.call(gr, en) && (Zt = gr);
            var Mn = zt.prototype = Qe.prototype = K()(Zt);
            function U(dt) {
                var Xe;
                ne()(Xe = ["next", "throw", "return"]).call(Xe, function(ht) {
                    vr(dt, ht, function(yn) {
                        return this._invoke(ht, yn)
                    })
                })
            }
            function Mt(dt, Xe) {
                function ht(dn, Gn, sr, Zn) {
                    var _r = kr(dt[dn], dt, Gn);
                    if (_r.type !== "throw") {
                        var Pn = _r.arg
                            , Ze = Pn.value;
                        return Ze && Cn(Ze) == "object" && it.call(Ze, "__await") ? Xe.resolve(Ze.__await).then(function(Vn) {
                            ht("next", Vn, sr, Zn)
                        }, function(Vn) {
                            ht("throw", Vn, sr, Zn)
                        }) : Xe.resolve(Ze).then(function(Vn) {
                            Pn.value = Vn,
                                sr(Pn)
                        }, function(Vn) {
                            return ht("throw", Vn, sr, Zn)
                        })
                    }
                    Zn(_r.arg)
                }
                var yn;
                Ne(this, "_invoke", {
                    value: function(Gn, sr) {
                        function Zn() {
                            return new Xe(function(_r, Pn) {
                                    ht(Gn, sr, _r, Pn)
                                }
                            )
                        }
                        return yn = yn ? yn.then(Zn, Zn) : Zn()
                    }
                })
            }
            function Kn(dt, Xe, ht) {
                var yn = Re;
                return function(dn, Gn) {
                    if (yn === An)
                        throw Error("Generator is already running");
                    if (yn === Yt) {
                        if (dn === "throw")
                            throw Gn;
                        return {
                            value: pt,
                            done: !0
                        }
                    }
                    for (ht.method = dn,
                             ht.arg = Gn; ; ) {
                        var sr = ht.delegate;
                        if (sr) {
                            var Zn = In(sr, ht);
                            if (Zn) {
                                if (Zn === gn)
                                    continue;
                                return Zn
                            }
                        }
                        if (ht.method === "next")
                            ht.sent = ht._sent = ht.arg;
                        else if (ht.method === "throw") {
                            if (yn === Re)
                                throw yn = Yt,
                                    ht.arg;
                            ht.dispatchException(ht.arg)
                        } else
                            ht.method === "return" && ht.abrupt("return", ht.arg);
                        yn = An;
                        var _r = kr(dt, Xe, ht);
                        if (_r.type === "normal") {
                            if (yn = ht.done ? Yt : Et,
                            _r.arg === gn)
                                continue;
                            return {
                                value: _r.arg,
                                done: ht.done
                            }
                        }
                        _r.type === "throw" && (yn = Yt,
                            ht.method = "throw",
                            ht.arg = _r.arg)
                    }
                }
            }
            function In(dt, Xe) {
                var ht = Xe.method
                    , yn = dt.iterator[ht];
                if (yn === pt)
                    return Xe.delegate = null,
                    ht === "throw" && dt.iterator.return && (Xe.method = "return",
                        Xe.arg = pt,
                        In(dt, Xe),
                    Xe.method === "throw") || ht !== "return" && (Xe.method = "throw",
                        Xe.arg = new TypeError("The iterator does not provide a '" + ht + "' method")),
                        gn;
                var dn = kr(yn, dt.iterator, Xe.arg);
                if (dn.type === "throw")
                    return Xe.method = "throw",
                        Xe.arg = dn.arg,
                        Xe.delegate = null,
                        gn;
                var Gn = dn.arg;
                return Gn ? Gn.done ? (Xe[dt.resultName] = Gn.value,
                    Xe.next = dt.nextLoc,
                Xe.method !== "return" && (Xe.method = "next",
                    Xe.arg = pt),
                    Xe.delegate = null,
                    gn) : Gn : (Xe.method = "throw",
                    Xe.arg = new TypeError("iterator result is not an object"),
                    Xe.delegate = null,
                    gn)
            }
            function tn(dt) {
                var Xe = {
                    tryLoc: dt[0]
                };
                1 in dt && (Xe.catchLoc = dt[1]),
                2 in dt && (Xe.finallyLoc = dt[2],
                    Xe.afterLoc = dt[3]),
                    this.tryEntries.push(Xe)
            }
            function Ot(dt) {
                var Xe = dt.completion || {};
                Xe.type = "normal",
                    delete Xe.arg,
                    dt.completion = Xe
            }
            function Pt(dt) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ne()(dt).call(dt, tn, this),
                    this.reset(!0)
            }
            function $n(dt) {
                if (dt || dt === "") {
                    var Xe = dt[en];
                    if (Xe)
                        return Xe.call(dt);
                    if (typeof dt.next == "function")
                        return dt;
                    if (!isNaN(dt.length)) {
                        var ht = -1
                            , yn = function dn() {
                            for (; ++ht < dt.length; )
                                if (it.call(dt, ht))
                                    return dn.value = dt[ht],
                                        dn.done = !1,
                                        dn;
                            return dn.value = pt,
                                dn.done = !0,
                                dn
                        };
                        return yn.next = yn
                    }
                }
                throw new TypeError(Cn(dt) + " is not iterable")
            }
            return ar.prototype = zt,
                Ne(Mn, "constructor", {
                    value: zt,
                    configurable: !0
                }),
                Ne(zt, "constructor", {
                    value: ar,
                    configurable: !0
                }),
                ar.displayName = vr(zt, Tt, "GeneratorFunction"),
                je.isGeneratorFunction = function(dt) {
                    var Xe = typeof dt == "function" && dt.constructor;
                    return !!Xe && (Xe === ar || (Xe.displayName || Xe.name) === "GeneratorFunction")
                }
                ,
                je.mark = function(dt) {
                    return x() ? x()(dt, zt) : (dt.__proto__ = zt,
                        vr(dt, Tt, "GeneratorFunction")),
                        dt.prototype = K()(Mn),
                        dt
                }
                ,
                je.awrap = function(dt) {
                    return {
                        __await: dt
                    }
                }
                ,
                U(Mt.prototype),
                vr(Mt.prototype, rn, function() {
                    return this
                }),
                je.AsyncIterator = Mt,
                je.async = function(dt, Xe, ht, yn, dn) {
                    dn === void 0 && (dn = O());
                    var Gn = new Mt(rr(dt, Xe, ht, yn),dn);
                    return je.isGeneratorFunction(Xe) ? Gn : Gn.next().then(function(sr) {
                        return sr.done ? sr.value : Gn.next()
                    })
                }
                ,
                U(Mn),
                vr(Mn, Tt, "Generator"),
                vr(Mn, en, function() {
                    return this
                }),
                vr(Mn, "toString", function() {
                    return "[object Generator]"
                }),
                je.keys = function(dt) {
                    var Xe = Object(dt)
                        , ht = [];
                    for (var yn in Xe)
                        ht.push(yn);
                    return q()(ht).call(ht),
                        function dn() {
                            for (; ht.length; ) {
                                var Gn = ht.pop();
                                if (Gn in Xe)
                                    return dn.value = Gn,
                                        dn.done = !1,
                                        dn
                            }
                            return dn.done = !0,
                                dn
                        }
                }
                ,
                je.values = $n,
                Pt.prototype = {
                    constructor: Pt,
                    reset: function(Xe) {
                        var ht;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = pt,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = pt,
                            ne()(ht = this.tryEntries).call(ht, Ot),
                            !Xe)
                            for (var yn in this)
                                yn.charAt(0) === "t" && it.call(this, yn) && !isNaN(+ie()(yn).call(yn, 1)) && (this[yn] = pt)
                    },
                    stop: function() {
                        this.done = !0;
                        var Xe = this.tryEntries[0].completion;
                        if (Xe.type === "throw")
                            throw Xe.arg;
                        return this.rval
                    },
                    dispatchException: function(Xe) {
                        if (this.done)
                            throw Xe;
                        var ht = this;
                        function yn(Pn, Ze) {
                            return sr.type = "throw",
                                sr.arg = Xe,
                                ht.next = Pn,
                            Ze && (ht.method = "next",
                                ht.arg = pt),
                                !!Ze
                        }
                        for (var dn = this.tryEntries.length - 1; dn >= 0; --dn) {
                            var Gn = this.tryEntries[dn]
                                , sr = Gn.completion;
                            if (Gn.tryLoc === "root")
                                return yn("end");
                            if (Gn.tryLoc <= this.prev) {
                                var Zn = it.call(Gn, "catchLoc")
                                    , _r = it.call(Gn, "finallyLoc");
                                if (Zn && _r) {
                                    if (this.prev < Gn.catchLoc)
                                        return yn(Gn.catchLoc, !0);
                                    if (this.prev < Gn.finallyLoc)
                                        return yn(Gn.finallyLoc)
                                } else if (Zn) {
                                    if (this.prev < Gn.catchLoc)
                                        return yn(Gn.catchLoc, !0)
                                } else {
                                    if (!_r)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < Gn.finallyLoc)
                                        return yn(Gn.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(Xe, ht) {
                        for (var yn = this.tryEntries.length - 1; yn >= 0; --yn) {
                            var dn = this.tryEntries[yn];
                            if (dn.tryLoc <= this.prev && it.call(dn, "finallyLoc") && this.prev < dn.finallyLoc) {
                                var Gn = dn;
                                break
                            }
                        }
                        Gn && (Xe === "break" || Xe === "continue") && Gn.tryLoc <= ht && ht <= Gn.finallyLoc && (Gn = null);
                        var sr = Gn ? Gn.completion : {};
                        return sr.type = Xe,
                            sr.arg = ht,
                            Gn ? (this.method = "next",
                                this.next = Gn.finallyLoc,
                                gn) : this.complete(sr)
                    },
                    complete: function(Xe, ht) {
                        if (Xe.type === "throw")
                            throw Xe.arg;
                        return Xe.type === "break" || Xe.type === "continue" ? this.next = Xe.arg : Xe.type === "return" ? (this.rval = this.arg = Xe.arg,
                            this.method = "return",
                            this.next = "end") : Xe.type === "normal" && ht && (this.next = ht),
                            gn
                    },
                    finish: function(Xe) {
                        for (var ht = this.tryEntries.length - 1; ht >= 0; --ht) {
                            var yn = this.tryEntries[ht];
                            if (yn.finallyLoc === Xe)
                                return this.complete(yn.completion, yn.afterLoc),
                                    Ot(yn),
                                    gn
                        }
                    },
                    catch: function(Xe) {
                        for (var ht = this.tryEntries.length - 1; ht >= 0; --ht) {
                            var yn = this.tryEntries[ht];
                            if (yn.tryLoc === Xe) {
                                var dn = yn.completion;
                                if (dn.type === "throw") {
                                    var Gn = dn.arg;
                                    Ot(yn)
                                }
                                return Gn
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(Xe, ht, yn) {
                        return this.delegate = {
                            iterator: $n(Xe),
                            resultName: ht,
                            nextLoc: yn
                        },
                        this.method === "next" && (this.arg = pt),
                            gn
                    }
                },
                je
        }
        function Sn(pt, je, Ke, it, Ne, Gt, en) {
            try {
                var rn = pt[Gt](en)
                    , Tt = rn.value
            } catch (vr) {
                return void Ke(vr)
            }
            rn.done ? je(Tt) : O().resolve(Tt).then(it, Ne)
        }
        function Ce(pt) {
            return function() {
                var je = this
                    , Ke = arguments;
                return new (O())(function(it, Ne) {
                        var Gt = pt.apply(je, Ke);
                        function en(Tt) {
                            Sn(Gt, it, Ne, en, rn, "next", Tt)
                        }
                        function rn(Tt) {
                            Sn(Gt, it, Ne, en, rn, "throw", Tt)
                        }
                        en(void 0)
                    }
                )
            }
        }
        var wn = null
            , Ae = /Safari/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent);
        const mt = {
            props: {
                src: {
                    type: String,
                    required: !0
                },
                autoPlay: {
                    type: Boolean,
                    default: !Ae
                }
            },
            filters: {
                getMinute: function(je) {
                    var Ke = Math.floor(je % 60).toString()
                        , it = Math.floor(je / 60).toString();
                    return Ke < 10 ? it + ":0" + Ke : it + ":" + Ke
                }
            },
            data: function() {
                return {
                    playing: this.autoPlay,
                    loading: !1,
                    displayDuration: 0,
                    realDuration: 0,
                    currentTime: 0,
                    isError: !1
                }
            },
            computed: {
                playPercentage: function() {
                    return this.realDuration === 0 ? 0 : M()(this.currentTime / this.realDuration * 100)
                }
            },
            created: function() {
                this.loading = !0
            },
            watch: {
                playing: {
                    immediate: !0,
                    handler: function(je) {
                        var Ke = this;
                        return Ce(at().mark(function it() {
                            return at().wrap(function(Gt) {
                                for (; ; )
                                    switch (Gt.prev = Gt.next) {
                                        case 0:
                                            return Gt.next = 2,
                                                Ke.$nextTick();
                                        case 2:
                                            je === !0 ? Ke.playAudio() : Ke.stopAudio();
                                        case 3:
                                        case "end":
                                            return Gt.stop()
                                    }
                            }, it)
                        }))()
                    }
                }
            },
            methods: {
                handleError: function(je) {
                    this.loading = !1,
                        this.isError = !0,
                        this.$emit("error", je)
                },
                reset: function() {
                    this.playing = !1,
                        this.displayDuration = 0,
                        this.realDuration = 0,
                        this.currentTime = 0
                },
                loadAudio: function(je) {
                    this.realDuration = je.target.duration || 0,
                        this.displayDuration = M()(this.realDuration),
                        this.$emit("fileDuration", this.displayDuration),
                        this.loading = !1,
                        this.isError = !1
                },
                updatePlayTime: function(je) {
                    var Ke = this;
                    this.loading = !1,
                        this.currentTime = je.target.currentTime || 0,
                    je.target.ended && this.$nextTick(function() {
                        Ke.stopAudio()
                    })
                },
                playAudio: function() {
                    var je = this;
                    return Ce(at().mark(function Ke() {
                        return at().wrap(function(Ne) {
                            for (; ; )
                                switch (Ne.prev = Ne.next) {
                                    case 0:
                                        if (!je.isError) {
                                            Ne.next = 2;
                                            break
                                        }
                                        return Ne.abrupt("return");
                                    case 2:
                                        return je.$emit("play"),
                                            je.$emit("change", !0),
                                            Ne.prev = 4,
                                            Ne.next = 7,
                                            je.$refs.audio.play();
                                    case 7:
                                        je.$emit("play-success"),
                                            je.playing = !0,
                                            Ne.next = 14;
                                        break;
                                    case 11:
                                        Ne.prev = 11,
                                            Ne.t0 = Ne.catch(4),
                                            je.playing = !1;
                                    case 14:
                                        wn && wn(),
                                            wn = function() {
                                                return je.stopAudio
                                            }
                                        ;
                                    case 16:
                                    case "end":
                                        return Ne.stop()
                                }
                        }, Ke, null, [[4, 11]])
                    }))()
                },
                stopAudio: function() {
                    this.isError || (this.$refs.audio.pause(),
                        this.playing = !1,
                        wn = null,
                        this.$emit("stop"),
                        this.$emit("change", !1))
                },
                forward5sec: function() {
                    this.$refs.audio.currentTime += 5,
                        this.$emit("play"),
                        this.$emit("change", !1)
                },
                backward5sec: function() {
                    this.$refs.audio.currentTime -= 5,
                        this.$emit("play"),
                        this.$emit("change", !1)
                },
                handleEnd: function() {
                    this.currentTime = this.realDuration
                },
                beforeDestroy: function() {
                    this.stopAudio()
                }
            }
        };
        var jn = a(50855)
            , ve = (0,
            jn.A)(mt, $, k, !1, null, "4a24dacf", null);
        const or = ve.exports
    }
    ,
    7852: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => mt
            });
        var Y = function() {
            var ve = this
                , or = ve._self._c
                , pt = ve._self._setupProxy;
            return or("div", {
                staticClass: "list_wrap"
            }, [ve._l(ve.dataSource, function(je) {
                var Ke;
                return or("div", {
                    key: je.id,
                    staticClass: "list_item"
                }, [or("div", {
                    staticClass: "list_title ellipsis"
                }, [or("span", {
                    class: ["icon_img", {
                        phone: je.channel === "phone",
                        inbound: je.direction === "IN" || je.direction === "I",
                        outbound: je.direction === "OUT" || je.direction === "O",
                        chat: ve.isNewMessaging && je.source !== 4,
                        sms: ve.isNewMessaging && je.source === 4,
                        video: je.channel === "video",
                        email: je.channel === "email"
                    }]
                }), ve._v(" "), or("span", [ve._v(ve._s(je.customerName || je.customerNumber && ve.phoneNumber(je.customerNumber, (Ke = ve.currentAgent) === null || Ke === void 0 ? void 0 : Ke.countryOrRegion)))])]), ve._v(" "), or("div", {
                    staticClass: "list_detail"
                }, ve._l(ve.showColumns, function(it) {
                    return or("div", {
                        key: it.value,
                        staticClass: "list_detail-field"
                    }, [or("span", {
                        staticClass: "list_detail-field_label"
                    }, [ve._v(ve._s(it.label) + " :")]), ve._v(" "), it.value === "duration" ? or("realtime-timer", {
                        staticClass: "list_detail-field_value",
                        attrs: {
                            "starting-time": je.startTime
                        }
                    }) : or("span", {
                        staticClass: "list_detail-field_value"
                    }, [ve._v(`
          ` + ve._s(ve.useCalcText({
                        item: je,
                        key: it.value,
                        isNewMessaging: ve.isNewMessaging
                    })) + `
        `)])], 1)
                }), 0), ve._v(" "), or("ActiveTableActions", {
                    attrs: {
                        "row-data": je
                    },
                    on: {
                        "active-engage-action": ve.handleActionBtnClick
                    }
                }), ve._v(" "), or("div", {
                    staticClass: "divider"
                })], 1)
            }), ve._v(" "), or("div", {
                staticClass: "table_bottom"
            }, [ve.pagination.total == 0 ? or("div", {
                staticClass: "empty"
            }, [ve._v(`
      ` + ve._s(ve.$t("cci.common.noResult")) + `
    `)]) : ve._e(), ve._v(" "), or("zm-pagination", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: ve.pagination.total > 0,
                    expression: "pagination.total > 0"
                }],
                attrs: {
                    small: "",
                    "current-page": ve.pagination.page,
                    "page-size": ve.pagination.size,
                    layout: "prev, next, total",
                    total: ve.pagination.total,
                    "format-total": ve.formatTotal,
                    "pager-count": 5
                },
                on: {
                    "update:currentPage": function(Ke) {
                        return ve.$set(ve.pagination, "page", Ke)
                    },
                    "update:current-page": function(Ke) {
                        return ve.$set(ve.pagination, "page", Ke)
                    },
                    "current-change": ve.handlePageChange
                }
            })], 1)], 2)
        }
            , J = []
            , $ = a(59814)
            , k = a.n($)
            , P = a(69761)
            , M = a.n(P)
            , Q = a(74061)
            , O = a(83266)
            , F = a(6372)
            , D = a(56405)
            , z = function() {
            var ve = this
                , or = ve._self._c;
            return or("span", {
                style: {
                    color: ve.color
                },
                attrs: {
                    tabindex: "0"
                }
            }, [ve._v(ve._s(ve.duration))])
        }
            , G = []
            , V = a(65770)
            , K = a.n(V);
        const ee = {
            name: "RealtimeTimer",
            props: {
                startingTime: {
                    type: Number,
                    default: void 0
                },
                color: {
                    type: String,
                    default: void 0
                }
            },
            data: function() {
                return {
                    timer: null,
                    duration: ""
                }
            },
            mounted: function() {
                this.calcDuration(),
                    this.intervalTime()
            },
            beforeDestroy: function() {
                clearTimeout(this.timer)
            },
            methods: {
                intervalTime: function() {
                    var ve = this;
                    this.timer = K()(function() {
                        ve.calcDuration(),
                            ve.intervalTime()
                    }, 1e3)
                },
                calcDuration: function() {
                    var ve = (0,
                        D.getDayjsInstance)().valueOf() - this.startingTime;
                    this.duration = this.formatMillisecond(ve)
                },
                formatMillisecond: function(ve) {
                    return (0,
                        D.formatDuration)(Math.round(ve / 1e3))
                }
            }
        };
        var pe = a(50855)
            , ne = (0,
            pe.A)(ee, z, G, !1, null, "b91b8186", null);
        const X = ne.exports;
        var x = null
            , H = O.activeEngageHooks.useHandleTable
            , q = a(71487)
            , _e = a(5412)
            , ie = a(73680)
            , ze = function() {
            var ve = this
                , or = ve._self._c
                , pt = ve._self._setupProxy;
            return or("div", {
                staticClass: "active-actions"
            }, ve._l(pt.props.rowData.actions, function(je) {
                return or("zm-button", {
                    key: je.action,
                    staticClass: "active-actions_btn",
                    attrs: {
                        disabled: je.disabled || pt.shouldDisableAction,
                        loading: pt.loading,
                        size: "mini"
                    },
                    on: {
                        click: function(it) {
                            return pt.handleAction(je.action, ve.rowData)
                        }
                    }
                }, [ve._v(`
    ` + ve._s(je.label) + `
  `)])
            }), 1)
        }
            , Oe = []
            , Cn = a(54186);
        const at = Cn.A;
        var Sn = (0,
            pe.A)(at, ze, Oe, !1, null, "2e4e2190", null);
        const Ce = Sn.exports
            , Ae = (0,
            Q.defineComponent)({
            name: "CommonTable",
            components: {
                RealtimeTimer: X,
                ActiveTableActions: Ce
            },
            props: {
                isNewMessaging: {
                    type: Boolean,
                    default: !1
                },
                dataSource: {
                    type: Array,
                    default: function() {
                        return []
                    }
                },
                pagination: {
                    type: Object,
                    default: function() {
                        return {}
                    }
                },
                formatTotal: {
                    type: Function,
                    default: function() {}
                },
                checkList: {
                    type: Array,
                    default: function() {
                        return []
                    }
                }
            },
            setup: function(ve, or) {
                var pt = or.emit
                    , je = (0,
                    D.GET_ACTIVE_FILTER_MAPS)(F.i18n)
                    , Ke = (0,
                    O.useAccount)()
                    , it = Ke.user
                    , Ne = H()
                    , Gt = Ne.pagination
                    , en = (0,
                    Q.computed)(function() {
                    return k()(je).call(je, function(rn) {
                        var Tt;
                        return M()(Tt = ve.checkList).call(Tt, rn.value)
                    })
                });
                return {
                    useCalcText: q.U,
                    currentAgent: it,
                    phoneNumber: ie.phoneNumber,
                    showColumns: en,
                    CHANNEL_KEYS: D.CHANNEL_KEYS,
                    isChatChannel: _e.WX,
                    handlePageChange: function(Tt) {
                        Gt.page = Tt,
                            pt("handlePageChange", Tt)
                    },
                    handleActionBtnClick: function(Tt, vr) {
                        pt("active-engage-action", Tt, vr)
                    }
                }
            }
        });
        var nr = (0,
            pe.A)(Ae, Y, J, !1, null, "351ac462", null);
        const mt = nr.exports
    }
    ,
    58327: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => Te
            });
        var Y = a(16043)
            , J = a(13987)
            , $ = a(76927)
            , k = a(14950)
            , P = a.n(k)
            , M = function() {
            var me = this
                , He = me._self._c;
            return He("div", {
                staticClass: "wrapper"
            }, [He("div", {
                staticClass: "search-container",
                attrs: {
                    disabled: me.isLoading
                }
            }, [He("zm-input", {
                staticClass: "flex-item call_search-field",
                attrs: {
                    size: "small",
                    placeholder: me.$t("cci.profile.tabs.history.search"),
                    label: me.$t("cci.profile.tabs.history.search"),
                    "aria-label": me.$t("cci.profile.tabs.history.search"),
                    "prefix-icon": "zm-icon-search"
                },
                on: {
                    input: me.debounceSearch
                },
                model: {
                    value: me.keyword,
                    callback: function(wt) {
                        me.keyword = wt
                    },
                    expression: "keyword"
                }
            }), me._v(" "), He("zm-tooltip", {
                attrs: {
                    content: me.$t(me.isNewToOld ? "cci.profile.tabs.history.search.oldToNew" : "cci.profile.tabs.history.search.newToOld"),
                    placement: "top"
                }
            }, [He("div", {
                staticClass: "sort-icon",
                attrs: {
                    role: "button",
                    "aria-label": me.$t(me.isNewToOld ? "cci.profile.tabs.history.search.oldToNew" : "cci.profile.tabs.history.search.newToOld"),
                    tabindex: "0"
                },
                on: {
                    click: me.onSortClicked,
                    keydown: [function(Ct) {
                        var wt;
                        return !P()(wt = Ct.type).call(wt, "key") && me._k(Ct.keyCode, "enter", 13, Ct.key, "Enter") ? null : me.onSortClicked.apply(null, arguments)
                    }
                        , function(Ct) {
                            var wt;
                            return !P()(wt = Ct.type).call(wt, "key") && me._k(Ct.keyCode, "space", 32, Ct.key, [" ", "Spacebar"]) ? null : me.onSortClicked.apply(null, arguments)
                        }
                    ]
                }
            }, [He($.A, {
                staticClass: "sort-arrow",
                attrs: {
                    tabindex: "-1"
                }
            })], 1)])], 1), me._v(" "), me.needShowAlert ? He("div", {
                staticClass: "history-list-alert"
            }, [He("div", {
                staticClass: "warn-icon-container"
            }, [He(J.A, {
                staticClass: "warn-icon"
            })], 1), me._v(" "), He("div", {
                attrs: {
                    role: "alert"
                }
            }, [me._v(me._s(me.$t("cci.profile.tabs.history.alert")))]), me._v(" "), He("div", {
                staticClass: "close-icon-container"
            }, [He("div", {
                staticClass: "close-icon",
                attrs: {
                    tabindex: "0",
                    "aria-label": me.$t("cci.common.button.closeAlert"),
                    role: "button"
                },
                on: {
                    click: me.onCloseClick,
                    keydown: [function(Ct) {
                        var wt;
                        return !P()(wt = Ct.type).call(wt, "key") && me._k(Ct.keyCode, "enter", 13, Ct.key, "Enter") ? null : me.onCloseClick.apply(null, arguments)
                    }
                        , function(Ct) {
                            var wt;
                            return !P()(wt = Ct.type).call(wt, "key") && me._k(Ct.keyCode, "space", 32, Ct.key, [" ", "Spacebar"]) ? null : me.onCloseClick.apply(null, arguments)
                        }
                    ]
                }
            }, [He(Y.A)], 1)])]) : me._e(), me._v(" "), He("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: me.isLoading,
                    expression: "isLoading"
                }],
                ref: "listElem",
                staticClass: "list-container"
            }, [!me.isLoading && me.viewList.length === 0 ? He("div", {
                staticClass: "no-data"
            }, [me._v(`
      ` + me._s(me.$t("cci.profile.tabs.history.nodata")) + `
    `)]) : He("div", {
                ref: "list",
                staticClass: "history-list",
                on: {
                    scroll: me.throttleScroll
                }
            }, [me._l(me.viewList, function(Ct, wt) {
                return [He("HistoryItem", {
                    key: Ct.engagementId,
                    attrs: {
                        item: Ct,
                        "observer-size": me.observerSize,
                        "show-vertical-line": wt + 1 < me.viewList.length || !me.hasNoMoreData
                    }
                })]
            })], 2)])])
        }
            , Q = []
            , O = a(12608)
            , F = a.n(O)
            , D = a(78639)
            , z = a.n(D)
            , G = a(44987)
            , V = a.n(G)
            , K = a(59814)
            , te = a.n(K)
            , ee = a(37082)
            , pe = a.n(ee)
            , ne = a(74732)
            , X = a.n(ne)
            , x = a(39084)
            , H = a.n(x)
            , q = a(61849)
            , _e = a.n(q)
            , ie = a(81352)
            , ze = a.n(ie)
            , Oe = a(84653)
            , Cn = a.n(Oe)
            , at = a(89099)
            , Sn = a.n(at)
            , Ce = a(34622)
            , wn = a.n(Ce)
            , Ae = a(27785)
            , nr = a.n(Ae)
            , mt = a(83537)
            , jn = a.n(mt)
            , ve = a(83030)
            , or = a.n(ve)
            , pt = a(65888)
            , je = a.n(pt)
            , Ke = a(34187)
            , it = a.n(Ke)
            , Ne = a(73007)
            , Gt = a.n(Ne)
            , en = a(23716)
            , rn = a.n(en)
            , Tt = a(2208)
            , vr = a.n(Tt)
            , rr = a(39864)
            , kr = a.n(rr)
            , Re = a(8233)
            , Et = a.n(Re)
            , An = a(92336)
            , Yt = a.n(An)
            , gn = a(5339)
            , Qe = a.n(gn)
            , ar = a(53578)
            , zt = a(76856)
            , Zt = a(83266)
            , Lt = a(56405)
            , gr = a(89012)
            , Mn = a.n(gr)
            , U = a(88823)
            , Mt = a.n(U)
            , Kn = a(96559)
            , In = a.n(Kn)
            , tn = a(30824);
        function Ot(be) {
            "@babel/helpers - typeof";
            return Ot = typeof or() == "function" && typeof Qe() == "symbol" ? function(me) {
                    return typeof me
                }
                : function(me) {
                    return me && typeof or() == "function" && me.constructor === or() && me !== or().prototype ? "symbol" : typeof me
                }
                ,
                Ot(be)
        }
        function Pt(be) {
            return Xe(be) || dt(be) || dn(be) || $n()
        }
        function $n() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function dt(be) {
            if (typeof or() < "u" && Et()(be) != null || be["@@iterator"] != null)
                return Yt()(be)
        }
        function Xe(be) {
            if (kr()(be))
                return Gn(be)
        }
        function ht(be, me) {
            return Zn(be) || sr(be, me) || dn(be, me) || yn()
        }
        function yn() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function dn(be, me) {
            if (be) {
                var He;
                if (typeof be == "string")
                    return Gn(be, me);
                var Ct = vr()(He = {}.toString.call(be)).call(He, 8, -1);
                return Ct === "Object" && be.constructor && (Ct = be.constructor.name),
                    Ct === "Map" || Ct === "Set" ? Yt()(be) : Ct === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(Ct) ? Gn(be, me) : void 0
            }
        }
        function Gn(be, me) {
            (me == null || me > be.length) && (me = be.length);
            for (var He = 0, Ct = Array(me); He < me; He++)
                Ct[He] = be[He];
            return Ct
        }
        function sr(be, me) {
            var He = be == null ? null : typeof or() < "u" && Et()(be) || be["@@iterator"];
            if (He != null) {
                var Ct, wt, Bt, En, Pe = [], W = !0, Ee = !1;
                try {
                    if (Bt = (He = He.call(be)).next,
                    me === 0) {
                        if (Object(He) !== He)
                            return;
                        W = !1
                    } else
                        for (; !(W = (Ct = Bt.call(He)).done) && (Pe.push(Ct.value),
                        Pe.length !== me); W = !0)
                            ;
                } catch (nt) {
                    Ee = !0,
                        wt = nt
                } finally {
                    try {
                        if (!W && He.return != null && (En = He.return(),
                        Object(En) !== En))
                            return
                    } finally {
                        if (Ee)
                            throw wt
                    }
                }
                return Pe
            }
        }
        function Zn(be) {
            if (kr()(be))
                return be
        }
        function _r() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            _r = function() {
                return me
            }
            ;
            var be, me = {}, He = Object.prototype, Ct = He.hasOwnProperty, wt = _e() || function(fn, $e, tt) {
                fn[$e] = tt.value
            }
                , Bt = typeof or() == "function" ? or() : {}, En = Bt.iterator || "@@iterator", Pe = Bt.asyncIterator || "@@asyncIterator", W = Bt.toStringTag || "@@toStringTag";
            function Ee(fn, $e, tt) {
                return _e()(fn, $e, {
                    value: tt,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    fn[$e]
            }
            try {
                Ee({}, "")
            } catch {
                Ee = function(tt, ot, on) {
                    return tt[ot] = on
                }
            }
            function nt(fn, $e, tt, ot) {
                var on = $e && $e.prototype instanceof It ? $e : It
                    , Fe = je()(on.prototype)
                    , Mr = new hn(ot || []);
                return wt(Fe, "_invoke", {
                    value: Ut(fn, tt, Mr)
                }),
                    Fe
            }
            function Ie(fn, $e, tt) {
                try {
                    return {
                        type: "normal",
                        arg: fn.call($e, tt)
                    }
                } catch (ot) {
                    return {
                        type: "throw",
                        arg: ot
                    }
                }
            }
            me.wrap = nt;
            var Be = "suspendedStart"
                , st = "suspendedYield"
                , jt = "executing"
                , _t = "completed"
                , Ge = {};
            function It() {}
            function cn() {}
            function ct() {}
            var De = {};
            Ee(De, En, function() {
                return this
            });
            var bt = it()
                , un = bt && bt(bt(Ln([])));
            un && un !== He && Ct.call(un, En) && (De = un);
            var ur = ct.prototype = It.prototype = je()(De);
            function _n(fn) {
                var $e;
                V()($e = ["next", "throw", "return"]).call($e, function(tt) {
                    Ee(fn, tt, function(ot) {
                        return this._invoke(tt, ot)
                    })
                })
            }
            function Jn(fn, $e) {
                function tt(on, Fe, Mr, Jt) {
                    var Dt = Ie(fn[on], fn, Fe);
                    if (Dt.type !== "throw") {
                        var an = Dt.arg
                            , Bn = an.value;
                        return Bn && Ot(Bn) == "object" && Ct.call(Bn, "__await") ? $e.resolve(Bn.__await).then(function(vn) {
                            tt("next", vn, Mr, Jt)
                        }, function(vn) {
                            tt("throw", vn, Mr, Jt)
                        }) : $e.resolve(Bn).then(function(vn) {
                            an.value = vn,
                                Mr(an)
                        }, function(vn) {
                            return tt("throw", vn, Mr, Jt)
                        })
                    }
                    Jt(Dt.arg)
                }
                var ot;
                wt(this, "_invoke", {
                    value: function(Fe, Mr) {
                        function Jt() {
                            return new $e(function(Dt, an) {
                                    tt(Fe, Mr, Dt, an)
                                }
                            )
                        }
                        return ot = ot ? ot.then(Jt, Jt) : Jt()
                    }
                })
            }
            function Ut(fn, $e, tt) {
                var ot = Be;
                return function(on, Fe) {
                    if (ot === jt)
                        throw Error("Generator is already running");
                    if (ot === _t) {
                        if (on === "throw")
                            throw Fe;
                        return {
                            value: be,
                            done: !0
                        }
                    }
                    for (tt.method = on,
                             tt.arg = Fe; ; ) {
                        var Mr = tt.delegate;
                        if (Mr) {
                            var Jt = xe(Mr, tt);
                            if (Jt) {
                                if (Jt === Ge)
                                    continue;
                                return Jt
                            }
                        }
                        if (tt.method === "next")
                            tt.sent = tt._sent = tt.arg;
                        else if (tt.method === "throw") {
                            if (ot === Be)
                                throw ot = _t,
                                    tt.arg;
                            tt.dispatchException(tt.arg)
                        } else
                            tt.method === "return" && tt.abrupt("return", tt.arg);
                        ot = jt;
                        var Dt = Ie(fn, $e, tt);
                        if (Dt.type === "normal") {
                            if (ot = tt.done ? _t : st,
                            Dt.arg === Ge)
                                continue;
                            return {
                                value: Dt.arg,
                                done: tt.done
                            }
                        }
                        Dt.type === "throw" && (ot = _t,
                            tt.method = "throw",
                            tt.arg = Dt.arg)
                    }
                }
            }
            function xe(fn, $e) {
                var tt = $e.method
                    , ot = fn.iterator[tt];
                if (ot === be)
                    return $e.delegate = null,
                    tt === "throw" && fn.iterator.return && ($e.method = "return",
                        $e.arg = be,
                        xe(fn, $e),
                    $e.method === "throw") || tt !== "return" && ($e.method = "throw",
                        $e.arg = new TypeError("The iterator does not provide a '" + tt + "' method")),
                        Ge;
                var on = Ie(ot, fn.iterator, $e.arg);
                if (on.type === "throw")
                    return $e.method = "throw",
                        $e.arg = on.arg,
                        $e.delegate = null,
                        Ge;
                var Fe = on.arg;
                return Fe ? Fe.done ? ($e[fn.resultName] = Fe.value,
                    $e.next = fn.nextLoc,
                $e.method !== "return" && ($e.method = "next",
                    $e.arg = be),
                    $e.delegate = null,
                    Ge) : Fe : ($e.method = "throw",
                    $e.arg = new TypeError("iterator result is not an object"),
                    $e.delegate = null,
                    Ge)
            }
            function We(fn) {
                var $e = {
                    tryLoc: fn[0]
                };
                1 in fn && ($e.catchLoc = fn[1]),
                2 in fn && ($e.finallyLoc = fn[2],
                    $e.afterLoc = fn[3]),
                    this.tryEntries.push($e)
            }
            function Nt(fn) {
                var $e = fn.completion || {};
                $e.type = "normal",
                    delete $e.arg,
                    fn.completion = $e
            }
            function hn(fn) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    V()(fn).call(fn, We, this),
                    this.reset(!0)
            }
            function Ln(fn) {
                if (fn || fn === "") {
                    var $e = fn[En];
                    if ($e)
                        return $e.call(fn);
                    if (typeof fn.next == "function")
                        return fn;
                    if (!isNaN(fn.length)) {
                        var tt = -1
                            , ot = function on() {
                            for (; ++tt < fn.length; )
                                if (Ct.call(fn, tt))
                                    return on.value = fn[tt],
                                        on.done = !1,
                                        on;
                            return on.value = be,
                                on.done = !0,
                                on
                        };
                        return ot.next = ot
                    }
                }
                throw new TypeError(Ot(fn) + " is not iterable")
            }
            return cn.prototype = ct,
                wt(ur, "constructor", {
                    value: ct,
                    configurable: !0
                }),
                wt(ct, "constructor", {
                    value: cn,
                    configurable: !0
                }),
                cn.displayName = Ee(ct, W, "GeneratorFunction"),
                me.isGeneratorFunction = function(fn) {
                    var $e = typeof fn == "function" && fn.constructor;
                    return !!$e && ($e === cn || ($e.displayName || $e.name) === "GeneratorFunction")
                }
                ,
                me.mark = function(fn) {
                    return Gt() ? Gt()(fn, ct) : (fn.__proto__ = ct,
                        Ee(fn, W, "GeneratorFunction")),
                        fn.prototype = je()(ur),
                        fn
                }
                ,
                me.awrap = function(fn) {
                    return {
                        __await: fn
                    }
                }
                ,
                _n(Jn.prototype),
                Ee(Jn.prototype, Pe, function() {
                    return this
                }),
                me.AsyncIterator = Jn,
                me.async = function(fn, $e, tt, ot, on) {
                    on === void 0 && (on = jn());
                    var Fe = new Jn(nt(fn, $e, tt, ot),on);
                    return me.isGeneratorFunction($e) ? Fe : Fe.next().then(function(Mr) {
                        return Mr.done ? Mr.value : Fe.next()
                    })
                }
                ,
                _n(ur),
                Ee(ur, W, "Generator"),
                Ee(ur, En, function() {
                    return this
                }),
                Ee(ur, "toString", function() {
                    return "[object Generator]"
                }),
                me.keys = function(fn) {
                    var $e = Object(fn)
                        , tt = [];
                    for (var ot in $e)
                        tt.push(ot);
                    return rn()(tt).call(tt),
                        function on() {
                            for (; tt.length; ) {
                                var Fe = tt.pop();
                                if (Fe in $e)
                                    return on.value = Fe,
                                        on.done = !1,
                                        on
                            }
                            return on.done = !0,
                                on
                        }
                }
                ,
                me.values = Ln,
                hn.prototype = {
                    constructor: hn,
                    reset: function($e) {
                        var tt;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = be,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = be,
                            V()(tt = this.tryEntries).call(tt, Nt),
                            !$e)
                            for (var ot in this)
                                ot.charAt(0) === "t" && Ct.call(this, ot) && !isNaN(+vr()(ot).call(ot, 1)) && (this[ot] = be)
                    },
                    stop: function() {
                        this.done = !0;
                        var $e = this.tryEntries[0].completion;
                        if ($e.type === "throw")
                            throw $e.arg;
                        return this.rval
                    },
                    dispatchException: function($e) {
                        if (this.done)
                            throw $e;
                        var tt = this;
                        function ot(an, Bn) {
                            return Mr.type = "throw",
                                Mr.arg = $e,
                                tt.next = an,
                            Bn && (tt.method = "next",
                                tt.arg = be),
                                !!Bn
                        }
                        for (var on = this.tryEntries.length - 1; on >= 0; --on) {
                            var Fe = this.tryEntries[on]
                                , Mr = Fe.completion;
                            if (Fe.tryLoc === "root")
                                return ot("end");
                            if (Fe.tryLoc <= this.prev) {
                                var Jt = Ct.call(Fe, "catchLoc")
                                    , Dt = Ct.call(Fe, "finallyLoc");
                                if (Jt && Dt) {
                                    if (this.prev < Fe.catchLoc)
                                        return ot(Fe.catchLoc, !0);
                                    if (this.prev < Fe.finallyLoc)
                                        return ot(Fe.finallyLoc)
                                } else if (Jt) {
                                    if (this.prev < Fe.catchLoc)
                                        return ot(Fe.catchLoc, !0)
                                } else {
                                    if (!Dt)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < Fe.finallyLoc)
                                        return ot(Fe.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function($e, tt) {
                        for (var ot = this.tryEntries.length - 1; ot >= 0; --ot) {
                            var on = this.tryEntries[ot];
                            if (on.tryLoc <= this.prev && Ct.call(on, "finallyLoc") && this.prev < on.finallyLoc) {
                                var Fe = on;
                                break
                            }
                        }
                        Fe && ($e === "break" || $e === "continue") && Fe.tryLoc <= tt && tt <= Fe.finallyLoc && (Fe = null);
                        var Mr = Fe ? Fe.completion : {};
                        return Mr.type = $e,
                            Mr.arg = tt,
                            Fe ? (this.method = "next",
                                this.next = Fe.finallyLoc,
                                Ge) : this.complete(Mr)
                    },
                    complete: function($e, tt) {
                        if ($e.type === "throw")
                            throw $e.arg;
                        return $e.type === "break" || $e.type === "continue" ? this.next = $e.arg : $e.type === "return" ? (this.rval = this.arg = $e.arg,
                            this.method = "return",
                            this.next = "end") : $e.type === "normal" && tt && (this.next = tt),
                            Ge
                    },
                    finish: function($e) {
                        for (var tt = this.tryEntries.length - 1; tt >= 0; --tt) {
                            var ot = this.tryEntries[tt];
                            if (ot.finallyLoc === $e)
                                return this.complete(ot.completion, ot.afterLoc),
                                    Nt(ot),
                                    Ge
                        }
                    },
                    catch: function($e) {
                        for (var tt = this.tryEntries.length - 1; tt >= 0; --tt) {
                            var ot = this.tryEntries[tt];
                            if (ot.tryLoc === $e) {
                                var on = ot.completion;
                                if (on.type === "throw") {
                                    var Fe = on.arg;
                                    Nt(ot)
                                }
                                return Fe
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function($e, tt, ot) {
                        return this.delegate = {
                            iterator: Ln($e),
                            resultName: tt,
                            nextLoc: ot
                        },
                        this.method === "next" && (this.arg = be),
                            Ge
                    }
                },
                me
        }
        function Pn(be, me, He, Ct, wt, Bt, En) {
            try {
                var Pe = be[Bt](En)
                    , W = Pe.value
            } catch (Ee) {
                return void He(Ee)
            }
            Pe.done ? me(W) : jn().resolve(W).then(Ct, wt)
        }
        function Ze(be) {
            return function() {
                var me = this
                    , He = arguments;
                return new (jn())(function(Ct, wt) {
                        var Bt = be.apply(me, He);
                        function En(W) {
                            Pn(Bt, Ct, wt, En, Pe, "next", W)
                        }
                        function Pe(W) {
                            Pn(Bt, Ct, wt, En, Pe, "throw", W)
                        }
                        En(void 0)
                    }
                )
            }
        }
        function Vn(be, me) {
            var He = ze()(be);
            if (Cn()) {
                var Ct = Cn()(be);
                me && (Ct = te()(Ct).call(Ct, function(wt) {
                    return Sn()(be, wt).enumerable
                })),
                    He.push.apply(He, Ct)
            }
            return He
        }
        function Se(be) {
            for (var me = 1; me < arguments.length; me++) {
                var He, Ct, wt = arguments[me] != null ? arguments[me] : {};
                me % 2 ? V()(He = Vn(Object(wt), !0)).call(He, function(Bt) {
                    Ue(be, Bt, wt[Bt])
                }) : wn() ? nr()(be, wn()(wt)) : V()(Ct = Vn(Object(wt))).call(Ct, function(Bt) {
                    _e()(be, Bt, Sn()(wt, Bt))
                })
            }
            return be
        }
        function Ue(be, me, He) {
            return (me = yt(me))in be ? _e()(be, me, {
                value: He,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : be[me] = He,
                be
        }
        function yt(be) {
            var me = Qt(be, "string");
            return Ot(me) == "symbol" ? me : me + ""
        }
        function Qt(be, me) {
            if (Ot(be) != "object" || !be)
                return be;
            var He = be[H()];
            if (He !== void 0) {
                var Ct = He.call(be, me || "default");
                if (Ot(Ct) != "object")
                    return Ct;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (me === "string" ? String : Number)(be)
        }
        var Hn = zt.reportV2Api.getConsumerHistoryList
            , cr = 60
            , Rr = "history_tab_isAcknowledge"
            , Pr = "; "
            , rt = 0;
        const de = {
            name: "History",
            components: {
                HistoryItem: Zt.HistoryItem
            },
            props: {
                observerSize: {
                    type: Object,
                    default: function() {
                        return {}
                    }
                },
                contactId: {
                    type: String,
                    default: ""
                },
                customerNumber: {
                    type: String,
                    default: ""
                },
                customerId: {
                    type: String,
                    default: ""
                },
                emailAddress: {
                    type: String,
                    default: ""
                },
                isProfileLoading: {
                    type: Boolean,
                    default: !1
                },
                engagementId: {
                    type: String,
                    default: ""
                }
            },
            setup: function() {
                var me = (0,
                    Zt.useDataSilentUpdate)({
                    queryFn: Hn
                })
                    , He = me.getData;
                return {
                    tGetConsumerHistoryList: He
                }
            },
            computed: Se(Se(Se({}, (0,
                ar.mapGetters)(["profiles"])), (0,
                ar.mapGetters)(["user"])), {}, {
                listLen: function() {
                    var me = this.viewList.length === 0 ? 0 : this.pagination.total;
                    return me
                },
                needShowAlert: function() {
                    return 0 < this.viewList.length && !this.isAcknowledged && !this.isConsumerAddedIntoAddressBook
                },
                isLoading: function() {
                    return this.isProfileLoading || this.isListLoading
                },
                userIds: function() {
                    var me = [this.contactId || "", this.customerId || "", (this.customerNumber || "").replace(/^\+/, ""), this.emailAddress || ""];
                    return me.join(Pr)
                },
                isConsumerAddedIntoAddressBook: function() {
                    return !!this.contactId
                },
                hasNoMoreData: function() {
                    return this.pagination.total <= this.viewList.length
                }
            }),
            data: function() {
                var me = this;
                return {
                    isListLoading: !1,
                    viewList: [],
                    isNoMore: !1,
                    pagination: {
                        total: 1,
                        size: 10,
                        sortValue: ""
                    },
                    isNewToOld: !0,
                    keyword: "",
                    tabIndex: 1,
                    debounceSearch: Mn()(function() {
                        return me.handleSearch()
                    }, 200),
                    isAcknowledged: !0,
                    throttleScroll: Mt()(this.onScroll, 200, {
                        leading: !1,
                        trailing: !0
                    })
                }
            },
            created: function() {
                this._no = ++rt,
                    this.log("created"),
                    this.updateFetchPageSize(),
                this.hasUserId() && this.fetchList(),
                    this.init()
            },
            beforeDestroy: function() {
                this.log("before destory"),
                    this.$bus.$off(Lt.EVENT_BUS_MAPS.CHOOSE_CONTACT, this.onChooseContact)
            },
            methods: {
                log: function() {
                    for (var me, He, Ct = arguments.length, wt = new Array(Ct), Bt = 0; Bt < Ct; Bt++)
                        wt[Bt] = arguments[Bt];
                    (me = console).log.apply(me, F()(He = ["[History][".concat(this._no, "]")]).call(He, wt))
                },
                updateFetchPageSize: function() {
                    var me = window.document.documentElement.clientHeight;
                    this.pagination.size = Math.floor(me / cr) + 1
                },
                handleSearch: function() {
                    var me = this;
                    return Ze(_r().mark(function He() {
                        return _r().wrap(function(wt) {
                            for (; ; )
                                switch (wt.prev = wt.next) {
                                    case 0:
                                        me.resetFetchCriteria(),
                                            me.fetchList();
                                    case 2:
                                    case "end":
                                        return wt.stop()
                                }
                        }, He)
                    }))()
                },
                resetFetchCriteria: function() {
                    this.pagination.total = 1,
                        this.pagination.sortValue = "",
                        this.viewList = []
                },
                onScroll: function() {
                    var me = this.$refs.list;
                    if (!me) {
                        console.error("cannot find list DOM");
                        return
                    }
                    var He = me.scrollHeight
                        , Ct = me.clientHeight;
                    He - 1 <= me.scrollTop + Ct && this.fetchList()
                },
                onSortClicked: function() {
                    this.isNewToOld = !this.isNewToOld,
                        this.resetFetchCriteria(),
                        this.fetchList()
                },
                onTabClick: function(me) {
                    this.tabIndex = z()(me)
                },
                fetchList: function() {
                    var me = this;
                    return Ze(_r().mark(function He() {
                        var Ct, wt, Bt, En, Pe;
                        return _r().wrap(function(Ee) {
                            for (; ; )
                                switch (Ee.prev = Ee.next) {
                                    case 0:
                                        if (wt = me.pagination.total > me.viewList.length,
                                            wt) {
                                            Ee.next = 4;
                                            break
                                        }
                                        return me.log("no more data"),
                                            Ee.abrupt("return");
                                    case 4:
                                        if (Bt = (0,
                                            tn.getSelectedUserId)(me.engagementId),
                                            En = {
                                                crmId: Bt,
                                                keyword: In()(me.keyword),
                                                size: me.pagination.size,
                                                order: "endTime",
                                                desc: me.isNewToOld,
                                                checkQueueAccess: !0,
                                                timezone: ((Ct = me.profiles) === null || Ct === void 0 ? void 0 : Ct.timezone) || "UTC"
                                            },
                                        me.pagination.sortValue && (En.sortValue = me.pagination.sortValue),
                                            Pe = me.userIds,
                                            me.addConsumerId(En)) {
                                            Ee.next = 11;
                                            break
                                        }
                                        return console.warn("we cannot identify current consumer, query list aborted."),
                                            Ee.abrupt("return");
                                    case 11:
                                        me.logFetchByWhatUserId(En),
                                            me.isListLoading = !0,
                                            me.tGetConsumerHistoryList(En, function(nt) {
                                                var Ie = ht(nt, 2)
                                                    , Be = Ie[0]
                                                    , st = Ie[1];
                                                if (!me.isSameConsumer(me.userIds, Pe) || En.keyword !== In()(me.keyword)) {
                                                    var jt;
                                                    return me.log(F()(jt = `case2 - timing sequence problem caught. The old response would be droppped.
          oldUserIds: `.concat(Pe, `
          newUserIds: `)).call(jt, me.userIds, `
        `)),
                                                        [Be, st]
                                                }
                                                if (me.isListLoading = !1,
                                                    Be)
                                                    return console.error("fetch error: ".concat(Be)),
                                                        me.$message.error(Be),
                                                        [Be, st];
                                                if (!st || !st.list)
                                                    return console.warn("fetch but is empty"),
                                                        [Be, st];
                                                if (me.pagination.total = st.totalSize || 0,
                                                    me.pagination.sortValue = st.sortValue || "",
                                                    !En.sortValue)
                                                    me.viewList = st.list;
                                                else {
                                                    var _t, Ge, It = [];
                                                    V()(_t = st.list).call(_t, function(cn) {
                                                        var ct;
                                                        te()(ct = me.viewList).call(ct, function(De) {
                                                            return De.engagementId === cn.engagementId
                                                        })[0] || It.push(cn)
                                                    }),
                                                        me.viewList = F()(Ge = []).call(Ge, Pt(me.viewList), It)
                                                }
                                                return [Be, st]
                                            });
                                    case 14:
                                    case "end":
                                        return Ee.stop()
                                }
                        }, He)
                    }))()
                },
                addConsumerId: function(me) {
                    var He = this.userIds.split(Pr)
                        , Ct = ht(He, 4)
                        , wt = Ct[0]
                        , Bt = Ct[1]
                        , En = Ct[2]
                        , Pe = Ct[3]
                        , W = me.crmId;
                    return wt && wt !== Bt ? (me.contactId = wt,
                        !0) : Pe ? (me.customerEmail = Pe,
                        !0) : (Bt && !W && (me.customerId = Bt),
                    En && (me.customerNumber = En),
                        !wt && !Bt && !En && !Pe && !W ? (console.error(`[ASSERT] we cannot identify current consumer because there's no customer id info at all.
          userIds: `.concat(this.userIds, `
        `)),
                            !1) : !0)
                },
                isSameConsumer: function(me, He) {
                    var Ct, wt = ht(me, 4), Bt = wt[0], En = wt[1], Pe = wt[2], W = wt[3], Ee = ht(He, 4), nt = Ee[0], Ie = Ee[1], Be = Ee[2], st = Ee[3];
                    return Bt && Bt === nt ? !0 : (Bt || nt) && Bt !== nt ? !1 : En && En === Ie ? !0 : (En || Ie) && En !== Ie ? !1 : Pe && Pe === Be ? !0 : (Pe || Be) && Pe !== Be ? !1 : W && W === st ? !0 : ((W || st) && W !== st || console.error(F()(Ct = `invalid case found.
        prevContact: `.concat(pe()(me), `
        currContact: `)).call(Ct, pe()(He), `
      `)),
                        !1)
                },
                init: function() {
                    var me = this.user || {}
                        , He = me.id;
                    He && (this.isAcknowledged = !!this.readAlertFlag()[He]),
                        this.$bus.$on(Lt.EVENT_BUS_MAPS.CHOOSE_CONTACT, this.onChooseContact)
                },
                onChooseContact: function(me) {
                    var He, Ct = me.contactId, wt = me.name;
                    this.log(F()(He = "switch to contact: ".concat(Ct, "(")).call(He, wt, ")")),
                    Ct || console.assert("contactId is invalid")
                },
                readAlertFlag: function() {
                    return JSON.parse(localStorage.getItem(Rr)) || {}
                },
                onCloseClick: function() {
                    this.isAcknowledged = !0;
                    var me = this.readAlertFlag();
                    me[this.user.id] = this.isAcknowledged,
                        localStorage.setItem(Rr, pe()(me))
                },
                hasUserId: function() {
                    var me = this.userIds.split(Pr)
                        , He = (0,
                        tn.getSelectedUserId)(this.engagementId);
                    console.log(He, "getSelectedUser(this.engagementId).id");
                    var Ct = He;
                    return me.push(Ct),
                        X()(me).call(me, function(wt) {
                            return !!wt
                        })
                },
                logFetchByWhatUserId: function(me) {
                    for (var He = ["contactId", "customerId", "customerNumber"], Ct = [], wt = 0, Bt = He.length; wt < Bt; wt++) {
                        var En = He[wt];
                        if (me[En]) {
                            var Pe;
                            Ct.push(F()(Pe = "".concat(En, ": ")).call(Pe, me[En]))
                        }
                    }
                    this.log(`fetch history list with id: 
        `.concat(pe()(Ct.join(`
`)), `
      `))
                }
            },
            watch: {
                listLen: function(me) {
                    this.$emit("historyEngagementListChange", me)
                },
                userIds: function(me, He) {
                    var Ct, wt, Bt, En, Pe, W, Ee, nt = me.split(Pr), Ie = He.split(Pr), Be = this.isSameConsumer(Ie, nt);
                    if (!Be) {
                        var st = ht(nt, 4)
                            , jt = st[0]
                            , _t = st[1]
                            , Ge = st[2]
                            , It = st[3]
                            , cn = ht(Ie, 4)
                            , ct = cn[0]
                            , De = cn[1]
                            , bt = cn[2]
                            , un = cn[3];
                        this.log(F()(Ct = F()(wt = F()(Bt = `userId change triggers fetch list.
          contactId: `.concat(jt !== ct ? F()(En = "".concat(ct, " -> ")).call(En, jt) : jt, `
          customerId: `)).call(Bt, _t !== De ? F()(Pe = "".concat(De, " -> ")).call(Pe, _t) : _t, `
          customerNumber: `)).call(wt, Ge !== bt ? F()(W = "".concat(bt, " -> ")).call(W, Ge) : Ge, `,
          emailAddress: `)).call(Ct, It !== un ? F()(Ee = "".concat(un, " -> ")).call(Ee, It) : It, `
        `)),
                            this.isListLoading = !1,
                            this.resetFetchCriteria(),
                            this.fetchList()
                    }
                }
            }
        };
        var ye = a(50855)
            , Le = (0,
            ye.A)(de, M, Q, !1, null, "c4377b08", null);
        const Te = Le.exports
    }
    ,
    90664: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                SideContentType: () => jt,
                default: () => cn
            });
        var Y = a(16043)
            , J = a(14950)
            , $ = a.n(J)
            , k = a(39084)
            , P = a.n(k)
            , M = a(61849)
            , Q = a.n(M)
            , O = a(81352)
            , F = a.n(O)
            , D = a(84653)
            , z = a.n(D)
            , G = a(59814)
            , V = a.n(G)
            , K = a(89099)
            , te = a.n(K)
            , ee = a(44987)
            , pe = a.n(ee)
            , ne = a(34622)
            , X = a.n(ne)
            , x = a(27785)
            , H = a.n(x)
            , q = a(83030)
            , _e = a.n(q)
            , ie = a(5339)
            , ze = a.n(ie);
        function Oe(ct) {
            "@babel/helpers - typeof";
            return Oe = typeof _e() == "function" && typeof ze() == "symbol" ? function(De) {
                    return typeof De
                }
                : function(De) {
                    return De && typeof _e() == "function" && De.constructor === _e() && De !== _e().prototype ? "symbol" : typeof De
                }
                ,
                Oe(ct)
        }
        function Cn(ct, De) {
            var bt = F()(ct);
            if (z()) {
                var un = z()(ct);
                De && (un = V()(un).call(un, function(ur) {
                    return te()(ct, ur).enumerable
                })),
                    bt.push.apply(bt, un)
            }
            return bt
        }
        function at(ct) {
            for (var De = 1; De < arguments.length; De++) {
                var bt, un, ur = arguments[De] != null ? arguments[De] : {};
                De % 2 ? pe()(bt = Cn(Object(ur), !0)).call(bt, function(_n) {
                    Sn(ct, _n, ur[_n])
                }) : X() ? H()(ct, X()(ur)) : pe()(un = Cn(Object(ur))).call(un, function(_n) {
                    Q()(ct, _n, te()(ur, _n))
                })
            }
            return ct
        }
        function Sn(ct, De, bt) {
            return (De = Ce(De))in ct ? Q()(ct, De, {
                value: bt,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : ct[De] = bt,
                ct
        }
        function Ce(ct) {
            var De = wn(ct, "string");
            return Oe(De) == "symbol" ? De : De + ""
        }
        function wn(ct, De) {
            if (Oe(ct) != "object" || !ct)
                return ct;
            var bt = ct[P()];
            if (bt !== void 0) {
                var un = bt.call(ct, De || "default");
                if (Oe(un) != "object")
                    return un;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (De === "string" ? String : Number)(ct)
        }
        var Ae = function() {
            var De = this
                , bt = De._self._c;
            return bt("zm-form", {
                class: {
                    container: !0,
                    "hide-content": !De.showSideContent
                }
            }, [bt("div", {
                ref: "sideContent",
                staticClass: "side-content",
                on: {
                    keydown: De.handleTab
                }
            }, [bt("div", {
                staticClass: "icon-close-container"
            }, [bt("div", {
                ref: "wrapContent",
                attrs: {
                    tabindex: De.showSideContent || De.$slots.default ? 0 : -1,
                    role: "button"
                }
            }), De._v(" "), bt("div", {
                ref: "closeIconRef",
                staticClass: "icon",
                attrs: {
                    tabindex: De.showSideContent || De.$slots.default ? 0 : -1,
                    role: "button",
                    "aria-label": De.ariaLabelOfCloseIcon
                },
                on: {
                    click: De.onCloseClick,
                    keydown: [function(un) {
                        var ur;
                        return !$()(ur = un.type).call(ur, "key") && De._k(un.keyCode, "enter", 13, un.key, "Enter") ? null : De.onCloseClick.apply(null, arguments)
                    }
                        , function(un) {
                            var ur;
                            return !$()(ur = un.type).call(ur, "key") && De._k(un.keyCode, "space", 32, un.key, [" ", "Spacebar"]) ? null : De.onCloseClick.apply(null, arguments)
                        }
                    ]
                }
            }, [bt(Y.A)], 1)]), De._v(" "), bt("div", {
                staticClass: "content"
            }, [De.contentType === De.SideContentType.ViewDetails ? bt("HistoryDetails", De._b({}, "HistoryDetails", at({}, De.contentPayload), !1)) : De.contentType === De.SideContentType.VideoRecording ? bt("VoiceVideoRecordWithTitle", {
                attrs: {
                    engagement: De.contentPayload,
                    "voice-list-height": "auto",
                    "video-list-height": "auto"
                }
            }, [bt("div", {
                staticClass: "records-title"
            }, [bt("div", {
                staticClass: "records-title-content"
            }, [De._v(`
            ` + De._s(De.title) + `
          `)]), De._v(" "), bt("div", {
                staticClass: "title-engagement-id"
            }, [De._v(`
            ` + De._s(De.$t("cci.profile.tabs.history.engagement")) + `:
            ` + De._s(De.contentPayload.engagementId) + `
          `)])])]) : De.contentType === De.SideContentType.MessageTranscript ? bt("MessageTranscript", {
                staticClass: "message-transcript-crm-sidecontent",
                attrs: {
                    item: De.contentPayload
                }
            }) : De._e(), De._v(" "), De._t("default")], 2)])])
        }
            , nr = []
            , mt = a(65770)
            , jn = a.n(mt)
            , ve = a(12608)
            , or = a.n(ve)
            , pt = a(74061)
            , je = a(83266)
            , Ke = function() {
            var De, bt, un, ur, _n = this, Jn = _n._self._c;
            return Jn("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: _n.pageLoading,
                    expression: "pageLoading"
                }],
                staticClass: "view-details-container"
            }, [Jn("div", {
                staticClass: "title-container"
            }, [_n.taskDisposition ? Jn("zm-tooltip", {
                attrs: {
                    content: _n.taskDisposition,
                    placement: "top-start"
                }
            }, [Jn("div", {
                staticClass: "zm_ellipsis disposition"
            }, [_n._v(`
        ` + _n._s(_n.taskDisposition) + `
      `)])]) : _n._e(), _n._v(" "), Jn("div", {
                staticClass: "sub-title"
            }, [_n._v(_n._s(_n.agentSubtitle))]), _n._v(" "), Jn("div", {
                staticClass: "engagement-detail"
            }, [_n._v(`
      ` + _n._s(_n.$t("cci.profile.tabs.history.engagement")) + `:
      `), Jn("span", {
                staticClass: "engagement-detail-id"
            }, [_n._v(_n._s(_n.engagementId))])])], 1), _n._v(" "), Jn("zm-collapse", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: ((De = _n.variableData.customGlobalVariables) === null || De === void 0 ? void 0 : De.length) || ((bt = _n.variableData.systemGlobalVariables) === null || bt === void 0 ? void 0 : bt.length),
                    expression: `
      variableData.customGlobalVariables?.length ||
      variableData.systemGlobalVariables?.length
    `
                }],
                staticClass: "fold-container history-detail-variables",
                class: {
                    "is-current-alive": _n.activeVariables[0] === "variables"
                },
                model: {
                    value: _n.activeVariables,
                    callback: function(xe) {
                        _n.activeVariables = xe
                    },
                    expression: "activeVariables"
                }
            }, [Jn("zm-collapse-item", {
                staticClass: "item-container",
                attrs: {
                    title: _n.$t("cci.profile.tabs.history.details.variables"),
                    name: "variables"
                }
            }, [Jn("zm-scrollbar", {
                staticClass: "variable-content"
            }, [Jn("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: (un = _n.variableData.systemGlobalVariables) === null || un === void 0 ? void 0 : un.length,
                    expression: "variableData.systemGlobalVariables?.length"
                }]
            }, [Jn("div", {
                staticClass: "variable-title"
            }, [_n._v(`
            ` + _n._s(_n.$t("cci.notification.systemVariables")) + `
          `)]), _n._v(" "), Jn("VariableList", {
                attrs: {
                    id: "custom-profile-wrap",
                    tabindex: "0",
                    "variables-list": _n.variableData.systemGlobalVariables,
                    role: "group"
                }
            })], 1), _n._v(" "), Jn("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: (ur = _n.variableData.customGlobalVariables) === null || ur === void 0 ? void 0 : ur.length,
                    expression: "variableData.customGlobalVariables?.length"
                }]
            }, [Jn("div", {
                staticClass: "variable-title"
            }, [_n._v(`
            ` + _n._s(_n.$t("cci.notification.customVariables")) + `
          `)]), _n._v(" "), Jn("VariableList", {
                attrs: {
                    id: "custom-profile-wrap",
                    tabindex: "0",
                    "variables-list": _n.variableData.customGlobalVariables,
                    role: "group"
                }
            })], 1)])], 1)], 1), _n._v(" "), Jn("zm-collapse", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: _n.notesList.length > 0,
                    expression: "notesList.length > 0"
                }],
                staticClass: "fold-container history-detail-notes",
                class: {
                    "is-current-alive": _n.activeNote[0] === "notes"
                },
                model: {
                    value: _n.activeNote,
                    callback: function(xe) {
                        _n.activeNote = xe
                    },
                    expression: "activeNote"
                }
            }, [Jn("zm-collapse-item", {
                staticClass: "item-container",
                attrs: {
                    title: _n.$t("cci.profile.tabs.history.details.notes"),
                    name: "notes"
                }
            }, [Jn("zm-scrollbar", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: _n.isLoadingNotes,
                    expression: "isLoadingNotes"
                }],
                staticClass: "item-container"
            }, [_n.notesList.length > 0 ? Jn("div", {
                staticClass: "session__notes"
            }, _n._l(_n.notesList, function(Ut) {
                return Jn("div", {
                    key: Ut.id,
                    staticClass: "session-notesitem"
                }, [Jn("div", {
                    staticClass: "session-notesitem_time"
                }, [_n._v(`
              ` + _n._s(_n._f("toLocaleDate")(Ut.createTime, _n.getFormatStr(!1, " \xB7 "), _n.tz)) + `
              \xB7
              ` + _n._s(Ut.modifyByUserName) + `
              `), Jn("zm-tooltip", {
                    staticClass: "item",
                    attrs: {
                        content: _n._f("toLocaleDate")(Ut.modifyTime, _n.getFormatStr(!1, " \xB7 "), _n.tz),
                        placement: "top"
                    }
                }, [Ut.modifyTime !== Ut.createTime ? Jn("span", [_n._v(_n._s(_n.$t("cci.currentSession.edited")))]) : Ut.type ? Jn("span", [_n._v(_n._s(_n.$t("cci.currentSession.smartNote")))]) : _n._e()])], 1), _n._v(" "), Jn("div", {
                    staticClass: "session-notesitem_txt"
                }, [Jn("RichInput", {
                    attrs: {
                        value: Ut.richTextNotes,
                        readonly: !0,
                        "hide-toolbar": !0,
                        "show-border": !1
                    }
                })], 1)])
            }), 0) : _n._e()])], 1)], 1), _n._v(" "), Jn("zm-collapse", {
                staticClass: "fold-container history-detail-events",
                class: {
                    "is-current-alive": _n.activeEvent[0] === "events"
                },
                model: {
                    value: _n.activeEvent,
                    callback: function(xe) {
                        _n.activeEvent = xe
                    },
                    expression: "activeEvent"
                }
            }, [Jn("zm-collapse-item", {
                staticClass: "item-container",
                attrs: {
                    title: _n.$t("cci.profile.tabs.history.events"),
                    name: "events"
                }
            }, [Jn("EngagementEventsV2", {
                ref: "engagementEvents",
                staticClass: "item-container",
                attrs: {
                    id: _n.engagementId,
                    live: _n.iconLive,
                    "is-live2": _n.isLive || _n.inViewVideo || _n.inViewPhone,
                    "channel-type": _n.taskChannelType,
                    "calc-channel-name": _n.calcChannelName,
                    "is-in-video": _n.isInVideo,
                    "is-in-chat": _n.isInChat,
                    disabled: !_n.engagementId,
                    "is-email-channel": _n.isEmailChannel,
                    "always-use-new-api": !0
                }
            })], 1)], 1)], 1)
        }
            , it = []
            , Ne = a(69761)
            , Gt = a.n(Ne)
            , en = a(53584)
            , rn = a.n(en)
            , Tt = a(83537)
            , vr = a.n(Tt)
            , rr = a(65888)
            , kr = a.n(rr)
            , Re = a(34187)
            , Et = a.n(Re)
            , An = a(73007)
            , Yt = a.n(An)
            , gn = a(23716)
            , Qe = a.n(gn)
            , ar = a(2208)
            , zt = a.n(ar)
            , Zt = a(39864)
            , Lt = a.n(Zt)
            , gr = a(8233)
            , Mn = a.n(gr)
            , U = a(92336)
            , Mt = a.n(U)
            , Kn = a(53578)
            , In = a(76856)
            , tn = a(6372)
            , Ot = a(76709)
            , Pt = a(56405)
            , $n = a(90981)
            , dt = a(72785)
            , Xe = a(20537)
            , ht = a(68156)
            , yn = function() {
            var De = this
                , bt = De._self._c;
            return bt("div", De._l(De.variablesList, function(un) {
                var ur;
                return bt("zm-form-item", {
                    key: un.globalVariableId,
                    attrs: {
                        label: un.globalVariableDisplayName || un.globalVariableName,
                        tabindex: "-1"
                    }
                }, [un.dataType === "Boolean" ? bt("zm-checkbox", {
                    attrs: {
                        value: un.value === "Yes" || un.value === "true",
                        disabled: !0
                    }
                }) : un.dataType === "Percent" ? bt("span", {
                    class: {
                        "line-content": De.isFromProfile
                    }
                }, [De._v(`
      ` + De._s(un.value ? un.value + "%" : "--"))]) : Gt()(ur = ["URL"]).call(ur, un.dataType) ? bt("span", {
                    class: {
                        "line-content": De.isFromProfile
                    },
                    attrs: {
                        title: un.value || ""
                    }
                }, [un.value ? bt("zm-button", {
                    staticStyle: {
                        padding: "0",
                        "vertical-align": "initial"
                    },
                    attrs: {
                        href: un.value,
                        type: "link",
                        target: "_blank"
                    }
                }, [De._v(`
        ` + De._s(un.value) + `
      `)]) : [De._v(" -- ")]], 2) : un.dataType === "DateTime" ? bt("span", {
                    class: {
                        "line-content": De.isFromProfile,
                        zm_ellipsis: !De.isFromProfile
                    },
                    attrs: {
                        title: un.value || ""
                    }
                }, [un.value ? bt("span", [De._v(`
        ` + De._s(De._f("toLocaleDate")(De.getUtcTimeStamp(un.value), De.getFormatStr(!1, " "), De.tz)) + `
      `)]) : bt("span", [De._v("--")])]) : bt("span", {
                    class: {
                        "line-content": De.isFromProfile,
                        zm_ellipsis: !De.isFromProfile
                    },
                    attrs: {
                        title: un.value || ""
                    }
                }, [De._v(`
      ` + De._s(un.value || "--"))])], 1)
            }), 1)
        }
            , dn = []
            , Gn = a(83314);
        const Zn = {
            name: "VariablesList",
            mixins: [Gn.A],
            props: {
                variablesList: {
                    type: Array,
                    default: function() {
                        return []
                    }
                },
                isFromProfile: {
                    type: Boolean,
                    default: !0
                }
            }
        };
        var _r = a(50855)
            , Pn = (0,
            _r.A)(Zn, yn, dn, !1, null, "771a9073", null);
        const Ze = Pn.exports;
        function Vn(ct) {
            "@babel/helpers - typeof";
            return Vn = typeof _e() == "function" && typeof ze() == "symbol" ? function(De) {
                    return typeof De
                }
                : function(De) {
                    return De && typeof _e() == "function" && De.constructor === _e() && De !== _e().prototype ? "symbol" : typeof De
                }
                ,
                Vn(ct)
        }
        function Se(ct, De) {
            return cr(ct) || Hn(ct, De) || yt(ct, De) || Ue()
        }
        function Ue() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function yt(ct, De) {
            if (ct) {
                var bt;
                if (typeof ct == "string")
                    return Qt(ct, De);
                var un = zt()(bt = {}.toString.call(ct)).call(bt, 8, -1);
                return un === "Object" && ct.constructor && (un = ct.constructor.name),
                    un === "Map" || un === "Set" ? Mt()(ct) : un === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(un) ? Qt(ct, De) : void 0
            }
        }
        function Qt(ct, De) {
            (De == null || De > ct.length) && (De = ct.length);
            for (var bt = 0, un = Array(De); bt < De; bt++)
                un[bt] = ct[bt];
            return un
        }
        function Hn(ct, De) {
            var bt = ct == null ? null : typeof _e() < "u" && Mn()(ct) || ct["@@iterator"];
            if (bt != null) {
                var un, ur, _n, Jn, Ut = [], xe = !0, We = !1;
                try {
                    if (_n = (bt = bt.call(ct)).next,
                    De === 0) {
                        if (Object(bt) !== bt)
                            return;
                        xe = !1
                    } else
                        for (; !(xe = (un = _n.call(bt)).done) && (Ut.push(un.value),
                        Ut.length !== De); xe = !0)
                            ;
                } catch (Nt) {
                    We = !0,
                        ur = Nt
                } finally {
                    try {
                        if (!xe && bt.return != null && (Jn = bt.return(),
                        Object(Jn) !== Jn))
                            return
                    } finally {
                        if (We)
                            throw ur
                    }
                }
                return Ut
            }
        }
        function cr(ct) {
            if (Lt()(ct))
                return ct
        }
        function Rr(ct, De) {
            var bt = F()(ct);
            if (z()) {
                var un = z()(ct);
                De && (un = V()(un).call(un, function(ur) {
                    return te()(ct, ur).enumerable
                })),
                    bt.push.apply(bt, un)
            }
            return bt
        }
        function Pr(ct) {
            for (var De = 1; De < arguments.length; De++) {
                var bt, un, ur = arguments[De] != null ? arguments[De] : {};
                De % 2 ? pe()(bt = Rr(Object(ur), !0)).call(bt, function(_n) {
                    rt(ct, _n, ur[_n])
                }) : X() ? H()(ct, X()(ur)) : pe()(un = Rr(Object(ur))).call(un, function(_n) {
                    Q()(ct, _n, te()(ur, _n))
                })
            }
            return ct
        }
        function rt(ct, De, bt) {
            return (De = ae(De))in ct ? Q()(ct, De, {
                value: bt,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : ct[De] = bt,
                ct
        }
        function ae(ct) {
            var De = de(ct, "string");
            return Vn(De) == "symbol" ? De : De + ""
        }
        function de(ct, De) {
            if (Vn(ct) != "object" || !ct)
                return ct;
            var bt = ct[P()];
            if (bt !== void 0) {
                var un = bt.call(ct, De || "default");
                if (Vn(un) != "object")
                    return un;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (De === "string" ? String : Number)(ct)
        }
        function ye() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            ye = function() {
                return De
            }
            ;
            var ct, De = {}, bt = Object.prototype, un = bt.hasOwnProperty, ur = Q() || function(Kt, St, Xt) {
                Kt[St] = Xt.value
            }
                , _n = typeof _e() == "function" ? _e() : {}, Jn = _n.iterator || "@@iterator", Ut = _n.asyncIterator || "@@asyncIterator", xe = _n.toStringTag || "@@toStringTag";
            function We(Kt, St, Xt) {
                return Q()(Kt, St, {
                    value: Xt,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    Kt[St]
            }
            try {
                We({}, "")
            } catch {
                We = function(Xt, Rn, kn) {
                    return Xt[Rn] = kn
                }
            }
            function Nt(Kt, St, Xt, Rn) {
                var kn = St && St.prototype instanceof on ? St : on
                    , pr = kr()(kn.prototype)
                    , Or = new gt(Rn || []);
                return ur(pr, "_invoke", {
                    value: tr(Kt, Xt, Or)
                }),
                    pr
            }
            function hn(Kt, St, Xt) {
                try {
                    return {
                        type: "normal",
                        arg: Kt.call(St, Xt)
                    }
                } catch (Rn) {
                    return {
                        type: "throw",
                        arg: Rn
                    }
                }
            }
            De.wrap = Nt;
            var Ln = "suspendedStart"
                , fn = "suspendedYield"
                , $e = "executing"
                , tt = "completed"
                , ot = {};
            function on() {}
            function Fe() {}
            function Mr() {}
            var Jt = {};
            We(Jt, Jn, function() {
                return this
            });
            var Dt = Et()
                , an = Dt && Dt(Dt(Ft([])));
            an && an !== bt && un.call(an, Jn) && (Jt = an);
            var Bn = Mr.prototype = on.prototype = kr()(Jt);
            function vn(Kt) {
                var St;
                pe()(St = ["next", "throw", "return"]).call(St, function(Xt) {
                    We(Kt, Xt, function(Rn) {
                        return this._invoke(Xt, Rn)
                    })
                })
            }
            function nn(Kt, St) {
                function Xt(kn, pr, Or, we) {
                    var lr = hn(Kt[kn], Kt, pr);
                    if (lr.type !== "throw") {
                        var Tr = lr.arg
                            , Lr = Tr.value;
                        return Lr && Vn(Lr) == "object" && un.call(Lr, "__await") ? St.resolve(Lr.__await).then(function(Ur) {
                            Xt("next", Ur, Or, we)
                        }, function(Ur) {
                            Xt("throw", Ur, Or, we)
                        }) : St.resolve(Lr).then(function(Ur) {
                            Tr.value = Ur,
                                Or(Tr)
                        }, function(Ur) {
                            return Xt("throw", Ur, Or, we)
                        })
                    }
                    we(lr.arg)
                }
                var Rn;
                ur(this, "_invoke", {
                    value: function(pr, Or) {
                        function we() {
                            return new St(function(lr, Tr) {
                                    Xt(pr, Or, lr, Tr)
                                }
                            )
                        }
                        return Rn = Rn ? Rn.then(we, we) : we()
                    }
                })
            }
            function tr(Kt, St, Xt) {
                var Rn = Ln;
                return function(kn, pr) {
                    if (Rn === $e)
                        throw Error("Generator is already running");
                    if (Rn === tt) {
                        if (kn === "throw")
                            throw pr;
                        return {
                            value: ct,
                            done: !0
                        }
                    }
                    for (Xt.method = kn,
                             Xt.arg = pr; ; ) {
                        var Or = Xt.delegate;
                        if (Or) {
                            var we = Ve(Or, Xt);
                            if (we) {
                                if (we === ot)
                                    continue;
                                return we
                            }
                        }
                        if (Xt.method === "next")
                            Xt.sent = Xt._sent = Xt.arg;
                        else if (Xt.method === "throw") {
                            if (Rn === Ln)
                                throw Rn = tt,
                                    Xt.arg;
                            Xt.dispatchException(Xt.arg)
                        } else
                            Xt.method === "return" && Xt.abrupt("return", Xt.arg);
                        Rn = $e;
                        var lr = hn(Kt, St, Xt);
                        if (lr.type === "normal") {
                            if (Rn = Xt.done ? tt : fn,
                            lr.arg === ot)
                                continue;
                            return {
                                value: lr.arg,
                                done: Xt.done
                            }
                        }
                        lr.type === "throw" && (Rn = tt,
                            Xt.method = "throw",
                            Xt.arg = lr.arg)
                    }
                }
            }
            function Ve(Kt, St) {
                var Xt = St.method
                    , Rn = Kt.iterator[Xt];
                if (Rn === ct)
                    return St.delegate = null,
                    Xt === "throw" && Kt.iterator.return && (St.method = "return",
                        St.arg = ct,
                        Ve(Kt, St),
                    St.method === "throw") || Xt !== "return" && (St.method = "throw",
                        St.arg = new TypeError("The iterator does not provide a '" + Xt + "' method")),
                        ot;
                var kn = hn(Rn, Kt.iterator, St.arg);
                if (kn.type === "throw")
                    return St.method = "throw",
                        St.arg = kn.arg,
                        St.delegate = null,
                        ot;
                var pr = kn.arg;
                return pr ? pr.done ? (St[Kt.resultName] = pr.value,
                    St.next = Kt.nextLoc,
                St.method !== "return" && (St.method = "next",
                    St.arg = ct),
                    St.delegate = null,
                    ot) : pr : (St.method = "throw",
                    St.arg = new TypeError("iterator result is not an object"),
                    St.delegate = null,
                    ot)
            }
            function R(Kt) {
                var St = {
                    tryLoc: Kt[0]
                };
                1 in Kt && (St.catchLoc = Kt[1]),
                2 in Kt && (St.finallyLoc = Kt[2],
                    St.afterLoc = Kt[3]),
                    this.tryEntries.push(St)
            }
            function ce(Kt) {
                var St = Kt.completion || {};
                St.type = "normal",
                    delete St.arg,
                    Kt.completion = St
            }
            function gt(Kt) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    pe()(Kt).call(Kt, R, this),
                    this.reset(!0)
            }
            function Ft(Kt) {
                if (Kt || Kt === "") {
                    var St = Kt[Jn];
                    if (St)
                        return St.call(Kt);
                    if (typeof Kt.next == "function")
                        return Kt;
                    if (!isNaN(Kt.length)) {
                        var Xt = -1
                            , Rn = function kn() {
                            for (; ++Xt < Kt.length; )
                                if (un.call(Kt, Xt))
                                    return kn.value = Kt[Xt],
                                        kn.done = !1,
                                        kn;
                            return kn.value = ct,
                                kn.done = !0,
                                kn
                        };
                        return Rn.next = Rn
                    }
                }
                throw new TypeError(Vn(Kt) + " is not iterable")
            }
            return Fe.prototype = Mr,
                ur(Bn, "constructor", {
                    value: Mr,
                    configurable: !0
                }),
                ur(Mr, "constructor", {
                    value: Fe,
                    configurable: !0
                }),
                Fe.displayName = We(Mr, xe, "GeneratorFunction"),
                De.isGeneratorFunction = function(Kt) {
                    var St = typeof Kt == "function" && Kt.constructor;
                    return !!St && (St === Fe || (St.displayName || St.name) === "GeneratorFunction")
                }
                ,
                De.mark = function(Kt) {
                    return Yt() ? Yt()(Kt, Mr) : (Kt.__proto__ = Mr,
                        We(Kt, xe, "GeneratorFunction")),
                        Kt.prototype = kr()(Bn),
                        Kt
                }
                ,
                De.awrap = function(Kt) {
                    return {
                        __await: Kt
                    }
                }
                ,
                vn(nn.prototype),
                We(nn.prototype, Ut, function() {
                    return this
                }),
                De.AsyncIterator = nn,
                De.async = function(Kt, St, Xt, Rn, kn) {
                    kn === void 0 && (kn = vr());
                    var pr = new nn(Nt(Kt, St, Xt, Rn),kn);
                    return De.isGeneratorFunction(St) ? pr : pr.next().then(function(Or) {
                        return Or.done ? Or.value : pr.next()
                    })
                }
                ,
                vn(Bn),
                We(Bn, xe, "Generator"),
                We(Bn, Jn, function() {
                    return this
                }),
                We(Bn, "toString", function() {
                    return "[object Generator]"
                }),
                De.keys = function(Kt) {
                    var St = Object(Kt)
                        , Xt = [];
                    for (var Rn in St)
                        Xt.push(Rn);
                    return Qe()(Xt).call(Xt),
                        function kn() {
                            for (; Xt.length; ) {
                                var pr = Xt.pop();
                                if (pr in St)
                                    return kn.value = pr,
                                        kn.done = !1,
                                        kn
                            }
                            return kn.done = !0,
                                kn
                        }
                }
                ,
                De.values = Ft,
                gt.prototype = {
                    constructor: gt,
                    reset: function(St) {
                        var Xt;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = ct,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = ct,
                            pe()(Xt = this.tryEntries).call(Xt, ce),
                            !St)
                            for (var Rn in this)
                                Rn.charAt(0) === "t" && un.call(this, Rn) && !isNaN(+zt()(Rn).call(Rn, 1)) && (this[Rn] = ct)
                    },
                    stop: function() {
                        this.done = !0;
                        var St = this.tryEntries[0].completion;
                        if (St.type === "throw")
                            throw St.arg;
                        return this.rval
                    },
                    dispatchException: function(St) {
                        if (this.done)
                            throw St;
                        var Xt = this;
                        function Rn(Tr, Lr) {
                            return Or.type = "throw",
                                Or.arg = St,
                                Xt.next = Tr,
                            Lr && (Xt.method = "next",
                                Xt.arg = ct),
                                !!Lr
                        }
                        for (var kn = this.tryEntries.length - 1; kn >= 0; --kn) {
                            var pr = this.tryEntries[kn]
                                , Or = pr.completion;
                            if (pr.tryLoc === "root")
                                return Rn("end");
                            if (pr.tryLoc <= this.prev) {
                                var we = un.call(pr, "catchLoc")
                                    , lr = un.call(pr, "finallyLoc");
                                if (we && lr) {
                                    if (this.prev < pr.catchLoc)
                                        return Rn(pr.catchLoc, !0);
                                    if (this.prev < pr.finallyLoc)
                                        return Rn(pr.finallyLoc)
                                } else if (we) {
                                    if (this.prev < pr.catchLoc)
                                        return Rn(pr.catchLoc, !0)
                                } else {
                                    if (!lr)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < pr.finallyLoc)
                                        return Rn(pr.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(St, Xt) {
                        for (var Rn = this.tryEntries.length - 1; Rn >= 0; --Rn) {
                            var kn = this.tryEntries[Rn];
                            if (kn.tryLoc <= this.prev && un.call(kn, "finallyLoc") && this.prev < kn.finallyLoc) {
                                var pr = kn;
                                break
                            }
                        }
                        pr && (St === "break" || St === "continue") && pr.tryLoc <= Xt && Xt <= pr.finallyLoc && (pr = null);
                        var Or = pr ? pr.completion : {};
                        return Or.type = St,
                            Or.arg = Xt,
                            pr ? (this.method = "next",
                                this.next = pr.finallyLoc,
                                ot) : this.complete(Or)
                    },
                    complete: function(St, Xt) {
                        if (St.type === "throw")
                            throw St.arg;
                        return St.type === "break" || St.type === "continue" ? this.next = St.arg : St.type === "return" ? (this.rval = this.arg = St.arg,
                            this.method = "return",
                            this.next = "end") : St.type === "normal" && Xt && (this.next = Xt),
                            ot
                    },
                    finish: function(St) {
                        for (var Xt = this.tryEntries.length - 1; Xt >= 0; --Xt) {
                            var Rn = this.tryEntries[Xt];
                            if (Rn.finallyLoc === St)
                                return this.complete(Rn.completion, Rn.afterLoc),
                                    ce(Rn),
                                    ot
                        }
                    },
                    catch: function(St) {
                        for (var Xt = this.tryEntries.length - 1; Xt >= 0; --Xt) {
                            var Rn = this.tryEntries[Xt];
                            if (Rn.tryLoc === St) {
                                var kn = Rn.completion;
                                if (kn.type === "throw") {
                                    var pr = kn.arg;
                                    ce(Rn)
                                }
                                return pr
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(St, Xt, Rn) {
                        return this.delegate = {
                            iterator: Ft(St),
                            resultName: Xt,
                            nextLoc: Rn
                        },
                        this.method === "next" && (this.arg = ct),
                            ot
                    }
                },
                De
        }
        function Le(ct, De, bt, un, ur, _n, Jn) {
            try {
                var Ut = ct[_n](Jn)
                    , xe = Ut.value
            } catch (We) {
                return void bt(We)
            }
            Ut.done ? De(xe) : vr().resolve(xe).then(un, ur)
        }
        function Te(ct) {
            return function() {
                var De = this
                    , bt = arguments;
                return new (vr())(function(un, ur) {
                        var _n = ct.apply(De, bt);
                        function Jn(xe) {
                            Le(_n, un, ur, Jn, Ut, "next", xe)
                        }
                        function Ut(xe) {
                            Le(_n, un, ur, Jn, Ut, "throw", xe)
                        }
                        Jn(void 0)
                    }
                )
            }
        }
        var be = In.variableApi.getHistoryVariablesOnEngagement
            , me = In.reportV2Api.getHistoryList
            , He = In.notesApi.getNotes
            , Ct = In.notesApi.getHistoricNotes;
        const Bt = {
            name: "HistoryDetails",
            props: {
                engagementId: String,
                id: String,
                loading: Boolean,
                disabled: Boolean,
                events: {
                    type: Array,
                    default: function() {
                        return []
                    }
                },
                isFromHistoryData: {
                    type: Boolean,
                    default: !1
                },
                cacheVariables: {
                    type: Object,
                    default: null
                },
                observerSize: {
                    type: Object,
                    default: function() {
                        return {}
                    }
                },
                isAlive: {
                    type: Boolean,
                    default: !1
                },
                engagementViewMore: {
                    type: Boolean,
                    default: !0
                },
                engagementCollapseActive: {
                    type: Array,
                    default: function() {
                        return []
                    }
                },
                isEmailChannel: {
                    type: Boolean,
                    default: !1
                }
            },
            data: function() {
                return {
                    notesList: [],
                    isLoadingNotes: !1,
                    activeNote: [],
                    activeEvent: [],
                    activeVariables: [],
                    variableData: {},
                    isLoadingVariables: !1
                }
            },
            inject: ["$agent"],
            mixins: [$n.A, Xe.A, dt.A, je.activeQueueDispositionMixin],
            components: {
                EngagementEventsV2: je.EngagementEventsV2,
                VariableList: Ze,
                RichInput: je.RichInput
            },
            setup: function(De, bt) {
                var un, ur = bt.emit, _n = (0,
                    Ot.useSessionPanelsMutations)(), Jn = _n.setRightPanelHistoryTaskData, Ut = (0,
                    je.useZccApp)(), xe = Ut.updateZccAppEngagementNotes, We = (0,
                    je.useAccount)(), Nt = We.account, hn = !!(!((un = Nt.value) === null || un === void 0) && un.enableReplaceApiToReport), Ln = (0,
                    je.useDataSilentUpdate)({
                    queryFn: be
                }), fn = Ln.getData, $e = (0,
                    je.useDataSilentUpdate)({
                    queryFn: me
                }), tt = $e.getData, ot = (0,
                    je.useDataSilentUpdate)({
                    queryFn: hn ? Ct : He
                }), on = ot.getData, Fe = (0,
                    pt.ref)(null), Mr = (0,
                    pt.ref)(De.id), Jt = (0,
                    pt.computed)(function() {
                    var Tr;
                    return ((Tr = De.events) === null || Tr === void 0 ? void 0 : Tr.length) > 0
                }), Dt = (0,
                    pt.getCurrentInstance)();
                function an() {
                    ur("fetch-data")
                }
                function Bn() {
                    return vn.apply(this, arguments)
                }
                function vn() {
                    return vn = Te(ye().mark(function Tr() {
                        var Lr;
                        return ye().wrap(function(Hr) {
                            for (; ; )
                                switch (Hr.prev = Hr.next) {
                                    case 0:
                                        return Hr.next = 2,
                                            (0,
                                                pt.nextTick)();
                                    case 2:
                                        Lr = Dt.proxy.$refs.popoverRef,
                                        Lr && Lr.showPopper && an();
                                    case 4:
                                    case "end":
                                        return Hr.stop()
                                }
                        }, Tr)
                    })),
                        vn.apply(this, arguments)
                }
                function nn() {
                    return tr.apply(this, arguments)
                }
                function tr() {
                    return tr = Te(ye().mark(function Tr() {
                        var Lr;
                        return ye().wrap(function(Hr) {
                            for (; ; )
                                switch (Hr.prev = Hr.next) {
                                    case 0:
                                        return Hr.next = 2,
                                            (0,
                                                pt.nextTick)();
                                    case 2:
                                        Lr = Dt.proxy.$refs.popoverRef,
                                        Lr && Lr.updatePopper();
                                    case 4:
                                    case "end":
                                        return Hr.stop()
                                }
                        }, Tr)
                    })),
                        tr.apply(this, arguments)
                }
                function Ve() {
                    return R.apply(this, arguments)
                }
                function R() {
                    return R = Te(ye().mark(function Tr() {
                        var Lr;
                        return ye().wrap(function(Hr) {
                            for (; ; )
                                switch (Hr.prev = Hr.next) {
                                    case 0:
                                        return Hr.next = 2,
                                            (0,
                                                pt.nextTick)();
                                    case 2:
                                        if (Lr = Dt.proxy.$refs.popoverRef,
                                            !(!Lr || !(Lr != null && Lr.showPopper))) {
                                            Hr.next = 5;
                                            break
                                        }
                                        return Hr.abrupt("return");
                                    case 5:
                                        Lr.showPopper = !1,
                                            Lr.doDestroy(!0);
                                    case 7:
                                    case "end":
                                        return Hr.stop()
                                }
                        }, Tr)
                    })),
                        R.apply(this, arguments)
                }
                (0,
                    pt.watch)(Mr, Bn);
                var ce = (0,
                    je.useClient)()
                    , gt = ce.inPhone
                    , Ft = ce.inSMS
                    , Kt = ce.inChat
                    , St = ce.inVideo
                    , Xt = ce.inMonitorPhone
                    , Rn = ce.inMonitorSMS
                    , kn = ce.inMonitorChat
                    , pr = ce.inMonitorVideo
                    , Or = ce.isLive
                    , we = ce.inViewPhone
                    , lr = ce.inViewVideo;
                return {
                    popoverRef: Fe,
                    showEvents: Jt,
                    fetchEvents: an,
                    updatePopover: nn,
                    destroyPopover: Ve,
                    updateZccAppEngagementNotes: xe,
                    setRightPanelHistoryTaskData: Jn,
                    inPhone: gt,
                    inSMS: Ft,
                    inChat: Kt,
                    inVideo: St,
                    inMonitorPhone: Xt,
                    inMonitorSMS: Rn,
                    inMonitorChat: kn,
                    inMonitorVideo: pr,
                    isLive: Or,
                    inViewPhone: we,
                    inViewVideo: lr,
                    tGetHistoryVariablesOnEngagement: fn,
                    tGetHistoryList: tt,
                    tGetNotes: on
                }
            },
            mounted: function() {
                console.log("HistoryDetails mounted"),
                    this.getCallNotes(),
                    this.requestVariablesData()
            },
            computed: Pr(Pr({}, (0,
                Kn.mapGetters)("sessionPanels", ["currentActiveTask", "currentMonitorTask", "menuTab"])), {}, {
                pageLoading: function() {
                    return this.isLoadingNotes || this.isLoadingVariables
                },
                agentSubtitle: function() {
                    return (0,
                        ht.composeAgentInfoSubtitle)(Pr(Pr({}, this.$attrs), {}, {
                        tz: this.tz
                    }), 1)
                },
                taskChannelType: function() {
                    if (this.inMonitorSMS || this.inMonitorChat || this.inMonitorVideo)
                        return this.currentMonitorTask ? this.currentMonitorTask.type : this.$attrs.channelType.toLowerCase();
                    var De = this.currentActiveTask || {}
                        , bt = De.tkType;
                    return bt
                },
                iconLive: function() {
                    return this.inPhone || this.inVideo || this.inSMS || this.inChat || this.inMonitorPhone || this.inMonitorSMS || this.inMonitorChat || this.inMonitorVideo || this.inViewVideo || this.inViewPhone
                },
                taskDisposition: function() {
                    return (0,
                        ht.getDisposition)(this.$attrs)
                },
                calcChannelName: function() {
                    var De = this.$attrs
                        , bt = De.channelType
                        , un = De.useSource
                        , ur = De.source;
                    if (this.inMonitorSMS)
                        return this.$t("cci.profile.tabs.history.channelName.sms");
                    if (bt === Pt.CHANNEL_KEYS.email.recentKey)
                        return this.$t("cci.email");
                    if (this.inMonitorChat) {
                        var _n, Jn = ((_n = this.currentMonitorTask) === null || _n === void 0 ? void 0 : _n.engagement) || {}, Ut = Jn.subChannel;
                        return Ut === "IN_APP_CHAT" ? this.$t("cci.inAppChat") : Ut === Pt.CHANNEL_KEYS.facebook.keyUpper ? this.$t("cci.common.label.facebook_messenger") : Ut === Pt.CHANNEL_KEYS.whatsapp.keyUpper ? this.$t("cci.common.label.whats_app") : Ut === Pt.CHANNEL_KEYS.email.keyUpper ? this.$t("cci.email") : this.$t("cci.analytics.label.webChat")
                    } else {
                        if (bt === "VIDEO")
                            return un ? ur || this.$t("cci.analytics.label.VideoCall") : this.$t("cci.analytics.label.VideoCall");
                        if (this.inVideo || this.inMonitorVideo) {
                            var xe = this.currentActiveTask || {}
                                , We = xe.useSource
                                , Nt = xe.source;
                            return We ? Nt || this.$t("cci.analytics.label.VideoCall") : this.$t("cci.analytics.label.VideoCall")
                        } else {
                            if (bt === "CHAT" && !this.isLive)
                                return this.$t("cci.analytics.label.webChat");
                            if (bt === "SMS")
                                return this.$t("cci.profile.tabs.history.channelName.sms");
                            if (bt === "IN_APP_CHAT")
                                return this.$t("cci.inAppChat");
                            if (bt === Pt.CHANNEL_KEYS.facebook.keyUpper)
                                return this.$t("cci.common.label.facebook_messenger");
                            if (bt === Pt.CHANNEL_KEYS.whatsapp.keyUpper)
                                return this.$t("cci.common.label.whats_app")
                        }
                    }
                    if (this.isLive) {
                        var hn = this.currentActiveTask.subChannel;
                        if (bt === "CHAT")
                            return hn === "IN_APP_CHAT" ? this.$t("cci.inAppChat") : hn === Pt.CHANNEL_KEYS.facebook.keyUpper ? this.$t("cci.common.label.facebook_messenger") : hn === Pt.CHANNEL_KEYS.whatsapp.keyUpper ? this.$t("cci.common.label.whats_app") : hn === Pt.CHANNEL_KEYS.email.keyUpper ? this.$t("cci.email") : this.$t("cci.analytics.label.webChat")
                    }
                    return this.$t("cci.voice")
                },
                isInChat: function() {
                    var De, bt = this.$attrs.channelType;
                    return this.inChat || this.inMonitorChat || Gt()(De = ["CHAT", "IN_APP_CHAT", Pt.CHANNEL_KEYS.facebook.keyUpper, Pt.CHANNEL_KEYS.whatsapp.keyUpper]).call(De, bt)
                },
                isInVideo: function() {
                    var De = this.$attrs.channelType;
                    return this.inVideo || this.inMonitorVideo || this.inViewVideo || De === "VIDEO"
                }
            }),
            methods: {
                copyId: function(De) {
                    var bt = this;
                    return Te(ye().mark(function un() {
                        return ye().wrap(function(_n) {
                            for (; ; )
                                switch (_n.prev = _n.next) {
                                    case 0:
                                        return _n.next = 2,
                                            navigator.clipboard.writeText(De);
                                    case 2:
                                        document.body.click(),
                                            bt.$message.success(tn.i18n.t("cci.analytics.message.engagementIDCopied"));
                                    case 4:
                                    case "end":
                                        return _n.stop()
                                }
                        }, un)
                    }))()
                },
                requestVariablesData: function() {
                    var De = this;
                    return Te(ye().mark(function bt() {
                        var un;
                        return ye().wrap(function(_n) {
                            for (; ; )
                                switch (_n.prev = _n.next) {
                                    case 0:
                                        un = {
                                            inClientProfileSec: !0,
                                            inClientEngagementSec: !0,
                                            engagementId: De.engagementId
                                        },
                                            De.isLoadingNotes = !0,
                                            De.tGetHistoryVariablesOnEngagement(un, function(Jn) {
                                                var Ut = Se(Jn, 2)
                                                    , xe = Ut[0]
                                                    , We = Ut[1];
                                                if (De.isLoadingNotes = !1,
                                                    xe) {
                                                    De.$message.error(xe);
                                                    return
                                                }
                                                De.variableData = We
                                            });
                                    case 3:
                                    case "end":
                                        return _n.stop()
                                }
                        }, bt)
                    }))()
                },
                getCallNotes: function() {
                    var De = this;
                    return Te(ye().mark(function bt() {
                        var un;
                        return ye().wrap(function(_n) {
                            for (; ; )
                                switch (_n.prev = _n.next) {
                                    case 0:
                                        if (De.isLoadingNotes = !0,
                                            un = De.engagementId,
                                            De.engagementId) {
                                            _n.next = 4;
                                            break
                                        }
                                        return _n.abrupt("return");
                                    case 4:
                                        De.tGetNotes({
                                            engagementId: un,
                                            page: 1,
                                            size: 20
                                        }, function(Jn) {
                                            var Ut = Se(Jn, 2)
                                                , xe = Ut[0]
                                                , We = Ut[1];
                                            if (De.isLoadingNotes = !1,
                                                xe)
                                                return De.$message.error(xe),
                                                    [xe, We];
                                            if (!We)
                                                return [xe, We];
                                            var Nt = We.records
                                                , hn = Nt === void 0 ? [] : Nt;
                                            return De.notesList = rn()(hn).call(hn, function(Ln) {
                                                return Pr({
                                                    editLoading: !1,
                                                    isEdit: !1,
                                                    richTextNotes: Ln.richTextNotes || Ln.notes
                                                }, Ln)
                                            }),
                                                De.updateZccAppEngagementNotes(un, De.notesList),
                                                [xe, We]
                                        });
                                    case 5:
                                    case "end":
                                        return _n.stop()
                                }
                        }, bt)
                    }))()
                }
            },
            watch: {
                engagementId: function() {
                    this.getCallNotes()
                },
                "currentMonitorTask.engagementId": function() {
                    this.getCallNotes()
                }
            }
        };
        var En = (0,
            _r.A)(Bt, Ke, it, !1, null, "037d7e0a", null);
        const Pe = En.exports;
        var W = function() {
            var De = this
                , bt = De._self._c;
            return De.item ? bt("div", {
                staticClass: "message-transcript"
            }, [bt("div", {
                staticClass: "message-transcript-title"
            }, [De._v(`
    ` + De._s(De.$t("cci.profile.tabs.history.sideContentType.messageTranscript")) + `
  `)]), De._v(" "), bt("ChatHistory", {
                key: De.item.sessionId,
                staticClass: "message-transcript-content",
                attrs: {
                    "session-id": De.item.sessionId,
                    "enter-id": De.item.enterId,
                    "channel-type": De.item.channelType,
                    "engagement-id": De.item.engagementId,
                    "is-history-engagement": !0,
                    "show-empty": !0
                }
            })], 1) : De._e()
        }
            , Ee = [];
        const Ie = {
            name: "MessageTranscript",
            props: {
                item: {
                    type: Object,
                    default: null
                }
            },
            components: {
                ChatHistory: je.ChatHistory
            }
        };
        var Be = (0,
            _r.A)(Ie, W, Ee, !1, null, "578c6d70", null);
        const st = Be.exports;
        var jt = {
            ViewDetails: "viewDetails",
            VideoRecording: "videoRecording",
            VideoTranscript: "videoTranscript",
            MessageTranscript: "messageTranscript"
        };
        const Ge = {
            name: "SideContent",
            setup: function() {
                var De = (0,
                    pt.ref)({})
                    , bt = (0,
                    je.useRecordingCalcTitle)(De)
                    , un = bt.title;
                return {
                    row: De,
                    title: un
                }
            },
            data: function() {
                return {
                    showSideContent: !1,
                    contentType: "",
                    contentPayload: null,
                    SideContentType: jt
                }
            },
            computed: {
                ariaLabelOfCloseIcon: function() {
                    return this.contentType ? this.$t("cci.profile.tabs.history.closeSideContent", {
                        contentType: this.$t("cci.profile.tabs.history.sideContentType.".concat(this.contentType))
                    }) : "Close right panel"
                }
            },
            components: {
                HistoryDetails: Pe,
                MessageTranscript: st,
                VoiceVideoRecordWithTitle: je.VoiceVideoRecordWithTitle,
                CopyIcon: je.CopyIcon
            },
            watch: {
                showSideContent: function(De) {
                    var bt = this;
                    De && jn()(function() {
                        var un;
                        (un = bt.$refs.wrapContent) === null || un === void 0 || un.focus()
                    }, 1e3)
                }
            },
            methods: {
                onCloseClick: function() {
                    this.onShowSideContent(!1),
                        this.$emit("close")
                },
                onShowSideContent: function(De) {
                    var bt = this
                        , un = De.show
                        , ur = De.contentType
                        , _n = ur === void 0 ? "" : ur
                        , Jn = De.contentPayload
                        , Ut = Jn === void 0 ? null : Jn;
                    if (un && !jt[_n]) {
                        var xe;
                        console.assert(or()(xe = "Invalid contentType: ".concat(_n, `.
          Trace: `)).call(xe, new Error("SideContent Error").stack, `
        `))
                    }
                    if (this.showSideContent = un,
                        this.showSideContent)
                        this.__prevFocusedElement = document.activeElement,
                            jn()(function() {
                                try {
                                    var Nt;
                                    (Nt = bt.$refs.wrapContent) === null || Nt === void 0 || Nt.focus()
                                } catch (hn) {
                                    console.error("cannot focus on close icon of side content container: ".concat(hn.message))
                                }
                            }, 300);
                    else {
                        var We;
                        (We = this.__prevFocusedElement) === null || We === void 0 || We.focus()
                    }
                    this.$emit(un ? "open" : "close"),
                        this.contentType = _n,
                        this.contentPayload = Ut,
                        this.row = Ut
                },
                handleTab: function(De) {
                    var bt = this.$refs.sideContent
                        , un = bt.querySelectorAll('button, input, a, select, textarea, div[tabindex="0"]')
                        , ur = un[0]
                        , _n = un[un.length - 1];
                    De.key === "Tab" && (De.shiftKey ? document.activeElement === ur && (_n.focus(),
                        De.preventDefault()) : document.activeElement === _n && (ur.focus(),
                        De.preventDefault()))
                }
            },
            mounted: function() {
                this.$bus.$on("ShowSideContent", this.onShowSideContent)
            },
            beforeDestroy: function() {
                this.$bus.$off("ShowSideContent", this.onShowSideContent)
            }
        };
        var It = (0,
            _r.A)(Ge, Ae, nr, !1, null, "15e66115", null);
        const cn = It.exports
    }
    ,
    99177: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => M
            });
        var Y = a(24590)
            , J = a(12853)
            , $ = {};
        for (const Q in J)
            Q !== "default" && ($[Q] = () => J[Q]);
        a.d(E, $);
        var k = a(50855)
            , P = (0,
            k.A)(J.default, Y.X, Y.Y, !1, null, "126037ec", null);
        const M = P.exports
    }
    ,
    48818: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => M
            });
        var Y = a(80308)
            , J = a(12554)
            , $ = {};
        for (const Q in J)
            Q !== "default" && ($[Q] = () => J[Q]);
        a.d(E, $);
        var k = a(50855)
            , P = (0,
            k.A)(J.default, Y.X, Y.Y, !1, null, "7dbee197", null);
        const M = P.exports
    }
    ,
    46146: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                __esModule: () => $.B,
                default: () => Q
            });
        var Y = function() {
            var F = this
                , D = F._self._c
                , z = F._self._setupProxy;
            return D("div", {
                staticClass: "my-inbox__header"
            }, [F._t("title"), F._v(" "), D("zm-tabs", {
                attrs: {
                    type: F.type,
                    "aria-label": z.t("cci.inbox.tab.label")
                },
                on: {
                    "tab-click": function(V) {
                        return z.emit("change", V)
                    }
                },
                model: {
                    value: z.activeTab,
                    callback: function(V) {
                        z.activeTab = V
                    },
                    expression: "activeTab"
                }
            }, F._l(z.tabs, function(G, V) {
                return D("zm-tab-pane", {
                    key: V,
                    attrs: {
                        label: G.label,
                        name: G.name
                    }
                }, [D("template", {
                    slot: "label"
                }, [D("span", {
                    staticClass: "my-inbox__header-tab",
                    attrs: {
                        "aria-label": G.ariaLabel,
                        tabindex: "-1"
                    }
                }, [F._v(`
          ` + F._s(G.label) + `
          `), F.enableBadge ? [D(z.VMBadge, {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: (G.firstCount || 0) + (G.secondCount || 0),
                        expression: "(tab.firstCount || 0) + (tab.secondCount || 0)"
                    }],
                    attrs: {
                        "first-count": G.firstCount,
                        "second-count": G.secondCount,
                        limit: 99,
                        "enable-level": F.enableLevel
                    }
                })] : F._e()], 2)])], 2)
            }), 1)], 2)
        }
            , J = []
            , $ = a(7947);
        const k = $.A;
        var P = a(50855)
            , M = (0,
            P.A)(k, Y, J, !1, null, "b6db321c", null);
        const Q = M.exports
    }
    ,
    58724: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => M
            });
        var Y = a(66382)
            , J = a(24398)
            , $ = {};
        for (const Q in J)
            Q !== "default" && ($[Q] = () => J[Q]);
        a.d(E, $);
        var k = a(50855)
            , P = (0,
            k.A)(J.default, Y.X, Y.Y, !1, null, "355254aa", null);
        const M = P.exports
    }
    ,
    89029: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                __esModule: () => $.B,
                default: () => Q
            });
        var Y = function() {
            var F = this
                , D = F._self._c
                , z = F._self._setupProxy;
            return D("div", {
                staticClass: "inbox-skeleton"
            }, F._l(z.props.row, function(G) {
                return D("zm-skeleton", {
                    key: G,
                    staticClass: "inbox-skeleton-item",
                    attrs: {
                        animated: ""
                    }
                }, [D("template", {
                    slot: "template"
                }, [D("div", {
                    staticClass: "inbox-skeleton-row"
                }, [D("zm-skeleton-item", {
                    staticStyle: {
                        width: "30%"
                    }
                }), F._v(" "), D("zm-skeleton-item", {
                    staticStyle: {
                        width: "10%"
                    }
                })], 1), F._v(" "), D("div", {
                    staticClass: "inbox-skeleton-row"
                }, [D("zm-skeleton-item", {
                    staticStyle: {
                        width: "35%"
                    }
                }), F._v(" "), D("zm-skeleton-item", {
                    staticStyle: {
                        width: "7%"
                    }
                })], 1)])], 2)
            }), 1)
        }
            , J = []
            , $ = a(69403);
        const k = $.A;
        var P = a(50855)
            , M = (0,
            P.A)(k, Y, J, !1, null, null, null);
        const Q = M.exports
    }
    ,
    87283: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => En
            });
        var Y = a(14950)
            , J = a.n(Y)
            , $ = a(12608)
            , k = a.n($)
            , P = a(39084)
            , M = a.n(P)
            , Q = a(61849)
            , O = a.n(Q)
            , F = a(83030)
            , D = a.n(F)
            , z = a(5339)
            , G = a.n(z);
        function V(Pe) {
            "@babel/helpers - typeof";
            return V = typeof D() == "function" && typeof G() == "symbol" ? function(W) {
                    return typeof W
                }
                : function(W) {
                    return W && typeof D() == "function" && W.constructor === D() && W !== D().prototype ? "symbol" : typeof W
                }
                ,
                V(Pe)
        }
        function K(Pe, W, Ee) {
            return (W = te(W))in Pe ? O()(Pe, W, {
                value: Ee,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : Pe[W] = Ee,
                Pe
        }
        function te(Pe) {
            var W = ee(Pe, "string");
            return V(W) == "symbol" ? W : W + ""
        }
        function ee(Pe, W) {
            if (V(Pe) != "object" || !Pe)
                return Pe;
            var Ee = Pe[M()];
            if (Ee !== void 0) {
                var nt = Ee.call(Pe, W || "default");
                if (V(nt) != "object")
                    return nt;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (W === "string" ? String : Number)(Pe)
        }
        var pe = function() {
            var W = this
                , Ee = W._self._c
                , nt = W._self._setupProxy;
            return Ee("ul", {
                staticClass: "cus-menu",
                class: {
                    "cus-menu-display": W.activeTaskQueueList.length
                },
                attrs: {
                    role: "none"
                }
            }, [Ee("div", {
                attrs: {
                    role: "none"
                }
            }, [Ee("li", {
                staticClass: "cus-submenu",
                class: W.isCollapse ? "is-closed" : "",
                attrs: {
                    role: "none"
                }
            }, [Ee("div", {
                staticClass: "cus-submenu__title",
                attrs: {
                    role: "menuitem",
                    "aria-expanded": "".concat(!W.isCollapse),
                    "aria-label": W.$t("cci.active.collapseActiveSessionList"),
                    title: W.$t("cci.active.collapseActiveSessionList"),
                    tabindex: "0"
                },
                on: {
                    click: W.toggleCollpase,
                    keydown: [function(Ie) {
                        var Be;
                        return !J()(Be = Ie.type).call(Be, "key") && W._k(Ie.keyCode, "enter", 13, Ie.key, "Enter") ? null : W.toggleCollpase.apply(null, arguments)
                    }
                        , function(Ie) {
                            var Be;
                            return !J()(Be = Ie.type).call(Be, "key") && W._k(Ie.keyCode, "space", 32, Ie.key, [" ", "Spacebar"]) ? null : W.toggleCollpase.apply(null, arguments)
                        }
                    ]
                }
            }, [Ee("i", {
                staticClass: "cus-submenu__icon-arrow"
            }), W._v(" "), Ee("span", [W._v(`
          ` + W._s(W.$t("cci.client.session.active")) + " (" + W._s(W.activeTaskQueueList.length) + `)
        `)]), W._v(" "), W.isCheckUncompleteTask ? Ee("i", {
                staticClass: "zm-icon-loading cus-submenu__icon-loading"
            }) : W._e()]), W._v(" "), Ee("ul", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !W.isCollapse || W.collapse,
                    expression: "!isCollapse || collapse"
                }],
                staticClass: "phone-active",
                attrs: {
                    role: "menu",
                    "aria-label": W.$t("cci.active.collapseActiveSessionList")
                }
            }, [W._l(W.activeTaskQueueList, function(Ie) {
                var Be, st, jt, _t;
                return Ee("li", {
                    key: Ie.taskId,
                    class: ["phone-active__item", K({}, "selected".concat(W.collapse ? "__collapse" : ""), W.isActiveSession && W.currentTaskId === Ie.taskId)],
                    attrs: {
                        role: "menuitem",
                        "aria-label": k()(Be = k()(st = k()(jt = k()(_t = "".concat(Ie.calcIdentifierE164Formatted, ", ")).call(_t, W.sessionCalcTime(Ie), ", ")).call(jt, Ie.calcEngagementType, ", ")).call(st, Ie.calcQueueName)).call(Be, Ie.getUnreadCount ? ", " + Ie.getUnreadCount + " unread message" : ""),
                        tabindex: "0"
                    },
                    on: {
                        click: function(It) {
                            return W.onSelect(Ie.taskId)
                        },
                        keydown: [function(Ge) {
                            var It;
                            return !J()(It = Ge.type).call(It, "key") && W._k(Ge.keyCode, "enter", 13, Ge.key, "Enter") ? null : W.onSelect(Ie.taskId)
                        }
                            , function(Ge) {
                                var It;
                                return !J()(It = Ge.type).call(It, "key") && W._k(Ge.keyCode, "space", 32, Ge.key, [" ", "Spacebar"]) ? null : W.onSelect(Ie.taskId)
                            }
                        ]
                    }
                }, [Ee("zm-tooltip", {
                    attrs: {
                        disabled: !W.collapse,
                        placement: "right-start"
                    }
                }, [Ee("div", {
                    attrs: {
                        slot: "content"
                    },
                    slot: "content"
                }, [W._v(`
              ` + W._s(Ie.calcIdentifierWithPhiMask) + ` \xB7
              ` + W._s(W.sessionCalcTime(Ie)) + `
              `), Ee("br"), W._v(" "), Ee("div", {
                    class: Ie.iconClassName
                }, [W._v(`
                ` + W._s(Ie.calcQueueName) + `
              `)])]), W._v(" "), Ee("nameAvatar", {
                    style: {
                        marginRight: W.collapse ? "0" : "8px"
                    },
                    attrs: {
                        title: Ie.hasName ? Ie.calcIdentifierWithPhiMask : ""
                    }
                }, [Ee("div", {
                    staticClass: "phone-active__avatar"
                })])], 1), W._v(" "), Ee("div", {
                    staticClass: "phone-active__content"
                }, [Ee("div", {
                    staticClass: "phone-active__identifier"
                }, [Ee("span", {
                    staticClass: "phone-active__identifier-name",
                    attrs: {
                        title: Ie.calcIdentifierWithPhiMask
                    }
                }, [W._v(`
                ` + W._s(Ie.calcIdentifierWithPhiMask) + `
              `)]), W._v(`
              \xB7
              ` + W._s(W.sessionCalcTime(Ie)) + `
            `)]), W._v(" "), Ee("div", {
                    class: Ie.iconClassName
                }, [W._v(`
              ` + W._s(Ie.calcQueueName) + `
            `)])]), W._v(" "), W.isShowPhoneRecording(Ie) ? Ee("div", {
                    staticClass: "voice-recording-icon"
                }) : W._e(), W._v(" "), Ie.getUnreadCount ? Ee("div", {
                    class: ["task-active__unread", {
                        "task-active__unread__collapse": W.collapse
                    }]
                }, [W._v(`
            ` + W._s(Ie.getUnreadCount) + `
          `)]) : W._e()], 1)
            }), W._v(" "), W.collapse && W.activeTaskQueueLists.length > 5 ? Ee("li", {
                staticClass: "phone-active__item",
                attrs: {
                    role: "menuitem",
                    "aria-label": W.$t("cci.integrations.moreOptions"),
                    tabindex: "0"
                },
                on: {
                    click: W.openMoreSession
                }
            }, [Ee("div", {
                staticClass: "phone-active__more"
            }, [W._v(`
            +` + W._s(W.activeTaskQueueLists.length - 5) + `
          `)])]) : W._e()], 2), W._v(" "), Ee("ChatActive", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !W.isCollapse,
                    expression: "!isCollapse"
                }],
                ref: "chatActive",
                attrs: {
                    collapse: W.collapse
                },
                on: {
                    select: W.onChatSelect
                }
            })], 1)]), W._v(" "), Ee("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: W.activeTaskQueueList.length,
                    expression: "activeTaskQueueList.length"
                }],
                class: [{
                    "cus-menu-left-border__active": W.isActiveSession
                }, "cus-menu-left-border"]
            })])
        }
            , ne = []
            , X = a(2208)
            , x = a.n(X)
            , H = a(81352)
            , q = a.n(H)
            , _e = a(44987)
            , ie = a.n(_e)
            , ze = a(27425)
            , Oe = a.n(ze)
            , Cn = a(69761)
            , at = a.n(Cn)
            , Sn = a(27598)
            , Ce = a.n(Sn)
            , wn = a(70184)
            , Ae = a.n(wn)
            , nr = a(69279)
            , mt = a.n(nr)
            , jn = a(53584)
            , ve = a.n(jn)
            , or = a(59814)
            , pt = a.n(or)
            , je = a(84653)
            , Ke = a.n(je)
            , it = a(89099)
            , Ne = a.n(it)
            , Gt = a(34622)
            , en = a.n(Gt)
            , rn = a(27785)
            , Tt = a.n(rn)
            , vr = a(83537)
            , rr = a.n(vr)
            , kr = a(65888)
            , Re = a.n(kr)
            , Et = a(34187)
            , An = a.n(Et)
            , Yt = a(73007)
            , gn = a.n(Yt)
            , Qe = a(23716)
            , ar = a.n(Qe)
            , zt = a(74061)
            , Zt = a(53578)
            , Lt = a(83266)
            , gr = a(56405)
            , Mn = a(19598);
        function U(Pe) {
            "@babel/helpers - typeof";
            return U = typeof D() == "function" && typeof G() == "symbol" ? function(W) {
                    return typeof W
                }
                : function(W) {
                    return W && typeof D() == "function" && W.constructor === D() && W !== D().prototype ? "symbol" : typeof W
                }
                ,
                U(Pe)
        }
        function Mt(Pe, W, Ee) {
            return (W = Kn(W))in Pe ? O()(Pe, W, {
                value: Ee,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : Pe[W] = Ee,
                Pe
        }
        function Kn(Pe) {
            var W = In(Pe, "string");
            return U(W) == "symbol" ? W : W + ""
        }
        function In(Pe, W) {
            if (U(Pe) != "object" || !Pe)
                return Pe;
            var Ee = Pe[M()];
            if (Ee !== void 0) {
                var nt = Ee.call(Pe, W || "default");
                if (U(nt) != "object")
                    return nt;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (W === "string" ? String : Number)(Pe)
        }
        var tn = function() {
            var W = this
                , Ee = W._self._c;
            return Ee("ul", {
                staticClass: "chat-active"
            }, W._l(W.list, function(nt) {
                return Ee("li", {
                    key: nt.engagementId,
                    class: ["chat-active__item", Mt({}, "selected".concat(W.collapse ? "__collapse" : ""), (W.currentEngagement || {}).engagementId === nt.engagementId || !0)],
                    on: {
                        click: function(Be) {
                            return W.onSelect(nt.engagementId, nt.channelType)
                        }
                    }
                }, [Ee("div", {
                    staticClass: "chat-active__avatar"
                }), W._v(" "), Ee("div", {
                    staticClass: "chat-active__content"
                }, [Ee("div", {
                    staticClass: "chat-active__identifier"
                }, [W._v(`
        ` + W._s(W.calcIdentifier(nt)) + `
      `)]), W._v(" "), Ee("div", {
                    staticClass: "chat-active__queue"
                }, [W._v(`
        ` + W._s(nt.queueName || "-") + `
      `)])]), W._v(" "), nt.unReadCount ? Ee("div", {
                    staticClass: "chat-active__unread"
                }, [W._v(`
      ` + W._s(nt.unReadCount) + `
    `)]) : W._e()])
            }), 0)
        }
            , Ot = []
            , Pt = a(22562)
            , $n = a.n(Pt)
            , dt = a(91304)
            , Xe = a.n(dt)
            , ht = a(30824)
            , yn = function(W) {
            return W === "view" || W === "barge" || W === "dropin"
        }
            , dn = a(35878);
        function Gn(Pe) {
            "@babel/helpers - typeof";
            return Gn = typeof D() == "function" && typeof G() == "symbol" ? function(W) {
                    return typeof W
                }
                : function(W) {
                    return W && typeof D() == "function" && W.constructor === D() && W !== D().prototype ? "symbol" : typeof W
                }
                ,
                Gn(Pe)
        }
        function sr() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            sr = function() {
                return W
            }
            ;
            var Pe, W = {}, Ee = Object.prototype, nt = Ee.hasOwnProperty, Ie = O() || function(Jt, Dt, an) {
                Jt[Dt] = an.value
            }
                , Be = typeof D() == "function" ? D() : {}, st = Be.iterator || "@@iterator", jt = Be.asyncIterator || "@@asyncIterator", _t = Be.toStringTag || "@@toStringTag";
            function Ge(Jt, Dt, an) {
                return O()(Jt, Dt, {
                    value: an,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    Jt[Dt]
            }
            try {
                Ge({}, "")
            } catch {
                Ge = function(an, Bn, vn) {
                    return an[Bn] = vn
                }
            }
            function It(Jt, Dt, an, Bn) {
                var vn = Dt && Dt.prototype instanceof _n ? Dt : _n
                    , nn = Re()(vn.prototype)
                    , tr = new Fe(Bn || []);
                return Ie(nn, "_invoke", {
                    value: $e(Jt, an, tr)
                }),
                    nn
            }
            function cn(Jt, Dt, an) {
                try {
                    return {
                        type: "normal",
                        arg: Jt.call(Dt, an)
                    }
                } catch (Bn) {
                    return {
                        type: "throw",
                        arg: Bn
                    }
                }
            }
            W.wrap = It;
            var ct = "suspendedStart"
                , De = "suspendedYield"
                , bt = "executing"
                , un = "completed"
                , ur = {};
            function _n() {}
            function Jn() {}
            function Ut() {}
            var xe = {};
            Ge(xe, st, function() {
                return this
            });
            var We = An()
                , Nt = We && We(We(Mr([])));
            Nt && Nt !== Ee && nt.call(Nt, st) && (xe = Nt);
            var hn = Ut.prototype = _n.prototype = Re()(xe);
            function Ln(Jt) {
                var Dt;
                ie()(Dt = ["next", "throw", "return"]).call(Dt, function(an) {
                    Ge(Jt, an, function(Bn) {
                        return this._invoke(an, Bn)
                    })
                })
            }
            function fn(Jt, Dt) {
                function an(vn, nn, tr, Ve) {
                    var R = cn(Jt[vn], Jt, nn);
                    if (R.type !== "throw") {
                        var ce = R.arg
                            , gt = ce.value;
                        return gt && Gn(gt) == "object" && nt.call(gt, "__await") ? Dt.resolve(gt.__await).then(function(Ft) {
                            an("next", Ft, tr, Ve)
                        }, function(Ft) {
                            an("throw", Ft, tr, Ve)
                        }) : Dt.resolve(gt).then(function(Ft) {
                            ce.value = Ft,
                                tr(ce)
                        }, function(Ft) {
                            return an("throw", Ft, tr, Ve)
                        })
                    }
                    Ve(R.arg)
                }
                var Bn;
                Ie(this, "_invoke", {
                    value: function(nn, tr) {
                        function Ve() {
                            return new Dt(function(R, ce) {
                                    an(nn, tr, R, ce)
                                }
                            )
                        }
                        return Bn = Bn ? Bn.then(Ve, Ve) : Ve()
                    }
                })
            }
            function $e(Jt, Dt, an) {
                var Bn = ct;
                return function(vn, nn) {
                    if (Bn === bt)
                        throw Error("Generator is already running");
                    if (Bn === un) {
                        if (vn === "throw")
                            throw nn;
                        return {
                            value: Pe,
                            done: !0
                        }
                    }
                    for (an.method = vn,
                             an.arg = nn; ; ) {
                        var tr = an.delegate;
                        if (tr) {
                            var Ve = tt(tr, an);
                            if (Ve) {
                                if (Ve === ur)
                                    continue;
                                return Ve
                            }
                        }
                        if (an.method === "next")
                            an.sent = an._sent = an.arg;
                        else if (an.method === "throw") {
                            if (Bn === ct)
                                throw Bn = un,
                                    an.arg;
                            an.dispatchException(an.arg)
                        } else
                            an.method === "return" && an.abrupt("return", an.arg);
                        Bn = bt;
                        var R = cn(Jt, Dt, an);
                        if (R.type === "normal") {
                            if (Bn = an.done ? un : De,
                            R.arg === ur)
                                continue;
                            return {
                                value: R.arg,
                                done: an.done
                            }
                        }
                        R.type === "throw" && (Bn = un,
                            an.method = "throw",
                            an.arg = R.arg)
                    }
                }
            }
            function tt(Jt, Dt) {
                var an = Dt.method
                    , Bn = Jt.iterator[an];
                if (Bn === Pe)
                    return Dt.delegate = null,
                    an === "throw" && Jt.iterator.return && (Dt.method = "return",
                        Dt.arg = Pe,
                        tt(Jt, Dt),
                    Dt.method === "throw") || an !== "return" && (Dt.method = "throw",
                        Dt.arg = new TypeError("The iterator does not provide a '" + an + "' method")),
                        ur;
                var vn = cn(Bn, Jt.iterator, Dt.arg);
                if (vn.type === "throw")
                    return Dt.method = "throw",
                        Dt.arg = vn.arg,
                        Dt.delegate = null,
                        ur;
                var nn = vn.arg;
                return nn ? nn.done ? (Dt[Jt.resultName] = nn.value,
                    Dt.next = Jt.nextLoc,
                Dt.method !== "return" && (Dt.method = "next",
                    Dt.arg = Pe),
                    Dt.delegate = null,
                    ur) : nn : (Dt.method = "throw",
                    Dt.arg = new TypeError("iterator result is not an object"),
                    Dt.delegate = null,
                    ur)
            }
            function ot(Jt) {
                var Dt = {
                    tryLoc: Jt[0]
                };
                1 in Jt && (Dt.catchLoc = Jt[1]),
                2 in Jt && (Dt.finallyLoc = Jt[2],
                    Dt.afterLoc = Jt[3]),
                    this.tryEntries.push(Dt)
            }
            function on(Jt) {
                var Dt = Jt.completion || {};
                Dt.type = "normal",
                    delete Dt.arg,
                    Jt.completion = Dt
            }
            function Fe(Jt) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(Jt).call(Jt, ot, this),
                    this.reset(!0)
            }
            function Mr(Jt) {
                if (Jt || Jt === "") {
                    var Dt = Jt[st];
                    if (Dt)
                        return Dt.call(Jt);
                    if (typeof Jt.next == "function")
                        return Jt;
                    if (!isNaN(Jt.length)) {
                        var an = -1
                            , Bn = function vn() {
                            for (; ++an < Jt.length; )
                                if (nt.call(Jt, an))
                                    return vn.value = Jt[an],
                                        vn.done = !1,
                                        vn;
                            return vn.value = Pe,
                                vn.done = !0,
                                vn
                        };
                        return Bn.next = Bn
                    }
                }
                throw new TypeError(Gn(Jt) + " is not iterable")
            }
            return Jn.prototype = Ut,
                Ie(hn, "constructor", {
                    value: Ut,
                    configurable: !0
                }),
                Ie(Ut, "constructor", {
                    value: Jn,
                    configurable: !0
                }),
                Jn.displayName = Ge(Ut, _t, "GeneratorFunction"),
                W.isGeneratorFunction = function(Jt) {
                    var Dt = typeof Jt == "function" && Jt.constructor;
                    return !!Dt && (Dt === Jn || (Dt.displayName || Dt.name) === "GeneratorFunction")
                }
                ,
                W.mark = function(Jt) {
                    return gn() ? gn()(Jt, Ut) : (Jt.__proto__ = Ut,
                        Ge(Jt, _t, "GeneratorFunction")),
                        Jt.prototype = Re()(hn),
                        Jt
                }
                ,
                W.awrap = function(Jt) {
                    return {
                        __await: Jt
                    }
                }
                ,
                Ln(fn.prototype),
                Ge(fn.prototype, jt, function() {
                    return this
                }),
                W.AsyncIterator = fn,
                W.async = function(Jt, Dt, an, Bn, vn) {
                    vn === void 0 && (vn = rr());
                    var nn = new fn(It(Jt, Dt, an, Bn),vn);
                    return W.isGeneratorFunction(Dt) ? nn : nn.next().then(function(tr) {
                        return tr.done ? tr.value : nn.next()
                    })
                }
                ,
                Ln(hn),
                Ge(hn, _t, "Generator"),
                Ge(hn, st, function() {
                    return this
                }),
                Ge(hn, "toString", function() {
                    return "[object Generator]"
                }),
                W.keys = function(Jt) {
                    var Dt = Object(Jt)
                        , an = [];
                    for (var Bn in Dt)
                        an.push(Bn);
                    return ar()(an).call(an),
                        function vn() {
                            for (; an.length; ) {
                                var nn = an.pop();
                                if (nn in Dt)
                                    return vn.value = nn,
                                        vn.done = !1,
                                        vn
                            }
                            return vn.done = !0,
                                vn
                        }
                }
                ,
                W.values = Mr,
                Fe.prototype = {
                    constructor: Fe,
                    reset: function(Dt) {
                        var an;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = Pe,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = Pe,
                            ie()(an = this.tryEntries).call(an, on),
                            !Dt)
                            for (var Bn in this)
                                Bn.charAt(0) === "t" && nt.call(this, Bn) && !isNaN(+x()(Bn).call(Bn, 1)) && (this[Bn] = Pe)
                    },
                    stop: function() {
                        this.done = !0;
                        var Dt = this.tryEntries[0].completion;
                        if (Dt.type === "throw")
                            throw Dt.arg;
                        return this.rval
                    },
                    dispatchException: function(Dt) {
                        if (this.done)
                            throw Dt;
                        var an = this;
                        function Bn(ce, gt) {
                            return tr.type = "throw",
                                tr.arg = Dt,
                                an.next = ce,
                            gt && (an.method = "next",
                                an.arg = Pe),
                                !!gt
                        }
                        for (var vn = this.tryEntries.length - 1; vn >= 0; --vn) {
                            var nn = this.tryEntries[vn]
                                , tr = nn.completion;
                            if (nn.tryLoc === "root")
                                return Bn("end");
                            if (nn.tryLoc <= this.prev) {
                                var Ve = nt.call(nn, "catchLoc")
                                    , R = nt.call(nn, "finallyLoc");
                                if (Ve && R) {
                                    if (this.prev < nn.catchLoc)
                                        return Bn(nn.catchLoc, !0);
                                    if (this.prev < nn.finallyLoc)
                                        return Bn(nn.finallyLoc)
                                } else if (Ve) {
                                    if (this.prev < nn.catchLoc)
                                        return Bn(nn.catchLoc, !0)
                                } else {
                                    if (!R)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < nn.finallyLoc)
                                        return Bn(nn.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(Dt, an) {
                        for (var Bn = this.tryEntries.length - 1; Bn >= 0; --Bn) {
                            var vn = this.tryEntries[Bn];
                            if (vn.tryLoc <= this.prev && nt.call(vn, "finallyLoc") && this.prev < vn.finallyLoc) {
                                var nn = vn;
                                break
                            }
                        }
                        nn && (Dt === "break" || Dt === "continue") && nn.tryLoc <= an && an <= nn.finallyLoc && (nn = null);
                        var tr = nn ? nn.completion : {};
                        return tr.type = Dt,
                            tr.arg = an,
                            nn ? (this.method = "next",
                                this.next = nn.finallyLoc,
                                ur) : this.complete(tr)
                    },
                    complete: function(Dt, an) {
                        if (Dt.type === "throw")
                            throw Dt.arg;
                        return Dt.type === "break" || Dt.type === "continue" ? this.next = Dt.arg : Dt.type === "return" ? (this.rval = this.arg = Dt.arg,
                            this.method = "return",
                            this.next = "end") : Dt.type === "normal" && an && (this.next = an),
                            ur
                    },
                    finish: function(Dt) {
                        for (var an = this.tryEntries.length - 1; an >= 0; --an) {
                            var Bn = this.tryEntries[an];
                            if (Bn.finallyLoc === Dt)
                                return this.complete(Bn.completion, Bn.afterLoc),
                                    on(Bn),
                                    ur
                        }
                    },
                    catch: function(Dt) {
                        for (var an = this.tryEntries.length - 1; an >= 0; --an) {
                            var Bn = this.tryEntries[an];
                            if (Bn.tryLoc === Dt) {
                                var vn = Bn.completion;
                                if (vn.type === "throw") {
                                    var nn = vn.arg;
                                    on(Bn)
                                }
                                return nn
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(Dt, an, Bn) {
                        return this.delegate = {
                            iterator: Mr(Dt),
                            resultName: an,
                            nextLoc: Bn
                        },
                        this.method === "next" && (this.arg = Pe),
                            ur
                    }
                },
                W
        }
        function Zn(Pe, W, Ee, nt, Ie, Be, st) {
            try {
                var jt = Pe[Be](st)
                    , _t = jt.value
            } catch (Ge) {
                return void Ee(Ge)
            }
            jt.done ? W(_t) : rr().resolve(_t).then(nt, Ie)
        }
        function _r(Pe) {
            return function() {
                var W = this
                    , Ee = arguments;
                return new (rr())(function(nt, Ie) {
                        var Be = Pe.apply(W, Ee);
                        function st(_t) {
                            Zn(Be, nt, Ie, st, jt, "next", _t)
                        }
                        function jt(_t) {
                            Zn(Be, nt, Ie, st, jt, "throw", _t)
                        }
                        st(void 0)
                    }
                )
            }
        }
        function Pn(Pe, W) {
            var Ee = q()(Pe);
            if (Ke()) {
                var nt = Ke()(Pe);
                W && (nt = pt()(nt).call(nt, function(Ie) {
                    return Ne()(Pe, Ie).enumerable
                })),
                    Ee.push.apply(Ee, nt)
            }
            return Ee
        }
        function Ze(Pe) {
            for (var W = 1; W < arguments.length; W++) {
                var Ee, nt, Ie = arguments[W] != null ? arguments[W] : {};
                W % 2 ? ie()(Ee = Pn(Object(Ie), !0)).call(Ee, function(Be) {
                    Vn(Pe, Be, Ie[Be])
                }) : en() ? Tt()(Pe, en()(Ie)) : ie()(nt = Pn(Object(Ie))).call(nt, function(Be) {
                    O()(Pe, Be, Ne()(Ie, Be))
                })
            }
            return Pe
        }
        function Vn(Pe, W, Ee) {
            return (W = Se(W))in Pe ? O()(Pe, W, {
                value: Ee,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : Pe[W] = Ee,
                Pe
        }
        function Se(Pe) {
            var W = Ue(Pe, "string");
            return Gn(W) == "symbol" ? W : W + ""
        }
        function Ue(Pe, W) {
            if (Gn(Pe) != "object" || !Pe)
                return Pe;
            var Ee = Pe[M()];
            if (Ee !== void 0) {
                var nt = Ee.call(Pe, W || "default");
                if (Gn(nt) != "object")
                    return nt;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (W === "string" ? String : Number)(Pe)
        }
        const Qt = {
            props: {
                collapse: {
                    type: Boolean,
                    default: !1
                },
                selected: {
                    type: Number,
                    default: -1
                }
            },
            data: function() {
                return {
                    list: []
                }
            },
            methods: Ze(Ze(Ze({}, (0,
                Zt.mapActions)("livechat", ["switchEngagement"])), (0,
                Zt.mapActions)("sessionPanels", ["updateSMSTaskIfExists", "updateChatTask"])), {}, {
                calcIdentifier: function(W) {
                    var Ee, nt = W.customerName, Ie = W.customerId, Be = W.newDuration, st = nt || Ie || "";
                    return st.length > 12 && (st = "".concat(x()(st).call(st, 0, 12), "...")),
                        k()(Ee = "".concat(st, " \xB7 ")).call(Ee, (0,
                            gr.tsToHHMMSS)(Be))
                },
                updateSessionDuration: function() {
                    var W;
                    ie()(W = this.list).call(W, function(Ee) {
                        Ee.newDuration = Oe()() - Ee.startTime
                    })
                },
                setUpdateTimer: function() {
                    this.clearUpdateTimer(),
                        this.durationUpdateTimer = Ae()(this.updateSessionDuration, 1e3)
                },
                clearUpdateTimer: function() {
                    this.durationUpdateTimer && clearInterval(this.durationUpdateTimer)
                },
                onSelect: function(W, Ee) {
                    var nt = this;
                    return _r(sr().mark(function Ie() {
                        var Be, st, jt, _t, Ge;
                        return sr().wrap(function(cn) {
                            for (; ; )
                                switch (cn.prev = cn.next) {
                                    case 0:
                                        if (nt.switchEngagement(W),
                                            !(0,
                                                gr.isCrm)()) {
                                            cn.next = 11;
                                            break
                                        }
                                        if (jt = mt()(Be = $n()(nt.activeTasks)).call(Be, function(ct) {
                                            return ct.engagementId === W
                                        }),
                                            _t = (0,
                                                ht.getChannelType)(jt == null || (st = jt.channelType) === null || st === void 0 ? void 0 : st.toLowerCase(), jt?.subChannel),
                                        _t !== gr.QUEUE_CHANNEL_TYPE.EMAIL) {
                                            cn.next = 11;
                                            break
                                        }
                                        return cn.next = 7,
                                            (0,
                                                dn.getCRMInstance)();
                                    case 7:
                                        if (Ge = cn.sent,
                                            !(Ge && Ge.onBecomeActiveTask)) {
                                            cn.next = 11;
                                            break
                                        }
                                        return cn.next = 11,
                                            Ge.onBecomeActiveTask({
                                                engagementId: W,
                                                channel: gr.QUEUE_CHANNEL_TYPE.EMAIL
                                            });
                                    case 11:
                                        nt.$emit("select", {
                                            id: W,
                                            type: Ee
                                        });
                                    case 12:
                                    case "end":
                                        return cn.stop()
                                }
                        }, Ie)
                    }))()
                },
                onEngagementsChange: function(W) {
                    var Ee, nt, Ie = this, Be = ve()(Ee = this.list).call(Ee, function(st) {
                        return st.engagementId
                    });
                    ie()(nt = q()(W)).call(nt, function(st) {
                        var jt = J()(Be).call(Be, st);
                        jt === -1 || (Ie.list[jt].queueName = W[st].queueName)
                    }),
                        ie()(Be).call(Be, function(st, jt) {
                            if (!W[st] || yn(W[st].superVisor)) {
                                var _t;
                                Xe()(_t = Ie.list).call(_t, jt, 1)
                            }
                        }),
                        this.setUpdateTimer()
                },
                onUnReadChange: function() {
                    var W, Ee = this, nt;
                    ie()(W = this.list).call(W, function(Ie) {
                        var Be = Ee.engagements[Ie.engagementId];
                        Ie.unReadCount = Be.unReadCount
                    }),
                        ie()(nt = q()(this.engagements)).call(nt, function(Ie) {
                            if (!yn(Ee.engagements[Ie].superVisor)) {
                                var Be, st = Ee.engagements[Ie], jt = st.engagementId, _t = st.channelType, Ge = (Be = Ee.engagements[Ie].rez) === null || Be === void 0 || (Be = Be.task) === null || Be === void 0 ? void 0 : Be.id;
                                if (!Ge) {
                                    var It, cn = mt()(It = $n()(Ee.activeTasks)).call(It, function(ct) {
                                        return ct.engagementId === jt
                                    });
                                    Ge = cn?.taskId
                                }
                                _t === "SMS" ? Ee.updateSMSTaskIfExists({
                                    taskId: Ge,
                                    unReadCount: Ee.engagements[Ie].unReadCount
                                }) : (console.log("updateChatTask unReadCount", Ee.engagements[Ie].unReadCount),
                                    Ee.updateChatTask({
                                        taskId: Ge,
                                        unReadCount: Ee.engagements[Ie].unReadCount,
                                        upsert: !1
                                    }))
                            }
                        })
                }
            }),
            computed: Ze(Ze({}, (0,
                Zt.mapGetters)("livechat", ["engagements", "currentEngagement", "totalUnReadCount"])), (0,
                Zt.mapGetters)("sessionPanels", ["activeTasks"])),
            watch: {
                engagements: {
                    handler: function(W) {
                        this.onEngagementsChange(W)
                    },
                    deep: !0
                },
                totalUnReadCount: function() {
                    this.onUnReadChange()
                }
            },
            beforeDestroy: function() {
                this.clearUpdateTimer()
            }
        };
        var Hn = a(50855)
            , cr = (0,
            Hn.A)(Qt, tn, Ot, !1, null, "2484ca0f", null);
        const Rr = cr.exports;
        var Pr = a(77003);
        function rt(Pe) {
            "@babel/helpers - typeof";
            return rt = typeof D() == "function" && typeof G() == "symbol" ? function(W) {
                    return typeof W
                }
                : function(W) {
                    return W && typeof D() == "function" && W.constructor === D() && W !== D().prototype ? "symbol" : typeof W
                }
                ,
                rt(Pe)
        }
        function ae() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            ae = function() {
                return W
            }
            ;
            var Pe, W = {}, Ee = Object.prototype, nt = Ee.hasOwnProperty, Ie = O() || function(Jt, Dt, an) {
                Jt[Dt] = an.value
            }
                , Be = typeof D() == "function" ? D() : {}, st = Be.iterator || "@@iterator", jt = Be.asyncIterator || "@@asyncIterator", _t = Be.toStringTag || "@@toStringTag";
            function Ge(Jt, Dt, an) {
                return O()(Jt, Dt, {
                    value: an,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    Jt[Dt]
            }
            try {
                Ge({}, "")
            } catch {
                Ge = function(an, Bn, vn) {
                    return an[Bn] = vn
                }
            }
            function It(Jt, Dt, an, Bn) {
                var vn = Dt && Dt.prototype instanceof _n ? Dt : _n
                    , nn = Re()(vn.prototype)
                    , tr = new Fe(Bn || []);
                return Ie(nn, "_invoke", {
                    value: $e(Jt, an, tr)
                }),
                    nn
            }
            function cn(Jt, Dt, an) {
                try {
                    return {
                        type: "normal",
                        arg: Jt.call(Dt, an)
                    }
                } catch (Bn) {
                    return {
                        type: "throw",
                        arg: Bn
                    }
                }
            }
            W.wrap = It;
            var ct = "suspendedStart"
                , De = "suspendedYield"
                , bt = "executing"
                , un = "completed"
                , ur = {};
            function _n() {}
            function Jn() {}
            function Ut() {}
            var xe = {};
            Ge(xe, st, function() {
                return this
            });
            var We = An()
                , Nt = We && We(We(Mr([])));
            Nt && Nt !== Ee && nt.call(Nt, st) && (xe = Nt);
            var hn = Ut.prototype = _n.prototype = Re()(xe);
            function Ln(Jt) {
                var Dt;
                ie()(Dt = ["next", "throw", "return"]).call(Dt, function(an) {
                    Ge(Jt, an, function(Bn) {
                        return this._invoke(an, Bn)
                    })
                })
            }
            function fn(Jt, Dt) {
                function an(vn, nn, tr, Ve) {
                    var R = cn(Jt[vn], Jt, nn);
                    if (R.type !== "throw") {
                        var ce = R.arg
                            , gt = ce.value;
                        return gt && rt(gt) == "object" && nt.call(gt, "__await") ? Dt.resolve(gt.__await).then(function(Ft) {
                            an("next", Ft, tr, Ve)
                        }, function(Ft) {
                            an("throw", Ft, tr, Ve)
                        }) : Dt.resolve(gt).then(function(Ft) {
                            ce.value = Ft,
                                tr(ce)
                        }, function(Ft) {
                            return an("throw", Ft, tr, Ve)
                        })
                    }
                    Ve(R.arg)
                }
                var Bn;
                Ie(this, "_invoke", {
                    value: function(nn, tr) {
                        function Ve() {
                            return new Dt(function(R, ce) {
                                    an(nn, tr, R, ce)
                                }
                            )
                        }
                        return Bn = Bn ? Bn.then(Ve, Ve) : Ve()
                    }
                })
            }
            function $e(Jt, Dt, an) {
                var Bn = ct;
                return function(vn, nn) {
                    if (Bn === bt)
                        throw Error("Generator is already running");
                    if (Bn === un) {
                        if (vn === "throw")
                            throw nn;
                        return {
                            value: Pe,
                            done: !0
                        }
                    }
                    for (an.method = vn,
                             an.arg = nn; ; ) {
                        var tr = an.delegate;
                        if (tr) {
                            var Ve = tt(tr, an);
                            if (Ve) {
                                if (Ve === ur)
                                    continue;
                                return Ve
                            }
                        }
                        if (an.method === "next")
                            an.sent = an._sent = an.arg;
                        else if (an.method === "throw") {
                            if (Bn === ct)
                                throw Bn = un,
                                    an.arg;
                            an.dispatchException(an.arg)
                        } else
                            an.method === "return" && an.abrupt("return", an.arg);
                        Bn = bt;
                        var R = cn(Jt, Dt, an);
                        if (R.type === "normal") {
                            if (Bn = an.done ? un : De,
                            R.arg === ur)
                                continue;
                            return {
                                value: R.arg,
                                done: an.done
                            }
                        }
                        R.type === "throw" && (Bn = un,
                            an.method = "throw",
                            an.arg = R.arg)
                    }
                }
            }
            function tt(Jt, Dt) {
                var an = Dt.method
                    , Bn = Jt.iterator[an];
                if (Bn === Pe)
                    return Dt.delegate = null,
                    an === "throw" && Jt.iterator.return && (Dt.method = "return",
                        Dt.arg = Pe,
                        tt(Jt, Dt),
                    Dt.method === "throw") || an !== "return" && (Dt.method = "throw",
                        Dt.arg = new TypeError("The iterator does not provide a '" + an + "' method")),
                        ur;
                var vn = cn(Bn, Jt.iterator, Dt.arg);
                if (vn.type === "throw")
                    return Dt.method = "throw",
                        Dt.arg = vn.arg,
                        Dt.delegate = null,
                        ur;
                var nn = vn.arg;
                return nn ? nn.done ? (Dt[Jt.resultName] = nn.value,
                    Dt.next = Jt.nextLoc,
                Dt.method !== "return" && (Dt.method = "next",
                    Dt.arg = Pe),
                    Dt.delegate = null,
                    ur) : nn : (Dt.method = "throw",
                    Dt.arg = new TypeError("iterator result is not an object"),
                    Dt.delegate = null,
                    ur)
            }
            function ot(Jt) {
                var Dt = {
                    tryLoc: Jt[0]
                };
                1 in Jt && (Dt.catchLoc = Jt[1]),
                2 in Jt && (Dt.finallyLoc = Jt[2],
                    Dt.afterLoc = Jt[3]),
                    this.tryEntries.push(Dt)
            }
            function on(Jt) {
                var Dt = Jt.completion || {};
                Dt.type = "normal",
                    delete Dt.arg,
                    Jt.completion = Dt
            }
            function Fe(Jt) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(Jt).call(Jt, ot, this),
                    this.reset(!0)
            }
            function Mr(Jt) {
                if (Jt || Jt === "") {
                    var Dt = Jt[st];
                    if (Dt)
                        return Dt.call(Jt);
                    if (typeof Jt.next == "function")
                        return Jt;
                    if (!isNaN(Jt.length)) {
                        var an = -1
                            , Bn = function vn() {
                            for (; ++an < Jt.length; )
                                if (nt.call(Jt, an))
                                    return vn.value = Jt[an],
                                        vn.done = !1,
                                        vn;
                            return vn.value = Pe,
                                vn.done = !0,
                                vn
                        };
                        return Bn.next = Bn
                    }
                }
                throw new TypeError(rt(Jt) + " is not iterable")
            }
            return Jn.prototype = Ut,
                Ie(hn, "constructor", {
                    value: Ut,
                    configurable: !0
                }),
                Ie(Ut, "constructor", {
                    value: Jn,
                    configurable: !0
                }),
                Jn.displayName = Ge(Ut, _t, "GeneratorFunction"),
                W.isGeneratorFunction = function(Jt) {
                    var Dt = typeof Jt == "function" && Jt.constructor;
                    return !!Dt && (Dt === Jn || (Dt.displayName || Dt.name) === "GeneratorFunction")
                }
                ,
                W.mark = function(Jt) {
                    return gn() ? gn()(Jt, Ut) : (Jt.__proto__ = Ut,
                        Ge(Jt, _t, "GeneratorFunction")),
                        Jt.prototype = Re()(hn),
                        Jt
                }
                ,
                W.awrap = function(Jt) {
                    return {
                        __await: Jt
                    }
                }
                ,
                Ln(fn.prototype),
                Ge(fn.prototype, jt, function() {
                    return this
                }),
                W.AsyncIterator = fn,
                W.async = function(Jt, Dt, an, Bn, vn) {
                    vn === void 0 && (vn = rr());
                    var nn = new fn(It(Jt, Dt, an, Bn),vn);
                    return W.isGeneratorFunction(Dt) ? nn : nn.next().then(function(tr) {
                        return tr.done ? tr.value : nn.next()
                    })
                }
                ,
                Ln(hn),
                Ge(hn, _t, "Generator"),
                Ge(hn, st, function() {
                    return this
                }),
                Ge(hn, "toString", function() {
                    return "[object Generator]"
                }),
                W.keys = function(Jt) {
                    var Dt = Object(Jt)
                        , an = [];
                    for (var Bn in Dt)
                        an.push(Bn);
                    return ar()(an).call(an),
                        function vn() {
                            for (; an.length; ) {
                                var nn = an.pop();
                                if (nn in Dt)
                                    return vn.value = nn,
                                        vn.done = !1,
                                        vn
                            }
                            return vn.done = !0,
                                vn
                        }
                }
                ,
                W.values = Mr,
                Fe.prototype = {
                    constructor: Fe,
                    reset: function(Dt) {
                        var an;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = Pe,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = Pe,
                            ie()(an = this.tryEntries).call(an, on),
                            !Dt)
                            for (var Bn in this)
                                Bn.charAt(0) === "t" && nt.call(this, Bn) && !isNaN(+x()(Bn).call(Bn, 1)) && (this[Bn] = Pe)
                    },
                    stop: function() {
                        this.done = !0;
                        var Dt = this.tryEntries[0].completion;
                        if (Dt.type === "throw")
                            throw Dt.arg;
                        return this.rval
                    },
                    dispatchException: function(Dt) {
                        if (this.done)
                            throw Dt;
                        var an = this;
                        function Bn(ce, gt) {
                            return tr.type = "throw",
                                tr.arg = Dt,
                                an.next = ce,
                            gt && (an.method = "next",
                                an.arg = Pe),
                                !!gt
                        }
                        for (var vn = this.tryEntries.length - 1; vn >= 0; --vn) {
                            var nn = this.tryEntries[vn]
                                , tr = nn.completion;
                            if (nn.tryLoc === "root")
                                return Bn("end");
                            if (nn.tryLoc <= this.prev) {
                                var Ve = nt.call(nn, "catchLoc")
                                    , R = nt.call(nn, "finallyLoc");
                                if (Ve && R) {
                                    if (this.prev < nn.catchLoc)
                                        return Bn(nn.catchLoc, !0);
                                    if (this.prev < nn.finallyLoc)
                                        return Bn(nn.finallyLoc)
                                } else if (Ve) {
                                    if (this.prev < nn.catchLoc)
                                        return Bn(nn.catchLoc, !0)
                                } else {
                                    if (!R)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < nn.finallyLoc)
                                        return Bn(nn.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(Dt, an) {
                        for (var Bn = this.tryEntries.length - 1; Bn >= 0; --Bn) {
                            var vn = this.tryEntries[Bn];
                            if (vn.tryLoc <= this.prev && nt.call(vn, "finallyLoc") && this.prev < vn.finallyLoc) {
                                var nn = vn;
                                break
                            }
                        }
                        nn && (Dt === "break" || Dt === "continue") && nn.tryLoc <= an && an <= nn.finallyLoc && (nn = null);
                        var tr = nn ? nn.completion : {};
                        return tr.type = Dt,
                            tr.arg = an,
                            nn ? (this.method = "next",
                                this.next = nn.finallyLoc,
                                ur) : this.complete(tr)
                    },
                    complete: function(Dt, an) {
                        if (Dt.type === "throw")
                            throw Dt.arg;
                        return Dt.type === "break" || Dt.type === "continue" ? this.next = Dt.arg : Dt.type === "return" ? (this.rval = this.arg = Dt.arg,
                            this.method = "return",
                            this.next = "end") : Dt.type === "normal" && an && (this.next = an),
                            ur
                    },
                    finish: function(Dt) {
                        for (var an = this.tryEntries.length - 1; an >= 0; --an) {
                            var Bn = this.tryEntries[an];
                            if (Bn.finallyLoc === Dt)
                                return this.complete(Bn.completion, Bn.afterLoc),
                                    on(Bn),
                                    ur
                        }
                    },
                    catch: function(Dt) {
                        for (var an = this.tryEntries.length - 1; an >= 0; --an) {
                            var Bn = this.tryEntries[an];
                            if (Bn.tryLoc === Dt) {
                                var vn = Bn.completion;
                                if (vn.type === "throw") {
                                    var nn = vn.arg;
                                    on(Bn)
                                }
                                return nn
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(Dt, an, Bn) {
                        return this.delegate = {
                            iterator: Mr(Dt),
                            resultName: an,
                            nextLoc: Bn
                        },
                        this.method === "next" && (this.arg = Pe),
                            ur
                    }
                },
                W
        }
        function de(Pe, W, Ee, nt, Ie, Be, st) {
            try {
                var jt = Pe[Be](st)
                    , _t = jt.value
            } catch (Ge) {
                return void Ee(Ge)
            }
            jt.done ? W(_t) : rr().resolve(_t).then(nt, Ie)
        }
        function ye(Pe) {
            return function() {
                var W = this
                    , Ee = arguments;
                return new (rr())(function(nt, Ie) {
                        var Be = Pe.apply(W, Ee);
                        function st(_t) {
                            de(Be, nt, Ie, st, jt, "next", _t)
                        }
                        function jt(_t) {
                            de(Be, nt, Ie, st, jt, "throw", _t)
                        }
                        st(void 0)
                    }
                )
            }
        }
        function Le(Pe, W) {
            var Ee = q()(Pe);
            if (Ke()) {
                var nt = Ke()(Pe);
                W && (nt = pt()(nt).call(nt, function(Ie) {
                    return Ne()(Pe, Ie).enumerable
                })),
                    Ee.push.apply(Ee, nt)
            }
            return Ee
        }
        function Te(Pe) {
            for (var W = 1; W < arguments.length; W++) {
                var Ee, nt, Ie = arguments[W] != null ? arguments[W] : {};
                W % 2 ? ie()(Ee = Le(Object(Ie), !0)).call(Ee, function(Be) {
                    be(Pe, Be, Ie[Be])
                }) : en() ? Tt()(Pe, en()(Ie)) : ie()(nt = Le(Object(Ie))).call(nt, function(Be) {
                    O()(Pe, Be, Ne()(Ie, Be))
                })
            }
            return Pe
        }
        function be(Pe, W, Ee) {
            return (W = me(W))in Pe ? O()(Pe, W, {
                value: Ee,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : Pe[W] = Ee,
                Pe
        }
        function me(Pe) {
            var W = He(Pe, "string");
            return rt(W) == "symbol" ? W : W + ""
        }
        function He(Pe, W) {
            if (rt(Pe) != "object" || !Pe)
                return Pe;
            var Ee = Pe[M()];
            if (Ee !== void 0) {
                var nt = Ee.call(Pe, W || "default");
                if (rt(nt) != "object")
                    return nt;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (W === "string" ? String : Number)(Pe)
        }
        const wt = (0,
            zt.defineComponent)({
            name: "SessionActive",
            props: {
                activeSession: {
                    type: Number,
                    default: 0
                },
                collapse: {
                    type: Boolean,
                    default: !1
                },
                enableZvaAgentAssist: {
                    type: Boolean,
                    default: !1
                }
            },
            mixins: [Lt.sessionMixin],
            data: function() {
                return {
                    eMenuName: gr.eMenuName,
                    selectIdx: -1,
                    isCollapse: !1,
                    durationUpdateTimer: null
                }
            },
            components: {
                ChatActive: Rr,
                NameAvatar: Lt.NameAvatar
            },
            setup: function() {
                var W = (0,
                    Pr.L)()
                    , Ee = W.isCheckUncompleteTask
                    , nt = W.init
                    , Ie = (0,
                    gr.useInstance)()
                    , Be = (0,
                    Lt.useCrmUser)()
                    , st = Be.getCrmNameById;
                return (0,
                    zt.onBeforeMount)(function() {
                    Ie?.initData(),
                        nt()
                }),
                    {
                        isCheckUncompleteTask: Ee,
                        getCrmNameById: st
                    }
            },
            methods: Te(Te({}, (0,
                Zt.mapActions)("sessionPanels", ["timeoutAutoClearTask", "switchActiveTask", "setTaskDisplayDuration", "deleteTaskDisplayDuration"])), {}, {
                initData: function() {
                    var W = this;
                    return ye(ae().mark(function Ee() {
                        return ae().wrap(function(Ie) {
                            for (; ; )
                                switch (Ie.prev = Ie.next) {
                                    case 0:
                                        console.log("init Data"),
                                        (W.activeTaskQueue.length > 0 || W.monitorTaskQueue.length > 0) && W.setUpdateTimer();
                                    case 2:
                                    case "end":
                                        return Ie.stop()
                                }
                        }, Ee)
                    }))()
                },
                onChatSelect: function() {
                    this.$emit("selectChat")
                },
                toggleCollpase: function() {
                    this.isCollapse = !this.isCollapse
                },
                calcTime: function(W, Ee) {
                    var nt = Ee[W.taskId];
                    return "".concat((0,
                        Mn.tsToHHMMSS)(Math.abs(nt?.newDuration || 0)))
                },
                calcIdentifier: function(W) {
                    var Ee = W.type, nt = W.task, Ie = nt === void 0 ? {} : nt, Be = Ie.from, st = Ie.to, jt = Ie.direction, _t = Ie.customerName, Ge = _t === void 0 ? "" : _t, It = Ie.tempCustomerName, cn;
                    return Ee === "phone" ? (cn = st,
                    jt === "inbound" && (cn = Be),
                    It && (cn = It)) : Ee === "video" ? cn = Ge : (Ee === "sms" || Ee === "chat") && (cn = Ge,
                    Ee === "sms" && It && (cn = It)),
                    cn.length > 15 && (cn = "".concat(x()(cn).call(cn, 0, 12), "...")),
                    cn || this.$t("cci.common.unknown")
                },
                calcIdentifierE164Formatted: function(W) {
                    var Ee = this.piiSettings || {}
                        , nt = Ee.maskPiiInfo
                        , Ie = nt === void 0 ? !1 : nt
                        , Be = Ee.detailSettings
                        , st = Be === void 0 ? {} : Be
                        , jt = this.calcIdentifier(W)
                        , _t = W.type
                        , Ge = W.task
                        , It = Ge === void 0 ? {} : Ge
                        , cn = It.tempCustomerName;
                    if (_t === "phone" || _t === "sms") {
                        if (cn) {
                            var ct = st.displayName || {}
                                , De = ct.toggle
                                , bt = De === void 0 ? !1 : De
                                , un = ct.allowUserHiden
                                , ur = un === void 0 ? !1 : un;
                            return Ie && bt && !ur ? this.$t("cci.common.unknown") : jt
                        }
                        var _n = st.phoneNumber || {}
                            , Jn = _n.toggle
                            , Ut = Jn === void 0 ? !1 : Jn
                            , xe = _n.allowUserHiden
                            , We = xe === void 0 ? !1 : xe;
                        return Ie && Ut && !We ? this.$t("cci.common.unknown") : this.$options.filters.phoneNumber(jt, this.currentAgent.countryOrRegion)
                    } else {
                        var Nt = st.displayName || {}
                            , hn = Nt.toggle
                            , Ln = hn === void 0 ? !1 : hn
                            , fn = Nt.allowUserHiden
                            , $e = fn === void 0 ? !1 : fn;
                        return Ie && Ln && !$e ? this.$t("cci.common.unknown") : jt
                    }
                },
                calcIdentifierWithPhiMask: function(W) {
                    var Ee = W.type, nt = W.task, Ie = nt === void 0 ? {} : nt, Be = Ie.from, st = Ie.to, jt = Ie.direction, _t = Ie.engagementId, Ge = Ie.customerName, It = Ge === void 0 ? "" : Ge, cn = Ie.tempCustomerName, ct = Ie.variableCustomerName, De = this.getCrmNameById(_t), bt;
                    Ee === "phone" ? (bt = st,
                    jt === "inbound" && (bt = Be),
                    cn && (bt = cn)) : bt = cn || ct || It,
                        bt = De || bt;
                    var un = this.piiSettings || {}
                        , ur = un.maskPiiInfo
                        , _n = ur === void 0 ? !1 : ur
                        , Jn = un.detailSettings
                        , Ut = Jn === void 0 ? {} : Jn;
                    if (Ee === "phone" || Ee === "sms")
                        if (ct || cn) {
                            var xe, We = Ut.displayName || {}, Nt = We.toggle, hn = Nt === void 0 ? !1 : Nt;
                            bt = _n && hn ? (xe = bt) === null || xe === void 0 ? void 0 : xe.replace(gr.phiReg, "*") : bt
                        } else {
                            var Ln = Ut.phoneNumber || {}
                                , fn = Ln.toggle
                                , $e = fn === void 0 ? !1 : fn
                                , tt = this.$options.filters.phoneNumber(bt, this.currentAgent.countryOrRegion);
                            bt = _n && $e ? tt?.replace(gr.phiReg, "*") : tt
                        }
                    else {
                        var ot = Ut.displayName || {}
                            , on = ot.toggle
                            , Fe = on === void 0 ? !1 : on;
                        bt = _n && Fe ? bt.replace(gr.phiReg, "*") : bt
                    }
                    return bt || this.$t("cci.common.unknown")
                },
                updateSessionDuration: function() {
                    var W, Ee = this, nt, Ie = q()(this.activeTaskDurationList);
                    ie()(W = this.activeTaskQueue).call(W, function(Be) {
                        var st = Be.type
                            , jt = 0
                            , _t = "";
                        if (st === "phone") {
                            var Ge = Be.task
                                , It = Ge.eventType
                                , cn = Ge.acceptTs
                                , ct = Ge.completeTs
                                , De = Ge.takeoverTs
                                , bt = Ge.queueId
                                , un = Ge.outboundQueueId;
                            if (_t = It,
                            It !== "created")
                                if (It === "accepted")
                                    jt = Oe()() - cn;
                                else if (It === "call.ended") {
                                    var ur = 0
                                        , _n = Ee.cciQueues[bt] || {}
                                        , Jn = _n.defaultDispositionId
                                        , Ut = _n.enableWrapUpExpiration;
                                    if (un) {
                                        var xe;
                                        ur = ((xe = Ee.cciOutboundQueues[un]) === null || xe === void 0 ? void 0 : xe.wrapUpTime) || 0;
                                        var We = Ee.cciOutboundQueues[un] || {}
                                            , Nt = We.defaultDispositionId
                                            , hn = We.enableWrapUpExpiration;
                                        Jn = Nt,
                                            Ut = hn
                                    } else if (bt) {
                                        var Ln;
                                        ur = ((Ln = Ee.cciQueues[bt]) === null || Ln === void 0 ? void 0 : Ln.wrapUpTime) || 0
                                    }
                                    jt = ct + ur * 1e3 - Oe()(),
                                    jt < 0 && Ut && Ee.timeoutAutoClearTask({
                                        taskId: Be.taskId,
                                        eventType: It,
                                        mSecs: jt,
                                        defaultDispositionId: Jn,
                                        syncLocal: !1
                                    })
                                } else
                                    It === "takeover.accepted" && (jt = Oe()() - De)
                        } else if (st === "video") {
                            var fn = Be.task
                                , $e = fn.eventType
                                , tt = fn.acceptTs
                                , ot = fn.completeTs
                                , on = fn.isUpgrade
                                , Fe = fn.direction
                                , Mr = fn.liveVideoUpgradeFromQueueId
                                , Jt = fn.queueId
                                , Dt = fn.outboundQueueId
                                , an = on ? Mr : Jt || Dt;
                            _t = $e;
                            var Bn = function(mr) {
                                var Je, qt = Fe === "IN_BOUND" ? Ee.cciQueues[an] : Ee.cciOutboundQueues[an];
                                if (on) {
                                    var bn = Ee.cciUpgradeQueues[an];
                                    bn != null && bn.enableUpgradeWrapUp ? qt = bn : bn?.channelType !== 0 && (qt = Ee.cciQueues[an])
                                }
                                return (Je = qt) === null || Je === void 0 ? void 0 : Je[mr]
                            };
                            if ($e !== "v.created") {
                                if ($e === "v.accepted")
                                    jt = Oe()() - tt;
                                else if ($e === "v.ended") {
                                    var vn = 0;
                                    if (an && (vn = Bn("wrapUpTime") || 0),
                                        jt = ot + vn * 1e3 - Oe()(),
                                    jt < 0) {
                                        var nn = Bn("defaultDispositionId")
                                            , tr = Bn("enableWrapUpExpiration");
                                        tr && Ee.timeoutAutoClearTask({
                                            taskId: Be.taskId,
                                            eventType: $e,
                                            mSecs: jt,
                                            defaultDispositionId: nn,
                                            syncLocal: !1
                                        })
                                    }
                                }
                            }
                        } else if (st === "sms") {
                            var Ve = Be.task
                                , R = Ve.eventType
                                , ce = Ve.acceptTs
                                , gt = Ve.completeTs
                                , Ft = Ve.queueId
                                , Kt = Ve.direction;
                            if (_t = R,
                            R !== "sms.created") {
                                if (R === "sms.accepted")
                                    jt = Oe()() - ce;
                                else if (R === "sms.ended") {
                                    var St = 0;
                                    if (Ft)
                                        if (Kt === "OUT_BOUND") {
                                            var Xt;
                                            St = ((Xt = Ee.cciOutboundQueues) === null || Xt === void 0 ? void 0 : Xt.wrapUpTime) || 0
                                        } else {
                                            var Rn;
                                            St = ((Rn = Ee.cciQueues[Ft]) === null || Rn === void 0 ? void 0 : Rn.wrapUpTime) || 0
                                        }
                                    jt = gt + St * 1e3 - Oe()()
                                }
                            }
                        } else if (st === "chat") {
                            var kn = Be.task
                                , pr = kn.eventType
                                , Or = kn.acceptTs
                                , we = kn.completeTs
                                , lr = kn.queueId
                                , Tr = kn.direction;
                            if (_t = pr,
                            pr !== "chat.created") {
                                if (pr === "chat.accepted")
                                    jt = Oe()() - Or;
                                else if (pr === "chat.ended") {
                                    var Lr = 0;
                                    if (lr)
                                        if (Tr === "OUT_BOUND") {
                                            var Ur;
                                            Lr = ((Ur = Ee.cciOutboundQueues[lr]) === null || Ur === void 0 ? void 0 : Ur.wrapUpTime) || 0
                                        } else {
                                            var Hr;
                                            Lr = ((Hr = Ee.cciQueues[lr]) === null || Hr === void 0 ? void 0 : Hr.wrapUpTime) || 0
                                        }
                                    jt = we + Lr * 1e3 - Oe()()
                                }
                            }
                        }
                        Ee.setTaskDisplayDuration({
                            taskId: Be.taskId,
                            mSecs: jt,
                            mStage: _t,
                            onlySyncLocal: !0
                        })
                    }),
                        ie()(nt = this.monitorTaskQueue).call(nt, function(Be) {
                            var st, jt = Be.type, _t = Be.taskId, Ge = 0, It = "";
                            if (jt === "phone") {
                                var cn = Be.task
                                    , ct = cn.eventType
                                    , De = cn.monitorStartTs;
                                It = ct,
                                ct === "monitor.start" && (Ge = Oe()() - De)
                            } else if (at()(st = ["sms", "chat", "video"]).call(st, jt)) {
                                var bt = Be.eventType
                                    , un = Be.monitorStartTs;
                                It = bt,
                                bt === "monitor.start" && (Ge = Oe()() - un)
                            }
                            Ee.setTaskDisplayDuration({
                                taskId: _t,
                                mSecs: Ge,
                                mStage: It,
                                onlySyncLocal: !0
                            })
                        }),
                        ie()(Ie).call(Ie, function(Be) {
                            var st, jt;
                            Ce()(st = Ee.activeTaskQueue).call(st, function(_t) {
                                return _t.taskId === Be
                            }) < 0 && Ce()(jt = Ee.monitorTaskQueue).call(jt, function(_t) {
                                return _t.taskId === Be
                            }) < 0 && Ee.deleteTaskDisplayDuration(Be)
                        }),
                    q()(this.activeTaskDurationList).length === 0 && this.clearUpdateTimer()
                },
                setUpdateTimer: function() {
                    this.clearUpdateTimer(),
                        console.log("001.setUpdateTimer interval"),
                        this.durationUpdateTimer = Ae()(this.updateSessionDuration, 1e3)
                },
                clearUpdateTimer: function() {
                    console.log("002.clearUpdateTimer"),
                    this.durationUpdateTimer && clearInterval(this.durationUpdateTimer)
                },
                onSelect: function() {
                    var W, Ee = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.activeTaskQueue[0].taskId, nt = mt()(W = this.activeTaskQueue).call(W, function(_t) {
                        return _t.taskId === Ee
                    });
                    if (nt) {
                        if (this.switchActiveTask(Ee),
                        nt?.type === "phone" || nt?.type === "video")
                            this.$emit("selectPhone", Ee);
                        else if (nt?.type === "sms") {
                            var Ie, Be;
                            (Ie = this.$refs.chatActive) === null || Ie === void 0 || (Be = Ie.onSelect) === null || Be === void 0 || Be.call(Ie, nt.engagementId, "SMS")
                        } else if (nt?.type === "chat") {
                            var st, jt;
                            (st = this.$refs.chatActive) === null || st === void 0 || (jt = st.onSelect) === null || jt === void 0 || jt.call(st, nt.engagementId, "CHAT")
                        }
                    }
                },
                onActiveTaskQueueChange: function() {
                    this.setUpdateTimer()
                },
                getUnreadCount: function(W) {
                    if (W?.type === "sms" || W?.type === "chat") {
                        var Ee, nt;
                        return (W == null || (Ee = W.task) === null || Ee === void 0 ? void 0 : Ee.unReadCount) > 99 ? "99+" : W == null || (nt = W.task) === null || nt === void 0 ? void 0 : nt.unReadCount
                    }
                    return null
                },
                getIconClassName: function(W) {
                    var Ee;
                    return ["phone-active__queue", "".concat((W == null || (Ee = W.task) === null || Ee === void 0 ? void 0 : Ee.subChannel) === gr.CHANNEL_KEYS.email.keyUpper ? "email" : W?.type)]
                },
                isShowPhoneRecording: function(W) {
                    var Ee, nt, Ie;
                    return (W == null || (Ee = W.task) === null || Ee === void 0 ? void 0 : Ee.eventType) !== "call.ended" && (W == null || (nt = W.task) === null || nt === void 0 ? void 0 : nt.eventType) !== "callHangup" && W?.type === "phone" && W?.engagementId === ((Ie = this.currentCall) === null || Ie === void 0 || (Ie = Ie.state) === null || Ie === void 0 ? void 0 : Ie.engagementId) && this.voiceRecordingStatus === 2 && !this.collapse
                },
                openMoreSession: function() {
                    this.$emit("setCollapse", !1),
                        this.isCollapse = !1
                },
                preprocessingSessionList: function(W) {
                    var Ee = W.type
                        , nt = W.task
                        , Ie = nt === void 0 ? {} : nt
                        , Be = Ie.tempCustomerName
                        , st = Ie.engagementId
                        , jt = this.getCrmNameById(st);
                    return Te(Te({}, W), {}, {
                        calcIdentifierWithPhiMask: this.calcIdentifierWithPhiMask(W),
                        calcQueueName: this.calcQueueName(W),
                        getUnreadCount: this.getUnreadCount(W),
                        iconClassName: this.getIconClassName(W),
                        calcIdentifierE164Formatted: this.calcIdentifierE164Formatted(W),
                        calcEngagementType: this.calcEngagementType(W),
                        hasName: !(Ee === "phone" || Ee === "sms") || Be || jt
                    })
                }
            }),
            computed: Te(Te(Te(Te({}, (0,
                Zt.mapGetters)({
                account: "account",
                currentAgent: "user",
                piiSettings: "piiSettings"
            })), (0,
                Zt.mapGetters)("sessionPanels", ["activeTaskQueue", "monitorTaskQueue", "activeTaskDurationList", "cciQueues", "cciOutboundQueues", "cciUpgradeQueues", "currentTaskId", "currentAcceptTaskId", "activeTasks"])), (0,
                Zt.mapGetters)("coreVoice", ["currentCall"])), {}, {
                voiceRecordingStatus: function() {
                    var W, Ee, nt, Ie, Be = ((W = this.currentCall) === null || W === void 0 || (W = W.state) === null || W === void 0 ? void 0 : W.leg) === "main", st = ((Ee = this.currentCall) === null || Ee === void 0 || (Ee = Ee.state) === null || Ee === void 0 ? void 0 : Ee.hasTwoLegs) && ((nt = this.currentCall) === null || nt === void 0 || (nt = nt.state) === null || nt === void 0 || (nt = nt.minorLegState) === null || nt === void 0 ? void 0 : nt.type) === "warmConference";
                    if (st && !Be) {
                        var jt;
                        return (jt = this.currentCall) === null || jt === void 0 || (jt = jt.state) === null || jt === void 0 || (jt = jt.minorLegState) === null || jt === void 0 ? void 0 : jt.recordingStatus
                    }
                    return (Ie = this.currentCall) === null || Ie === void 0 || (Ie = Ie.state) === null || Ie === void 0 || (Ie = Ie.mainLegState) === null || Ie === void 0 ? void 0 : Ie.recordingStatus
                },
                activeTaskQueueLists: function() {
                    var W, Ee, nt = this;
                    return ve()(W = pt()(Ee = this.activeTaskQueue).call(Ee, function(Ie) {
                        var Be = Ie.taskId
                            , st = Ie.type
                            , jt = nt.activeTasks[Be] || {}
                            , _t = jt.eventType
                            , Ge = jt.isTransfer
                            , It = jt.isTransferToQueue
                            , cn = jt.transferType
                            , ct = jt.isConference
                            , De = jt.customerBridged
                            , bt = De === void 0 ? !1 : De;
                        if (st === "phone") {
                            if (_t === "created")
                                return !1;
                            if (_t === "accepted" && (Ge || It) && cn === "attended" && !bt)
                                return !1;
                            if (ct)
                                return !1
                        } else {
                            if (st === "video")
                                return _t !== "v.created";
                            if (st === "sms")
                                return _t !== "sms.created";
                            if (st === "chat")
                                return _t !== "chat.created"
                        }
                        return !0
                    })).call(W, this.preprocessingSessionList)
                },
                activeTaskQueueList: function() {
                    var W;
                    return this.collapse ? x()(W = this.activeTaskQueueLists).call(W, 0, 5) : this.activeTaskQueueLists
                },
                isActiveSession: function() {
                    var W;
                    return at()(W = [gr.eMenuName.sessionActive, gr.eMenuName.chatPanel]).call(W, this.activeSession)
                },
                sessionCalcTime: function() {
                    var W = this;
                    return function(Ee) {
                        return W.calcTime(Ee, W.activeTaskDurationList)
                    }
                }
            }),
            watch: {
                "activeTaskQueue.length": function(W) {
                    console.log("activeTaskQueue changed:", W),
                        this.onActiveTaskQueueChange()
                },
                "monitorTaskQueue.length": function(W) {
                    console.log("monitorTaskQueue changed:", W),
                        this.onActiveTaskQueueChange()
                },
                currentAcceptTaskId: function(W) {
                    W && this.onSelect(W)
                }
            },
            beforeDestroy: function() {
                console.log("Active session beforeDestroy"),
                    this.clearUpdateTimer()
            }
        });
        var Bt = (0,
            Hn.A)(wt, pe, ne, !1, null, "44e0fd7a", null);
        const En = Bt.exports
    }
    ,
    91003: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => _r
            });
        var Y = a(14950)
            , J = a.n(Y)
            , $ = a(39084)
            , k = a.n($)
            , P = a(61849)
            , M = a.n(P)
            , Q = a(83030)
            , O = a.n(Q)
            , F = a(5339)
            , D = a.n(F);
        function z(Pn) {
            "@babel/helpers - typeof";
            return z = typeof O() == "function" && typeof D() == "symbol" ? function(Ze) {
                    return typeof Ze
                }
                : function(Ze) {
                    return Ze && typeof O() == "function" && Ze.constructor === O() && Ze !== O().prototype ? "symbol" : typeof Ze
                }
                ,
                z(Pn)
        }
        function G(Pn, Ze, Vn) {
            return (Ze = V(Ze))in Pn ? M()(Pn, Ze, {
                value: Vn,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : Pn[Ze] = Vn,
                Pn
        }
        function V(Pn) {
            var Ze = K(Pn, "string");
            return z(Ze) == "symbol" ? Ze : Ze + ""
        }
        function K(Pn, Ze) {
            if (z(Pn) != "object" || !Pn)
                return Pn;
            var Vn = Pn[k()];
            if (Vn !== void 0) {
                var Se = Vn.call(Pn, Ze || "default");
                if (z(Se) != "object")
                    return Se;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (Ze === "string" ? String : Number)(Pn)
        }
        var te = function() {
            var Ze = this
                , Vn = Ze._self._c;
            return Vn("ul", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: Ze.chatWrapupQueueList.length > 0,
                    expression: "chatWrapupQueueList.length > 0"
                }],
                staticClass: "cus-menu",
                class: {
                    "cus-menu-display": Ze.chatWrapupQueueList.length
                },
                attrs: {
                    role: "none"
                }
            }, [Vn("div", {
                attrs: {
                    role: "none"
                }
            }, [Vn("li", {
                staticClass: "cus-submenu",
                class: Ze.isCollapse ? "is-closed" : "",
                attrs: {
                    role: "none"
                }
            }, [Vn("div", {
                staticClass: "cus-submenu__title",
                attrs: {
                    role: "menuitem",
                    "aria-expanded": "".concat(!Ze.isCollapse),
                    "aria-label": Ze.$t("cci.nav.wrapup.collapse"),
                    title: Ze.$t("cci.nav.wrapup.collapse"),
                    tabindex: "0"
                },
                on: {
                    click: Ze.toggleCollpase,
                    keydown: [function(Se) {
                        var Ue;
                        return !J()(Ue = Se.type).call(Ue, "key") && Ze._k(Se.keyCode, "enter", 13, Se.key, "Enter") ? null : Ze.toggleCollpase.apply(null, arguments)
                    }
                        , function(Se) {
                            var Ue;
                            return !J()(Ue = Se.type).call(Ue, "key") && Ze._k(Se.keyCode, "space", 32, Se.key, [" ", "Spacebar"]) ? null : Ze.toggleCollpase.apply(null, arguments)
                        }
                    ]
                }
            }, [Vn("i", {
                staticClass: "cus-submenu__icon-arrow"
            }), Ze._v(" "), Vn("span", [Ze._v(Ze._s(Ze.$t("cci.client.session.message.wrapup")) + " (" + Ze._s(Ze.chatWrapupQueueList.length) + ")")])]), Ze._v(" "), Vn("ul", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !Ze.isCollapse || Ze.collapse,
                    expression: "!isCollapse || collapse"
                }],
                staticClass: "message-wrapup",
                attrs: {
                    role: "menu",
                    "aria-label": Ze.$t("cci.nav.wrapup.collapse")
                }
            }, [Ze._l(Ze.chatWrapupQueueList, function(Se) {
                return Vn("li", {
                    key: Se.taskId,
                    class: ["message-wrapup__item", G({}, "selected".concat(Ze.collapse ? "__collapse" : ""), Ze.isChatWrapupSession && Ze.currentTaskId === Se.taskId)],
                    attrs: {
                        "aria-label": Se.calcQueueName,
                        role: "menuitem",
                        tabindex: "0"
                    },
                    on: {
                        click: function(yt) {
                            return Ze.onSelect(Se)
                        },
                        keydown: [function(Ue) {
                            var yt;
                            return !J()(yt = Ue.type).call(yt, "key") && Ze._k(Ue.keyCode, "enter", 13, Ue.key, "Enter") ? null : Ze.onSelect(Se)
                        }
                            , function(Ue) {
                                var yt;
                                return !J()(yt = Ue.type).call(yt, "key") && Ze._k(Ue.keyCode, "space", 32, Ue.key, [" ", "Spacebar"]) ? null : Ze.onSelect(Se)
                            }
                        ]
                    }
                }, [Vn("zm-tooltip", {
                    attrs: {
                        disabled: !Ze.collapse,
                        placement: "right-start"
                    }
                }, [Vn("div", {
                    attrs: {
                        slot: "content"
                    },
                    slot: "content"
                }, [Ze._v(`
              ` + Ze._s(Se.calcIdentifier) + `
              `), Vn("br"), Ze._v(" "), Vn("div", {
                    class: ["message-wrapup__queue", "".concat(Se.type)]
                }, [Ze._v(`
                ` + Ze._s(Se.calcQueueName) + `
              `)])]), Ze._v(" "), Vn("nameAvatar", {
                    style: {
                        marginRight: Ze.collapse ? "0" : "8px"
                    },
                    attrs: {
                        title: Se.hasName && Se.calcIdentifier
                    }
                }, [Vn("div", {
                    staticClass: "message-wrapup__avatar"
                })])], 1), Ze._v(" "), Vn("div", {
                    staticClass: "message-wrapup__content"
                }, [Vn("div", {
                    staticClass: "message-wrapup__identifier"
                }, [Ze._v(`
              ` + Ze._s(Se.calcIdentifier) + `
            `)]), Ze._v(" "), Vn("div", {
                    class: Se.getIconClassName
                }, [Ze._v(`
              ` + Ze._s(Se.calcQueueName) + `
            `)])]), Ze._v(" "), Se.getUnreadCount ? Vn("div", {
                    class: ["task-active__unread", {
                        "task-active__unread__collapse": Ze.collapse
                    }]
                }, [Ze._v(`
            ` + Ze._s(Se.getUnreadCount) + `
          `)]) : Ze._e()], 1)
            }), Ze._v(" "), Ze.collapse && Ze.chatWrapupQueueList.length > 5 ? Vn("li", {
                staticClass: "message-wrapup__item",
                attrs: {
                    role: "menuitem",
                    "aria-label": Ze.$t("cci.integrations.moreOptions"),
                    tabindex: "0"
                },
                on: {
                    click: Ze.openMoreSession
                }
            }, [Vn("div", {
                staticClass: "message-wrapup__more"
            }, [Ze._v(`
            +` + Ze._s(Ze.chatWrapupQueueList.length - 5) + `
          `)])]) : Ze._e()], 2)])]), Ze._v(" "), Vn("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: Ze.chatWrapupQueueList.length,
                    expression: "chatWrapupQueueList.length"
                }],
                class: [{
                    "cus-menu-left-border__active": Ze.isChatWrapupSession
                }, "cus-menu-left-border"]
            })])
        }
            , ee = []
            , pe = a(70184)
            , ne = a.n(pe)
            , X = a(37082)
            , x = a.n(X)
            , H = a(27425)
            , q = a.n(H)
            , _e = a(44987)
            , ie = a.n(_e)
            , ze = a(2208)
            , Oe = a.n(ze)
            , Cn = a(69279)
            , at = a.n(Cn)
            , Sn = a(59814)
            , Ce = a.n(Sn)
            , wn = a(69761)
            , Ae = a.n(wn)
            , nr = a(53584)
            , mt = a.n(nr)
            , jn = a(53720)
            , ve = a.n(jn)
            , or = a(12608)
            , pt = a.n(or)
            , je = a(81352)
            , Ke = a.n(je)
            , it = a(84653)
            , Ne = a.n(it)
            , Gt = a(89099)
            , en = a.n(Gt)
            , rn = a(34622)
            , Tt = a.n(rn)
            , vr = a(27785)
            , rr = a.n(vr)
            , kr = a(83537)
            , Re = a.n(kr)
            , Et = a(65888)
            , An = a.n(Et)
            , Yt = a(34187)
            , gn = a.n(Yt)
            , Qe = a(73007)
            , ar = a.n(Qe)
            , zt = a(23716)
            , Zt = a.n(zt)
            , Lt = a(53578)
            , gr = a(76856)
            , Mn = a(83266)
            , U = a(76709)
            , Mt = a(56405)
            , Kn = a(13447);
        function In(Pn) {
            "@babel/helpers - typeof";
            return In = typeof O() == "function" && typeof D() == "symbol" ? function(Ze) {
                    return typeof Ze
                }
                : function(Ze) {
                    return Ze && typeof O() == "function" && Ze.constructor === O() && Ze !== O().prototype ? "symbol" : typeof Ze
                }
                ,
                In(Pn)
        }
        function tn() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            tn = function() {
                return Ze
            }
            ;
            var Pn, Ze = {}, Vn = Object.prototype, Se = Vn.hasOwnProperty, Ue = M() || function(_t, Ge, It) {
                _t[Ge] = It.value
            }
                , yt = typeof O() == "function" ? O() : {}, Qt = yt.iterator || "@@iterator", Hn = yt.asyncIterator || "@@asyncIterator", cr = yt.toStringTag || "@@toStringTag";
            function Rr(_t, Ge, It) {
                return M()(_t, Ge, {
                    value: It,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    _t[Ge]
            }
            try {
                Rr({}, "")
            } catch {
                Rr = function(It, cn, ct) {
                    return It[cn] = ct
                }
            }
            function Pr(_t, Ge, It, cn) {
                var ct = Ge && Ge.prototype instanceof be ? Ge : be
                    , De = An()(ct.prototype)
                    , bt = new st(cn || []);
                return Ue(De, "_invoke", {
                    value: Ee(_t, It, bt)
                }),
                    De
            }
            function rt(_t, Ge, It) {
                try {
                    return {
                        type: "normal",
                        arg: _t.call(Ge, It)
                    }
                } catch (cn) {
                    return {
                        type: "throw",
                        arg: cn
                    }
                }
            }
            Ze.wrap = Pr;
            var ae = "suspendedStart"
                , de = "suspendedYield"
                , ye = "executing"
                , Le = "completed"
                , Te = {};
            function be() {}
            function me() {}
            function He() {}
            var Ct = {};
            Rr(Ct, Qt, function() {
                return this
            });
            var wt = gn()
                , Bt = wt && wt(wt(jt([])));
            Bt && Bt !== Vn && Se.call(Bt, Qt) && (Ct = Bt);
            var En = He.prototype = be.prototype = An()(Ct);
            function Pe(_t) {
                var Ge;
                ie()(Ge = ["next", "throw", "return"]).call(Ge, function(It) {
                    Rr(_t, It, function(cn) {
                        return this._invoke(It, cn)
                    })
                })
            }
            function W(_t, Ge) {
                function It(ct, De, bt, un) {
                    var ur = rt(_t[ct], _t, De);
                    if (ur.type !== "throw") {
                        var _n = ur.arg
                            , Jn = _n.value;
                        return Jn && In(Jn) == "object" && Se.call(Jn, "__await") ? Ge.resolve(Jn.__await).then(function(Ut) {
                            It("next", Ut, bt, un)
                        }, function(Ut) {
                            It("throw", Ut, bt, un)
                        }) : Ge.resolve(Jn).then(function(Ut) {
                            _n.value = Ut,
                                bt(_n)
                        }, function(Ut) {
                            return It("throw", Ut, bt, un)
                        })
                    }
                    un(ur.arg)
                }
                var cn;
                Ue(this, "_invoke", {
                    value: function(De, bt) {
                        function un() {
                            return new Ge(function(ur, _n) {
                                    It(De, bt, ur, _n)
                                }
                            )
                        }
                        return cn = cn ? cn.then(un, un) : un()
                    }
                })
            }
            function Ee(_t, Ge, It) {
                var cn = ae;
                return function(ct, De) {
                    if (cn === ye)
                        throw Error("Generator is already running");
                    if (cn === Le) {
                        if (ct === "throw")
                            throw De;
                        return {
                            value: Pn,
                            done: !0
                        }
                    }
                    for (It.method = ct,
                             It.arg = De; ; ) {
                        var bt = It.delegate;
                        if (bt) {
                            var un = nt(bt, It);
                            if (un) {
                                if (un === Te)
                                    continue;
                                return un
                            }
                        }
                        if (It.method === "next")
                            It.sent = It._sent = It.arg;
                        else if (It.method === "throw") {
                            if (cn === ae)
                                throw cn = Le,
                                    It.arg;
                            It.dispatchException(It.arg)
                        } else
                            It.method === "return" && It.abrupt("return", It.arg);
                        cn = ye;
                        var ur = rt(_t, Ge, It);
                        if (ur.type === "normal") {
                            if (cn = It.done ? Le : de,
                            ur.arg === Te)
                                continue;
                            return {
                                value: ur.arg,
                                done: It.done
                            }
                        }
                        ur.type === "throw" && (cn = Le,
                            It.method = "throw",
                            It.arg = ur.arg)
                    }
                }
            }
            function nt(_t, Ge) {
                var It = Ge.method
                    , cn = _t.iterator[It];
                if (cn === Pn)
                    return Ge.delegate = null,
                    It === "throw" && _t.iterator.return && (Ge.method = "return",
                        Ge.arg = Pn,
                        nt(_t, Ge),
                    Ge.method === "throw") || It !== "return" && (Ge.method = "throw",
                        Ge.arg = new TypeError("The iterator does not provide a '" + It + "' method")),
                        Te;
                var ct = rt(cn, _t.iterator, Ge.arg);
                if (ct.type === "throw")
                    return Ge.method = "throw",
                        Ge.arg = ct.arg,
                        Ge.delegate = null,
                        Te;
                var De = ct.arg;
                return De ? De.done ? (Ge[_t.resultName] = De.value,
                    Ge.next = _t.nextLoc,
                Ge.method !== "return" && (Ge.method = "next",
                    Ge.arg = Pn),
                    Ge.delegate = null,
                    Te) : De : (Ge.method = "throw",
                    Ge.arg = new TypeError("iterator result is not an object"),
                    Ge.delegate = null,
                    Te)
            }
            function Ie(_t) {
                var Ge = {
                    tryLoc: _t[0]
                };
                1 in _t && (Ge.catchLoc = _t[1]),
                2 in _t && (Ge.finallyLoc = _t[2],
                    Ge.afterLoc = _t[3]),
                    this.tryEntries.push(Ge)
            }
            function Be(_t) {
                var Ge = _t.completion || {};
                Ge.type = "normal",
                    delete Ge.arg,
                    _t.completion = Ge
            }
            function st(_t) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(_t).call(_t, Ie, this),
                    this.reset(!0)
            }
            function jt(_t) {
                if (_t || _t === "") {
                    var Ge = _t[Qt];
                    if (Ge)
                        return Ge.call(_t);
                    if (typeof _t.next == "function")
                        return _t;
                    if (!isNaN(_t.length)) {
                        var It = -1
                            , cn = function ct() {
                            for (; ++It < _t.length; )
                                if (Se.call(_t, It))
                                    return ct.value = _t[It],
                                        ct.done = !1,
                                        ct;
                            return ct.value = Pn,
                                ct.done = !0,
                                ct
                        };
                        return cn.next = cn
                    }
                }
                throw new TypeError(In(_t) + " is not iterable")
            }
            return me.prototype = He,
                Ue(En, "constructor", {
                    value: He,
                    configurable: !0
                }),
                Ue(He, "constructor", {
                    value: me,
                    configurable: !0
                }),
                me.displayName = Rr(He, cr, "GeneratorFunction"),
                Ze.isGeneratorFunction = function(_t) {
                    var Ge = typeof _t == "function" && _t.constructor;
                    return !!Ge && (Ge === me || (Ge.displayName || Ge.name) === "GeneratorFunction")
                }
                ,
                Ze.mark = function(_t) {
                    return ar() ? ar()(_t, He) : (_t.__proto__ = He,
                        Rr(_t, cr, "GeneratorFunction")),
                        _t.prototype = An()(En),
                        _t
                }
                ,
                Ze.awrap = function(_t) {
                    return {
                        __await: _t
                    }
                }
                ,
                Pe(W.prototype),
                Rr(W.prototype, Hn, function() {
                    return this
                }),
                Ze.AsyncIterator = W,
                Ze.async = function(_t, Ge, It, cn, ct) {
                    ct === void 0 && (ct = Re());
                    var De = new W(Pr(_t, Ge, It, cn),ct);
                    return Ze.isGeneratorFunction(Ge) ? De : De.next().then(function(bt) {
                        return bt.done ? bt.value : De.next()
                    })
                }
                ,
                Pe(En),
                Rr(En, cr, "Generator"),
                Rr(En, Qt, function() {
                    return this
                }),
                Rr(En, "toString", function() {
                    return "[object Generator]"
                }),
                Ze.keys = function(_t) {
                    var Ge = Object(_t)
                        , It = [];
                    for (var cn in Ge)
                        It.push(cn);
                    return Zt()(It).call(It),
                        function ct() {
                            for (; It.length; ) {
                                var De = It.pop();
                                if (De in Ge)
                                    return ct.value = De,
                                        ct.done = !1,
                                        ct
                            }
                            return ct.done = !0,
                                ct
                        }
                }
                ,
                Ze.values = jt,
                st.prototype = {
                    constructor: st,
                    reset: function(Ge) {
                        var It;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = Pn,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = Pn,
                            ie()(It = this.tryEntries).call(It, Be),
                            !Ge)
                            for (var cn in this)
                                cn.charAt(0) === "t" && Se.call(this, cn) && !isNaN(+Oe()(cn).call(cn, 1)) && (this[cn] = Pn)
                    },
                    stop: function() {
                        this.done = !0;
                        var Ge = this.tryEntries[0].completion;
                        if (Ge.type === "throw")
                            throw Ge.arg;
                        return this.rval
                    },
                    dispatchException: function(Ge) {
                        if (this.done)
                            throw Ge;
                        var It = this;
                        function cn(_n, Jn) {
                            return bt.type = "throw",
                                bt.arg = Ge,
                                It.next = _n,
                            Jn && (It.method = "next",
                                It.arg = Pn),
                                !!Jn
                        }
                        for (var ct = this.tryEntries.length - 1; ct >= 0; --ct) {
                            var De = this.tryEntries[ct]
                                , bt = De.completion;
                            if (De.tryLoc === "root")
                                return cn("end");
                            if (De.tryLoc <= this.prev) {
                                var un = Se.call(De, "catchLoc")
                                    , ur = Se.call(De, "finallyLoc");
                                if (un && ur) {
                                    if (this.prev < De.catchLoc)
                                        return cn(De.catchLoc, !0);
                                    if (this.prev < De.finallyLoc)
                                        return cn(De.finallyLoc)
                                } else if (un) {
                                    if (this.prev < De.catchLoc)
                                        return cn(De.catchLoc, !0)
                                } else {
                                    if (!ur)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < De.finallyLoc)
                                        return cn(De.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(Ge, It) {
                        for (var cn = this.tryEntries.length - 1; cn >= 0; --cn) {
                            var ct = this.tryEntries[cn];
                            if (ct.tryLoc <= this.prev && Se.call(ct, "finallyLoc") && this.prev < ct.finallyLoc) {
                                var De = ct;
                                break
                            }
                        }
                        De && (Ge === "break" || Ge === "continue") && De.tryLoc <= It && It <= De.finallyLoc && (De = null);
                        var bt = De ? De.completion : {};
                        return bt.type = Ge,
                            bt.arg = It,
                            De ? (this.method = "next",
                                this.next = De.finallyLoc,
                                Te) : this.complete(bt)
                    },
                    complete: function(Ge, It) {
                        if (Ge.type === "throw")
                            throw Ge.arg;
                        return Ge.type === "break" || Ge.type === "continue" ? this.next = Ge.arg : Ge.type === "return" ? (this.rval = this.arg = Ge.arg,
                            this.method = "return",
                            this.next = "end") : Ge.type === "normal" && It && (this.next = It),
                            Te
                    },
                    finish: function(Ge) {
                        for (var It = this.tryEntries.length - 1; It >= 0; --It) {
                            var cn = this.tryEntries[It];
                            if (cn.finallyLoc === Ge)
                                return this.complete(cn.completion, cn.afterLoc),
                                    Be(cn),
                                    Te
                        }
                    },
                    catch: function(Ge) {
                        for (var It = this.tryEntries.length - 1; It >= 0; --It) {
                            var cn = this.tryEntries[It];
                            if (cn.tryLoc === Ge) {
                                var ct = cn.completion;
                                if (ct.type === "throw") {
                                    var De = ct.arg;
                                    Be(cn)
                                }
                                return De
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(Ge, It, cn) {
                        return this.delegate = {
                            iterator: jt(Ge),
                            resultName: It,
                            nextLoc: cn
                        },
                        this.method === "next" && (this.arg = Pn),
                            Te
                    }
                },
                Ze
        }
        function Ot(Pn, Ze, Vn, Se, Ue, yt, Qt) {
            try {
                var Hn = Pn[yt](Qt)
                    , cr = Hn.value
            } catch (Rr) {
                return void Vn(Rr)
            }
            Hn.done ? Ze(cr) : Re().resolve(cr).then(Se, Ue)
        }
        function Pt(Pn) {
            return function() {
                var Ze = this
                    , Vn = arguments;
                return new (Re())(function(Se, Ue) {
                        var yt = Pn.apply(Ze, Vn);
                        function Qt(cr) {
                            Ot(yt, Se, Ue, Qt, Hn, "next", cr)
                        }
                        function Hn(cr) {
                            Ot(yt, Se, Ue, Qt, Hn, "throw", cr)
                        }
                        Qt(void 0)
                    }
                )
            }
        }
        function $n(Pn, Ze) {
            var Vn = Ke()(Pn);
            if (Ne()) {
                var Se = Ne()(Pn);
                Ze && (Se = Ce()(Se).call(Se, function(Ue) {
                    return en()(Pn, Ue).enumerable
                })),
                    Vn.push.apply(Vn, Se)
            }
            return Vn
        }
        function dt(Pn) {
            for (var Ze = 1; Ze < arguments.length; Ze++) {
                var Vn, Se, Ue = arguments[Ze] != null ? arguments[Ze] : {};
                Ze % 2 ? ie()(Vn = $n(Object(Ue), !0)).call(Vn, function(yt) {
                    Xe(Pn, yt, Ue[yt])
                }) : Tt() ? rr()(Pn, Tt()(Ue)) : ie()(Se = $n(Object(Ue))).call(Se, function(yt) {
                    M()(Pn, yt, en()(Ue, yt))
                })
            }
            return Pn
        }
        function Xe(Pn, Ze, Vn) {
            return (Ze = ht(Ze))in Pn ? M()(Pn, Ze, {
                value: Vn,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : Pn[Ze] = Vn,
                Pn
        }
        function ht(Pn) {
            var Ze = yn(Pn, "string");
            return In(Ze) == "symbol" ? Ze : Ze + ""
        }
        function yn(Pn, Ze) {
            if (In(Pn) != "object" || !Pn)
                return Pn;
            var Vn = Pn[k()];
            if (Vn !== void 0) {
                var Se = Vn.call(Pn, Ze || "default");
                if (In(Se) != "object")
                    return Se;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (Ze === "string" ? String : Number)(Pn)
        }
        const Gn = {
            name: "SessionChatWrapup",
            components: {
                NameAvatar: Mn.NameAvatar
            },
            props: {
                activeSession: {
                    type: Number,
                    default: 0
                },
                collapse: {
                    type: Boolean,
                    default: !1
                }
            },
            mixins: [Kn.A],
            setup: function() {
                var Ze = (0,
                    Mn.useCrmUser)()
                    , Vn = Ze.getCrmName
                    , Se = (0,
                    Mn.useActiveQueueDisposition)()
                    , Ue = Se.getQueueDataSettings
                    , yt = (0,
                    U.useMonitorActions)()
                    , Qt = yt.recordMonitorAction;
                return {
                    getCrmName: Vn,
                    getQueueDataSettings: Ue,
                    recordMonitorAction: Qt
                }
            },
            data: function() {
                return {
                    isCollapse: !1,
                    eMenuName: Mt.eMenuName,
                    expireCheckTimer: null
                }
            },
            created: function() {
                this.initData()
            },
            methods: dt(dt(dt({}, (0,
                Lt.mapActions)("livechat", ["switchEngagement"])), (0,
                Lt.mapActions)("sessionPanels", ["switchActiveTask", "clearChatTask", "updateMessageWrapupTaskQueue", "timeoutAutoClearTask"])), {}, {
                initData: function() {
                    var Ze = this;
                    return Pt(tn().mark(function Vn() {
                        return tn().wrap(function(Ue) {
                            for (; ; )
                                switch (Ue.prev = Ue.next) {
                                    case 0:
                                        Ze.chatWrapupTaskQueue.length === 0 ? Ze.isCollapse = !0 : (Ze.isCollapse = !1,
                                            Ze.setUpdateTimer());
                                    case 1:
                                    case "end":
                                        return Ue.stop()
                                }
                        }, Vn)
                    }))()
                },
                toggleCollpase: function() {
                    this.isCollapse = !this.isCollapse
                },
                setUpdateTimer: function() {
                    this.clearUpdateTimer(),
                        this.expireCheckTimer = ne()(this.checkExpireSessions, 5 * 1e3),
                        this.recordMonitorAction({
                            key: Mt.eMonitorKeys.funcExpireSessionTimerSet,
                            val: x()({
                                at: "sessionChatWrapup",
                                chatLen: this.chatWrapupTaskQueue.length,
                                otherLen: this.noneMsgWrappingQueue.length
                            })
                        })
                },
                checkExpireSessions: function() {
                    var Ze, Vn = this, Se, Ue = [], yt = 12 * 60 * 60, Qt = q()() - 12 * 60 * 60 * 1e3, Hn = Qt;
                    ie()(Ze = this.chatWrapupTaskQueue).call(Ze, function(Pr) {
                        var rt = Pr.wrapUpStartTs
                            , ae = Pr.taskId
                            , de = Pr.type
                            , ye = Pr.engagementId
                            , Le = Pr.task;
                        Hn = Qt;
                        var Te = Vn.getQueueDataSettings(Le)
                            , be = Te.v2MsgAutoCloseWrapUpTime
                            , me = be === void 0 ? 12 * 60 * 60 : be;
                        yt = me,
                            Hn = q()() - yt * 1e3,
                        rt < Hn && Ue.push({
                            taskId: ae,
                            engagementId: ye,
                            type: de,
                            task: Le,
                            expireSeconds: yt
                        })
                    });
                    var cr = 12 * 60 * 60
                        , Rr = q()() - cr * 1e3;
                    ie()(Se = this.noneMsgWrappingQueue).call(Se, function(Pr) {
                        var rt = Pr.taskId
                            , ae = Pr.type
                            , de = Pr.engagementId
                            , ye = Pr.task
                            , Le = ye || {}
                            , Te = Le.completeTs;
                        Te && Te < Rr && Ue.push({
                            taskId: rt,
                            engagementId: de,
                            type: ae,
                            task: ye,
                            expireSeconds: cr
                        })
                    }),
                        ie()(Ue).call(Ue, function(Pr) {
                            var rt = Pr.taskId
                                , ae = Pr.task
                                , de = Pr.expireSeconds
                                , ye = ae.eventType;
                            ae && (Vn.timeoutAutoClearTask({
                                taskId: rt,
                                isV2Wrapping: !0,
                                eventType: ye,
                                isMaxTimeoutAutoClear: !0,
                                expireSeconds: de
                            }),
                                Vn.recordMonitorAction({
                                    key: Mt.eMonitorKeys.funcAutoCloseInExpireSession,
                                    val: x()({
                                        taskId: rt,
                                        eventType: ye,
                                        expireSeconds: de,
                                        chatLen: Vn.chatWrapupTaskQueue.length,
                                        otherLen: Vn.noneMsgWrappingQueue.length,
                                        at: "sessionChatWrapup"
                                    })
                                }))
                        })
                },
                clearUpdateTimer: function() {
                    console.log("004.clearUpdateTimer"),
                    this.expireCheckTimer && (clearInterval(this.expireCheckTimer),
                        this.expireCheckTimer = null,
                        this.recordMonitorAction({
                            key: Mt.eMonitorKeys.funcExpireSessionTimerClear,
                            val: x()({
                                at: "sessionChatWrapup",
                                chatLen: this.chatWrapupTaskQueue.length,
                                otherLen: this.noneMsgWrappingQueue.length
                            })
                        }))
                },
                calcIdentifier: function(Ze) {
                    var Vn = Ze.task, Se = Vn === void 0 ? {} : Vn, Ue = Ze.phoneNumber, yt = Ze.engagementId, Qt = Se.customerId, Hn = Se.email, cr = this.piiSettings || {}, Rr = cr.maskPiiInfo, Pr = Rr === void 0 ? !1 : Rr, rt = this.getCrmName(yt, Ue, Hn) || Ze.name, ae;
                    return rt ? ae = this.calcNameWithPhiMask(rt, {
                        scene: "active"
                    }) : Ue ? ae = this.calcPhoneWithPhiMask(Ue, {
                        scene: "active"
                    }) : Qt ? ae = Pr ? Qt?.replace(Mt.phiReg, "*") : Qt : ae = this.$t("cci.common.unknown"),
                    ae.length > 15 && (ae = "".concat(Oe()(ae).call(ae, 0, 12), "...")),
                        ae
                },
                calcQueueName: function(Ze) {
                    var Vn = Ze.type, Se = Ze.task, Ue = Se === void 0 ? {} : Se, yt = Ue.queueName, Qt = Ue.isTransfer, Hn;
                    return (Vn === "sms" || Vn === "chat") && (yt && yt !== "null" && (Hn = yt),
                    !Hn && Qt && (Hn = "Transfer")),
                    Hn || "N/A"
                },
                onSelect: function(Ze) {
                    var Vn = Ze.taskId
                        , Se = Ze.task
                        , Ue = Se === void 0 ? {} : Se
                        , yt = Ue.engagementId;
                    this.switchActiveTask(Vn),
                        this.switchEngagement(yt),
                        this.$emit("select", Vn)
                },
                onWrapupSelect: function(Ze) {
                    var Vn, Se = at()(Vn = this.chatWrapupTaskQueue).call(Vn, function(yt) {
                        return yt.taskId === Ze
                    });
                    if (Se) {
                        var Ue = Se.engagementId;
                        this.onSelect({
                            taskId: Ze,
                            engagementId: Ue,
                            task: {
                                engagementId: Ue
                            }
                        })
                    }
                },
                onMsgWrapupQueueChange: function(Ze, Vn) {
                    Ze.length === 0 ? this.isCollapse = !0 : Ze.length > 0 && Vn.length === 0 && (this.isCollapse = !1)
                },
                onWrapupQueueChange: function(Ze) {
                    Ze === 0 ? this.clearUpdateTimer() : this.setUpdateTimer()
                },
                getIconClassName: function(Ze) {
                    var Vn;
                    return ["message-wrapup__queue", "".concat((Ze == null || (Vn = Ze.task) === null || Vn === void 0 ? void 0 : Vn.subChannel) === Mt.CHANNEL_KEYS.email.keyUpper ? "email" : Ze?.type)]
                },
                openMoreSession: function() {
                    this.$emit("setCollapse", !1),
                        this.isCollapse = !1
                },
                preprocessingSessionList: function(Ze) {
                    return dt(dt({}, Ze), {}, {
                        calcIdentifier: this.calcIdentifier(Ze),
                        calcQueueName: this.calcQueueName(Ze),
                        getIconClassName: this.getIconClassName(Ze),
                        hasName: Ze.name,
                        getUnreadCount: this.getUnreadCount(Ze)
                    })
                },
                getUnreadCount: function(Ze) {
                    if (Ze?.type === "sms" || Ze?.type === "chat") {
                        var Vn, Se;
                        return (Ze == null || (Vn = Ze.task) === null || Vn === void 0 ? void 0 : Vn.unReadCount) > 99 ? "99+" : Ze == null || (Se = Ze.task) === null || Se === void 0 ? void 0 : Se.unReadCount
                    }
                    return null
                }
            }),
            computed: dt(dt(dt({}, (0,
                Lt.mapGetters)("sessionPanels", ["chatWrapupTaskQueue", "activeTaskQueue", "activeTasks", "currentTaskId", "currentAcceptTaskId", "specifiedActiveTask"])), (0,
                Lt.mapGetters)({
                currentAgent: "user",
                piiSettings: "piiSettings"
            })), {}, {
                noneMsgWrappingQueue: function() {
                    var Ze, Vn = this;
                    return Ce()(Ze = this.activeTaskQueue).call(Ze, function(Se) {
                        var Ue = Se.taskId
                            , yt = Se.type
                            , Qt = Vn.activeTasks[Ue] || {}
                            , Hn = Qt.eventType;
                        if (yt === "phone") {
                            var cr;
                            if (Ae()(cr = ["call.ended", "callHangup"]).call(cr, Hn))
                                return !0
                        } else if (yt === "video") {
                            var Rr;
                            if (Ae()(Rr = ["v.ended"]).call(Rr, Hn))
                                return !0
                        }
                        return !1
                    })
                },
                chatWrapupQueueList: function() {
                    var Ze;
                    return mt()(Ze = this.chatWrapupTaskQueue).call(Ze, this.preprocessingSessionList)
                },
                wrapupQueueList: function() {
                    var Ze, Vn;
                    return ve()(Ze = pt()(Vn = this.chatWrapupTaskQueue).call(Vn, this.noneMsgWrappingQueue)).call(Ze, function(Se, Ue) {
                        var yt, Qt, Hn = (Se == null || (yt = Se.task) === null || yt === void 0 ? void 0 : yt.completeTs) || Se?.wrapUpStartTs || 0, cr = (Ue == null || (Qt = Ue.task) === null || Qt === void 0 ? void 0 : Qt.completeTs) || Ue?.wrapUpStartTs || 0;
                        return cr - Hn
                    })
                },
                isChatWrapupSession: function() {
                    return this.activeSession === Mt.eMenuName.chatWrapup
                }
            }),
            watch: {
                activeSession: function(Ze) {
                    Ze === 15 && this.chatWrapupQueueList.length > 0 && (this.isCollapse = !1)
                },
                chatWrapupTaskQueue: function(Ze, Vn) {
                    this.onMsgWrapupQueueChange(Ze, Vn)
                },
                "wrapupQueueList.length": function(Ze, Vn) {
                    console.log("wrapupQueueList.length watched", Ze, Vn),
                        this.onWrapupQueueChange(Ze, Vn)
                },
                currentAcceptTaskId: function(Ze) {
                    console.log("currentAcceptTaskId watched:", Ze),
                    Ze && this.onWrapupSelect(Ze)
                }
            },
            beforeDestroy: function() {
                this.clearUpdateTimer()
            }
        };
        var sr = a(50855)
            , Zn = (0,
            sr.A)(Gn, te, ee, !1, null, "b1c6ba9a", null);
        const _r = Zn.exports
    }
    ,
    27129: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => Pr
            });
        var Y = a(14950)
            , J = a.n(Y)
            , $ = a(69761)
            , k = a.n($)
            , P = a(12608)
            , M = a.n(P)
            , Q = function() {
            var ae = this
                , de = ae._self._c;
            return de("ul", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: ae.activeTaskQueueList.length > 0,
                    expression: "activeTaskQueueList.length > 0"
                }],
                staticClass: "cus-menu",
                attrs: {
                    role: "none"
                }
            }, [de("div", {
                attrs: {
                    role: "none"
                }
            }, [de("li", {
                staticClass: "cus-submenu",
                class: ae.isCollapse ? "is-closed" : "",
                attrs: {
                    role: "none"
                }
            }, [de("div", {
                staticClass: "cus-submenu__title",
                attrs: {
                    role: "menuitem",
                    "aria-expanded": "".concat(!ae.isCollapse),
                    "aria-label": ae.$t("cci.client.collapseTransferSession"),
                    tabindex: "0"
                },
                on: {
                    click: ae.toggleCollpase,
                    keydown: [function(ye) {
                        var Le;
                        return !J()(Le = ye.type).call(Le, "key") && ae._k(ye.keyCode, "enter", 13, ye.key, "Enter") ? null : ae.toggleCollpase.apply(null, arguments)
                    }
                        , function(ye) {
                            var Le;
                            return !J()(Le = ye.type).call(Le, "key") && ae._k(ye.keyCode, "space", 32, ye.key, [" ", "Spacebar"]) ? null : ae.toggleCollpase.apply(null, arguments)
                        }
                    ]
                }
            }, [de("i", {
                staticClass: "cus-submenu__icon-arrow"
            }), ae._v(" "), de("span", [ae._v(ae._s(ae.$t("cci.client.session.conference")) + " (" + ae._s(ae.activeTaskQueueList.length) + ")")])]), ae._v(" "), de("ul", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !ae.isCollapse,
                    expression: "!isCollapse"
                }],
                staticClass: "phone-active",
                attrs: {
                    role: "menu",
                    "aria-label": ae.$t("cci.client.collapseTransferSession")
                }
            }, ae._l(ae.activeTaskQueueList, function(ye) {
                var Le, Te, be;
                return de("li", {
                    key: ye.taskId,
                    class: ["phone-active__item", {
                        selected: k()(Le = [ae.eMenuName.sessionActive]).call(Le, ae.activeSession) && ae.currentTaskId === ye.taskId
                    }],
                    attrs: {
                        role: "menuitem",
                        "aria-label": M()(Te = M()(be = "".concat(ae.calcIdentifierE164Formatted(ye), ", ")).call(be, ae.calcTime(ye, ae.activeTaskDurationList), ", ")).call(Te, ae.calcQueueName(ye)),
                        tabindex: "0"
                    },
                    on: {
                        click: function(He) {
                            return ae.onSelect(ye.taskId)
                        },
                        keydown: [function(me) {
                            var He;
                            return !J()(He = me.type).call(He, "key") && ae._k(me.keyCode, "enter", 13, me.key, "Enter") ? null : ae.onSelect(ye.taskId)
                        }
                            , function(me) {
                                var He;
                                return !J()(He = me.type).call(He, "key") && ae._k(me.keyCode, "space", 32, me.key, [" ", "Spacebar"]) ? null : ae.onSelect(ye.taskId)
                            }
                        ]
                    }
                }, [de("div", {
                    staticClass: "phone-active__avatar"
                }), ae._v(" "), de("queue-name", {
                    attrs: {
                        task: ye,
                        duration: ae.calcTime(ye, ae.activeTaskDurationList)
                    }
                }), ae._v(" "), ae.isShowPhoneRecording(ye) ? de("div", {
                    staticClass: "voice-recording-icon"
                }) : ae._e()], 1)
            }), 0)])])])
        }
            , O = []
            , F = a(69279)
            , D = a.n(F)
            , z = a(59814)
            , G = a.n(z)
            , V = a(39084)
            , K = a.n(V)
            , te = a(61849)
            , ee = a.n(te)
            , pe = a(81352)
            , ne = a.n(pe)
            , X = a(84653)
            , x = a.n(X)
            , H = a(89099)
            , q = a.n(H)
            , _e = a(44987)
            , ie = a.n(_e)
            , ze = a(34622)
            , Oe = a.n(ze)
            , Cn = a(27785)
            , at = a.n(Cn)
            , Sn = a(83537)
            , Ce = a.n(Sn)
            , wn = a(83030)
            , Ae = a.n(wn)
            , nr = a(65888)
            , mt = a.n(nr)
            , jn = a(34187)
            , ve = a.n(jn)
            , or = a(73007)
            , pt = a.n(or)
            , je = a(23716)
            , Ke = a.n(je)
            , it = a(2208)
            , Ne = a.n(it)
            , Gt = a(5339)
            , en = a.n(Gt)
            , rn = a(53578)
            , Tt = a(83266)
            , vr = a(56405)
            , rr = function() {
            var ae = this
                , de = ae._self._c;
            return de("div", {
                staticClass: "phone-active__content"
            }, [de("div", {
                staticClass: "phone-active__identifier"
            }, [ae._v(`
    ` + ae._s(ae.calcIdentifierWithPhiMask(ae.task)) + ` \xB7
    ` + ae._s(ae.duration) + `
  `)]), ae._v(" "), de("div", {
                class: ["phone-active__queue", "".concat(ae.task.type)]
            }, [ae._v(`
    ` + ae._s(ae.name) + `
  `)])])
        }
            , kr = []
            , Re = a(39864)
            , Et = a.n(Re)
            , An = a(8233)
            , Yt = a.n(An)
            , gn = a(92336)
            , Qe = a.n(gn)
            , ar = a(13447);
        function zt(rt) {
            "@babel/helpers - typeof";
            return zt = typeof Ae() == "function" && typeof en() == "symbol" ? function(ae) {
                    return typeof ae
                }
                : function(ae) {
                    return ae && typeof Ae() == "function" && ae.constructor === Ae() && ae !== Ae().prototype ? "symbol" : typeof ae
                }
                ,
                zt(rt)
        }
        function Zt() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Zt = function() {
                return ae
            }
            ;
            var rt, ae = {}, de = Object.prototype, ye = de.hasOwnProperty, Le = ee() || function(Ut, xe, We) {
                Ut[xe] = We.value
            }
                , Te = typeof Ae() == "function" ? Ae() : {}, be = Te.iterator || "@@iterator", me = Te.asyncIterator || "@@asyncIterator", He = Te.toStringTag || "@@toStringTag";
            function Ct(Ut, xe, We) {
                return ee()(Ut, xe, {
                    value: We,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    Ut[xe]
            }
            try {
                Ct({}, "")
            } catch {
                Ct = function(We, Nt, hn) {
                    return We[Nt] = hn
                }
            }
            function wt(Ut, xe, We, Nt) {
                var hn = xe && xe.prototype instanceof Ie ? xe : Ie
                    , Ln = mt()(hn.prototype)
                    , fn = new _n(Nt || []);
                return Le(Ln, "_invoke", {
                    value: De(Ut, We, fn)
                }),
                    Ln
            }
            function Bt(Ut, xe, We) {
                try {
                    return {
                        type: "normal",
                        arg: Ut.call(xe, We)
                    }
                } catch (Nt) {
                    return {
                        type: "throw",
                        arg: Nt
                    }
                }
            }
            ae.wrap = wt;
            var En = "suspendedStart"
                , Pe = "suspendedYield"
                , W = "executing"
                , Ee = "completed"
                , nt = {};
            function Ie() {}
            function Be() {}
            function st() {}
            var jt = {};
            Ct(jt, be, function() {
                return this
            });
            var _t = ve()
                , Ge = _t && _t(_t(Jn([])));
            Ge && Ge !== de && ye.call(Ge, be) && (jt = Ge);
            var It = st.prototype = Ie.prototype = mt()(jt);
            function cn(Ut) {
                var xe;
                ie()(xe = ["next", "throw", "return"]).call(xe, function(We) {
                    Ct(Ut, We, function(Nt) {
                        return this._invoke(We, Nt)
                    })
                })
            }
            function ct(Ut, xe) {
                function We(hn, Ln, fn, $e) {
                    var tt = Bt(Ut[hn], Ut, Ln);
                    if (tt.type !== "throw") {
                        var ot = tt.arg
                            , on = ot.value;
                        return on && zt(on) == "object" && ye.call(on, "__await") ? xe.resolve(on.__await).then(function(Fe) {
                            We("next", Fe, fn, $e)
                        }, function(Fe) {
                            We("throw", Fe, fn, $e)
                        }) : xe.resolve(on).then(function(Fe) {
                            ot.value = Fe,
                                fn(ot)
                        }, function(Fe) {
                            return We("throw", Fe, fn, $e)
                        })
                    }
                    $e(tt.arg)
                }
                var Nt;
                Le(this, "_invoke", {
                    value: function(Ln, fn) {
                        function $e() {
                            return new xe(function(tt, ot) {
                                    We(Ln, fn, tt, ot)
                                }
                            )
                        }
                        return Nt = Nt ? Nt.then($e, $e) : $e()
                    }
                })
            }
            function De(Ut, xe, We) {
                var Nt = En;
                return function(hn, Ln) {
                    if (Nt === W)
                        throw Error("Generator is already running");
                    if (Nt === Ee) {
                        if (hn === "throw")
                            throw Ln;
                        return {
                            value: rt,
                            done: !0
                        }
                    }
                    for (We.method = hn,
                             We.arg = Ln; ; ) {
                        var fn = We.delegate;
                        if (fn) {
                            var $e = bt(fn, We);
                            if ($e) {
                                if ($e === nt)
                                    continue;
                                return $e
                            }
                        }
                        if (We.method === "next")
                            We.sent = We._sent = We.arg;
                        else if (We.method === "throw") {
                            if (Nt === En)
                                throw Nt = Ee,
                                    We.arg;
                            We.dispatchException(We.arg)
                        } else
                            We.method === "return" && We.abrupt("return", We.arg);
                        Nt = W;
                        var tt = Bt(Ut, xe, We);
                        if (tt.type === "normal") {
                            if (Nt = We.done ? Ee : Pe,
                            tt.arg === nt)
                                continue;
                            return {
                                value: tt.arg,
                                done: We.done
                            }
                        }
                        tt.type === "throw" && (Nt = Ee,
                            We.method = "throw",
                            We.arg = tt.arg)
                    }
                }
            }
            function bt(Ut, xe) {
                var We = xe.method
                    , Nt = Ut.iterator[We];
                if (Nt === rt)
                    return xe.delegate = null,
                    We === "throw" && Ut.iterator.return && (xe.method = "return",
                        xe.arg = rt,
                        bt(Ut, xe),
                    xe.method === "throw") || We !== "return" && (xe.method = "throw",
                        xe.arg = new TypeError("The iterator does not provide a '" + We + "' method")),
                        nt;
                var hn = Bt(Nt, Ut.iterator, xe.arg);
                if (hn.type === "throw")
                    return xe.method = "throw",
                        xe.arg = hn.arg,
                        xe.delegate = null,
                        nt;
                var Ln = hn.arg;
                return Ln ? Ln.done ? (xe[Ut.resultName] = Ln.value,
                    xe.next = Ut.nextLoc,
                xe.method !== "return" && (xe.method = "next",
                    xe.arg = rt),
                    xe.delegate = null,
                    nt) : Ln : (xe.method = "throw",
                    xe.arg = new TypeError("iterator result is not an object"),
                    xe.delegate = null,
                    nt)
            }
            function un(Ut) {
                var xe = {
                    tryLoc: Ut[0]
                };
                1 in Ut && (xe.catchLoc = Ut[1]),
                2 in Ut && (xe.finallyLoc = Ut[2],
                    xe.afterLoc = Ut[3]),
                    this.tryEntries.push(xe)
            }
            function ur(Ut) {
                var xe = Ut.completion || {};
                xe.type = "normal",
                    delete xe.arg,
                    Ut.completion = xe
            }
            function _n(Ut) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(Ut).call(Ut, un, this),
                    this.reset(!0)
            }
            function Jn(Ut) {
                if (Ut || Ut === "") {
                    var xe = Ut[be];
                    if (xe)
                        return xe.call(Ut);
                    if (typeof Ut.next == "function")
                        return Ut;
                    if (!isNaN(Ut.length)) {
                        var We = -1
                            , Nt = function hn() {
                            for (; ++We < Ut.length; )
                                if (ye.call(Ut, We))
                                    return hn.value = Ut[We],
                                        hn.done = !1,
                                        hn;
                            return hn.value = rt,
                                hn.done = !0,
                                hn
                        };
                        return Nt.next = Nt
                    }
                }
                throw new TypeError(zt(Ut) + " is not iterable")
            }
            return Be.prototype = st,
                Le(It, "constructor", {
                    value: st,
                    configurable: !0
                }),
                Le(st, "constructor", {
                    value: Be,
                    configurable: !0
                }),
                Be.displayName = Ct(st, He, "GeneratorFunction"),
                ae.isGeneratorFunction = function(Ut) {
                    var xe = typeof Ut == "function" && Ut.constructor;
                    return !!xe && (xe === Be || (xe.displayName || xe.name) === "GeneratorFunction")
                }
                ,
                ae.mark = function(Ut) {
                    return pt() ? pt()(Ut, st) : (Ut.__proto__ = st,
                        Ct(Ut, He, "GeneratorFunction")),
                        Ut.prototype = mt()(It),
                        Ut
                }
                ,
                ae.awrap = function(Ut) {
                    return {
                        __await: Ut
                    }
                }
                ,
                cn(ct.prototype),
                Ct(ct.prototype, me, function() {
                    return this
                }),
                ae.AsyncIterator = ct,
                ae.async = function(Ut, xe, We, Nt, hn) {
                    hn === void 0 && (hn = Ce());
                    var Ln = new ct(wt(Ut, xe, We, Nt),hn);
                    return ae.isGeneratorFunction(xe) ? Ln : Ln.next().then(function(fn) {
                        return fn.done ? fn.value : Ln.next()
                    })
                }
                ,
                cn(It),
                Ct(It, He, "Generator"),
                Ct(It, be, function() {
                    return this
                }),
                Ct(It, "toString", function() {
                    return "[object Generator]"
                }),
                ae.keys = function(Ut) {
                    var xe = Object(Ut)
                        , We = [];
                    for (var Nt in xe)
                        We.push(Nt);
                    return Ke()(We).call(We),
                        function hn() {
                            for (; We.length; ) {
                                var Ln = We.pop();
                                if (Ln in xe)
                                    return hn.value = Ln,
                                        hn.done = !1,
                                        hn
                            }
                            return hn.done = !0,
                                hn
                        }
                }
                ,
                ae.values = Jn,
                _n.prototype = {
                    constructor: _n,
                    reset: function(xe) {
                        var We;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = rt,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = rt,
                            ie()(We = this.tryEntries).call(We, ur),
                            !xe)
                            for (var Nt in this)
                                Nt.charAt(0) === "t" && ye.call(this, Nt) && !isNaN(+Ne()(Nt).call(Nt, 1)) && (this[Nt] = rt)
                    },
                    stop: function() {
                        this.done = !0;
                        var xe = this.tryEntries[0].completion;
                        if (xe.type === "throw")
                            throw xe.arg;
                        return this.rval
                    },
                    dispatchException: function(xe) {
                        if (this.done)
                            throw xe;
                        var We = this;
                        function Nt(ot, on) {
                            return fn.type = "throw",
                                fn.arg = xe,
                                We.next = ot,
                            on && (We.method = "next",
                                We.arg = rt),
                                !!on
                        }
                        for (var hn = this.tryEntries.length - 1; hn >= 0; --hn) {
                            var Ln = this.tryEntries[hn]
                                , fn = Ln.completion;
                            if (Ln.tryLoc === "root")
                                return Nt("end");
                            if (Ln.tryLoc <= this.prev) {
                                var $e = ye.call(Ln, "catchLoc")
                                    , tt = ye.call(Ln, "finallyLoc");
                                if ($e && tt) {
                                    if (this.prev < Ln.catchLoc)
                                        return Nt(Ln.catchLoc, !0);
                                    if (this.prev < Ln.finallyLoc)
                                        return Nt(Ln.finallyLoc)
                                } else if ($e) {
                                    if (this.prev < Ln.catchLoc)
                                        return Nt(Ln.catchLoc, !0)
                                } else {
                                    if (!tt)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < Ln.finallyLoc)
                                        return Nt(Ln.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(xe, We) {
                        for (var Nt = this.tryEntries.length - 1; Nt >= 0; --Nt) {
                            var hn = this.tryEntries[Nt];
                            if (hn.tryLoc <= this.prev && ye.call(hn, "finallyLoc") && this.prev < hn.finallyLoc) {
                                var Ln = hn;
                                break
                            }
                        }
                        Ln && (xe === "break" || xe === "continue") && Ln.tryLoc <= We && We <= Ln.finallyLoc && (Ln = null);
                        var fn = Ln ? Ln.completion : {};
                        return fn.type = xe,
                            fn.arg = We,
                            Ln ? (this.method = "next",
                                this.next = Ln.finallyLoc,
                                nt) : this.complete(fn)
                    },
                    complete: function(xe, We) {
                        if (xe.type === "throw")
                            throw xe.arg;
                        return xe.type === "break" || xe.type === "continue" ? this.next = xe.arg : xe.type === "return" ? (this.rval = this.arg = xe.arg,
                            this.method = "return",
                            this.next = "end") : xe.type === "normal" && We && (this.next = We),
                            nt
                    },
                    finish: function(xe) {
                        for (var We = this.tryEntries.length - 1; We >= 0; --We) {
                            var Nt = this.tryEntries[We];
                            if (Nt.finallyLoc === xe)
                                return this.complete(Nt.completion, Nt.afterLoc),
                                    ur(Nt),
                                    nt
                        }
                    },
                    catch: function(xe) {
                        for (var We = this.tryEntries.length - 1; We >= 0; --We) {
                            var Nt = this.tryEntries[We];
                            if (Nt.tryLoc === xe) {
                                var hn = Nt.completion;
                                if (hn.type === "throw") {
                                    var Ln = hn.arg;
                                    ur(Nt)
                                }
                                return Ln
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(xe, We, Nt) {
                        return this.delegate = {
                            iterator: Jn(xe),
                            resultName: We,
                            nextLoc: Nt
                        },
                        this.method === "next" && (this.arg = rt),
                            nt
                    }
                },
                ae
        }
        function Lt(rt, ae) {
            return Kn(rt) || Mt(rt, ae) || Mn(rt, ae) || gr()
        }
        function gr() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Mn(rt, ae) {
            if (rt) {
                var de;
                if (typeof rt == "string")
                    return U(rt, ae);
                var ye = Ne()(de = {}.toString.call(rt)).call(de, 8, -1);
                return ye === "Object" && rt.constructor && (ye = rt.constructor.name),
                    ye === "Map" || ye === "Set" ? Qe()(rt) : ye === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(ye) ? U(rt, ae) : void 0
            }
        }
        function U(rt, ae) {
            (ae == null || ae > rt.length) && (ae = rt.length);
            for (var de = 0, ye = Array(ae); de < ae; de++)
                ye[de] = rt[de];
            return ye
        }
        function Mt(rt, ae) {
            var de = rt == null ? null : typeof Ae() < "u" && Yt()(rt) || rt["@@iterator"];
            if (de != null) {
                var ye, Le, Te, be, me = [], He = !0, Ct = !1;
                try {
                    if (Te = (de = de.call(rt)).next,
                    ae === 0) {
                        if (Object(de) !== de)
                            return;
                        He = !1
                    } else
                        for (; !(He = (ye = Te.call(de)).done) && (me.push(ye.value),
                        me.length !== ae); He = !0)
                            ;
                } catch (wt) {
                    Ct = !0,
                        Le = wt
                } finally {
                    try {
                        if (!He && de.return != null && (be = de.return(),
                        Object(be) !== be))
                            return
                    } finally {
                        if (Ct)
                            throw Le
                    }
                }
                return me
            }
        }
        function Kn(rt) {
            if (Et()(rt))
                return rt
        }
        function In(rt, ae, de, ye, Le, Te, be) {
            try {
                var me = rt[Te](be)
                    , He = me.value
            } catch (Ct) {
                return void de(Ct)
            }
            me.done ? ae(He) : Ce().resolve(He).then(ye, Le)
        }
        function tn(rt) {
            return function() {
                var ae = this
                    , de = arguments;
                return new (Ce())(function(ye, Le) {
                        var Te = rt.apply(ae, de);
                        function be(He) {
                            In(Te, ye, Le, be, me, "next", He)
                        }
                        function me(He) {
                            In(Te, ye, Le, be, me, "throw", He)
                        }
                        be(void 0)
                    }
                )
            }
        }
        function Ot(rt, ae) {
            var de = ne()(rt);
            if (x()) {
                var ye = x()(rt);
                ae && (ye = G()(ye).call(ye, function(Le) {
                    return q()(rt, Le).enumerable
                })),
                    de.push.apply(de, ye)
            }
            return de
        }
        function Pt(rt) {
            for (var ae = 1; ae < arguments.length; ae++) {
                var de, ye, Le = arguments[ae] != null ? arguments[ae] : {};
                ae % 2 ? ie()(de = Ot(Object(Le), !0)).call(de, function(Te) {
                    $n(rt, Te, Le[Te])
                }) : Oe() ? at()(rt, Oe()(Le)) : ie()(ye = Ot(Object(Le))).call(ye, function(Te) {
                    ee()(rt, Te, q()(Le, Te))
                })
            }
            return rt
        }
        function $n(rt, ae, de) {
            return (ae = dt(ae))in rt ? ee()(rt, ae, {
                value: de,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : rt[ae] = de,
                rt
        }
        function dt(rt) {
            var ae = Xe(rt, "string");
            return zt(ae) == "symbol" ? ae : ae + ""
        }
        function Xe(rt, ae) {
            if (zt(rt) != "object" || !rt)
                return rt;
            var de = rt[K()];
            if (de !== void 0) {
                var ye = de.call(rt, ae || "default");
                if (zt(ye) != "object")
                    return ye;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (ae === "string" ? String : Number)(rt)
        }
        const yn = {
            props: {
                task: {
                    type: Object,
                    required: !0
                },
                duration: {
                    type: String,
                    required: !0
                }
            },
            mixins: [ar.A],
            setup: function() {
                var ae = (0,
                    Tt.useCrmUser)()
                    , de = ae.getCrmNameById;
                return {
                    getCrmNameById: de
                }
            },
            data: function() {
                return {
                    queueName: this.task.task.taskQueueName || "N/A",
                    from: ""
                }
            },
            computed: Pt(Pt(Pt({}, (0,
                rn.mapState)("coreVoice", ["calls"])), (0,
                rn.mapGetters)({
                account: "account",
                currentAgent: "user",
                piiSettings: "piiSettings"
            })), {}, {
                callState: function() {
                    var ae, de = this, ye = D()(ae = this.calls).call(ae, function(Le) {
                        return de.task.taskId === Le.state.taskId
                    });
                    return ye?.state
                },
                name: function() {
                    var ae, de;
                    return this.task.task.conferenceInviteType === "direct" ? this.queueName : (ae = this.callState) !== null && ae !== void 0 && ae.merged || (de = this.callState) !== null && de !== void 0 && de.assigned || !this.callState ? this.queueName : this.task.task.taskQueueName || "N/A"
                },
                selectedContact: function() {
                    var ae;
                    return this.getCrmNameById((ae = this.callState) === null || ae === void 0 ? void 0 : ae.engagementId)
                }
            }),
            watch: {
                "callState.hostUser": {
                    handler: function(ae, de) {
                        ae !== de && this.getEngagement()
                    },
                    deep: !0
                }
            },
            methods: Pt(Pt(Pt({}, (0,
                rn.mapMutations)("sessionPanels", ["updateCallTask"])), (0,
                rn.mapActions)("coreVoice", ["getCurrentCallEngagement"])), {}, {
                getEngagement: function() {
                    var ae = this;
                    return tn(Zt().mark(function de() {
                        var ye, Le, Te, be, me, He, Ct;
                        return Zt().wrap(function(Bt) {
                            for (; ; )
                                switch (Bt.prev = Bt.next) {
                                    case 0:
                                        return Bt.next = 2,
                                            ae.getCurrentCallEngagement({
                                                id: ae.task.engagementId
                                            });
                                    case 2:
                                        if (ye = Bt.sent,
                                            Le = Lt(ye, 2),
                                            Te = Le[0],
                                            be = Le[1],
                                            !Te) {
                                            Bt.next = 8;
                                            break
                                        }
                                        return Bt.abrupt("return");
                                    case 8:
                                        me = be.currentQueueName,
                                            He = be.participants,
                                            ae.queueName = me || "N/A",
                                            Ct = He == null ? void 0 : D()(He).call(He, function(En) {
                                                return En.type === 2
                                            }),
                                            ae.from = Ct?.phoneNumber,
                                        ae.from && ae.updateCallTask({
                                            tempConferenceFrom: ae.from,
                                            taskId: ae.task.taskId
                                        });
                                    case 13:
                                    case "end":
                                        return Bt.stop()
                                }
                        }, de)
                    }))()
                },
                setName: function() {
                    this.task.task.conferenceInviteType === "direct" ? this.queueName = "N/A" : this.queueName = this.task.task.taskQueueName || "N/A",
                        this.getEngagement()
                },
                calcIdentifierWithPhiMask: function(ae) {
                    var de, ye, Le, Te, be = ae.task, me = be === void 0 ? {} : be, He = me.from, Ct = me.tempCustomerName, wt = He, Bt = this.task.task.conferenceInviteType;
                    return (Bt === "warm" && (de = this.callState) !== null && de !== void 0 && de.merged || Bt === "direct" || (ye = this.callState) !== null && ye !== void 0 && ye.assigned) && (Ct ? wt = this.calcNameWithPhiMask(Ct, {
                        scene: "active"
                    }) : wt = this.calcPhoneWithPhiMask(this.from, {
                        scene: "active"
                    }),
                    this.selectedContact && (wt = this.calcNameWithPhiMask(this.selectedContact, {
                        scene: "active"
                    }))),
                    Bt === "warm" && !((Le = this.callState) !== null && Le !== void 0 && Le.merged) && (wt = this.calcPhoneWithPhiMask(He, {
                        scene: "active"
                    })),
                    this.callState || (wt = this.calcPhoneWithPhiMask(He, {
                        scene: "active"
                    })),
                    ((Te = wt) === null || Te === void 0 ? void 0 : Te.length) > 15 && (wt = "".concat(Ne()(wt).call(wt, 0, 12), "...")),
                    wt || this.$t("cci.common.unknown")
                }
            }),
            mounted: function() {
                this.getEngagement()
            }
        };
        var dn = a(50855)
            , Gn = (0,
            dn.A)(yn, rr, kr, !1, null, "a6c0e3c2", null);
        const sr = Gn.exports;
        function Zn(rt) {
            "@babel/helpers - typeof";
            return Zn = typeof Ae() == "function" && typeof en() == "symbol" ? function(ae) {
                    return typeof ae
                }
                : function(ae) {
                    return ae && typeof Ae() == "function" && ae.constructor === Ae() && ae !== Ae().prototype ? "symbol" : typeof ae
                }
                ,
                Zn(rt)
        }
        function _r() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            _r = function() {
                return ae
            }
            ;
            var rt, ae = {}, de = Object.prototype, ye = de.hasOwnProperty, Le = ee() || function(Ut, xe, We) {
                Ut[xe] = We.value
            }
                , Te = typeof Ae() == "function" ? Ae() : {}, be = Te.iterator || "@@iterator", me = Te.asyncIterator || "@@asyncIterator", He = Te.toStringTag || "@@toStringTag";
            function Ct(Ut, xe, We) {
                return ee()(Ut, xe, {
                    value: We,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    Ut[xe]
            }
            try {
                Ct({}, "")
            } catch {
                Ct = function(We, Nt, hn) {
                    return We[Nt] = hn
                }
            }
            function wt(Ut, xe, We, Nt) {
                var hn = xe && xe.prototype instanceof Ie ? xe : Ie
                    , Ln = mt()(hn.prototype)
                    , fn = new _n(Nt || []);
                return Le(Ln, "_invoke", {
                    value: De(Ut, We, fn)
                }),
                    Ln
            }
            function Bt(Ut, xe, We) {
                try {
                    return {
                        type: "normal",
                        arg: Ut.call(xe, We)
                    }
                } catch (Nt) {
                    return {
                        type: "throw",
                        arg: Nt
                    }
                }
            }
            ae.wrap = wt;
            var En = "suspendedStart"
                , Pe = "suspendedYield"
                , W = "executing"
                , Ee = "completed"
                , nt = {};
            function Ie() {}
            function Be() {}
            function st() {}
            var jt = {};
            Ct(jt, be, function() {
                return this
            });
            var _t = ve()
                , Ge = _t && _t(_t(Jn([])));
            Ge && Ge !== de && ye.call(Ge, be) && (jt = Ge);
            var It = st.prototype = Ie.prototype = mt()(jt);
            function cn(Ut) {
                var xe;
                ie()(xe = ["next", "throw", "return"]).call(xe, function(We) {
                    Ct(Ut, We, function(Nt) {
                        return this._invoke(We, Nt)
                    })
                })
            }
            function ct(Ut, xe) {
                function We(hn, Ln, fn, $e) {
                    var tt = Bt(Ut[hn], Ut, Ln);
                    if (tt.type !== "throw") {
                        var ot = tt.arg
                            , on = ot.value;
                        return on && Zn(on) == "object" && ye.call(on, "__await") ? xe.resolve(on.__await).then(function(Fe) {
                            We("next", Fe, fn, $e)
                        }, function(Fe) {
                            We("throw", Fe, fn, $e)
                        }) : xe.resolve(on).then(function(Fe) {
                            ot.value = Fe,
                                fn(ot)
                        }, function(Fe) {
                            return We("throw", Fe, fn, $e)
                        })
                    }
                    $e(tt.arg)
                }
                var Nt;
                Le(this, "_invoke", {
                    value: function(Ln, fn) {
                        function $e() {
                            return new xe(function(tt, ot) {
                                    We(Ln, fn, tt, ot)
                                }
                            )
                        }
                        return Nt = Nt ? Nt.then($e, $e) : $e()
                    }
                })
            }
            function De(Ut, xe, We) {
                var Nt = En;
                return function(hn, Ln) {
                    if (Nt === W)
                        throw Error("Generator is already running");
                    if (Nt === Ee) {
                        if (hn === "throw")
                            throw Ln;
                        return {
                            value: rt,
                            done: !0
                        }
                    }
                    for (We.method = hn,
                             We.arg = Ln; ; ) {
                        var fn = We.delegate;
                        if (fn) {
                            var $e = bt(fn, We);
                            if ($e) {
                                if ($e === nt)
                                    continue;
                                return $e
                            }
                        }
                        if (We.method === "next")
                            We.sent = We._sent = We.arg;
                        else if (We.method === "throw") {
                            if (Nt === En)
                                throw Nt = Ee,
                                    We.arg;
                            We.dispatchException(We.arg)
                        } else
                            We.method === "return" && We.abrupt("return", We.arg);
                        Nt = W;
                        var tt = Bt(Ut, xe, We);
                        if (tt.type === "normal") {
                            if (Nt = We.done ? Ee : Pe,
                            tt.arg === nt)
                                continue;
                            return {
                                value: tt.arg,
                                done: We.done
                            }
                        }
                        tt.type === "throw" && (Nt = Ee,
                            We.method = "throw",
                            We.arg = tt.arg)
                    }
                }
            }
            function bt(Ut, xe) {
                var We = xe.method
                    , Nt = Ut.iterator[We];
                if (Nt === rt)
                    return xe.delegate = null,
                    We === "throw" && Ut.iterator.return && (xe.method = "return",
                        xe.arg = rt,
                        bt(Ut, xe),
                    xe.method === "throw") || We !== "return" && (xe.method = "throw",
                        xe.arg = new TypeError("The iterator does not provide a '" + We + "' method")),
                        nt;
                var hn = Bt(Nt, Ut.iterator, xe.arg);
                if (hn.type === "throw")
                    return xe.method = "throw",
                        xe.arg = hn.arg,
                        xe.delegate = null,
                        nt;
                var Ln = hn.arg;
                return Ln ? Ln.done ? (xe[Ut.resultName] = Ln.value,
                    xe.next = Ut.nextLoc,
                xe.method !== "return" && (xe.method = "next",
                    xe.arg = rt),
                    xe.delegate = null,
                    nt) : Ln : (xe.method = "throw",
                    xe.arg = new TypeError("iterator result is not an object"),
                    xe.delegate = null,
                    nt)
            }
            function un(Ut) {
                var xe = {
                    tryLoc: Ut[0]
                };
                1 in Ut && (xe.catchLoc = Ut[1]),
                2 in Ut && (xe.finallyLoc = Ut[2],
                    xe.afterLoc = Ut[3]),
                    this.tryEntries.push(xe)
            }
            function ur(Ut) {
                var xe = Ut.completion || {};
                xe.type = "normal",
                    delete xe.arg,
                    Ut.completion = xe
            }
            function _n(Ut) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(Ut).call(Ut, un, this),
                    this.reset(!0)
            }
            function Jn(Ut) {
                if (Ut || Ut === "") {
                    var xe = Ut[be];
                    if (xe)
                        return xe.call(Ut);
                    if (typeof Ut.next == "function")
                        return Ut;
                    if (!isNaN(Ut.length)) {
                        var We = -1
                            , Nt = function hn() {
                            for (; ++We < Ut.length; )
                                if (ye.call(Ut, We))
                                    return hn.value = Ut[We],
                                        hn.done = !1,
                                        hn;
                            return hn.value = rt,
                                hn.done = !0,
                                hn
                        };
                        return Nt.next = Nt
                    }
                }
                throw new TypeError(Zn(Ut) + " is not iterable")
            }
            return Be.prototype = st,
                Le(It, "constructor", {
                    value: st,
                    configurable: !0
                }),
                Le(st, "constructor", {
                    value: Be,
                    configurable: !0
                }),
                Be.displayName = Ct(st, He, "GeneratorFunction"),
                ae.isGeneratorFunction = function(Ut) {
                    var xe = typeof Ut == "function" && Ut.constructor;
                    return !!xe && (xe === Be || (xe.displayName || xe.name) === "GeneratorFunction")
                }
                ,
                ae.mark = function(Ut) {
                    return pt() ? pt()(Ut, st) : (Ut.__proto__ = st,
                        Ct(Ut, He, "GeneratorFunction")),
                        Ut.prototype = mt()(It),
                        Ut
                }
                ,
                ae.awrap = function(Ut) {
                    return {
                        __await: Ut
                    }
                }
                ,
                cn(ct.prototype),
                Ct(ct.prototype, me, function() {
                    return this
                }),
                ae.AsyncIterator = ct,
                ae.async = function(Ut, xe, We, Nt, hn) {
                    hn === void 0 && (hn = Ce());
                    var Ln = new ct(wt(Ut, xe, We, Nt),hn);
                    return ae.isGeneratorFunction(xe) ? Ln : Ln.next().then(function(fn) {
                        return fn.done ? fn.value : Ln.next()
                    })
                }
                ,
                cn(It),
                Ct(It, He, "Generator"),
                Ct(It, be, function() {
                    return this
                }),
                Ct(It, "toString", function() {
                    return "[object Generator]"
                }),
                ae.keys = function(Ut) {
                    var xe = Object(Ut)
                        , We = [];
                    for (var Nt in xe)
                        We.push(Nt);
                    return Ke()(We).call(We),
                        function hn() {
                            for (; We.length; ) {
                                var Ln = We.pop();
                                if (Ln in xe)
                                    return hn.value = Ln,
                                        hn.done = !1,
                                        hn
                            }
                            return hn.done = !0,
                                hn
                        }
                }
                ,
                ae.values = Jn,
                _n.prototype = {
                    constructor: _n,
                    reset: function(xe) {
                        var We;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = rt,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = rt,
                            ie()(We = this.tryEntries).call(We, ur),
                            !xe)
                            for (var Nt in this)
                                Nt.charAt(0) === "t" && ye.call(this, Nt) && !isNaN(+Ne()(Nt).call(Nt, 1)) && (this[Nt] = rt)
                    },
                    stop: function() {
                        this.done = !0;
                        var xe = this.tryEntries[0].completion;
                        if (xe.type === "throw")
                            throw xe.arg;
                        return this.rval
                    },
                    dispatchException: function(xe) {
                        if (this.done)
                            throw xe;
                        var We = this;
                        function Nt(ot, on) {
                            return fn.type = "throw",
                                fn.arg = xe,
                                We.next = ot,
                            on && (We.method = "next",
                                We.arg = rt),
                                !!on
                        }
                        for (var hn = this.tryEntries.length - 1; hn >= 0; --hn) {
                            var Ln = this.tryEntries[hn]
                                , fn = Ln.completion;
                            if (Ln.tryLoc === "root")
                                return Nt("end");
                            if (Ln.tryLoc <= this.prev) {
                                var $e = ye.call(Ln, "catchLoc")
                                    , tt = ye.call(Ln, "finallyLoc");
                                if ($e && tt) {
                                    if (this.prev < Ln.catchLoc)
                                        return Nt(Ln.catchLoc, !0);
                                    if (this.prev < Ln.finallyLoc)
                                        return Nt(Ln.finallyLoc)
                                } else if ($e) {
                                    if (this.prev < Ln.catchLoc)
                                        return Nt(Ln.catchLoc, !0)
                                } else {
                                    if (!tt)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < Ln.finallyLoc)
                                        return Nt(Ln.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(xe, We) {
                        for (var Nt = this.tryEntries.length - 1; Nt >= 0; --Nt) {
                            var hn = this.tryEntries[Nt];
                            if (hn.tryLoc <= this.prev && ye.call(hn, "finallyLoc") && this.prev < hn.finallyLoc) {
                                var Ln = hn;
                                break
                            }
                        }
                        Ln && (xe === "break" || xe === "continue") && Ln.tryLoc <= We && We <= Ln.finallyLoc && (Ln = null);
                        var fn = Ln ? Ln.completion : {};
                        return fn.type = xe,
                            fn.arg = We,
                            Ln ? (this.method = "next",
                                this.next = Ln.finallyLoc,
                                nt) : this.complete(fn)
                    },
                    complete: function(xe, We) {
                        if (xe.type === "throw")
                            throw xe.arg;
                        return xe.type === "break" || xe.type === "continue" ? this.next = xe.arg : xe.type === "return" ? (this.rval = this.arg = xe.arg,
                            this.method = "return",
                            this.next = "end") : xe.type === "normal" && We && (this.next = We),
                            nt
                    },
                    finish: function(xe) {
                        for (var We = this.tryEntries.length - 1; We >= 0; --We) {
                            var Nt = this.tryEntries[We];
                            if (Nt.finallyLoc === xe)
                                return this.complete(Nt.completion, Nt.afterLoc),
                                    ur(Nt),
                                    nt
                        }
                    },
                    catch: function(xe) {
                        for (var We = this.tryEntries.length - 1; We >= 0; --We) {
                            var Nt = this.tryEntries[We];
                            if (Nt.tryLoc === xe) {
                                var hn = Nt.completion;
                                if (hn.type === "throw") {
                                    var Ln = hn.arg;
                                    ur(Nt)
                                }
                                return Ln
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(xe, We, Nt) {
                        return this.delegate = {
                            iterator: Jn(xe),
                            resultName: We,
                            nextLoc: Nt
                        },
                        this.method === "next" && (this.arg = rt),
                            nt
                    }
                },
                ae
        }
        function Pn(rt, ae, de, ye, Le, Te, be) {
            try {
                var me = rt[Te](be)
                    , He = me.value
            } catch (Ct) {
                return void de(Ct)
            }
            me.done ? ae(He) : Ce().resolve(He).then(ye, Le)
        }
        function Ze(rt) {
            return function() {
                var ae = this
                    , de = arguments;
                return new (Ce())(function(ye, Le) {
                        var Te = rt.apply(ae, de);
                        function be(He) {
                            Pn(Te, ye, Le, be, me, "next", He)
                        }
                        function me(He) {
                            Pn(Te, ye, Le, be, me, "throw", He)
                        }
                        be(void 0)
                    }
                )
            }
        }
        function Vn(rt, ae) {
            var de = ne()(rt);
            if (x()) {
                var ye = x()(rt);
                ae && (ye = G()(ye).call(ye, function(Le) {
                    return q()(rt, Le).enumerable
                })),
                    de.push.apply(de, ye)
            }
            return de
        }
        function Se(rt) {
            for (var ae = 1; ae < arguments.length; ae++) {
                var de, ye, Le = arguments[ae] != null ? arguments[ae] : {};
                ae % 2 ? ie()(de = Vn(Object(Le), !0)).call(de, function(Te) {
                    Ue(rt, Te, Le[Te])
                }) : Oe() ? at()(rt, Oe()(Le)) : ie()(ye = Vn(Object(Le))).call(ye, function(Te) {
                    ee()(rt, Te, q()(Le, Te))
                })
            }
            return rt
        }
        function Ue(rt, ae, de) {
            return (ae = yt(ae))in rt ? ee()(rt, ae, {
                value: de,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : rt[ae] = de,
                rt
        }
        function yt(rt) {
            var ae = Qt(rt, "string");
            return Zn(ae) == "symbol" ? ae : ae + ""
        }
        function Qt(rt, ae) {
            if (Zn(rt) != "object" || !rt)
                return rt;
            var de = rt[K()];
            if (de !== void 0) {
                var ye = de.call(rt, ae || "default");
                if (Zn(ye) != "object")
                    return ye;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (ae === "string" ? String : Number)(rt)
        }
        const cr = {
            name: "SessionConference",
            props: {
                activeSession: {
                    type: Number,
                    default: 0
                }
            },
            mixins: [Tt.sessionMixin],
            data: function() {
                return {
                    eMenuName: vr.eMenuName,
                    selectIdx: -1,
                    isCollapse: !1,
                    durationUpdateTimer: null,
                    engagementQueueName: ""
                }
            },
            components: {
                QueueName: sr
            },
            created: function() {
                this.initData()
            },
            methods: Se(Se({}, (0,
                rn.mapActions)("sessionPanels", ["switchActiveTask"])), {}, {
                initData: function() {
                    return Ze(_r().mark(function ae() {
                        return _r().wrap(function(ye) {
                            for (; ; )
                                switch (ye.prev = ye.next) {
                                    case 0:
                                    case "end":
                                        return ye.stop()
                                }
                        }, ae)
                    }))()
                },
                toggleCollpase: function() {
                    this.isCollapse = !this.isCollapse
                },
                onSelect: function() {
                    var ae, de = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.activeTaskQueue[0].taskId, ye = D()(ae = this.activeTaskQueue).call(ae, function(Le) {
                        return Le.taskId === de
                    });
                    ye && (this.switchActiveTask(de),
                        this.$emit("selectPhone", de))
                },
                isShowPhoneRecording: function(ae) {
                    var de, ye, Le, Te;
                    return (ae == null || (de = ae.task) === null || de === void 0 ? void 0 : de.eventType) !== "call.ended" && (ae == null || (ye = ae.task) === null || ye === void 0 ? void 0 : ye.eventType) !== "callHangup" && ae?.type === "phone" && ae?.engagementId === ((Le = this.recordingStatus) === null || Le === void 0 ? void 0 : Le.engagementId) && ((Te = this.recordingStatus) === null || Te === void 0 ? void 0 : Te.status) === 2
                }
            }),
            computed: Se(Se(Se(Se({}, (0,
                rn.mapGetters)({
                account: "account",
                currentAgent: "user",
                piiSettings: "piiSettings"
            })), (0,
                rn.mapGetters)("sessionPanels", ["activeTaskQueue", "activeTaskDurationList", "currentTaskId", "currentAcceptTaskId", "activeTasks"])), (0,
                rn.mapGetters)("voice", ["recordingStatus"])), {}, {
                activeTaskQueueList: function() {
                    var ae, de = this;
                    return G()(ae = this.activeTaskQueue).call(ae, function(ye) {
                        var Le = ye.taskId
                            , Te = ye.type
                            , be = de.activeTasks[Le] || {}
                            , me = be.eventType
                            , He = be.isConference;
                        return !!(Te === "phone" && (me === "accepted" || me === "call.ended") && He)
                    })
                }
            })
        };
        var Rr = (0,
            dn.A)(cr, Q, O, !1, null, "47289cce", null);
        const Pr = Rr.exports
    }
    ,
    13814: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => rt
            });
        var Y = a(14950)
            , J = a.n(Y)
            , $ = a(12608)
            , k = a.n($)
            , P = a(39084)
            , M = a.n(P)
            , Q = a(61849)
            , O = a.n(Q)
            , F = a(83030)
            , D = a.n(F)
            , z = a(5339)
            , G = a.n(z);
        function V(ae) {
            "@babel/helpers - typeof";
            return V = typeof D() == "function" && typeof G() == "symbol" ? function(de) {
                    return typeof de
                }
                : function(de) {
                    return de && typeof D() == "function" && de.constructor === D() && de !== D().prototype ? "symbol" : typeof de
                }
                ,
                V(ae)
        }
        function K(ae, de, ye) {
            return (de = te(de))in ae ? O()(ae, de, {
                value: ye,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : ae[de] = ye,
                ae
        }
        function te(ae) {
            var de = ee(ae, "string");
            return V(de) == "symbol" ? de : de + ""
        }
        function ee(ae, de) {
            if (V(ae) != "object" || !ae)
                return ae;
            var ye = ae[M()];
            if (ye !== void 0) {
                var Le = ye.call(ae, de || "default");
                if (V(Le) != "object")
                    return Le;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (de === "string" ? String : Number)(ae)
        }
        var pe = function() {
            var de = this
                , ye = de._self._c
                , Le = de._self._setupProxy;
            return ye("ul", {
                staticClass: "cus-menu",
                class: {
                    "cus-menu-display": de.sessionList.length
                },
                attrs: {
                    role: "none"
                }
            }, [ye("div", {
                attrs: {
                    role: "none"
                }
            }, [ye("li", {
                staticClass: "cus-submenu",
                class: de.isCollapse ? "is-closed" : "",
                attrs: {
                    role: "none"
                }
            }, [ye("div", {
                staticClass: "cus-submenu__title",
                attrs: {
                    role: "menuitem",
                    "aria-expanded": "".concat(!de.isCollapse),
                    "aria-label": de.$t("cci.active.collapseRecentlyClosedSessionList"),
                    title: de.$t("cci.active.collapseRecentlyClosedSessionList"),
                    tabindex: "0"
                },
                on: {
                    click: de.toggleCollpase,
                    keydown: [function(Te) {
                        var be;
                        return !J()(be = Te.type).call(be, "key") && de._k(Te.keyCode, "enter", 13, Te.key, "Enter") ? null : de.toggleCollpase.apply(null, arguments)
                    }
                        , function(Te) {
                            var be;
                            return !J()(be = Te.type).call(be, "key") && de._k(Te.keyCode, "space", 32, Te.key, [" ", "Spacebar"]) ? null : de.toggleCollpase.apply(null, arguments)
                        }
                    ]
                }
            }, [ye("i", {
                staticClass: "cus-submenu__icon-arrow"
            }), de._v(" "), ye("span", [de._v(de._s(de.$t("cci.client.session.complete")) + " (" + de._s(de.sessionList.length) + ")")]), de._v(" "), de.isLoading ? ye("i", {
                staticClass: "zm-icon-loading cus-submenu__icon-loading"
            }) : de._e()]), de._v(" "), ye("ul", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !de.isCollapse || de.collapse,
                    expression: "!isCollapse || collapse"
                }],
                staticClass: "recent-closed",
                attrs: {
                    role: "menu",
                    "aria-label": de.$t("cci.active.collapseRecentlyClosedSessionList")
                }
            }, [de._l(de.sessionList, function(Te, be) {
                var me;
                return ye("li", {
                    key: k()(me = "".concat(Te.engagementId, "-")).call(me, be),
                    class: ["recent-closed__item", K({}, "selected".concat(de.collapse ? "__collapse" : ""), de.isSessionRecent && de.selectIdx === be)],
                    attrs: {
                        "aria-label": Te.calcQueueName,
                        role: "menuitem",
                        tabindex: "0"
                    },
                    on: {
                        click: function(Ct) {
                            return de.selectSession(be, Te)
                        },
                        keydown: [function(He) {
                            var Ct;
                            return !J()(Ct = He.type).call(Ct, "key") && de._k(He.keyCode, "enter", 13, He.key, "Enter") ? null : de.selectSession(be, Te)
                        }
                            , function(He) {
                                var Ct;
                                return !J()(Ct = He.type).call(Ct, "key") && de._k(He.keyCode, "space", 32, He.key, [" ", "Spacebar"]) ? null : de.selectSession(be, Te)
                            }
                        ]
                    }
                }, [ye("zm-tooltip", {
                    attrs: {
                        disabled: !de.collapse,
                        placement: "right-start"
                    }
                }, [ye("div", {
                    attrs: {
                        slot: "content"
                    },
                    slot: "content"
                }, [de._v(`
              ` + de._s(Te.calcIdentifier) + `
              `), ye("br"), de._v(" "), ye("div", {
                    class: ["recent-closed__queue", Te.channelTypeIconClass]
                }, [de._v(`
                ` + de._s(Te.calcQueueName) + `
              `)])]), de._v(" "), ye("nameAvatar", {
                    style: {
                        marginRight: de.collapse ? "0" : "8px"
                    },
                    attrs: {
                        title: Te.hasName && Te.calcIdentifier
                    }
                }, [ye("div", {
                    staticClass: "recent-closed__avatar"
                })])], 1), de._v(" "), ye("div", {
                    staticClass: "recent-closed__content"
                }, [ye("div", {
                    staticClass: "recent-closed__identifier"
                }, [de._v(`
              ` + de._s(Te.calcIdentifier) + `
            `)]), de._v(" "), ye("div", {
                    class: ["recent-closed__queue", Te.channelTypeIconClass]
                }, [de._v(`
              ` + de._s(Te.calcQueueName) + `
            `)])])], 1)
            }), de._v(" "), de.sessionLists.length > 5 && de.collapse ? ye("li", {
                staticClass: "recent-closed__item",
                attrs: {
                    "aria-label": de.$t("cci.integrations.moreOptions"),
                    role: "menuitem",
                    tabindex: "0"
                },
                on: {
                    click: de.openMoreSession
                }
            }, [ye("div", {
                staticClass: "recent-closed__more"
            }, [de._v(`
            +` + de._s(de.sessionLists.length - 5) + `
          `)])]) : de._e()], 2)])]), de._v(" "), ye("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: de.sessionList.length,
                    expression: "sessionList.length"
                }],
                class: ["cus-menu-left-border"]
            })])
        }
            , ne = []
            , X = a(27425)
            , x = a.n(X)
            , H = a(59814)
            , q = a.n(H)
            , _e = a(27598)
            , ie = a.n(_e)
            , ze = a(53584)
            , Oe = a.n(ze)
            , Cn = a(69761)
            , at = a.n(Cn)
            , Sn = a(2208)
            , Ce = a.n(Sn)
            , wn = a(81352)
            , Ae = a.n(wn)
            , nr = a(83537)
            , mt = a.n(nr)
            , jn = a(65888)
            , ve = a.n(jn)
            , or = a(34187)
            , pt = a.n(or)
            , je = a(44987)
            , Ke = a.n(je)
            , it = a(73007)
            , Ne = a.n(it)
            , Gt = a(23716)
            , en = a.n(Gt)
            , rn = a(39864)
            , Tt = a.n(rn)
            , vr = a(8233)
            , rr = a.n(vr)
            , kr = a(92336)
            , Re = a.n(kr)
            , Et = a(84653)
            , An = a.n(Et)
            , Yt = a(89099)
            , gn = a.n(Yt)
            , Qe = a(34622)
            , ar = a.n(Qe)
            , zt = a(27785)
            , Zt = a.n(zt)
            , Lt = a(74061)
            , gr = a(53578)
            , Mn = a(83266)
            , U = a(76709)
            , Mt = a(56405)
            , Kn = a(63850)
            , In = a.n(Kn)
            , tn = a(64234)
            , Ot = a.n(tn)
            , Pt = a(42436)
            , $n = a(19598)
            , dt = a(81471);
        function Xe(ae) {
            "@babel/helpers - typeof";
            return Xe = typeof D() == "function" && typeof G() == "symbol" ? function(de) {
                    return typeof de
                }
                : function(de) {
                    return de && typeof D() == "function" && de.constructor === D() && de !== D().prototype ? "symbol" : typeof de
                }
                ,
                Xe(ae)
        }
        function ht(ae, de) {
            var ye = Ae()(ae);
            if (An()) {
                var Le = An()(ae);
                de && (Le = q()(Le).call(Le, function(Te) {
                    return gn()(ae, Te).enumerable
                })),
                    ye.push.apply(ye, Le)
            }
            return ye
        }
        function yn(ae) {
            for (var de = 1; de < arguments.length; de++) {
                var ye, Le, Te = arguments[de] != null ? arguments[de] : {};
                de % 2 ? Ke()(ye = ht(Object(Te), !0)).call(ye, function(be) {
                    dn(ae, be, Te[be])
                }) : ar() ? Zt()(ae, ar()(Te)) : Ke()(Le = ht(Object(Te))).call(Le, function(be) {
                    O()(ae, be, gn()(Te, be))
                })
            }
            return ae
        }
        function dn(ae, de, ye) {
            return (de = Gn(de))in ae ? O()(ae, de, {
                value: ye,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : ae[de] = ye,
                ae
        }
        function Gn(ae) {
            var de = sr(ae, "string");
            return Xe(de) == "symbol" ? de : de + ""
        }
        function sr(ae, de) {
            if (Xe(ae) != "object" || !ae)
                return ae;
            var ye = ae[M()];
            if (ye !== void 0) {
                var Le = ye.call(ae, de || "default");
                if (Xe(Le) != "object")
                    return Le;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (de === "string" ? String : Number)(ae)
        }
        function Zn(ae, de) {
            return Se(ae) || Vn(ae, de) || Pn(ae, de) || _r()
        }
        function _r() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Pn(ae, de) {
            if (ae) {
                var ye;
                if (typeof ae == "string")
                    return Ze(ae, de);
                var Le = Ce()(ye = {}.toString.call(ae)).call(ye, 8, -1);
                return Le === "Object" && ae.constructor && (Le = ae.constructor.name),
                    Le === "Map" || Le === "Set" ? Re()(ae) : Le === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(Le) ? Ze(ae, de) : void 0
            }
        }
        function Ze(ae, de) {
            (de == null || de > ae.length) && (de = ae.length);
            for (var ye = 0, Le = Array(de); ye < de; ye++)
                Le[ye] = ae[ye];
            return Le
        }
        function Vn(ae, de) {
            var ye = ae == null ? null : typeof D() < "u" && rr()(ae) || ae["@@iterator"];
            if (ye != null) {
                var Le, Te, be, me, He = [], Ct = !0, wt = !1;
                try {
                    if (be = (ye = ye.call(ae)).next,
                    de === 0) {
                        if (Object(ye) !== ye)
                            return;
                        Ct = !1
                    } else
                        for (; !(Ct = (Le = be.call(ye)).done) && (He.push(Le.value),
                        He.length !== de); Ct = !0)
                            ;
                } catch (Bt) {
                    wt = !0,
                        Te = Bt
                } finally {
                    try {
                        if (!Ct && ye.return != null && (me = ye.return(),
                        Object(me) !== me))
                            return
                    } finally {
                        if (wt)
                            throw Te
                    }
                }
                return He
            }
        }
        function Se(ae) {
            if (Tt()(ae))
                return ae
        }
        function Ue() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Ue = function() {
                return de
            }
            ;
            var ae, de = {}, ye = Object.prototype, Le = ye.hasOwnProperty, Te = O() || function(xe, We, Nt) {
                xe[We] = Nt.value
            }
                , be = typeof D() == "function" ? D() : {}, me = be.iterator || "@@iterator", He = be.asyncIterator || "@@asyncIterator", Ct = be.toStringTag || "@@toStringTag";
            function wt(xe, We, Nt) {
                return O()(xe, We, {
                    value: Nt,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    xe[We]
            }
            try {
                wt({}, "")
            } catch {
                wt = function(Nt, hn, Ln) {
                    return Nt[hn] = Ln
                }
            }
            function Bt(xe, We, Nt, hn) {
                var Ln = We && We.prototype instanceof Be ? We : Be
                    , fn = ve()(Ln.prototype)
                    , $e = new Jn(hn || []);
                return Te(fn, "_invoke", {
                    value: bt(xe, Nt, $e)
                }),
                    fn
            }
            function En(xe, We, Nt) {
                try {
                    return {
                        type: "normal",
                        arg: xe.call(We, Nt)
                    }
                } catch (hn) {
                    return {
                        type: "throw",
                        arg: hn
                    }
                }
            }
            de.wrap = Bt;
            var Pe = "suspendedStart"
                , W = "suspendedYield"
                , Ee = "executing"
                , nt = "completed"
                , Ie = {};
            function Be() {}
            function st() {}
            function jt() {}
            var _t = {};
            wt(_t, me, function() {
                return this
            });
            var Ge = pt()
                , It = Ge && Ge(Ge(Ut([])));
            It && It !== ye && Le.call(It, me) && (_t = It);
            var cn = jt.prototype = Be.prototype = ve()(_t);
            function ct(xe) {
                var We;
                Ke()(We = ["next", "throw", "return"]).call(We, function(Nt) {
                    wt(xe, Nt, function(hn) {
                        return this._invoke(Nt, hn)
                    })
                })
            }
            function De(xe, We) {
                function Nt(Ln, fn, $e, tt) {
                    var ot = En(xe[Ln], xe, fn);
                    if (ot.type !== "throw") {
                        var on = ot.arg
                            , Fe = on.value;
                        return Fe && Xe(Fe) == "object" && Le.call(Fe, "__await") ? We.resolve(Fe.__await).then(function(Mr) {
                            Nt("next", Mr, $e, tt)
                        }, function(Mr) {
                            Nt("throw", Mr, $e, tt)
                        }) : We.resolve(Fe).then(function(Mr) {
                            on.value = Mr,
                                $e(on)
                        }, function(Mr) {
                            return Nt("throw", Mr, $e, tt)
                        })
                    }
                    tt(ot.arg)
                }
                var hn;
                Te(this, "_invoke", {
                    value: function(fn, $e) {
                        function tt() {
                            return new We(function(ot, on) {
                                    Nt(fn, $e, ot, on)
                                }
                            )
                        }
                        return hn = hn ? hn.then(tt, tt) : tt()
                    }
                })
            }
            function bt(xe, We, Nt) {
                var hn = Pe;
                return function(Ln, fn) {
                    if (hn === Ee)
                        throw Error("Generator is already running");
                    if (hn === nt) {
                        if (Ln === "throw")
                            throw fn;
                        return {
                            value: ae,
                            done: !0
                        }
                    }
                    for (Nt.method = Ln,
                             Nt.arg = fn; ; ) {
                        var $e = Nt.delegate;
                        if ($e) {
                            var tt = un($e, Nt);
                            if (tt) {
                                if (tt === Ie)
                                    continue;
                                return tt
                            }
                        }
                        if (Nt.method === "next")
                            Nt.sent = Nt._sent = Nt.arg;
                        else if (Nt.method === "throw") {
                            if (hn === Pe)
                                throw hn = nt,
                                    Nt.arg;
                            Nt.dispatchException(Nt.arg)
                        } else
                            Nt.method === "return" && Nt.abrupt("return", Nt.arg);
                        hn = Ee;
                        var ot = En(xe, We, Nt);
                        if (ot.type === "normal") {
                            if (hn = Nt.done ? nt : W,
                            ot.arg === Ie)
                                continue;
                            return {
                                value: ot.arg,
                                done: Nt.done
                            }
                        }
                        ot.type === "throw" && (hn = nt,
                            Nt.method = "throw",
                            Nt.arg = ot.arg)
                    }
                }
            }
            function un(xe, We) {
                var Nt = We.method
                    , hn = xe.iterator[Nt];
                if (hn === ae)
                    return We.delegate = null,
                    Nt === "throw" && xe.iterator.return && (We.method = "return",
                        We.arg = ae,
                        un(xe, We),
                    We.method === "throw") || Nt !== "return" && (We.method = "throw",
                        We.arg = new TypeError("The iterator does not provide a '" + Nt + "' method")),
                        Ie;
                var Ln = En(hn, xe.iterator, We.arg);
                if (Ln.type === "throw")
                    return We.method = "throw",
                        We.arg = Ln.arg,
                        We.delegate = null,
                        Ie;
                var fn = Ln.arg;
                return fn ? fn.done ? (We[xe.resultName] = fn.value,
                    We.next = xe.nextLoc,
                We.method !== "return" && (We.method = "next",
                    We.arg = ae),
                    We.delegate = null,
                    Ie) : fn : (We.method = "throw",
                    We.arg = new TypeError("iterator result is not an object"),
                    We.delegate = null,
                    Ie)
            }
            function ur(xe) {
                var We = {
                    tryLoc: xe[0]
                };
                1 in xe && (We.catchLoc = xe[1]),
                2 in xe && (We.finallyLoc = xe[2],
                    We.afterLoc = xe[3]),
                    this.tryEntries.push(We)
            }
            function _n(xe) {
                var We = xe.completion || {};
                We.type = "normal",
                    delete We.arg,
                    xe.completion = We
            }
            function Jn(xe) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ke()(xe).call(xe, ur, this),
                    this.reset(!0)
            }
            function Ut(xe) {
                if (xe || xe === "") {
                    var We = xe[me];
                    if (We)
                        return We.call(xe);
                    if (typeof xe.next == "function")
                        return xe;
                    if (!isNaN(xe.length)) {
                        var Nt = -1
                            , hn = function Ln() {
                            for (; ++Nt < xe.length; )
                                if (Le.call(xe, Nt))
                                    return Ln.value = xe[Nt],
                                        Ln.done = !1,
                                        Ln;
                            return Ln.value = ae,
                                Ln.done = !0,
                                Ln
                        };
                        return hn.next = hn
                    }
                }
                throw new TypeError(Xe(xe) + " is not iterable")
            }
            return st.prototype = jt,
                Te(cn, "constructor", {
                    value: jt,
                    configurable: !0
                }),
                Te(jt, "constructor", {
                    value: st,
                    configurable: !0
                }),
                st.displayName = wt(jt, Ct, "GeneratorFunction"),
                de.isGeneratorFunction = function(xe) {
                    var We = typeof xe == "function" && xe.constructor;
                    return !!We && (We === st || (We.displayName || We.name) === "GeneratorFunction")
                }
                ,
                de.mark = function(xe) {
                    return Ne() ? Ne()(xe, jt) : (xe.__proto__ = jt,
                        wt(xe, Ct, "GeneratorFunction")),
                        xe.prototype = ve()(cn),
                        xe
                }
                ,
                de.awrap = function(xe) {
                    return {
                        __await: xe
                    }
                }
                ,
                ct(De.prototype),
                wt(De.prototype, He, function() {
                    return this
                }),
                de.AsyncIterator = De,
                de.async = function(xe, We, Nt, hn, Ln) {
                    Ln === void 0 && (Ln = mt());
                    var fn = new De(Bt(xe, We, Nt, hn),Ln);
                    return de.isGeneratorFunction(We) ? fn : fn.next().then(function($e) {
                        return $e.done ? $e.value : fn.next()
                    })
                }
                ,
                ct(cn),
                wt(cn, Ct, "Generator"),
                wt(cn, me, function() {
                    return this
                }),
                wt(cn, "toString", function() {
                    return "[object Generator]"
                }),
                de.keys = function(xe) {
                    var We = Object(xe)
                        , Nt = [];
                    for (var hn in We)
                        Nt.push(hn);
                    return en()(Nt).call(Nt),
                        function Ln() {
                            for (; Nt.length; ) {
                                var fn = Nt.pop();
                                if (fn in We)
                                    return Ln.value = fn,
                                        Ln.done = !1,
                                        Ln
                            }
                            return Ln.done = !0,
                                Ln
                        }
                }
                ,
                de.values = Ut,
                Jn.prototype = {
                    constructor: Jn,
                    reset: function(We) {
                        var Nt;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = ae,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = ae,
                            Ke()(Nt = this.tryEntries).call(Nt, _n),
                            !We)
                            for (var hn in this)
                                hn.charAt(0) === "t" && Le.call(this, hn) && !isNaN(+Ce()(hn).call(hn, 1)) && (this[hn] = ae)
                    },
                    stop: function() {
                        this.done = !0;
                        var We = this.tryEntries[0].completion;
                        if (We.type === "throw")
                            throw We.arg;
                        return this.rval
                    },
                    dispatchException: function(We) {
                        if (this.done)
                            throw We;
                        var Nt = this;
                        function hn(on, Fe) {
                            return $e.type = "throw",
                                $e.arg = We,
                                Nt.next = on,
                            Fe && (Nt.method = "next",
                                Nt.arg = ae),
                                !!Fe
                        }
                        for (var Ln = this.tryEntries.length - 1; Ln >= 0; --Ln) {
                            var fn = this.tryEntries[Ln]
                                , $e = fn.completion;
                            if (fn.tryLoc === "root")
                                return hn("end");
                            if (fn.tryLoc <= this.prev) {
                                var tt = Le.call(fn, "catchLoc")
                                    , ot = Le.call(fn, "finallyLoc");
                                if (tt && ot) {
                                    if (this.prev < fn.catchLoc)
                                        return hn(fn.catchLoc, !0);
                                    if (this.prev < fn.finallyLoc)
                                        return hn(fn.finallyLoc)
                                } else if (tt) {
                                    if (this.prev < fn.catchLoc)
                                        return hn(fn.catchLoc, !0)
                                } else {
                                    if (!ot)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < fn.finallyLoc)
                                        return hn(fn.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(We, Nt) {
                        for (var hn = this.tryEntries.length - 1; hn >= 0; --hn) {
                            var Ln = this.tryEntries[hn];
                            if (Ln.tryLoc <= this.prev && Le.call(Ln, "finallyLoc") && this.prev < Ln.finallyLoc) {
                                var fn = Ln;
                                break
                            }
                        }
                        fn && (We === "break" || We === "continue") && fn.tryLoc <= Nt && Nt <= fn.finallyLoc && (fn = null);
                        var $e = fn ? fn.completion : {};
                        return $e.type = We,
                            $e.arg = Nt,
                            fn ? (this.method = "next",
                                this.next = fn.finallyLoc,
                                Ie) : this.complete($e)
                    },
                    complete: function(We, Nt) {
                        if (We.type === "throw")
                            throw We.arg;
                        return We.type === "break" || We.type === "continue" ? this.next = We.arg : We.type === "return" ? (this.rval = this.arg = We.arg,
                            this.method = "return",
                            this.next = "end") : We.type === "normal" && Nt && (this.next = Nt),
                            Ie
                    },
                    finish: function(We) {
                        for (var Nt = this.tryEntries.length - 1; Nt >= 0; --Nt) {
                            var hn = this.tryEntries[Nt];
                            if (hn.finallyLoc === We)
                                return this.complete(hn.completion, hn.afterLoc),
                                    _n(hn),
                                    Ie
                        }
                    },
                    catch: function(We) {
                        for (var Nt = this.tryEntries.length - 1; Nt >= 0; --Nt) {
                            var hn = this.tryEntries[Nt];
                            if (hn.tryLoc === We) {
                                var Ln = hn.completion;
                                if (Ln.type === "throw") {
                                    var fn = Ln.arg;
                                    _n(hn)
                                }
                                return fn
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(We, Nt, hn) {
                        return this.delegate = {
                            iterator: Ut(We),
                            resultName: Nt,
                            nextLoc: hn
                        },
                        this.method === "next" && (this.arg = ae),
                            Ie
                    }
                },
                de
        }
        function yt(ae, de, ye, Le, Te, be, me) {
            try {
                var He = ae[be](me)
                    , Ct = He.value
            } catch (wt) {
                return void ye(wt)
            }
            He.done ? de(Ct) : mt().resolve(Ct).then(Le, Te)
        }
        function Qt(ae) {
            return function() {
                var de = this
                    , ye = arguments;
                return new (mt())(function(Le, Te) {
                        var be = ae.apply(de, ye);
                        function me(Ct) {
                            yt(be, Le, Te, me, He, "next", Ct)
                        }
                        function He(Ct) {
                            yt(be, Le, Te, me, He, "throw", Ct)
                        }
                        me(void 0)
                    }
                )
            }
        }
        const cr = (0,
            Lt.defineComponent)({
            name: "SessionRecent",
            components: {
                NameAvatar: Mn.NameAvatar
            },
            props: {
                activeSession: {
                    type: Number,
                    default: 0
                },
                wrapupDoneFlag: {
                    type: Boolean,
                    default: !1
                },
                refreshRecentList: {
                    type: Boolean,
                    default: !1
                },
                collapse: {
                    type: Boolean,
                    default: !1
                }
            },
            data: function() {
                return {
                    isLoading: !1,
                    isCollapse: !1
                }
            },
            created: function() {
                this.initData()
            },
            setup: function() {
                var de = (0,
                    U.useSessionPanelsActions)()
                    , ye = de.setUpdatingDisplayNameInfo
                    , Le = (0,
                    dt.useCachedCrmName)()
                    , Te = Le.setAndCacheCrmNameByHistory
                    , be = (0,
                    U.useCrmRecentActions)()
                    , me = be.updateSelectIdx
                    , He = be.updateHistoryList
                    , Ct = be.updateHistoryListByEngagementId
                    , wt = (0,
                    U.useCrmRecentGetters)()
                    , Bt = wt.selectIdx
                    , En = wt.historyList;
                return {
                    historyList: En,
                    selectIdx: Bt,
                    updateSelectIdx: me,
                    updateHistoryList: He,
                    setUpdatingDisplayNameInfo: ye,
                    updateHistoryListByEngagementId: Ct,
                    setAndCacheCrmNameByHistory: Te
                }
            },
            methods: {
                initData: function() {
                    var de = this;
                    return Qt(Ue().mark(function ye() {
                        return Ue().wrap(function(Te) {
                            for (; ; )
                                switch (Te.prev = Te.next) {
                                    case 0:
                                        de.getHistoryList();
                                    case 1:
                                    case "end":
                                        return Te.stop()
                                }
                        }, ye)
                    }))()
                },
                debounceGetHistoryList: In()(function() {
                    this.getHistoryList()
                }, 1e3),
                getHistoryList: function() {
                    var de = this;
                    return Qt(Ue().mark(function ye() {
                        var Le, Te, be, me, He, Ct, wt, Bt, En, Pe, W;
                        return Ue().wrap(function(nt) {
                            for (; ; )
                                switch (nt.prev = nt.next) {
                                    case 0:
                                        return de.isLoading = !0,
                                            nt.next = 3,
                                            (0,
                                                $n.tryApiCatch)(Pt.getSessionCompleteEngagement, {
                                                startTime: x()() - 12 * 60 * 60 * 1e3,
                                                endTime: x()(),
                                                currentAgentOnly: !0,
                                                page: 1,
                                                size: 50,
                                                order: "endTime",
                                                desc: !0,
                                                checkQueueAccess: !0
                                            });
                                    case 3:
                                        if (be = nt.sent,
                                            me = Zn(be, 2),
                                            He = me[0],
                                            Ct = me[1],
                                            de.isLoading = !1,
                                            !He) {
                                            nt.next = 10;
                                            break
                                        }
                                        return nt.abrupt("return", de.$message.error(He));
                                    case 10:
                                        if (!(!Ct || !Ct.list)) {
                                            nt.next = 12;
                                            break
                                        }
                                        return nt.abrupt("return");
                                    case 12:
                                        return nt.next = 14,
                                            de.setAndCacheCrmNameByHistory(q()(Le = Ct.list).call(Le, function(Ie) {
                                                var Be = Ie.channelType
                                                    , st = Ie.engagementId;
                                                if (Be === "CHAT") {
                                                    var jt;
                                                    return ie()(jt = Ct.list).call(jt, function(_t) {
                                                        return _t.engagementId === st && _t.channelType === "VIDEO"
                                                    }) === -1
                                                }
                                                return !0
                                            }));
                                    case 14:
                                        wt = nt.sent,
                                            Bt = (Te = de.sessionLists[de.selectIdx]) === null || Te === void 0 ? void 0 : Te.engagementId,
                                            En = Ct.recordAccessMap || {},
                                            Pe = Oe()(wt).call(wt, function(Ie) {
                                                var Be, st, jt;
                                                return yn(yn({}, Ie), {}, {
                                                    recordAccessMap: En,
                                                    agentQueueRecordAccess: (Be = En[Ie.id]) === null || Be === void 0 ? void 0 : Be.agentQueueRecordAccess,
                                                    agentQueueRecordDelete: (st = En[Ie.id]) === null || st === void 0 ? void 0 : st.agentQueueRecordDelete,
                                                    agentQueueRecordDownload: (jt = En[Ie.id]) === null || jt === void 0 ? void 0 : jt.agentQueueRecordDownload
                                                })
                                            }),
                                            de.updateHistoryList(Pe),
                                            W = ie()(Pe).call(Pe, function(Ie) {
                                                return Ie.engagementId === Bt
                                            }),
                                        de.isSessionRecent && Pe[W] && de.selectSession(W, Pe[W]);
                                    case 21:
                                    case "end":
                                        return nt.stop()
                                }
                        }, ye)
                    }))()
                },
                selectSession: function(de, ye) {
                    this.updateSelectIdx(de),
                        this.$emit("select", ye)
                },
                toggleCollpase: function() {
                    this.isCollapse = !this.isCollapse
                },
                calcIdentifier: function(de) {
                    var ye, Le, Te = de.channelType, be = de.customerNumber, me = de.customerName, He = de.crmName, Ct = this.piiSettings || {}, wt = Ct.maskPiiInfo, Bt = wt === void 0 ? !1 : wt, En = Ct.detailSettings, Pe = En === void 0 ? {} : En, W, Ee = He || me;
                    if (at()(ye = ["PHONE", "SMS", "WHATSAPP"]).call(ye, Te) ? W = Ee || be : W = Ee,
                    W === be) {
                        var nt = Pe.phoneNumber || {}
                            , Ie = nt.toggle
                            , Be = Ie === void 0 ? !1 : Ie
                            , st = nt.closeEngagementShow
                            , jt = st === void 0 ? !1 : st
                            , _t = this.$options.filters.phoneNumber(W, this.currentAgent.countryOrRegion);
                        W = Bt && Be && jt ? _t.replace(Mt.phiReg, "*") : _t
                    } else if (W === Ee) {
                        var Ge = Pe.displayName || {}
                            , It = Ge.toggle
                            , cn = It === void 0 ? !1 : It
                            , ct = Ge.closeEngagementShow
                            , De = ct === void 0 ? !1 : ct;
                        W = Bt && cn && De ? W.replace(Mt.phiReg, "*") : W
                    }
                    return ((Le = W) === null || Le === void 0 ? void 0 : Le.length) > 22 && (W = "".concat(Ce()(W).call(W, 0, 19), "...")),
                    W || "-"
                },
                calcQueueName: function(de) {
                    var ye = de.queueName
                        , Le = ye === void 0 ? "N/A" : ye
                        , Te = de.channelType
                        , be = de.direction
                        , me = Le;
                    return Te === "PHONE" && be === "OUT" && (me = "outbound"),
                    me || "N/A"
                },
                channelTypeIconClass: function(de) {
                    var ye;
                    return {
                        chat: at()(ye = Ae()(Ot()(Mt.MessageChannelType, "SMS"))).call(ye, de.channelType),
                        sms: de.channelType === "SMS",
                        video: de.channelType === "VIDEO",
                        email: de.channelType === "EMAIL_DOMAIN"
                    }
                },
                openMoreSession: function() {
                    this.$emit("setCollapse", !1),
                        this.isCollapse = !1
                },
                preprocessingSessionList: function(de) {
                    return yn(yn({}, de), {}, {
                        calcIdentifier: this.calcIdentifier(de),
                        channelTypeIconClass: this.channelTypeIconClass(de),
                        calcQueueName: this.calcQueueName(de),
                        hasName: de.crmName || de.customerName
                    })
                }
            },
            computed: yn(yn(yn({}, (0,
                gr.mapGetters)({
                currentAgent: "user",
                piiSettings: "piiSettings"
            })), (0,
                gr.mapGetters)("sessionPanels", ["activeTaskQueue", "chatWrapupTaskQueue", "updatingDisplayNameInfo"])), {}, {
                sessionLists: function() {
                    var de, ye, Le = this;
                    return Oe()(de = q()(ye = this.historyList).call(ye, function(Te) {
                        var be, me, He = Te.engagementId, Ct = ie()(be = Le.activeTaskQueue).call(be, function(Bt) {
                            return Bt.engagementId === He
                        }), wt = ie()(me = Le.chatWrapupTaskQueue).call(me, function(Bt) {
                            return Bt.engagementId === He
                        });
                        return Ct === -1 && wt === -1
                    })).call(de, this.preprocessingSessionList)
                },
                sessionList: function() {
                    var de;
                    return this.collapse ? Ce()(de = this.sessionLists).call(de, 0, 5) : this.sessionLists
                },
                isSessionRecent: function() {
                    return this.activeSession === Mt.eMenuName.sessionRecent
                }
            }),
            watch: {
                wrapupDoneFlag: function(de) {
                    var ye = this;
                    return Qt(Ue().mark(function Le() {
                        return Ue().wrap(function(be) {
                            for (; ; )
                                switch (be.prev = be.next) {
                                    case 0:
                                        if (de !== !0) {
                                            be.next = 4;
                                            break
                                        }
                                        return be.next = 3,
                                            (0,
                                                $n.delay)(1e4);
                                    case 3:
                                        ye.debounceGetHistoryList();
                                    case 4:
                                    case "end":
                                        return be.stop()
                                }
                        }, Le)
                    }))()
                },
                refreshRecentList: function(de) {
                    de && this.debounceGetHistoryList()
                },
                updatingDisplayNameInfo: function() {
                    this.updateHistoryListByEngagementId()
                }
            }
        });
        var Rr = a(50855)
            , Pr = (0,
            Rr.A)(cr, pe, ne, !1, null, "4067c594", null);
        const rt = Pr.exports
    }
    ,
    61211: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => Mn
            });
        var Y = a(14950)
            , J = a.n(Y)
            , $ = a(69761)
            , k = a.n($)
            , P = a(12608)
            , M = a.n(P)
            , Q = function() {
            var Mt = this
                , Kn = Mt._self._c;
            return Kn("ul", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: Mt.activeTaskQueueList.length > 0,
                    expression: "activeTaskQueueList.length > 0"
                }],
                staticClass: "cus-menu",
                attrs: {
                    role: "none"
                }
            }, [Kn("div", {
                attrs: {
                    role: "none"
                }
            }, [Kn("li", {
                staticClass: "cus-submenu",
                class: Mt.isCollapse ? "is-closed" : "",
                attrs: {
                    role: "none"
                }
            }, [Kn("div", {
                staticClass: "cus-submenu__title",
                attrs: {
                    role: "menuitem",
                    "aria-expanded": "".concat(!Mt.isCollapse),
                    "aria-label": Mt.$t("cci.client.collapseTransferSession"),
                    tabindex: "0"
                },
                on: {
                    click: Mt.toggleCollpase,
                    keydown: [function(In) {
                        var tn;
                        return !J()(tn = In.type).call(tn, "key") && Mt._k(In.keyCode, "enter", 13, In.key, "Enter") ? null : Mt.toggleCollpase.apply(null, arguments)
                    }
                        , function(In) {
                            var tn;
                            return !J()(tn = In.type).call(tn, "key") && Mt._k(In.keyCode, "space", 32, In.key, [" ", "Spacebar"]) ? null : Mt.toggleCollpase.apply(null, arguments)
                        }
                    ]
                }
            }, [Kn("i", {
                staticClass: "cus-submenu__icon-arrow"
            }), Mt._v(" "), Kn("span", [Mt._v(Mt._s(Mt.$t("cci.client.session.transfer")) + " (" + Mt._s(Mt.activeTaskQueueList.length) + ")")])]), Mt._v(" "), Kn("ul", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !Mt.isCollapse,
                    expression: "!isCollapse"
                }],
                staticClass: "phone-active",
                attrs: {
                    role: "menu",
                    "aria-label": Mt.$t("cci.client.collapseTransferSession")
                }
            }, Mt._l(Mt.activeTaskQueueList, function(In) {
                var tn, Ot, Pt, $n;
                return Kn("li", {
                    key: In.taskId,
                    class: ["phone-active__item", {
                        selected: k()(tn = [Mt.eMenuName.sessionActive]).call(tn, Mt.activeSession) && Mt.currentTaskId === In.taskId
                    }],
                    attrs: {
                        role: "menuitem",
                        "aria-label": M()(Ot = M()(Pt = M()($n = "".concat(Mt.calcIdentifierE164Formatted(In), ", ")).call($n, Mt.calcTime(In, Mt.activeTaskDurationList), ", ")).call(Pt, Mt.calcEngagementType(In), ", ")).call(Ot, Mt.calcQueueName(In)),
                        tabindex: "0"
                    },
                    on: {
                        click: function(Xe) {
                            return Mt.onSelect(In.taskId)
                        },
                        keydown: [function(dt) {
                            var Xe;
                            return !J()(Xe = dt.type).call(Xe, "key") && Mt._k(dt.keyCode, "enter", 13, dt.key, "Enter") ? null : Mt.onSelect(In.taskId)
                        }
                            , function(dt) {
                                var Xe;
                                return !J()(Xe = dt.type).call(Xe, "key") && Mt._k(dt.keyCode, "space", 32, dt.key, [" ", "Spacebar"]) ? null : Mt.onSelect(In.taskId)
                            }
                        ]
                    }
                }, [Kn("div", {
                    staticClass: "phone-active__avatar"
                }), Mt._v(" "), Kn("div", {
                    staticClass: "phone-active__content"
                }, [Kn("div", {
                    staticClass: "phone-active__identifier"
                }, [Mt._v(`
              ` + Mt._s(Mt.calcIdentifierWithPhiMask(In)) + ` \xB7
              ` + Mt._s(Mt.calcTime(In, Mt.activeTaskDurationList)) + `
            `)]), Mt._v(" "), Kn("div", {
                    class: ["phone-active__queue", "".concat(In.type)]
                }, [Mt._v(`
              ` + Mt._s(Mt.calcQueueName(In)) + `
            `)])]), Mt._v(" "), Mt.isShowPhoneRecording(In) ? Kn("div", {
                    staticClass: "voice-recording-icon"
                }) : Mt._e()])
            }), 0)])])])
        }
            , O = []
            , F = a(69279)
            , D = a.n(F)
            , z = a(59814)
            , G = a.n(z)
            , V = a(39084)
            , K = a.n(V)
            , te = a(61849)
            , ee = a.n(te)
            , pe = a(81352)
            , ne = a.n(pe)
            , X = a(84653)
            , x = a.n(X)
            , H = a(89099)
            , q = a.n(H)
            , _e = a(44987)
            , ie = a.n(_e)
            , ze = a(34622)
            , Oe = a.n(ze)
            , Cn = a(27785)
            , at = a.n(Cn)
            , Sn = a(83537)
            , Ce = a.n(Sn)
            , wn = a(83030)
            , Ae = a.n(wn)
            , nr = a(65888)
            , mt = a.n(nr)
            , jn = a(34187)
            , ve = a.n(jn)
            , or = a(73007)
            , pt = a.n(or)
            , je = a(23716)
            , Ke = a.n(je)
            , it = a(2208)
            , Ne = a.n(it)
            , Gt = a(5339)
            , en = a.n(Gt)
            , rn = a(53578)
            , Tt = a(83266)
            , vr = a(56405);
        function rr(U) {
            "@babel/helpers - typeof";
            return rr = typeof Ae() == "function" && typeof en() == "symbol" ? function(Mt) {
                    return typeof Mt
                }
                : function(Mt) {
                    return Mt && typeof Ae() == "function" && Mt.constructor === Ae() && Mt !== Ae().prototype ? "symbol" : typeof Mt
                }
                ,
                rr(U)
        }
        function kr() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            kr = function() {
                return Mt
            }
            ;
            var U, Mt = {}, Kn = Object.prototype, In = Kn.hasOwnProperty, tn = ee() || function(Le, Te, be) {
                Le[Te] = be.value
            }
                , Ot = typeof Ae() == "function" ? Ae() : {}, Pt = Ot.iterator || "@@iterator", $n = Ot.asyncIterator || "@@asyncIterator", dt = Ot.toStringTag || "@@toStringTag";
            function Xe(Le, Te, be) {
                return ee()(Le, Te, {
                    value: be,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    Le[Te]
            }
            try {
                Xe({}, "")
            } catch {
                Xe = function(be, me, He) {
                    return be[me] = He
                }
            }
            function ht(Le, Te, be, me) {
                var He = Te && Te.prototype instanceof Pn ? Te : Pn
                    , Ct = mt()(He.prototype)
                    , wt = new de(me || []);
                return tn(Ct, "_invoke", {
                    value: Rr(Le, be, wt)
                }),
                    Ct
            }
            function yn(Le, Te, be) {
                try {
                    return {
                        type: "normal",
                        arg: Le.call(Te, be)
                    }
                } catch (me) {
                    return {
                        type: "throw",
                        arg: me
                    }
                }
            }
            Mt.wrap = ht;
            var dn = "suspendedStart"
                , Gn = "suspendedYield"
                , sr = "executing"
                , Zn = "completed"
                , _r = {};
            function Pn() {}
            function Ze() {}
            function Vn() {}
            var Se = {};
            Xe(Se, Pt, function() {
                return this
            });
            var Ue = ve()
                , yt = Ue && Ue(Ue(ye([])));
            yt && yt !== Kn && In.call(yt, Pt) && (Se = yt);
            var Qt = Vn.prototype = Pn.prototype = mt()(Se);
            function Hn(Le) {
                var Te;
                ie()(Te = ["next", "throw", "return"]).call(Te, function(be) {
                    Xe(Le, be, function(me) {
                        return this._invoke(be, me)
                    })
                })
            }
            function cr(Le, Te) {
                function be(He, Ct, wt, Bt) {
                    var En = yn(Le[He], Le, Ct);
                    if (En.type !== "throw") {
                        var Pe = En.arg
                            , W = Pe.value;
                        return W && rr(W) == "object" && In.call(W, "__await") ? Te.resolve(W.__await).then(function(Ee) {
                            be("next", Ee, wt, Bt)
                        }, function(Ee) {
                            be("throw", Ee, wt, Bt)
                        }) : Te.resolve(W).then(function(Ee) {
                            Pe.value = Ee,
                                wt(Pe)
                        }, function(Ee) {
                            return be("throw", Ee, wt, Bt)
                        })
                    }
                    Bt(En.arg)
                }
                var me;
                tn(this, "_invoke", {
                    value: function(Ct, wt) {
                        function Bt() {
                            return new Te(function(En, Pe) {
                                    be(Ct, wt, En, Pe)
                                }
                            )
                        }
                        return me = me ? me.then(Bt, Bt) : Bt()
                    }
                })
            }
            function Rr(Le, Te, be) {
                var me = dn;
                return function(He, Ct) {
                    if (me === sr)
                        throw Error("Generator is already running");
                    if (me === Zn) {
                        if (He === "throw")
                            throw Ct;
                        return {
                            value: U,
                            done: !0
                        }
                    }
                    for (be.method = He,
                             be.arg = Ct; ; ) {
                        var wt = be.delegate;
                        if (wt) {
                            var Bt = Pr(wt, be);
                            if (Bt) {
                                if (Bt === _r)
                                    continue;
                                return Bt
                            }
                        }
                        if (be.method === "next")
                            be.sent = be._sent = be.arg;
                        else if (be.method === "throw") {
                            if (me === dn)
                                throw me = Zn,
                                    be.arg;
                            be.dispatchException(be.arg)
                        } else
                            be.method === "return" && be.abrupt("return", be.arg);
                        me = sr;
                        var En = yn(Le, Te, be);
                        if (En.type === "normal") {
                            if (me = be.done ? Zn : Gn,
                            En.arg === _r)
                                continue;
                            return {
                                value: En.arg,
                                done: be.done
                            }
                        }
                        En.type === "throw" && (me = Zn,
                            be.method = "throw",
                            be.arg = En.arg)
                    }
                }
            }
            function Pr(Le, Te) {
                var be = Te.method
                    , me = Le.iterator[be];
                if (me === U)
                    return Te.delegate = null,
                    be === "throw" && Le.iterator.return && (Te.method = "return",
                        Te.arg = U,
                        Pr(Le, Te),
                    Te.method === "throw") || be !== "return" && (Te.method = "throw",
                        Te.arg = new TypeError("The iterator does not provide a '" + be + "' method")),
                        _r;
                var He = yn(me, Le.iterator, Te.arg);
                if (He.type === "throw")
                    return Te.method = "throw",
                        Te.arg = He.arg,
                        Te.delegate = null,
                        _r;
                var Ct = He.arg;
                return Ct ? Ct.done ? (Te[Le.resultName] = Ct.value,
                    Te.next = Le.nextLoc,
                Te.method !== "return" && (Te.method = "next",
                    Te.arg = U),
                    Te.delegate = null,
                    _r) : Ct : (Te.method = "throw",
                    Te.arg = new TypeError("iterator result is not an object"),
                    Te.delegate = null,
                    _r)
            }
            function rt(Le) {
                var Te = {
                    tryLoc: Le[0]
                };
                1 in Le && (Te.catchLoc = Le[1]),
                2 in Le && (Te.finallyLoc = Le[2],
                    Te.afterLoc = Le[3]),
                    this.tryEntries.push(Te)
            }
            function ae(Le) {
                var Te = Le.completion || {};
                Te.type = "normal",
                    delete Te.arg,
                    Le.completion = Te
            }
            function de(Le) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    ie()(Le).call(Le, rt, this),
                    this.reset(!0)
            }
            function ye(Le) {
                if (Le || Le === "") {
                    var Te = Le[Pt];
                    if (Te)
                        return Te.call(Le);
                    if (typeof Le.next == "function")
                        return Le;
                    if (!isNaN(Le.length)) {
                        var be = -1
                            , me = function He() {
                            for (; ++be < Le.length; )
                                if (In.call(Le, be))
                                    return He.value = Le[be],
                                        He.done = !1,
                                        He;
                            return He.value = U,
                                He.done = !0,
                                He
                        };
                        return me.next = me
                    }
                }
                throw new TypeError(rr(Le) + " is not iterable")
            }
            return Ze.prototype = Vn,
                tn(Qt, "constructor", {
                    value: Vn,
                    configurable: !0
                }),
                tn(Vn, "constructor", {
                    value: Ze,
                    configurable: !0
                }),
                Ze.displayName = Xe(Vn, dt, "GeneratorFunction"),
                Mt.isGeneratorFunction = function(Le) {
                    var Te = typeof Le == "function" && Le.constructor;
                    return !!Te && (Te === Ze || (Te.displayName || Te.name) === "GeneratorFunction")
                }
                ,
                Mt.mark = function(Le) {
                    return pt() ? pt()(Le, Vn) : (Le.__proto__ = Vn,
                        Xe(Le, dt, "GeneratorFunction")),
                        Le.prototype = mt()(Qt),
                        Le
                }
                ,
                Mt.awrap = function(Le) {
                    return {
                        __await: Le
                    }
                }
                ,
                Hn(cr.prototype),
                Xe(cr.prototype, $n, function() {
                    return this
                }),
                Mt.AsyncIterator = cr,
                Mt.async = function(Le, Te, be, me, He) {
                    He === void 0 && (He = Ce());
                    var Ct = new cr(ht(Le, Te, be, me),He);
                    return Mt.isGeneratorFunction(Te) ? Ct : Ct.next().then(function(wt) {
                        return wt.done ? wt.value : Ct.next()
                    })
                }
                ,
                Hn(Qt),
                Xe(Qt, dt, "Generator"),
                Xe(Qt, Pt, function() {
                    return this
                }),
                Xe(Qt, "toString", function() {
                    return "[object Generator]"
                }),
                Mt.keys = function(Le) {
                    var Te = Object(Le)
                        , be = [];
                    for (var me in Te)
                        be.push(me);
                    return Ke()(be).call(be),
                        function He() {
                            for (; be.length; ) {
                                var Ct = be.pop();
                                if (Ct in Te)
                                    return He.value = Ct,
                                        He.done = !1,
                                        He
                            }
                            return He.done = !0,
                                He
                        }
                }
                ,
                Mt.values = ye,
                de.prototype = {
                    constructor: de,
                    reset: function(Te) {
                        var be;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = U,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = U,
                            ie()(be = this.tryEntries).call(be, ae),
                            !Te)
                            for (var me in this)
                                me.charAt(0) === "t" && In.call(this, me) && !isNaN(+Ne()(me).call(me, 1)) && (this[me] = U)
                    },
                    stop: function() {
                        this.done = !0;
                        var Te = this.tryEntries[0].completion;
                        if (Te.type === "throw")
                            throw Te.arg;
                        return this.rval
                    },
                    dispatchException: function(Te) {
                        if (this.done)
                            throw Te;
                        var be = this;
                        function me(Pe, W) {
                            return wt.type = "throw",
                                wt.arg = Te,
                                be.next = Pe,
                            W && (be.method = "next",
                                be.arg = U),
                                !!W
                        }
                        for (var He = this.tryEntries.length - 1; He >= 0; --He) {
                            var Ct = this.tryEntries[He]
                                , wt = Ct.completion;
                            if (Ct.tryLoc === "root")
                                return me("end");
                            if (Ct.tryLoc <= this.prev) {
                                var Bt = In.call(Ct, "catchLoc")
                                    , En = In.call(Ct, "finallyLoc");
                                if (Bt && En) {
                                    if (this.prev < Ct.catchLoc)
                                        return me(Ct.catchLoc, !0);
                                    if (this.prev < Ct.finallyLoc)
                                        return me(Ct.finallyLoc)
                                } else if (Bt) {
                                    if (this.prev < Ct.catchLoc)
                                        return me(Ct.catchLoc, !0)
                                } else {
                                    if (!En)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < Ct.finallyLoc)
                                        return me(Ct.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(Te, be) {
                        for (var me = this.tryEntries.length - 1; me >= 0; --me) {
                            var He = this.tryEntries[me];
                            if (He.tryLoc <= this.prev && In.call(He, "finallyLoc") && this.prev < He.finallyLoc) {
                                var Ct = He;
                                break
                            }
                        }
                        Ct && (Te === "break" || Te === "continue") && Ct.tryLoc <= be && be <= Ct.finallyLoc && (Ct = null);
                        var wt = Ct ? Ct.completion : {};
                        return wt.type = Te,
                            wt.arg = be,
                            Ct ? (this.method = "next",
                                this.next = Ct.finallyLoc,
                                _r) : this.complete(wt)
                    },
                    complete: function(Te, be) {
                        if (Te.type === "throw")
                            throw Te.arg;
                        return Te.type === "break" || Te.type === "continue" ? this.next = Te.arg : Te.type === "return" ? (this.rval = this.arg = Te.arg,
                            this.method = "return",
                            this.next = "end") : Te.type === "normal" && be && (this.next = be),
                            _r
                    },
                    finish: function(Te) {
                        for (var be = this.tryEntries.length - 1; be >= 0; --be) {
                            var me = this.tryEntries[be];
                            if (me.finallyLoc === Te)
                                return this.complete(me.completion, me.afterLoc),
                                    ae(me),
                                    _r
                        }
                    },
                    catch: function(Te) {
                        for (var be = this.tryEntries.length - 1; be >= 0; --be) {
                            var me = this.tryEntries[be];
                            if (me.tryLoc === Te) {
                                var He = me.completion;
                                if (He.type === "throw") {
                                    var Ct = He.arg;
                                    ae(me)
                                }
                                return Ct
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(Te, be, me) {
                        return this.delegate = {
                            iterator: ye(Te),
                            resultName: be,
                            nextLoc: me
                        },
                        this.method === "next" && (this.arg = U),
                            _r
                    }
                },
                Mt
        }
        function Re(U, Mt, Kn, In, tn, Ot, Pt) {
            try {
                var $n = U[Ot](Pt)
                    , dt = $n.value
            } catch (Xe) {
                return void Kn(Xe)
            }
            $n.done ? Mt(dt) : Ce().resolve(dt).then(In, tn)
        }
        function Et(U) {
            return function() {
                var Mt = this
                    , Kn = arguments;
                return new (Ce())(function(In, tn) {
                        var Ot = U.apply(Mt, Kn);
                        function Pt(dt) {
                            Re(Ot, In, tn, Pt, $n, "next", dt)
                        }
                        function $n(dt) {
                            Re(Ot, In, tn, Pt, $n, "throw", dt)
                        }
                        Pt(void 0)
                    }
                )
            }
        }
        function An(U, Mt) {
            var Kn = ne()(U);
            if (x()) {
                var In = x()(U);
                Mt && (In = G()(In).call(In, function(tn) {
                    return q()(U, tn).enumerable
                })),
                    Kn.push.apply(Kn, In)
            }
            return Kn
        }
        function Yt(U) {
            for (var Mt = 1; Mt < arguments.length; Mt++) {
                var Kn, In, tn = arguments[Mt] != null ? arguments[Mt] : {};
                Mt % 2 ? ie()(Kn = An(Object(tn), !0)).call(Kn, function(Ot) {
                    gn(U, Ot, tn[Ot])
                }) : Oe() ? at()(U, Oe()(tn)) : ie()(In = An(Object(tn))).call(In, function(Ot) {
                    ee()(U, Ot, q()(tn, Ot))
                })
            }
            return U
        }
        function gn(U, Mt, Kn) {
            return (Mt = Qe(Mt))in U ? ee()(U, Mt, {
                value: Kn,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : U[Mt] = Kn,
                U
        }
        function Qe(U) {
            var Mt = ar(U, "string");
            return rr(Mt) == "symbol" ? Mt : Mt + ""
        }
        function ar(U, Mt) {
            if (rr(U) != "object" || !U)
                return U;
            var Kn = U[K()];
            if (Kn !== void 0) {
                var In = Kn.call(U, Mt || "default");
                if (rr(In) != "object")
                    return In;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (Mt === "string" ? String : Number)(U)
        }
        const Zt = {
            name: "SessionTransfer",
            props: {
                activeSession: {
                    type: Number,
                    default: 0
                }
            },
            mixins: [Tt.sessionMixin],
            data: function() {
                return {
                    eMenuName: vr.eMenuName,
                    selectIdx: -1,
                    isCollapse: !1,
                    durationUpdateTimer: null
                }
            },
            created: function() {
                this.initData()
            },
            methods: Yt(Yt({}, (0,
                rn.mapActions)("sessionPanels", ["switchActiveTask"])), {}, {
                initData: function() {
                    return Et(kr().mark(function Mt() {
                        return kr().wrap(function(In) {
                            for (; ; )
                                switch (In.prev = In.next) {
                                    case 0:
                                    case "end":
                                        return In.stop()
                                }
                        }, Mt)
                    }))()
                },
                toggleCollpase: function() {
                    this.isCollapse = !this.isCollapse
                },
                onSelect: function() {
                    var Mt, Kn = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.activeTaskQueue[0].taskId, In = D()(Mt = this.activeTaskQueue).call(Mt, function(tn) {
                        return tn.taskId === Kn
                    });
                    In && (this.switchActiveTask(Kn),
                        this.$emit("selectPhone", Kn))
                },
                isShowPhoneRecording: function(Mt) {
                    var Kn, In, tn, Ot;
                    return (Mt == null || (Kn = Mt.task) === null || Kn === void 0 ? void 0 : Kn.eventType) !== "call.ended" && (Mt == null || (In = Mt.task) === null || In === void 0 ? void 0 : In.eventType) !== "callHangup" && Mt?.type === "phone" && Mt?.engagementId === ((tn = this.recordingStatus) === null || tn === void 0 ? void 0 : tn.engagementId) && ((Ot = this.recordingStatus) === null || Ot === void 0 ? void 0 : Ot.status) === 2
                }
            }),
            computed: Yt(Yt(Yt(Yt({}, (0,
                rn.mapGetters)({
                account: "account",
                currentAgent: "user"
            })), (0,
                rn.mapGetters)("sessionPanels", ["activeTaskQueue", "activeTaskDurationList", "currentTaskId", "currentAcceptTaskId", "activeTasks"])), (0,
                rn.mapGetters)("voice", ["recordingStatus"])), {}, {
                activeTaskQueueList: function() {
                    var Mt, Kn = this;
                    return G()(Mt = this.activeTaskQueue).call(Mt, function(In) {
                        var tn = In.taskId
                            , Ot = In.type
                            , Pt = Kn.activeTasks[tn] || {}
                            , $n = Pt.eventType
                            , dt = Pt.isTransfer
                            , Xe = Pt.isTransferToQueue
                            , ht = Pt.transferType
                            , yn = Pt.customerBridged
                            , dn = yn === void 0 ? !1 : yn;
                        return !!(Ot === "phone" && $n === "accepted" && (dt || Xe) && ht === "attended" && !dn)
                    })
                }
            })
        };
        var Lt = a(50855)
            , gr = (0,
            Lt.A)(Zt, Q, O, !1, null, "069bd0d5", null);
        const Mn = gr.exports
    }
    ,
    92032: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => M
            });
        var Y = a(97880)
            , J = a(2820)
            , $ = {};
        for (const Q in J)
            Q !== "default" && ($[Q] = () => J[Q]);
        a.d(E, $);
        var k = a(50855)
            , P = (0,
            k.A)(J.default, Y.X, Y.Y, !1, null, "e62bcf26", null);
        const M = P.exports
    }
    ,
    66561: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => M
            });
        var Y = a(89048)
            , J = a(50659)
            , $ = {};
        for (const Q in J)
            Q !== "default" && ($[Q] = () => J[Q]);
        a.d(E, $);
        var k = a(50855)
            , P = (0,
            k.A)(J.default, Y.X, Y.Y, !1, null, "6c0c3540", null);
        const M = P.exports
    }
    ,
    20433: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                __esModule: () => $.B,
                default: () => Q
            });
        var Y = function() {
            var F = this
                , D = F._self._c;
            return D("TaskNotifyPanel", {
                attrs: {
                    "panel-type": "video",
                    "channel-label": F.$t("cci.client.videoCall"),
                    info: F.info,
                    loading: F.loading
                },
                on: {
                    onAccept: F.onAccept,
                    onReject: F.onReject
                }
            })
        }
            , J = []
            , $ = a(91781);
        const k = $.A;
        var P = a(50855)
            , M = (0,
            P.A)(k, Y, J, !1, null, "0363a030", null);
        const Q = M.exports
    }
    ,
    42848: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => M
            });
        var Y = a(53001)
            , J = a(71196)
            , $ = {};
        for (const Q in J)
            Q !== "default" && ($[Q] = () => J[Q]);
        a.d(E, $);
        var k = a(50855)
            , P = (0,
            k.A)(J.default, Y.X, Y.Y, !1, null, "707466a4", null);
        const M = P.exports
    }
    ,
    95314: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                __esModule: () => $.B,
                default: () => Q
            });
        var Y = function() {
            var F = this
                , D = F._self._c
                , z = F._self._setupProxy;
            return D("div", {
                staticClass: "recent_session__header"
            }, [D(z.ChannelHeader, {
                attrs: {
                    "channel-type": z.channelType,
                    title: z.displayName,
                    duration: z.duration
                }
            })], 1)
        }
            , J = []
            , $ = a(13751);
        const k = $.A;
        var P = a(50855)
            , M = (0,
            P.A)(k, Y, J, !1, null, "3dc02e0e", null);
        const Q = M.exports
    }
    ,
    85146: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => In
            });
        var Y = function() {
            var Ot, Pt, $n, dt = this, Xe = dt._self._c;
            return Xe("div", {
                key: dt.contactInfo.id,
                staticClass: "session"
            }, [Xe("div", {
                staticClass: "session__title"
            }, [dt._v(`
    ` + dt._s(dt.$t("cci.engagement.name.currentSession.sessionDetails")) + `
  `)]), dt._v(" "), Xe("div", {
                staticClass: "session__cont"
            }, [Xe("LabelRow", {
                attrs: {
                    label: dt.$t("cci.engagement.name.currentSession.engagementID"),
                    content: dt.taskEngagementId
                }
            }), dt._v(" "), Xe("LabelRow", {
                attrs: {
                    label: dt.$t("cci.engagement.name.currentSession.startTime"),
                    content: dt._f("formatTimeNodot")(dt.taskStartTime)
                }
            }), dt._v(" "), Xe("LabelRow", {
                attrs: {
                    label: dt.$t("cci.engagement.name.currentSession.endTime"),
                    content: dt._f("formatTimeNodot")((Ot = dt.contactInfo) === null || Ot === void 0 ? void 0 : Ot.endTime)
                }
            }), dt._v(" "), Xe("LabelRow", {
                attrs: {
                    label: dt.$t("cci.engagement.name.currentSession.source"),
                    content: dt.sourceName
                }
            }), dt._v(" "), dt.needShowQueue ? Xe("LabelRow", {
                attrs: {
                    label: dt.$t("cci.engagement.name.currentSession.currentQueue"),
                    content: (Pt = dt.contactInfo) === null || Pt === void 0 ? void 0 : Pt.queueName
                }
            }) : dt._e(), dt._v(" "), Xe("LabelRow", {
                attrs: {
                    label: dt.$t("cci.engagement.name.currentSession.assignedAgent"),
                    content: dt.taskAgent
                }
            }), dt._v(" "), Xe("LabelRow", {
                attrs: {
                    label: dt.$t("cci.currentSession.wrapupDuration"),
                    content: dt.wrapUpTime
                }
            }), dt._v(" "), Xe("LabelRow", {
                attrs: {
                    label: dt.$t("cci.engagement.closedTab.tableColumn.consumer"),
                    content: dt.consumerName
                }
            }), dt._v(" "), Xe("LabelRow", {
                attrs: {
                    label: dt.$t("cci.engagement.name.currentSession.disposition"),
                    content: ($n = dt.contactInfo) === null || $n === void 0 ? void 0 : $n.disposition
                }
            }), dt._v(" "), Xe("LabelRow", {
                attrs: {
                    label: dt.$t("cci.engagement.closedTab.tableColumn.direction"),
                    content: dt.direction
                }
            }), dt._v(" "), Xe("zm-form", {
                staticClass: "engagement-tab-variables",
                attrs: {
                    "label-width": "170px",
                    "label-position": "left"
                }
            }, [Xe("zm-collapse", {
                model: {
                    value: dt.activeNames,
                    callback: function(yn) {
                        dt.activeNames = yn
                    },
                    expression: "activeNames"
                }
            }, [dt.customGlobalVariables.length ? Xe("zm-collapse-item", {
                attrs: {
                    title: dt.$t("cci.engagement.systemVariables", {
                        count: dt.customGlobalVariables.length
                    }),
                    name: "1"
                }
            }, [Xe("variables-list", {
                attrs: {
                    id: "system-profile-wrap",
                    tabindex: "0",
                    "is-from-profile": !1,
                    "variables-list": dt.customGlobalVariables,
                    "aria-label": dt.$t("cci.engagement.systemVariables", {
                        count: dt.customGlobalVariables.length
                    }),
                    role: "group"
                },
                nativeOn: {
                    keydown: function(yn) {
                        return function(dn) {
                            return dt.handleItemKeyDown(dn, "system-profile-wrap", "systemActiveTabindex")
                        }
                            .apply(null, arguments)
                    },
                    focus: function(yn) {
                        return dt.resetFocusIndex(dt.customGlobalVariables.length === 1, "systemActiveTabindex")
                    }
                }
            })], 1) : dt._e(), dt._v(" "), dt.systemGlobalVariables.length ? Xe("zm-collapse-item", {
                attrs: {
                    title: dt.$t("cci.engagement.customVariables", {
                        count: dt.systemGlobalVariables.length
                    }),
                    name: "2"
                }
            }, [Xe("variables-list", {
                attrs: {
                    id: "custom-profile-wrap",
                    tabindex: "0",
                    "variables-list": dt.systemGlobalVariables,
                    "aria-label": dt.$t("cci.engagement.customVariables", {
                        count: dt.systemGlobalVariables.length
                    }),
                    "is-from-profile": !1,
                    role: "group"
                },
                nativeOn: {
                    keydown: function(yn) {
                        return function(dn) {
                            return dt.handleItemKeyDown(dn, "custom-profile-wrap", "customActiveTabindex")
                        }
                            .apply(null, arguments)
                    },
                    focus: function(yn) {
                        return dt.resetFocusIndex(dt.systemGlobalVariables.length === 1, "customActiveTabindex")
                    }
                }
            })], 1) : dt._e()], 1)], 1)], 1)])
        }
            , J = []
            , $ = a(27425)
            , k = a.n($)
            , P = a(39864)
            , M = a.n(P)
            , Q = a(83030)
            , O = a.n(Q)
            , F = a(8233)
            , D = a.n(F)
            , z = a(2208)
            , G = a.n(z)
            , V = a(92336)
            , K = a.n(V)
            , te = a(39084)
            , ee = a.n(te)
            , pe = a(61849)
            , ne = a.n(pe)
            , X = a(81352)
            , x = a.n(X)
            , H = a(84653)
            , q = a.n(H)
            , _e = a(59814)
            , ie = a.n(_e)
            , ze = a(89099)
            , Oe = a.n(ze)
            , Cn = a(44987)
            , at = a.n(Cn)
            , Sn = a(34622)
            , Ce = a.n(Sn)
            , wn = a(27785)
            , Ae = a.n(wn)
            , nr = a(5339)
            , mt = a.n(nr)
            , jn = a(74061)
            , ve = a(53578)
            , or = a(76856)
            , pt = a(83266)
            , je = a(76709)
            , Ke = a(56405)
            , it = a(5866)
            , Ne = a.n(it)
            , Gt = a(11862)
            , en = a(83314)
            , rn = a(73680);
        function Tt(tn) {
            "@babel/helpers - typeof";
            return Tt = typeof O() == "function" && typeof mt() == "symbol" ? function(Ot) {
                    return typeof Ot
                }
                : function(Ot) {
                    return Ot && typeof O() == "function" && Ot.constructor === O() && Ot !== O().prototype ? "symbol" : typeof Ot
                }
                ,
                Tt(tn)
        }
        function vr(tn) {
            throw new TypeError('"' + tn + '" is read-only')
        }
        function rr(tn, Ot) {
            var Pt = x()(tn);
            if (q()) {
                var $n = q()(tn);
                Ot && ($n = ie()($n).call($n, function(dt) {
                    return Oe()(tn, dt).enumerable
                })),
                    Pt.push.apply(Pt, $n)
            }
            return Pt
        }
        function kr(tn) {
            for (var Ot = 1; Ot < arguments.length; Ot++) {
                var Pt, $n, dt = arguments[Ot] != null ? arguments[Ot] : {};
                Ot % 2 ? at()(Pt = rr(Object(dt), !0)).call(Pt, function(Xe) {
                    Re(tn, Xe, dt[Xe])
                }) : Ce() ? Ae()(tn, Ce()(dt)) : at()($n = rr(Object(dt))).call($n, function(Xe) {
                    ne()(tn, Xe, Oe()(dt, Xe))
                })
            }
            return tn
        }
        function Re(tn, Ot, Pt) {
            return (Ot = Et(Ot))in tn ? ne()(tn, Ot, {
                value: Pt,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : tn[Ot] = Pt,
                tn
        }
        function Et(tn) {
            var Ot = An(tn, "string");
            return Tt(Ot) == "symbol" ? Ot : Ot + ""
        }
        function An(tn, Ot) {
            if (Tt(tn) != "object" || !tn)
                return tn;
            var Pt = tn[ee()];
            if (Pt !== void 0) {
                var $n = Pt.call(tn, Ot || "default");
                if (Tt($n) != "object")
                    return $n;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (Ot === "string" ? String : Number)(tn)
        }
        function Yt(tn, Ot) {
            return Zt(tn) || zt(tn, Ot) || Qe(tn, Ot) || gn()
        }
        function gn() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Qe(tn, Ot) {
            if (tn) {
                var Pt;
                if (typeof tn == "string")
                    return ar(tn, Ot);
                var $n = G()(Pt = {}.toString.call(tn)).call(Pt, 8, -1);
                return $n === "Object" && tn.constructor && ($n = tn.constructor.name),
                    $n === "Map" || $n === "Set" ? K()(tn) : $n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test($n) ? ar(tn, Ot) : void 0
            }
        }
        function ar(tn, Ot) {
            (Ot == null || Ot > tn.length) && (Ot = tn.length);
            for (var Pt = 0, $n = Array(Ot); Pt < Ot; Pt++)
                $n[Pt] = tn[Pt];
            return $n
        }
        function zt(tn, Ot) {
            var Pt = tn == null ? null : typeof O() < "u" && D()(tn) || tn["@@iterator"];
            if (Pt != null) {
                var $n, dt, Xe, ht, yn = [], dn = !0, Gn = !1;
                try {
                    if (Xe = (Pt = Pt.call(tn)).next,
                    Ot === 0) {
                        if (Object(Pt) !== Pt)
                            return;
                        dn = !1
                    } else
                        for (; !(dn = ($n = Xe.call(Pt)).done) && (yn.push($n.value),
                        yn.length !== Ot); dn = !0)
                            ;
                } catch (sr) {
                    Gn = !0,
                        dt = sr
                } finally {
                    try {
                        if (!dn && Pt.return != null && (ht = Pt.return(),
                        Object(ht) !== ht))
                            return
                    } finally {
                        if (Gn)
                            throw dt
                    }
                }
                return yn
            }
        }
        function Zt(tn) {
            if (M()(tn))
                return tn
        }
        var Lt = or.variableApi.getHistoryVariablesOnEngagement
            , gr = function(Ot) {
            var Pt, $n = (0,
                je.useStore)(), dt = (Pt = $n.getters.user) === null || Pt === void 0 ? void 0 : Pt.countryOrRegion;
            return (0,
                rn.phoneNumber)(Ot, dt)
        };
        const U = {
            mixins: [en.A],
            name: "SessionContent",
            props: {
                contactInfo: {
                    type: Object,
                    default: null
                }
            },
            setup: function(Ot) {
                var Pt = this
                    , $n = (0,
                    pt.useCloseEngagement)()
                    , dt = $n.formatSource
                    , Xe = (0,
                    jn.computed)(function() {
                    return dt(Ot.contactInfo.source)
                })
                    , ht = (0,
                    pt.useDataSilentUpdate)({
                    queryFn: Lt
                })
                    , yn = ht.getData
                    , dn = (0,
                    jn.ref)([])
                    , Gn = (0,
                    jn.ref)([]);
                return (0,
                    jn.watch)(function() {
                    var sr;
                    return (sr = Ot.contactInfo) === null || sr === void 0 ? void 0 : sr.engagementId
                }, function(sr) {
                    if (sr) {
                        var Zn = {
                            inClientProfileSec: !1,
                            inClientEngagementSec: !0,
                            engagementId: sr
                        };
                        yn(Zn, function(_r) {
                            var Pn, Ze = Yt(_r, 2), Vn = Ze[0], Se = Ze[1];
                            if (Vn) {
                                Pt.$message.error(Vn);
                                return
                            }
                            Zn.engagementId === ((Pn = Ot.contactInfo) === null || Pn === void 0 ? void 0 : Pn.engagementId) && (dn.value = Se.customGlobalVariables || [],
                                Gn.value = Se.systemGlobalVariables || [])
                        })
                    }
                }, {
                    immediate: !0
                }),
                    {
                        sourceName: Xe,
                        tGetHistoryVariablesOnEngagement: yn,
                        customGlobalVariables: dn,
                        systemGlobalVariables: Gn
                    }
            },
            data: function() {
                return {
                    dtRefreshFlag: !1,
                    activeNames: ""
                }
            },
            methods: {
                secs2HHMMSS: function() {
                    var Ot = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
                    return (0,
                        Ke.secsToHHMMSS)(Ot)
                }
            },
            computed: kr(kr({}, (0,
                ve.mapGetters)({
                currentAgent: "user"
            })), {}, {
                displayName: function() {
                    var Ot = this.contactInfo
                        , Pt = Ot.channelType
                        , $n = Ot.customerNumber
                        , dt = Ot.crmName
                        , Xe = Ot.customerName
                        , ht = dt || Xe;
                    return Pt === "PHONE" ? ht || this.$options.filters.phoneNumber($n, this.currentAgent.countryOrRegion) : Pt === "CHAT" || Pt === "VIDEO" ? ht : Pt === "SMS" ? ht || $n : "-"
                },
                isOutBoundCall: function() {
                    var Ot = this.contactInfo
                        , Pt = Ot.channelType
                        , $n = Ot.direction;
                    return Pt === "PHONE" && $n === "OUT"
                },
                needShowQueue: function() {
                    return !this.isOutBoundCall
                },
                taskEngagementId: function() {
                    return this.contactInfo.engagementId
                },
                taskStartTime: function() {
                    return this.contactInfo.startTime || this.contactInfo.createTime || k()()
                },
                taskAgent: function() {
                    var Ot = this.contactInfo
                        , Pt = Ot.userName
                        , $n = Ot.agentName;
                    return $n || Pt || "-"
                },
                wrapUpTime: function() {
                    var Ot = this.contactInfo || {}
                        , Pt = Ot.wrapUpTime
                        , $n = Pt === void 0 ? 0 : Pt;
                    return $n ? (0,
                        Ke.secsToHHMMSS)($n) : "--"
                },
                consumerName: function() {
                    var Ot = this.contactInfo || {}
                        , Pt = Ot.consumerName
                        , $n = Ot.customerNumber
                        , dt = Ot.crmName;
                    return dt || Pt || ($n ? gr($n) : "")
                },
                direction: function() {
                    var Ot, Pt = (Ot = this.contactInfo) === null || Ot === void 0 ? void 0 : Ot.direction;
                    return Pt && (Pt === "IN" || Pt === "I" || Pt === 1 ? this.$t("cci.common.label.inbound") : this.$t("cci.common.label.outbound"))
                }
            }),
            filters: {
                formatTimeNodot: function(Ot) {
                    return Ne()(Ot).format("h:mm A   MM/DD/YYYY")
                }
            },
            components: {
                LabelRow: {
                    props: ["label", "content"],
                    render: function() {
                        return !this.content && !this.$slots.default ? null : (0,
                            jn.h)("div", {
                            class: "label-row"
                        }, [(0,
                            jn.h)("div", {
                            class: "label-row__label"
                        }, [this.label]), (0,
                            jn.h)("div", {
                            class: "label-row__content"
                        }, [this.content, this.$slots.default])])
                    }
                },
                VariablesList: Gt.A
            }
        };
        var Mt = a(50855)
            , Kn = (0,
            Mt.A)(U, Y, J, !1, null, "8a2db376", null);
        const In = Kn.exports
    }
    ,
    8880: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => tr
            });
        var Y = a(21923)
            , J = a(12608)
            , $ = a.n(J)
            , k = a(93752)
            , P = a.n(k)
            , M = function() {
            var R, ce, gt, Ft, Kt, St, Xt, Rn, kn, pr, Or, we = this, lr = we._self._c;
            return lr("div", we._b({
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: we.loadingWrapDuration,
                    expression: "loadingWrapDuration"
                }],
                staticClass: "session",
                class: {
                    videoAlive: we.inVideo && we.isVideoAlive,
                    "height-inherit": we.isShowWrapup,
                    "height-100-percent": we.isShowEngagementEvents
                }
            }, "div", we.$attrs, !1), [we.isShowWrappingIndicator ? lr("WrappingIndicator", {
                attrs: {
                    "is-menu-active-session-wrapup": !0
                }
            }) : we._e(), we._v(" "), lr("Transition", {
                attrs: {
                    name: "EngagementEvents"
                }
            }, [we.showEngagementEvents ? lr("div", {
                staticClass: "EngagementEvents-panel",
                class: {
                    "wrapup-height": we.isShowWrappingIndicator
                }
            }, [lr("div", {
                staticClass: "EngagementEvents-panel-icon"
            }, [lr("zm-button", {
                attrs: {
                    ghost: "",
                    icon: "zm-icon-close"
                },
                on: {
                    click: we.handleCloseEvents
                }
            })], 1), we._v(" "), lr("div", {
                staticClass: "EngagementEvents-panel-title"
            }, [we._v(`
        ` + we._s(we.$t("cci.engagement.name.viewEvents.popper")) + `
      `)]), we._v(" "), lr("EngagementEvents", {
                ref: "engagementEvents",
                staticClass: "EngagementEvents-panel-content",
                attrs: {
                    id: we.taskEngagementId,
                    live: we.iconLive,
                    "is-live2": we.isLive || we.inViewVideo || we.inViewPhone,
                    "channel-type": we.taskChannelType,
                    "calc-channel-name": we.calcChannelName,
                    "is-in-video": we.isInVideo,
                    "is-in-chat": we.isInChat,
                    disabled: !we.taskEngagementId,
                    "is-email-channel": we.isEmailChannel,
                    size: we.currentObserverSize,
                    "max-wrapper-height": 450,
                    "responsive-size": ""
                }
            })], 1) : we._e()]), we._v(" "), lr("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !we.showEngagementEvents,
                    expression: "!showEngagementEvents"
                }],
                class: ["session__content", {
                    showWrapping: we.isShowWrappingIndicator
                }]
            }, [lr("V2WrappingBlock", {
                ref: "wrappingBlock",
                attrs: {
                    "current-notes-input": we.currentNotesInput,
                    "task-disposition": we.taskDisposition,
                    "show-notes-tab": we.showNotesTab,
                    "show-add-notes": we.showAddNotes,
                    "show-smart-note": we.showSmartNote,
                    "create-note-loading": we.createNoteLoading,
                    "show-smart-note-btn": we.showSmartNoteBtn,
                    "show-smart-note-change-btns": we.showSmartNoteChangeBtns,
                    "note-input-placeholder": we.noteInputPlaceholder,
                    quota: we.quota,
                    "show-smart-note-generated-class": we.showGeneratedClass
                },
                on: {
                    "update:currentNotesInput": function(Lr) {
                        we.currentNotesInput = Lr
                    },
                    "update:current-notes-input": function(Lr) {
                        we.currentNotesInput = Lr
                    },
                    wrapupSaveBegin: we.saveCrmId,
                    wrapupSaveOK: we.onWrapupDone,
                    generateSmartNoteWithAction: we.handleGenerateSmartNote,
                    userInputNote: we.handleNoteUserInput
                },
                scopedSlots: we._u([{
                    key: "form-append",
                    fn: function() {
                        return [lr("zm-form", {
                            staticClass: "form-append",
                            attrs: {
                                id: "form-append",
                                "label-width": "143px",
                                "label-position": "top",
                                "hide-required-asterisk": !0,
                                tabindex: "0",
                                role: "group"
                            },
                            nativeOn: {
                                keydown: function(Ur) {
                                    return function(Hr) {
                                        return we.handleItemKeyDown(Hr, "session-tabindex-wrap", "sessionActiveTabindex")
                                    }
                                        .apply(null, arguments)
                                }
                            }
                        }, [we._t("form-append")], 2)]
                    },
                    proxy: !0
                }], null, !0)
            }), we._v(" "), lr("div", {
                staticClass: "session__notes-title engagement-title flex-container"
            }, [lr("div", {
                staticClass: "detail-wrap"
            }, [lr("ProfileIcon", {
                staticClass: "session__profile",
                attrs: {
                    size: 14,
                    "in-phone": we.inPhone,
                    "in-monitor-phone": we.inMonitorPhone,
                    "in-monitor-s-m-s": we.inMonitorSMS,
                    "in-monitor-chat": we.inMonitorChat,
                    "in-monitor-video": we.inMonitorVideo || we.inViewVideo,
                    live: we.iconLive,
                    "channel-type": we.taskChannelType,
                    direction: we.taskDirection,
                    "current-monitor-task": we.currentMonitorTask,
                    "current-active-task": we.currentActiveTask,
                    "enable-custom-icon": ""
                }
            }), we._v(" "), lr("div", {
                attrs: {
                    role: "heading",
                    "aria-level": "3"
                }
            }, [we._v(`
          ` + we._s(we.$t("cci.engagement.name.currentSession.detailsTab")) + `
        `)])], 1), we._v(" "), lr("span", {
                staticClass: "view-events-btn-text",
                attrs: {
                    type: "text"
                },
                on: {
                    click: we.handleClickViewEvents
                }
            }, [we._v(`
        ` + we._s(we.$t("cci.engagement.text.viewEvents.button")) + `
      `)])]), we._v(" "), lr("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: we.isLoadingEnagement,
                    expression: "isLoadingEnagement"
                }]
            }, [lr("div", {
                staticClass: "session__cont",
                class: {
                    noIcon: we.observerSize.mini || we.observerSize.small || we.observerSize.middle,
                    hasBtns: we.isWrapupStatus
                }
            }, [lr("div", {
                staticClass: "session__cont-detail"
            }, [lr("zm-form", {
                staticClass: "client-normal-element-focus",
                attrs: {
                    id: "session-tabindex-wrap",
                    "label-position": "left",
                    "label-width": "143px",
                    "hide-required-asterisk": !0,
                    tabindex: "0",
                    "aria-label": $()(R = "".concat(we.$t("cci.engagement.name.currentSession.engagementTab"), " ")).call(R, we.$t("cci.engagement.name.currentSession.detailsTab")),
                    role: "group"
                },
                nativeOn: {
                    keydown: function(Lr) {
                        return function(Ur) {
                            return we.handleItemKeyDown(Ur, "session-tabindex-wrap", "sessionActiveTabindex")
                        }
                            .apply(null, arguments)
                    }
                }
            }, [lr("zm-form-item", {
                attrs: {
                    label: we.$t("cci.engagement.name.currentSession.engagementID"),
                    tabindex: "-1"
                }
            }, [lr("div", {
                staticClass: "zm_ellipsis",
                attrs: {
                    title: we.taskEngagementId
                }
            }, [we._v(`
                ` + we._s(we.taskEngagementId) + `
              `)])]), we._v(" "), lr("zm-form-item", {
                attrs: {
                    label: we.$t("cci.engagement.name.currentSession.startTime"),
                    tabindex: "-1"
                }
            }, [lr("div", {
                staticClass: "zm_ellipsis",
                attrs: {
                    title: we._f("toLocaleDate")(we.taskStartTime, we.getFormatStr(!1, " "), we.tz)
                }
            }, [we._v(`
                ` + we._s(we._f("toLocaleDate")(we.taskStartTime, we.getFormatStr(!1, " "), we.tz)) + `
              `)])]), we._v(" "), we.needShowEndTime ? lr("zm-form-item", {
                attrs: {
                    label: we.$t("cci.engagement.name.currentSession.endTime"),
                    tabindex: "-1"
                }
            }, [lr("div", {
                staticClass: "zm_ellipsis",
                attrs: {
                    title: we._f("toLocaleDate")(we.taskEndTime, we.getFormatStr(!1, " "), we.tz)
                }
            }, [we._v(`
                ` + we._s(we._f("toLocaleDate")(we.taskEndTime, we.getFormatStr(!1, " "), we.tz)) + `
              `)])]) : we._e(), we._v(" "), we.needShowDuration ? lr("zm-form-item", {
                attrs: {
                    label: we.$t("cci.engagement.name.currentSession.duration"),
                    tabindex: "-1"
                }
            }, [lr("div", {
                staticClass: "zm_ellipsis",
                attrs: {
                    title: we.taskDuration
                }
            }, [we._v(`
                ` + we._s(we.taskDuration) + `
              `)])]) : we._e(), we._v(" "), lr("zm-form-item", {
                attrs: {
                    label: we.$t("cci.engagement.name.currentSession.channel"),
                    tabindex: "-1"
                }
            }, [we._v(we._s(we.calcChannelName))]), we._v(" "), we.showSourceField ? lr("zm-form-item", {
                attrs: {
                    label: we.$t("cci.engagement.name.currentSession.source"),
                    tabindex: "-1"
                }
            }, [we.taskSourceIcon ? lr("img", {
                staticClass: "source-icon",
                attrs: {
                    src: we.taskSourceIcon
                }
            }) : we._e(), we._v(" "), lr("div", {
                staticClass: "zm_ellipsis source-name",
                attrs: {
                    title: we.taskSource
                }
            }, [we._v(`
                ` + we._s(we.taskSource) + `
              `)])]) : we._e(), we._v(" "), we.needShowQueue ? lr("zm-form-item", {
                attrs: {
                    label: we.$t("cci.engagement.name.currentSession.currentQueue"),
                    tabindex: "-1"
                }
            }, [lr("div", {
                staticClass: "zm_ellipsis",
                attrs: {
                    title: we.taskQueue
                }
            }, [we._v(`
                ` + we._s(we.taskQueue) + `
              `)])]) : we._e(), we._v(" "), lr("zm-form-item", {
                attrs: {
                    label: we.$t("cci.engagement.name.currentSession.assignedAgent"),
                    tabindex: "-1"
                }
            }, [lr("div", {
                staticClass: "zm_ellipsis",
                attrs: {
                    title: we.taskAgent
                }
            }, [we._v(`
                ` + we._s(we.taskAgent) + `
              `)])]), we._v(" "), we.isFromHistoryData ? lr("zm-form-item", {
                attrs: {
                    label: we.$t("cci.engagement.name.currentSession.disposition"),
                    tabindex: "-1"
                }
            }, [lr("div", {
                staticClass: "zm_ellipsis",
                attrs: {
                    title: we.taskDisposition
                }
            }, [we._v(`
                ` + we._s(we.taskDisposition) + `
              `)])]) : we._e(), we._v(" "), we.isWrapupStatus ? we._e() : we._t("form-append")], 2), we._v(" "), lr("zm-collapse", {
                staticClass: "collapse-wrap",
                model: {
                    value: we.activeNames,
                    callback: function(Lr) {
                        we.activeNames = Lr
                    },
                    expression: "activeNames"
                }
            }, [we.isShowSystemGlobalVariable ? lr("zm-collapse-item", {
                attrs: {
                    title: we.$t("cci.engagement.systemVariables", {
                        count: we.systemGlobalVariables.length
                    }),
                    name: "2"
                }
            }, [lr("zm-form", {
                attrs: {
                    id: "system-tabindex-wrap",
                    "label-position": "left",
                    "label-width": "143px",
                    "hide-required-asterisk": !0,
                    tabindex: "0",
                    "aria-label": we.$t("cci.engagement.systemVariables", {
                        count: we.systemGlobalVariables.length
                    }),
                    role: "group"
                },
                nativeOn: {
                    keydown: function(Lr) {
                        return function(Ur) {
                            return we.handleItemKeyDown(Ur, "system-tabindex-wrap", "systemActiveTabindex")
                        }
                            .apply(null, arguments)
                    },
                    focus: function(Lr) {
                        return we.resetFocusIndex(we.systemGlobalVariables.length === 1, "systemActiveTabindex")
                    }
                }
            }, [lr("variables-list", {
                attrs: {
                    "variables-list": we.systemGlobalVariables,
                    "is-from-profile": !1
                }
            })], 1)], 1) : we._e(), we._v(" "), we.isShowCustomGlobalVariable ? lr("zm-collapse-item", {
                attrs: {
                    title: we.$t("cci.engagement.customVariables", {
                        count: we.customGlobalVariables.length
                    }),
                    name: "3"
                }
            }, [lr("zm-form", {
                attrs: {
                    id: "custom-tabindex-wrap",
                    "label-position": "left",
                    "label-width": "143px",
                    "hide-required-asterisk": !0,
                    tabindex: "0",
                    "aria-label": we.$t("cci.engagement.customVariables", {
                        count: we.customGlobalVariables.length
                    }),
                    role: "group"
                },
                nativeOn: {
                    keydown: function(Lr) {
                        return function(Ur) {
                            return we.handleItemKeyDown(Ur, "custom-tabindex-wrap", "customActiveTabindex")
                        }
                            .apply(null, arguments)
                    },
                    focus: function(Lr) {
                        return we.resetFocusIndex(we.customGlobalVariables.length === 1, "customActiveTabindex")
                    }
                }
            }, [lr("variables-list", {
                attrs: {
                    "variables-list": we.customGlobalVariables,
                    "is-from-profile": !1
                }
            })], 1)], 1) : we._e()], 1)], 1)]), we._v(" "), we.showSummary ? lr("conversation-summary", {
                attrs: {
                    loading: we.summary.loading,
                    time: we._f("toLocaleDate")(we.summary.generatedAt, we.getFormatStr(!1, " "), we.tz),
                    "short-summary": we.summary.shortSummary,
                    "long-summary": we.summary.longSummary
                },
                on: {
                    jump: we.jumpByHighlight
                }
            }) : we._e()], 1), we._v(" "), we.isWrapupStatus ? we._e() : lr("CustomTab", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: (we.showNotesTab || we.canShowFollowUp) && we.followUpLoaded && we.notesLoaded,
                    expression: `
        (showNotesTab || canShowFollowUp) && followUpLoaded && notesLoaded
      `
                }],
                staticStyle: {
                    "margin-top": "10px"
                },
                model: {
                    value: we.customTabValue,
                    callback: function(Lr) {
                        we.customTabValue = Lr
                    },
                    expression: "customTabValue"
                }
            }, [we.showNotesTab ? lr("zm-tab-pane", {
                attrs: {
                    label: we.$t("cci.profile.tabs.history.details.notes"),
                    name: "notes",
                    "aria-label": we.$t("cci.profile.tabs.history.details.notes")
                }
            }, [we.showAddNotes ? lr("div", {
                staticClass: "session__addnote"
            }, [lr("div", {
                staticClass: "session__addnote-title",
                attrs: {
                    role: "heading",
                    "aria-level": "3"
                }
            }, [we._v(`
            ` + we._s(we.$t("cci.engagement.name.currentSession.addNote")) + `
          `)]), we._v(" "), lr("div", {
                ref: "resizableRef",
                staticClass: "session__addnote-input",
                class: {
                    "session__addnote-input--loading": (ce = we.smartNoteGenerating) === null || ce === void 0 || (ce = ce[we.currentTaskId]) === null || ce === void 0 ? void 0 : ce.loading,
                    "session__addnote-input--generated": we.showGeneratedClass
                },
                style: {
                    height: "".concat(we.noteAreaHeight, "px")
                }
            }, [lr("RichInput", {
                attrs: {
                    template: we.currentSmartNoteTemplate,
                    "disable-template": we.showSmartNoteChangeBtns,
                    placeholder: we.noteInputPlaceholder,
                    "input-label": we.$t("cci.engagement.name.currentSession.addNote"),
                    "max-length": 2e3,
                    readonly: ((gt = we.smartNoteGenerating) === null || gt === void 0 || (gt = gt[we.currentTaskId]) === null || gt === void 0 ? void 0 : gt.loading) || we.createNoteLoading
                },
                on: {
                    "user-input": we.handleNoteUserInput
                },
                model: {
                    value: we.currentNotesInput,
                    callback: function(Lr) {
                        we.currentNotesInput = Lr
                    },
                    expression: "currentNotesInput"
                }
            }, [lr("SmartNoteStack", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: ((Ft = we.smartNoteGenerating) === null || Ft === void 0 || (Ft = Ft[we.currentTaskId]) === null || Ft === void 0 ? void 0 : Ft.notes) && ((Kt = we.smartNoteGenerating) === null || Kt === void 0 || (Kt = Kt[we.currentTaskId]) === null || Kt === void 0 ? void 0 : Kt.notes.length) > 1,
                    expression: `
                  smartNoteGenerating?.[currentTaskId]?.notes &&
                  smartNoteGenerating?.[currentTaskId]?.notes.length > 1
                `
                }],
                attrs: {
                    slot: "middle",
                    list: (St = we.smartNoteGenerating) === null || St === void 0 || (St = St[we.currentTaskId]) === null || St === void 0 ? void 0 : St.notes,
                    disabled: ((Xt = we.smartNoteGenerating) === null || Xt === void 0 || (Xt = Xt[we.currentTaskId]) === null || Xt === void 0 ? void 0 : Xt.loading) || we.createNoteLoading
                },
                slot: "middle",
                model: {
                    value: we.smartNoteStackChooseIndex,
                    callback: function(Lr) {
                        we.smartNoteStackChooseIndex = Lr
                    },
                    expression: "smartNoteStackChooseIndex"
                }
            })], 1), we._v(" "), lr("div", {
                staticClass: "session__addnote-input-resize",
                on: {
                    mousedown: we.startDragging
                }
            }), we._v(" "), lr("div", {
                staticClass: "session__addnote-input-resize-icon",
                on: {
                    mousedown: we.startDragging
                }
            })], 1), we._v(" "), lr("div", {
                staticClass: "session__addnote-operate"
            }, [lr("GenerateSmartNoteConfigBtn", {
                attrs: {
                    show: we.showSmartNoteBtn,
                    "show-change-btns": we.showSmartNoteChangeBtns,
                    loading: (Rn = we.smartNoteGenerating) === null || Rn === void 0 || (Rn = Rn[we.currentTaskId]) === null || Rn === void 0 ? void 0 : Rn.loading,
                    disabled: ((kn = we.smartNoteGenerating) === null || kn === void 0 || (kn = kn[we.currentTaskId]) === null || kn === void 0 ? void 0 : kn.loading) || we.createNoteLoading || we.disableGenerateSmartNote
                },
                on: {
                    generateSmartNote: we.handleGenerateSmartNote
                }
            }), we._v(" "), lr("div", {
                staticClass: "common-btn"
            }, [lr("zm-button", {
                attrs: {
                    plain: "",
                    disabled: we.createNoteLoading || !we.currentNotesInput || !P()(pr = we.currentNotesInput).call(pr),
                    tabindex: "0"
                },
                on: {
                    click: we.handleAddNoteCancel
                }
            }, [we._v(`
                ` + we._s(we.$t("cci.engagement.name.currentSession.cancel")) + `
              `)]), we._v(" "), lr("zm-button", {
                attrs: {
                    type: "primary",
                    disabled: !we.currentNotesInput || !P()(Or = we.currentNotesInput).call(Or),
                    loading: we.createNoteLoading,
                    tabindex: "0"
                },
                on: {
                    click: we.createNote
                }
            }, [we._v(`
                ` + we._s(we.$t("cci.engagement.name.currentSession.publish")) + `
              `)])], 1)], 1), we._v(" "), lr("div", {
                staticClass: "session__smartnote-alert-hidden",
                attrs: {
                    role: "alert"
                }
            }, [we._v(`
            ` + we._s(we.alertText) + `
          `)])]) : we._e(), we._v(" "), we.isWrapupStatus ? we._e() : lr("NotesHistory", {
                attrs: {
                    "notes-list": we.notesList,
                    "is-loading": we.isLoading,
                    "cache-notes": we.cacheNotes
                },
                on: {
                    handleEditNotes: we.handleEditNotes,
                    handleCancelEditNotes: we.handleCancelEditNotes,
                    editNotes: we.editNotes
                }
            })], 1) : we._e(), we._v(" "), lr("zm-tab-pane", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: we.canShowFollowUp,
                    expression: "canShowFollowUp"
                }],
                attrs: {
                    label: we.$t("cci.engagement.follow.up.tab.title"),
                    name: "followUp",
                    "aria-label": we.$t("cci.engagement.follow.up.tab.title")
                }
            }, [lr("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: we.canShowFollowUp,
                    expression: "canShowFollowUp"
                }],
                staticClass: "session__follow_up_tab",
                attrs: {
                    slot: "label"
                },
                slot: "label"
            }, [lr("div", {
                staticClass: "session__follow_up_tab_icon"
            }, [lr(Y.A)], 1), we._v(" "), lr("div", {
                staticClass: "session__follow_up_tab_title",
                attrs: {
                    title: we.$t("cci.engagement.follow.up.tab.title")
                }
            }, [we._v(`
            ` + we._s(we.$t("cci.engagement.follow.up.tab.title")) + `
          `)])]), we._v(" "), lr("follow-up", {
                on: {
                    "change-can-show": we.changeCanShowFollowUp,
                    loaded: we.handleFollowUpLoaded
                }
            })], 1)], 1), we._v(" "), we.isWrapupStatus ? lr("NotesHistory", {
                attrs: {
                    "notes-list": we.notesList,
                    "is-loading": we.isLoading,
                    "cache-notes": we.cacheNotes
                },
                on: {
                    handleEditNotes: we.handleEditNotes,
                    handleCancelEditNotes: we.handleCancelEditNotes,
                    editNotes: we.editNotes
                }
            }) : we._e(), we._v(" "), lr("zpns-refresh-global-variables", {
                on: {
                    "zpns:need_refresh_global_variables": function() {
                        return we.getVariablesOnEngagement(!1)
                    }
                }
            })], 1)], 1)
        }
            , Q = []
            , O = a(83537)
            , F = a.n(O)
            , D = a(61849)
            , z = a.n(D)
            , G = a(83030)
            , V = a.n(G)
            , K = a(65888)
            , te = a.n(K)
            , ee = a(34187)
            , pe = a.n(ee)
            , ne = a(44987)
            , X = a.n(ne)
            , x = a(73007)
            , H = a.n(x)
            , q = a(23716)
            , _e = a.n(q)
            , ie = a(2208)
            , ze = a.n(ie)
            , Oe = a(39084)
            , Cn = a.n(Oe)
            , at = a(84653)
            , Sn = a.n(at)
            , Ce = a(59814)
            , wn = a.n(Ce)
            , Ae = a(89099)
            , nr = a.n(Ae)
            , mt = a(34622)
            , jn = a.n(mt)
            , ve = a(27785)
            , or = a.n(ve)
            , pt = a(8233)
            , je = a.n(pt)
            , Ke = a(92336)
            , it = a.n(Ke)
            , Ne = a(5339)
            , Gt = a.n(Ne)
            , en = a(65770)
            , rn = a.n(en)
            , Tt = a(69761)
            , vr = a.n(Tt)
            , rr = a(69279)
            , kr = a.n(rr)
            , Re = a(81352)
            , Et = a.n(Re)
            , An = a(74732)
            , Yt = a.n(An)
            , gn = a(14950)
            , Qe = a.n(gn)
            , ar = a(27425)
            , zt = a.n(ar)
            , Zt = a(53584)
            , Lt = a.n(Zt)
            , gr = a(39864)
            , Mn = a.n(gr)
            , U = a(74061)
            , Mt = a(53578)
            , Kn = a(76856)
            , In = a(83266)
            , tn = a(34224)
            , Ot = a(76709)
            , Pt = a(56405)
            , $n = a(67918)
            , dt = a(5866)
            , Xe = a.n(dt)
            , ht = function() {
            var R = this
                , ce = R._self._c;
            return ce("zm-popover", R._b({
                staticClass: "copy-text"
            }, "zm-popover", R.popoverProps, !1), [ce("div", {
                staticClass: "copy-text__btn",
                attrs: {
                    role: "button",
                    tabindex: "0"
                },
                on: {
                    click: R.copy,
                    keydown: [function(gt) {
                        var Ft;
                        return !Qe()(Ft = gt.type).call(Ft, "key") && R._k(gt.keyCode, "enter", 13, gt.key, "Enter") ? null : R.copy.apply(null, arguments)
                    }
                        , function(gt) {
                            var Ft;
                            return !Qe()(Ft = gt.type).call(Ft, "key") && R._k(gt.keyCode, "space", 32, gt.key, [" ", "Spacebar"]) ? null : R.copy.apply(null, arguments)
                        }
                    ]
                }
            }, [R._v(`
    ` + R._s(R.copyBtnText) + `
  `)]), R._v(" "), ce("zm-button", {
                ref: "button",
                staticClass: "copy-text__text",
                attrs: {
                    slot: "reference",
                    "aria-label": R.btnAriaLabel,
                    type: "link"
                },
                on: {
                    click: function(Ft) {
                        Ft.stopPropagation()
                    }
                },
                slot: "reference"
            }, [R._t("default")], 2)], 1)
        }
            , yn = []
            , dn = a(29500);
        function Gn(Ve) {
            "@babel/helpers - typeof";
            return Gn = typeof V() == "function" && typeof Gt() == "symbol" ? function(R) {
                    return typeof R
                }
                : function(R) {
                    return R && typeof V() == "function" && R.constructor === V() && R !== V().prototype ? "symbol" : typeof R
                }
                ,
                Gn(Ve)
        }
        function sr() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            sr = function() {
                return R
            }
            ;
            var Ve, R = {}, ce = Object.prototype, gt = ce.hasOwnProperty, Ft = z() || function(kt, et, ut) {
                kt[et] = ut.value
            }
                , Kt = typeof V() == "function" ? V() : {}, St = Kt.iterator || "@@iterator", Xt = Kt.asyncIterator || "@@asyncIterator", Rn = Kt.toStringTag || "@@toStringTag";
            function kn(kt, et, ut) {
                return z()(kt, et, {
                    value: ut,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    kt[et]
            }
            try {
                kn({}, "")
            } catch {
                kn = function(ut, Nn, qn) {
                    return ut[Nn] = qn
                }
            }
            function pr(kt, et, ut, Nn) {
                var qn = et && et.prototype instanceof Hr ? et : Hr
                    , zn = te()(qn.prototype)
                    , Vr = new aa(Nn || []);
                return Ft(zn, "_invoke", {
                    value: Gr(kt, ut, Vr)
                }),
                    zn
            }
            function Or(kt, et, ut) {
                try {
                    return {
                        type: "normal",
                        arg: kt.call(et, ut)
                    }
                } catch (Nn) {
                    return {
                        type: "throw",
                        arg: Nn
                    }
                }
            }
            R.wrap = pr;
            var we = "suspendedStart"
                , lr = "suspendedYield"
                , Tr = "executing"
                , Lr = "completed"
                , Ur = {};
            function Hr() {}
            function Yr() {}
            function mr() {}
            var Je = {};
            kn(Je, St, function() {
                return this
            });
            var qt = pe()
                , bn = qt && qt(qt(ra([])));
            bn && bn !== ce && gt.call(bn, St) && (Je = bn);
            var br = mr.prototype = Hr.prototype = te()(Je);
            function xr(kt) {
                var et;
                X()(et = ["next", "throw", "return"]).call(et, function(ut) {
                    kn(kt, ut, function(Nn) {
                        return this._invoke(ut, Nn)
                    })
                })
            }
            function ir(kt, et) {
                function ut(qn, zn, Vr, qr) {
                    var Jr = Or(kt[qn], kt, zn);
                    if (Jr.type !== "throw") {
                        var ca = Jr.arg
                            , sa = ca.value;
                        return sa && Gn(sa) == "object" && gt.call(sa, "__await") ? et.resolve(sa.__await).then(function(fa) {
                            ut("next", fa, Vr, qr)
                        }, function(fa) {
                            ut("throw", fa, Vr, qr)
                        }) : et.resolve(sa).then(function(fa) {
                            ca.value = fa,
                                Vr(ca)
                        }, function(fa) {
                            return ut("throw", fa, Vr, qr)
                        })
                    }
                    qr(Jr.arg)
                }
                var Nn;
                Ft(this, "_invoke", {
                    value: function(zn, Vr) {
                        function qr() {
                            return new et(function(Jr, ca) {
                                    ut(zn, Vr, Jr, ca)
                                }
                            )
                        }
                        return Nn = Nn ? Nn.then(qr, qr) : qr()
                    }
                })
            }
            function Gr(kt, et, ut) {
                var Nn = we;
                return function(qn, zn) {
                    if (Nn === Tr)
                        throw Error("Generator is already running");
                    if (Nn === Lr) {
                        if (qn === "throw")
                            throw zn;
                        return {
                            value: Ve,
                            done: !0
                        }
                    }
                    for (ut.method = qn,
                             ut.arg = zn; ; ) {
                        var Vr = ut.delegate;
                        if (Vr) {
                            var qr = Zr(Vr, ut);
                            if (qr) {
                                if (qr === Ur)
                                    continue;
                                return qr
                            }
                        }
                        if (ut.method === "next")
                            ut.sent = ut._sent = ut.arg;
                        else if (ut.method === "throw") {
                            if (Nn === we)
                                throw Nn = Lr,
                                    ut.arg;
                            ut.dispatchException(ut.arg)
                        } else
                            ut.method === "return" && ut.abrupt("return", ut.arg);
                        Nn = Tr;
                        var Jr = Or(kt, et, ut);
                        if (Jr.type === "normal") {
                            if (Nn = ut.done ? Lr : lr,
                            Jr.arg === Ur)
                                continue;
                            return {
                                value: Jr.arg,
                                done: ut.done
                            }
                        }
                        Jr.type === "throw" && (Nn = Lr,
                            ut.method = "throw",
                            ut.arg = Jr.arg)
                    }
                }
            }
            function Zr(kt, et) {
                var ut = et.method
                    , Nn = kt.iterator[ut];
                if (Nn === Ve)
                    return et.delegate = null,
                    ut === "throw" && kt.iterator.return && (et.method = "return",
                        et.arg = Ve,
                        Zr(kt, et),
                    et.method === "throw") || ut !== "return" && (et.method = "throw",
                        et.arg = new TypeError("The iterator does not provide a '" + ut + "' method")),
                        Ur;
                var qn = Or(Nn, kt.iterator, et.arg);
                if (qn.type === "throw")
                    return et.method = "throw",
                        et.arg = qn.arg,
                        et.delegate = null,
                        Ur;
                var zn = qn.arg;
                return zn ? zn.done ? (et[kt.resultName] = zn.value,
                    et.next = kt.nextLoc,
                et.method !== "return" && (et.method = "next",
                    et.arg = Ve),
                    et.delegate = null,
                    Ur) : zn : (et.method = "throw",
                    et.arg = new TypeError("iterator result is not an object"),
                    et.delegate = null,
                    Ur)
            }
            function na(kt) {
                var et = {
                    tryLoc: kt[0]
                };
                1 in kt && (et.catchLoc = kt[1]),
                2 in kt && (et.finallyLoc = kt[2],
                    et.afterLoc = kt[3]),
                    this.tryEntries.push(et)
            }
            function Xr(kt) {
                var et = kt.completion || {};
                et.type = "normal",
                    delete et.arg,
                    kt.completion = et
            }
            function aa(kt) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    X()(kt).call(kt, na, this),
                    this.reset(!0)
            }
            function ra(kt) {
                if (kt || kt === "") {
                    var et = kt[St];
                    if (et)
                        return et.call(kt);
                    if (typeof kt.next == "function")
                        return kt;
                    if (!isNaN(kt.length)) {
                        var ut = -1
                            , Nn = function qn() {
                            for (; ++ut < kt.length; )
                                if (gt.call(kt, ut))
                                    return qn.value = kt[ut],
                                        qn.done = !1,
                                        qn;
                            return qn.value = Ve,
                                qn.done = !0,
                                qn
                        };
                        return Nn.next = Nn
                    }
                }
                throw new TypeError(Gn(kt) + " is not iterable")
            }
            return Yr.prototype = mr,
                Ft(br, "constructor", {
                    value: mr,
                    configurable: !0
                }),
                Ft(mr, "constructor", {
                    value: Yr,
                    configurable: !0
                }),
                Yr.displayName = kn(mr, Rn, "GeneratorFunction"),
                R.isGeneratorFunction = function(kt) {
                    var et = typeof kt == "function" && kt.constructor;
                    return !!et && (et === Yr || (et.displayName || et.name) === "GeneratorFunction")
                }
                ,
                R.mark = function(kt) {
                    return H() ? H()(kt, mr) : (kt.__proto__ = mr,
                        kn(kt, Rn, "GeneratorFunction")),
                        kt.prototype = te()(br),
                        kt
                }
                ,
                R.awrap = function(kt) {
                    return {
                        __await: kt
                    }
                }
                ,
                xr(ir.prototype),
                kn(ir.prototype, Xt, function() {
                    return this
                }),
                R.AsyncIterator = ir,
                R.async = function(kt, et, ut, Nn, qn) {
                    qn === void 0 && (qn = F());
                    var zn = new ir(pr(kt, et, ut, Nn),qn);
                    return R.isGeneratorFunction(et) ? zn : zn.next().then(function(Vr) {
                        return Vr.done ? Vr.value : zn.next()
                    })
                }
                ,
                xr(br),
                kn(br, Rn, "Generator"),
                kn(br, St, function() {
                    return this
                }),
                kn(br, "toString", function() {
                    return "[object Generator]"
                }),
                R.keys = function(kt) {
                    var et = Object(kt)
                        , ut = [];
                    for (var Nn in et)
                        ut.push(Nn);
                    return _e()(ut).call(ut),
                        function qn() {
                            for (; ut.length; ) {
                                var zn = ut.pop();
                                if (zn in et)
                                    return qn.value = zn,
                                        qn.done = !1,
                                        qn
                            }
                            return qn.done = !0,
                                qn
                        }
                }
                ,
                R.values = ra,
                aa.prototype = {
                    constructor: aa,
                    reset: function(et) {
                        var ut;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = Ve,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = Ve,
                            X()(ut = this.tryEntries).call(ut, Xr),
                            !et)
                            for (var Nn in this)
                                Nn.charAt(0) === "t" && gt.call(this, Nn) && !isNaN(+ze()(Nn).call(Nn, 1)) && (this[Nn] = Ve)
                    },
                    stop: function() {
                        this.done = !0;
                        var et = this.tryEntries[0].completion;
                        if (et.type === "throw")
                            throw et.arg;
                        return this.rval
                    },
                    dispatchException: function(et) {
                        if (this.done)
                            throw et;
                        var ut = this;
                        function Nn(ca, sa) {
                            return Vr.type = "throw",
                                Vr.arg = et,
                                ut.next = ca,
                            sa && (ut.method = "next",
                                ut.arg = Ve),
                                !!sa
                        }
                        for (var qn = this.tryEntries.length - 1; qn >= 0; --qn) {
                            var zn = this.tryEntries[qn]
                                , Vr = zn.completion;
                            if (zn.tryLoc === "root")
                                return Nn("end");
                            if (zn.tryLoc <= this.prev) {
                                var qr = gt.call(zn, "catchLoc")
                                    , Jr = gt.call(zn, "finallyLoc");
                                if (qr && Jr) {
                                    if (this.prev < zn.catchLoc)
                                        return Nn(zn.catchLoc, !0);
                                    if (this.prev < zn.finallyLoc)
                                        return Nn(zn.finallyLoc)
                                } else if (qr) {
                                    if (this.prev < zn.catchLoc)
                                        return Nn(zn.catchLoc, !0)
                                } else {
                                    if (!Jr)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < zn.finallyLoc)
                                        return Nn(zn.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(et, ut) {
                        for (var Nn = this.tryEntries.length - 1; Nn >= 0; --Nn) {
                            var qn = this.tryEntries[Nn];
                            if (qn.tryLoc <= this.prev && gt.call(qn, "finallyLoc") && this.prev < qn.finallyLoc) {
                                var zn = qn;
                                break
                            }
                        }
                        zn && (et === "break" || et === "continue") && zn.tryLoc <= ut && ut <= zn.finallyLoc && (zn = null);
                        var Vr = zn ? zn.completion : {};
                        return Vr.type = et,
                            Vr.arg = ut,
                            zn ? (this.method = "next",
                                this.next = zn.finallyLoc,
                                Ur) : this.complete(Vr)
                    },
                    complete: function(et, ut) {
                        if (et.type === "throw")
                            throw et.arg;
                        return et.type === "break" || et.type === "continue" ? this.next = et.arg : et.type === "return" ? (this.rval = this.arg = et.arg,
                            this.method = "return",
                            this.next = "end") : et.type === "normal" && ut && (this.next = ut),
                            Ur
                    },
                    finish: function(et) {
                        for (var ut = this.tryEntries.length - 1; ut >= 0; --ut) {
                            var Nn = this.tryEntries[ut];
                            if (Nn.finallyLoc === et)
                                return this.complete(Nn.completion, Nn.afterLoc),
                                    Xr(Nn),
                                    Ur
                        }
                    },
                    catch: function(et) {
                        for (var ut = this.tryEntries.length - 1; ut >= 0; --ut) {
                            var Nn = this.tryEntries[ut];
                            if (Nn.tryLoc === et) {
                                var qn = Nn.completion;
                                if (qn.type === "throw") {
                                    var zn = qn.arg;
                                    Xr(Nn)
                                }
                                return zn
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(et, ut, Nn) {
                        return this.delegate = {
                            iterator: ra(et),
                            resultName: ut,
                            nextLoc: Nn
                        },
                        this.method === "next" && (this.arg = Ve),
                            Ur
                    }
                },
                R
        }
        function Zn(Ve, R, ce, gt, Ft, Kt, St) {
            try {
                var Xt = Ve[Kt](St)
                    , Rn = Xt.value
            } catch (kn) {
                return void ce(kn)
            }
            Xt.done ? R(Rn) : F().resolve(Rn).then(gt, Ft)
        }
        function _r(Ve) {
            return function() {
                var R = this
                    , ce = arguments;
                return new (F())(function(gt, Ft) {
                        var Kt = Ve.apply(R, ce);
                        function St(Rn) {
                            Zn(Kt, gt, Ft, St, Xt, "next", Rn)
                        }
                        function Xt(Rn) {
                            Zn(Kt, gt, Ft, St, Xt, "throw", Rn)
                        }
                        St(void 0)
                    }
                )
            }
        }
        const Ze = {
            name: "CopyText",
            mixins: [dn.A],
            props: {
                text: {
                    type: String,
                    default: "",
                    required: !0
                },
                copyBtnText: {
                    type: String,
                    default: ""
                },
                message: {
                    type: String,
                    default: "copied"
                },
                popoverProps: {
                    type: Object,
                    default: function() {
                        return {
                            placement: "top",
                            width: 173,
                            trigger: "click"
                        }
                    }
                },
                btnAriaLabel: {
                    type: String,
                    default: ""
                }
            },
            data: function() {
                return {}
            },
            methods: {
                copy: function() {
                    var R = this;
                    return _r(sr().mark(function ce() {
                        return sr().wrap(function(Ft) {
                            for (; ; )
                                switch (Ft.prev = Ft.next) {
                                    case 0:
                                        return Ft.next = 2,
                                            navigator.clipboard.writeText(R.text);
                                    case 2:
                                        document.body.click(),
                                            R.nativeNotify(R.message);
                                    case 4:
                                    case "end":
                                        return Ft.stop()
                                }
                        }, ce)
                    }))()
                }
            },
            mounted: function() {
                var R = this;
                this.$nextTick(function() {
                    var ce;
                    (ce = R.$refs.button) === null || ce === void 0 || (ce = ce.$el) === null || ce === void 0 || ce.setAttribute("aria-describedby", "")
                })
            }
        };
        var Vn = a(50855)
            , Se = (0,
            Vn.A)(Ze, ht, yn, !1, null, "77244ff9", null);
        const Ue = Se.exports;
        var yt = a(90981)
            , Qt = function() {
            var R = this
                , ce = R._self._c;
            return ce("div", {
                staticClass: "summary-section"
            }, [ce("zm-collapse", {
                attrs: {
                    accordion: ""
                },
                model: {
                    value: R.active,
                    callback: function(Ft) {
                        R.active = Ft
                    },
                    expression: "active"
                }
            }, [ce("zm-collapse-item", {
                attrs: {
                    name: "1"
                }
            }, [ce("template", {
                slot: "title"
            }, [ce("div", {
                staticClass: "summary-section-title"
            }, [ce("advance-icon", {
                staticClass: "pre-icon"
            }), R._v(`
          ` + R._s(R.$t("cci.engagement.conversation.summary")) + `
        `)], 1)]), R._v(" "), R.loading ? ce("div", {
                staticClass: "summary-section-loading"
            }, [ce("span", {
                staticClass: "summary-section-loading-icon"
            }), R._v(" "), ce("span", [R._v(R._s(R.$t("cci.engagement.conversation.summary.wait")))])]) : ce("div", {
                staticClass: "summary-section-content"
            }, [ce("span", {
                staticClass: "summary-time"
            }, [R._v(R._s(R.$t("cci.engagement.conversation.summary.timer", {
                time: R.time
            })) + `
        `)]), R._v(" "), R.displayHighlight ? ce("div", {
                staticClass: "summary-text"
            }, [R._l(R.summary, function(gt, Ft) {
                return [gt.highlighted ? ce("span", {
                    key: gt.messageId + gt.text + Ft,
                    staticClass: "text highlighted"
                }, [R._v(R._s(gt.text) + `
            `)]) : ce("span", {
                    key: gt.messageId + gt.text + Ft,
                    staticClass: "text"
                }, [R._v(R._s(gt.text) + `
            `)])]
            })], 2) : ce("div", {
                staticClass: "summary-text"
            }, [R._v(`
          ` + R._s(R.text) + `
        `)]), R._v(" "), ce("div", {
                staticClass: "summary-section-content-footer"
            }, [ce("zm-button", {
                staticClass: "summary-btn",
                attrs: {
                    plain: "",
                    type: "link",
                    ghost: ""
                },
                on: {
                    click: R.handleChangeSummary
                }
            }, [R._v(`
            ` + R._s(R.showLongSummary ? R.$t("cci.engagement.short.summary") : R.$t("cci.engagement.long.summary")) + `
          `)])], 1)])], 2)], 1)], 1)
        }
            , Hn = []
            , cr = a(6372)
            , Rr = a(60105)
            , Pr = a.n(Rr);
        function rt(Ve) {
            "@babel/helpers - typeof";
            return rt = typeof V() == "function" && typeof Gt() == "symbol" ? function(R) {
                    return typeof R
                }
                : function(R) {
                    return R && typeof V() == "function" && R.constructor === V() && R !== V().prototype ? "symbol" : typeof R
                }
                ,
                rt(Ve)
        }
        function ae() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            ae = function() {
                return R
            }
            ;
            var Ve, R = {}, ce = Object.prototype, gt = ce.hasOwnProperty, Ft = z() || function(kt, et, ut) {
                kt[et] = ut.value
            }
                , Kt = typeof V() == "function" ? V() : {}, St = Kt.iterator || "@@iterator", Xt = Kt.asyncIterator || "@@asyncIterator", Rn = Kt.toStringTag || "@@toStringTag";
            function kn(kt, et, ut) {
                return z()(kt, et, {
                    value: ut,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    kt[et]
            }
            try {
                kn({}, "")
            } catch {
                kn = function(ut, Nn, qn) {
                    return ut[Nn] = qn
                }
            }
            function pr(kt, et, ut, Nn) {
                var qn = et && et.prototype instanceof Hr ? et : Hr
                    , zn = te()(qn.prototype)
                    , Vr = new aa(Nn || []);
                return Ft(zn, "_invoke", {
                    value: Gr(kt, ut, Vr)
                }),
                    zn
            }
            function Or(kt, et, ut) {
                try {
                    return {
                        type: "normal",
                        arg: kt.call(et, ut)
                    }
                } catch (Nn) {
                    return {
                        type: "throw",
                        arg: Nn
                    }
                }
            }
            R.wrap = pr;
            var we = "suspendedStart"
                , lr = "suspendedYield"
                , Tr = "executing"
                , Lr = "completed"
                , Ur = {};
            function Hr() {}
            function Yr() {}
            function mr() {}
            var Je = {};
            kn(Je, St, function() {
                return this
            });
            var qt = pe()
                , bn = qt && qt(qt(ra([])));
            bn && bn !== ce && gt.call(bn, St) && (Je = bn);
            var br = mr.prototype = Hr.prototype = te()(Je);
            function xr(kt) {
                var et;
                X()(et = ["next", "throw", "return"]).call(et, function(ut) {
                    kn(kt, ut, function(Nn) {
                        return this._invoke(ut, Nn)
                    })
                })
            }
            function ir(kt, et) {
                function ut(qn, zn, Vr, qr) {
                    var Jr = Or(kt[qn], kt, zn);
                    if (Jr.type !== "throw") {
                        var ca = Jr.arg
                            , sa = ca.value;
                        return sa && rt(sa) == "object" && gt.call(sa, "__await") ? et.resolve(sa.__await).then(function(fa) {
                            ut("next", fa, Vr, qr)
                        }, function(fa) {
                            ut("throw", fa, Vr, qr)
                        }) : et.resolve(sa).then(function(fa) {
                            ca.value = fa,
                                Vr(ca)
                        }, function(fa) {
                            return ut("throw", fa, Vr, qr)
                        })
                    }
                    qr(Jr.arg)
                }
                var Nn;
                Ft(this, "_invoke", {
                    value: function(zn, Vr) {
                        function qr() {
                            return new et(function(Jr, ca) {
                                    ut(zn, Vr, Jr, ca)
                                }
                            )
                        }
                        return Nn = Nn ? Nn.then(qr, qr) : qr()
                    }
                })
            }
            function Gr(kt, et, ut) {
                var Nn = we;
                return function(qn, zn) {
                    if (Nn === Tr)
                        throw Error("Generator is already running");
                    if (Nn === Lr) {
                        if (qn === "throw")
                            throw zn;
                        return {
                            value: Ve,
                            done: !0
                        }
                    }
                    for (ut.method = qn,
                             ut.arg = zn; ; ) {
                        var Vr = ut.delegate;
                        if (Vr) {
                            var qr = Zr(Vr, ut);
                            if (qr) {
                                if (qr === Ur)
                                    continue;
                                return qr
                            }
                        }
                        if (ut.method === "next")
                            ut.sent = ut._sent = ut.arg;
                        else if (ut.method === "throw") {
                            if (Nn === we)
                                throw Nn = Lr,
                                    ut.arg;
                            ut.dispatchException(ut.arg)
                        } else
                            ut.method === "return" && ut.abrupt("return", ut.arg);
                        Nn = Tr;
                        var Jr = Or(kt, et, ut);
                        if (Jr.type === "normal") {
                            if (Nn = ut.done ? Lr : lr,
                            Jr.arg === Ur)
                                continue;
                            return {
                                value: Jr.arg,
                                done: ut.done
                            }
                        }
                        Jr.type === "throw" && (Nn = Lr,
                            ut.method = "throw",
                            ut.arg = Jr.arg)
                    }
                }
            }
            function Zr(kt, et) {
                var ut = et.method
                    , Nn = kt.iterator[ut];
                if (Nn === Ve)
                    return et.delegate = null,
                    ut === "throw" && kt.iterator.return && (et.method = "return",
                        et.arg = Ve,
                        Zr(kt, et),
                    et.method === "throw") || ut !== "return" && (et.method = "throw",
                        et.arg = new TypeError("The iterator does not provide a '" + ut + "' method")),
                        Ur;
                var qn = Or(Nn, kt.iterator, et.arg);
                if (qn.type === "throw")
                    return et.method = "throw",
                        et.arg = qn.arg,
                        et.delegate = null,
                        Ur;
                var zn = qn.arg;
                return zn ? zn.done ? (et[kt.resultName] = zn.value,
                    et.next = kt.nextLoc,
                et.method !== "return" && (et.method = "next",
                    et.arg = Ve),
                    et.delegate = null,
                    Ur) : zn : (et.method = "throw",
                    et.arg = new TypeError("iterator result is not an object"),
                    et.delegate = null,
                    Ur)
            }
            function na(kt) {
                var et = {
                    tryLoc: kt[0]
                };
                1 in kt && (et.catchLoc = kt[1]),
                2 in kt && (et.finallyLoc = kt[2],
                    et.afterLoc = kt[3]),
                    this.tryEntries.push(et)
            }
            function Xr(kt) {
                var et = kt.completion || {};
                et.type = "normal",
                    delete et.arg,
                    kt.completion = et
            }
            function aa(kt) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    X()(kt).call(kt, na, this),
                    this.reset(!0)
            }
            function ra(kt) {
                if (kt || kt === "") {
                    var et = kt[St];
                    if (et)
                        return et.call(kt);
                    if (typeof kt.next == "function")
                        return kt;
                    if (!isNaN(kt.length)) {
                        var ut = -1
                            , Nn = function qn() {
                            for (; ++ut < kt.length; )
                                if (gt.call(kt, ut))
                                    return qn.value = kt[ut],
                                        qn.done = !1,
                                        qn;
                            return qn.value = Ve,
                                qn.done = !0,
                                qn
                        };
                        return Nn.next = Nn
                    }
                }
                throw new TypeError(rt(kt) + " is not iterable")
            }
            return Yr.prototype = mr,
                Ft(br, "constructor", {
                    value: mr,
                    configurable: !0
                }),
                Ft(mr, "constructor", {
                    value: Yr,
                    configurable: !0
                }),
                Yr.displayName = kn(mr, Rn, "GeneratorFunction"),
                R.isGeneratorFunction = function(kt) {
                    var et = typeof kt == "function" && kt.constructor;
                    return !!et && (et === Yr || (et.displayName || et.name) === "GeneratorFunction")
                }
                ,
                R.mark = function(kt) {
                    return H() ? H()(kt, mr) : (kt.__proto__ = mr,
                        kn(kt, Rn, "GeneratorFunction")),
                        kt.prototype = te()(br),
                        kt
                }
                ,
                R.awrap = function(kt) {
                    return {
                        __await: kt
                    }
                }
                ,
                xr(ir.prototype),
                kn(ir.prototype, Xt, function() {
                    return this
                }),
                R.AsyncIterator = ir,
                R.async = function(kt, et, ut, Nn, qn) {
                    qn === void 0 && (qn = F());
                    var zn = new ir(pr(kt, et, ut, Nn),qn);
                    return R.isGeneratorFunction(et) ? zn : zn.next().then(function(Vr) {
                        return Vr.done ? Vr.value : zn.next()
                    })
                }
                ,
                xr(br),
                kn(br, Rn, "Generator"),
                kn(br, St, function() {
                    return this
                }),
                kn(br, "toString", function() {
                    return "[object Generator]"
                }),
                R.keys = function(kt) {
                    var et = Object(kt)
                        , ut = [];
                    for (var Nn in et)
                        ut.push(Nn);
                    return _e()(ut).call(ut),
                        function qn() {
                            for (; ut.length; ) {
                                var zn = ut.pop();
                                if (zn in et)
                                    return qn.value = zn,
                                        qn.done = !1,
                                        qn
                            }
                            return qn.done = !0,
                                qn
                        }
                }
                ,
                R.values = ra,
                aa.prototype = {
                    constructor: aa,
                    reset: function(et) {
                        var ut;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = Ve,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = Ve,
                            X()(ut = this.tryEntries).call(ut, Xr),
                            !et)
                            for (var Nn in this)
                                Nn.charAt(0) === "t" && gt.call(this, Nn) && !isNaN(+ze()(Nn).call(Nn, 1)) && (this[Nn] = Ve)
                    },
                    stop: function() {
                        this.done = !0;
                        var et = this.tryEntries[0].completion;
                        if (et.type === "throw")
                            throw et.arg;
                        return this.rval
                    },
                    dispatchException: function(et) {
                        if (this.done)
                            throw et;
                        var ut = this;
                        function Nn(ca, sa) {
                            return Vr.type = "throw",
                                Vr.arg = et,
                                ut.next = ca,
                            sa && (ut.method = "next",
                                ut.arg = Ve),
                                !!sa
                        }
                        for (var qn = this.tryEntries.length - 1; qn >= 0; --qn) {
                            var zn = this.tryEntries[qn]
                                , Vr = zn.completion;
                            if (zn.tryLoc === "root")
                                return Nn("end");
                            if (zn.tryLoc <= this.prev) {
                                var qr = gt.call(zn, "catchLoc")
                                    , Jr = gt.call(zn, "finallyLoc");
                                if (qr && Jr) {
                                    if (this.prev < zn.catchLoc)
                                        return Nn(zn.catchLoc, !0);
                                    if (this.prev < zn.finallyLoc)
                                        return Nn(zn.finallyLoc)
                                } else if (qr) {
                                    if (this.prev < zn.catchLoc)
                                        return Nn(zn.catchLoc, !0)
                                } else {
                                    if (!Jr)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < zn.finallyLoc)
                                        return Nn(zn.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(et, ut) {
                        for (var Nn = this.tryEntries.length - 1; Nn >= 0; --Nn) {
                            var qn = this.tryEntries[Nn];
                            if (qn.tryLoc <= this.prev && gt.call(qn, "finallyLoc") && this.prev < qn.finallyLoc) {
                                var zn = qn;
                                break
                            }
                        }
                        zn && (et === "break" || et === "continue") && zn.tryLoc <= ut && ut <= zn.finallyLoc && (zn = null);
                        var Vr = zn ? zn.completion : {};
                        return Vr.type = et,
                            Vr.arg = ut,
                            zn ? (this.method = "next",
                                this.next = zn.finallyLoc,
                                Ur) : this.complete(Vr)
                    },
                    complete: function(et, ut) {
                        if (et.type === "throw")
                            throw et.arg;
                        return et.type === "break" || et.type === "continue" ? this.next = et.arg : et.type === "return" ? (this.rval = this.arg = et.arg,
                            this.method = "return",
                            this.next = "end") : et.type === "normal" && ut && (this.next = ut),
                            Ur
                    },
                    finish: function(et) {
                        for (var ut = this.tryEntries.length - 1; ut >= 0; --ut) {
                            var Nn = this.tryEntries[ut];
                            if (Nn.finallyLoc === et)
                                return this.complete(Nn.completion, Nn.afterLoc),
                                    Xr(Nn),
                                    Ur
                        }
                    },
                    catch: function(et) {
                        for (var ut = this.tryEntries.length - 1; ut >= 0; --ut) {
                            var Nn = this.tryEntries[ut];
                            if (Nn.tryLoc === et) {
                                var qn = Nn.completion;
                                if (qn.type === "throw") {
                                    var zn = qn.arg;
                                    Xr(Nn)
                                }
                                return zn
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(et, ut, Nn) {
                        return this.delegate = {
                            iterator: ra(et),
                            resultName: ut,
                            nextLoc: Nn
                        },
                        this.method === "next" && (this.arg = Ve),
                            Ur
                    }
                },
                R
        }
        function de(Ve, R, ce, gt, Ft, Kt, St) {
            try {
                var Xt = Ve[Kt](St)
                    , Rn = Xt.value
            } catch (kn) {
                return void ce(kn)
            }
            Xt.done ? R(Rn) : F().resolve(Rn).then(gt, Ft)
        }
        function ye(Ve) {
            return function() {
                var R = this
                    , ce = arguments;
                return new (F())(function(gt, Ft) {
                        var Kt = Ve.apply(R, ce);
                        function St(Rn) {
                            de(Kt, gt, Ft, St, Xt, "next", Rn)
                        }
                        function Xt(Rn) {
                            de(Kt, gt, Ft, St, Xt, "throw", Rn)
                        }
                        St(void 0)
                    }
                )
            }
        }
        const Te = {
            name: "CciWebZoomClientConversationSummary",
            props: {
                shortSummary: {
                    type: Array,
                    default: function() {
                        return []
                    },
                    required: !0
                },
                longSummary: {
                    type: Array,
                    default: function() {
                        return []
                    },
                    required: !0
                },
                time: {
                    type: String,
                    default: ""
                },
                message: {
                    type: String,
                    default: function() {
                        return cr.i18n.t("cci.common.copied", {
                            name: cr.i18n.t("cci.engagement.conversation.summary")
                        })
                    }
                },
                loading: {
                    type: Boolean,
                    default: !0
                },
                displayHighlight: {
                    type: Boolean,
                    default: !0
                }
            },
            components: {
                AdvanceIcon: Pr()
            },
            mixins: [dn.A],
            data: function() {
                return {
                    showLongSummary: !1,
                    active: ["1"]
                }
            },
            computed: {
                summary: function() {
                    return this.showLongSummary ? this.longSummary : this.shortSummary
                },
                text: function() {
                    var R;
                    return Lt()(R = this.summary).call(R, function(ce) {
                        return ce.text
                    }).join("")
                }
            },
            methods: {
                copyText: function(R) {
                    var ce = arguments
                        , gt = this;
                    return ye(ae().mark(function Ft() {
                        var Kt;
                        return ae().wrap(function(Xt) {
                            for (; ; )
                                switch (Xt.prev = Xt.next) {
                                    case 0:
                                        return Kt = ce.length > 1 && ce[1] !== void 0 ? ce[1] : gt.message,
                                            Xt.next = 3,
                                            navigator.clipboard.writeText(R);
                                    case 3:
                                        document.body.click(),
                                            gt.nativeNotify(Kt);
                                    case 5:
                                    case "end":
                                        return Xt.stop()
                                }
                        }, Ft)
                    }))()
                },
                handleChangeSummary: function() {
                    this.showLongSummary = !this.showLongSummary
                },
                handleClickHighTag: function(R) {
                    this.$emit("jump", R)
                }
            }
        };
        var be = (0,
            Vn.A)(Te, Qt, Hn, !1, null, "15b28af2", null);
        const me = be.exports;
        var He = a(11862)
            , Ct = a(30824)
            , wt = a(83314);
        const Bt = In.activeQueueDispositionMixin;
        var En = a(72785)
            , Pe = a(20537)
            , W = a(14535)
            , Ee = a(35878)
            , nt = a(81385);
        function Ie(Ve) {
            "@babel/helpers - typeof";
            return Ie = typeof V() == "function" && typeof Gt() == "symbol" ? function(R) {
                    return typeof R
                }
                : function(R) {
                    return R && typeof V() == "function" && R.constructor === V() && R !== V().prototype ? "symbol" : typeof R
                }
                ,
                Ie(Ve)
        }
        var Be;
        function st(Ve, R) {
            return cn(Ve) || It(Ve, R) || _t(Ve, R) || jt()
        }
        function jt() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function _t(Ve, R) {
            if (Ve) {
                var ce;
                if (typeof Ve == "string")
                    return Ge(Ve, R);
                var gt = ze()(ce = {}.toString.call(Ve)).call(ce, 8, -1);
                return gt === "Object" && Ve.constructor && (gt = Ve.constructor.name),
                    gt === "Map" || gt === "Set" ? it()(Ve) : gt === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(gt) ? Ge(Ve, R) : void 0
            }
        }
        function Ge(Ve, R) {
            (R == null || R > Ve.length) && (R = Ve.length);
            for (var ce = 0, gt = Array(R); ce < R; ce++)
                gt[ce] = Ve[ce];
            return gt
        }
        function It(Ve, R) {
            var ce = Ve == null ? null : typeof V() < "u" && je()(Ve) || Ve["@@iterator"];
            if (ce != null) {
                var gt, Ft, Kt, St, Xt = [], Rn = !0, kn = !1;
                try {
                    if (Kt = (ce = ce.call(Ve)).next,
                    R === 0) {
                        if (Object(ce) !== ce)
                            return;
                        Rn = !1
                    } else
                        for (; !(Rn = (gt = Kt.call(ce)).done) && (Xt.push(gt.value),
                        Xt.length !== R); Rn = !0)
                            ;
                } catch (pr) {
                    kn = !0,
                        Ft = pr
                } finally {
                    try {
                        if (!Rn && ce.return != null && (St = ce.return(),
                        Object(St) !== St))
                            return
                    } finally {
                        if (kn)
                            throw Ft
                    }
                }
                return Xt
            }
        }
        function cn(Ve) {
            if (Mn()(Ve))
                return Ve
        }
        function ct(Ve) {
            throw new TypeError('"' + Ve + '" is read-only')
        }
        function De(Ve, R) {
            var ce = Et()(Ve);
            if (Sn()) {
                var gt = Sn()(Ve);
                R && (gt = wn()(gt).call(gt, function(Ft) {
                    return nr()(Ve, Ft).enumerable
                })),
                    ce.push.apply(ce, gt)
            }
            return ce
        }
        function bt(Ve) {
            for (var R = 1; R < arguments.length; R++) {
                var ce, gt, Ft = arguments[R] != null ? arguments[R] : {};
                R % 2 ? X()(ce = De(Object(Ft), !0)).call(ce, function(Kt) {
                    un(Ve, Kt, Ft[Kt])
                }) : jn() ? or()(Ve, jn()(Ft)) : X()(gt = De(Object(Ft))).call(gt, function(Kt) {
                    z()(Ve, Kt, nr()(Ft, Kt))
                })
            }
            return Ve
        }
        function un(Ve, R, ce) {
            return (R = ur(R))in Ve ? z()(Ve, R, {
                value: ce,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : Ve[R] = ce,
                Ve
        }
        function ur(Ve) {
            var R = _n(Ve, "string");
            return Ie(R) == "symbol" ? R : R + ""
        }
        function _n(Ve, R) {
            if (Ie(Ve) != "object" || !Ve)
                return Ve;
            var ce = Ve[Cn()];
            if (ce !== void 0) {
                var gt = ce.call(Ve, R || "default");
                if (Ie(gt) != "object")
                    return gt;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (R === "string" ? String : Number)(Ve)
        }
        function Jn() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Jn = function() {
                return R
            }
            ;
            var Ve, R = {}, ce = Object.prototype, gt = ce.hasOwnProperty, Ft = z() || function(kt, et, ut) {
                kt[et] = ut.value
            }
                , Kt = typeof V() == "function" ? V() : {}, St = Kt.iterator || "@@iterator", Xt = Kt.asyncIterator || "@@asyncIterator", Rn = Kt.toStringTag || "@@toStringTag";
            function kn(kt, et, ut) {
                return z()(kt, et, {
                    value: ut,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    kt[et]
            }
            try {
                kn({}, "")
            } catch {
                kn = function(ut, Nn, qn) {
                    return ut[Nn] = qn
                }
            }
            function pr(kt, et, ut, Nn) {
                var qn = et && et.prototype instanceof Hr ? et : Hr
                    , zn = te()(qn.prototype)
                    , Vr = new aa(Nn || []);
                return Ft(zn, "_invoke", {
                    value: Gr(kt, ut, Vr)
                }),
                    zn
            }
            function Or(kt, et, ut) {
                try {
                    return {
                        type: "normal",
                        arg: kt.call(et, ut)
                    }
                } catch (Nn) {
                    return {
                        type: "throw",
                        arg: Nn
                    }
                }
            }
            R.wrap = pr;
            var we = "suspendedStart"
                , lr = "suspendedYield"
                , Tr = "executing"
                , Lr = "completed"
                , Ur = {};
            function Hr() {}
            function Yr() {}
            function mr() {}
            var Je = {};
            kn(Je, St, function() {
                return this
            });
            var qt = pe()
                , bn = qt && qt(qt(ra([])));
            bn && bn !== ce && gt.call(bn, St) && (Je = bn);
            var br = mr.prototype = Hr.prototype = te()(Je);
            function xr(kt) {
                var et;
                X()(et = ["next", "throw", "return"]).call(et, function(ut) {
                    kn(kt, ut, function(Nn) {
                        return this._invoke(ut, Nn)
                    })
                })
            }
            function ir(kt, et) {
                function ut(qn, zn, Vr, qr) {
                    var Jr = Or(kt[qn], kt, zn);
                    if (Jr.type !== "throw") {
                        var ca = Jr.arg
                            , sa = ca.value;
                        return sa && Ie(sa) == "object" && gt.call(sa, "__await") ? et.resolve(sa.__await).then(function(fa) {
                            ut("next", fa, Vr, qr)
                        }, function(fa) {
                            ut("throw", fa, Vr, qr)
                        }) : et.resolve(sa).then(function(fa) {
                            ca.value = fa,
                                Vr(ca)
                        }, function(fa) {
                            return ut("throw", fa, Vr, qr)
                        })
                    }
                    qr(Jr.arg)
                }
                var Nn;
                Ft(this, "_invoke", {
                    value: function(zn, Vr) {
                        function qr() {
                            return new et(function(Jr, ca) {
                                    ut(zn, Vr, Jr, ca)
                                }
                            )
                        }
                        return Nn = Nn ? Nn.then(qr, qr) : qr()
                    }
                })
            }
            function Gr(kt, et, ut) {
                var Nn = we;
                return function(qn, zn) {
                    if (Nn === Tr)
                        throw Error("Generator is already running");
                    if (Nn === Lr) {
                        if (qn === "throw")
                            throw zn;
                        return {
                            value: Ve,
                            done: !0
                        }
                    }
                    for (ut.method = qn,
                             ut.arg = zn; ; ) {
                        var Vr = ut.delegate;
                        if (Vr) {
                            var qr = Zr(Vr, ut);
                            if (qr) {
                                if (qr === Ur)
                                    continue;
                                return qr
                            }
                        }
                        if (ut.method === "next")
                            ut.sent = ut._sent = ut.arg;
                        else if (ut.method === "throw") {
                            if (Nn === we)
                                throw Nn = Lr,
                                    ut.arg;
                            ut.dispatchException(ut.arg)
                        } else
                            ut.method === "return" && ut.abrupt("return", ut.arg);
                        Nn = Tr;
                        var Jr = Or(kt, et, ut);
                        if (Jr.type === "normal") {
                            if (Nn = ut.done ? Lr : lr,
                            Jr.arg === Ur)
                                continue;
                            return {
                                value: Jr.arg,
                                done: ut.done
                            }
                        }
                        Jr.type === "throw" && (Nn = Lr,
                            ut.method = "throw",
                            ut.arg = Jr.arg)
                    }
                }
            }
            function Zr(kt, et) {
                var ut = et.method
                    , Nn = kt.iterator[ut];
                if (Nn === Ve)
                    return et.delegate = null,
                    ut === "throw" && kt.iterator.return && (et.method = "return",
                        et.arg = Ve,
                        Zr(kt, et),
                    et.method === "throw") || ut !== "return" && (et.method = "throw",
                        et.arg = new TypeError("The iterator does not provide a '" + ut + "' method")),
                        Ur;
                var qn = Or(Nn, kt.iterator, et.arg);
                if (qn.type === "throw")
                    return et.method = "throw",
                        et.arg = qn.arg,
                        et.delegate = null,
                        Ur;
                var zn = qn.arg;
                return zn ? zn.done ? (et[kt.resultName] = zn.value,
                    et.next = kt.nextLoc,
                et.method !== "return" && (et.method = "next",
                    et.arg = Ve),
                    et.delegate = null,
                    Ur) : zn : (et.method = "throw",
                    et.arg = new TypeError("iterator result is not an object"),
                    et.delegate = null,
                    Ur)
            }
            function na(kt) {
                var et = {
                    tryLoc: kt[0]
                };
                1 in kt && (et.catchLoc = kt[1]),
                2 in kt && (et.finallyLoc = kt[2],
                    et.afterLoc = kt[3]),
                    this.tryEntries.push(et)
            }
            function Xr(kt) {
                var et = kt.completion || {};
                et.type = "normal",
                    delete et.arg,
                    kt.completion = et
            }
            function aa(kt) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    X()(kt).call(kt, na, this),
                    this.reset(!0)
            }
            function ra(kt) {
                if (kt || kt === "") {
                    var et = kt[St];
                    if (et)
                        return et.call(kt);
                    if (typeof kt.next == "function")
                        return kt;
                    if (!isNaN(kt.length)) {
                        var ut = -1
                            , Nn = function qn() {
                            for (; ++ut < kt.length; )
                                if (gt.call(kt, ut))
                                    return qn.value = kt[ut],
                                        qn.done = !1,
                                        qn;
                            return qn.value = Ve,
                                qn.done = !0,
                                qn
                        };
                        return Nn.next = Nn
                    }
                }
                throw new TypeError(Ie(kt) + " is not iterable")
            }
            return Yr.prototype = mr,
                Ft(br, "constructor", {
                    value: mr,
                    configurable: !0
                }),
                Ft(mr, "constructor", {
                    value: Yr,
                    configurable: !0
                }),
                Yr.displayName = kn(mr, Rn, "GeneratorFunction"),
                R.isGeneratorFunction = function(kt) {
                    var et = typeof kt == "function" && kt.constructor;
                    return !!et && (et === Yr || (et.displayName || et.name) === "GeneratorFunction")
                }
                ,
                R.mark = function(kt) {
                    return H() ? H()(kt, mr) : (kt.__proto__ = mr,
                        kn(kt, Rn, "GeneratorFunction")),
                        kt.prototype = te()(br),
                        kt
                }
                ,
                R.awrap = function(kt) {
                    return {
                        __await: kt
                    }
                }
                ,
                xr(ir.prototype),
                kn(ir.prototype, Xt, function() {
                    return this
                }),
                R.AsyncIterator = ir,
                R.async = function(kt, et, ut, Nn, qn) {
                    qn === void 0 && (qn = F());
                    var zn = new ir(pr(kt, et, ut, Nn),qn);
                    return R.isGeneratorFunction(et) ? zn : zn.next().then(function(Vr) {
                        return Vr.done ? Vr.value : zn.next()
                    })
                }
                ,
                xr(br),
                kn(br, Rn, "Generator"),
                kn(br, St, function() {
                    return this
                }),
                kn(br, "toString", function() {
                    return "[object Generator]"
                }),
                R.keys = function(kt) {
                    var et = Object(kt)
                        , ut = [];
                    for (var Nn in et)
                        ut.push(Nn);
                    return _e()(ut).call(ut),
                        function qn() {
                            for (; ut.length; ) {
                                var zn = ut.pop();
                                if (zn in et)
                                    return qn.value = zn,
                                        qn.done = !1,
                                        qn
                            }
                            return qn.done = !0,
                                qn
                        }
                }
                ,
                R.values = ra,
                aa.prototype = {
                    constructor: aa,
                    reset: function(et) {
                        var ut;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = Ve,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = Ve,
                            X()(ut = this.tryEntries).call(ut, Xr),
                            !et)
                            for (var Nn in this)
                                Nn.charAt(0) === "t" && gt.call(this, Nn) && !isNaN(+ze()(Nn).call(Nn, 1)) && (this[Nn] = Ve)
                    },
                    stop: function() {
                        this.done = !0;
                        var et = this.tryEntries[0].completion;
                        if (et.type === "throw")
                            throw et.arg;
                        return this.rval
                    },
                    dispatchException: function(et) {
                        if (this.done)
                            throw et;
                        var ut = this;
                        function Nn(ca, sa) {
                            return Vr.type = "throw",
                                Vr.arg = et,
                                ut.next = ca,
                            sa && (ut.method = "next",
                                ut.arg = Ve),
                                !!sa
                        }
                        for (var qn = this.tryEntries.length - 1; qn >= 0; --qn) {
                            var zn = this.tryEntries[qn]
                                , Vr = zn.completion;
                            if (zn.tryLoc === "root")
                                return Nn("end");
                            if (zn.tryLoc <= this.prev) {
                                var qr = gt.call(zn, "catchLoc")
                                    , Jr = gt.call(zn, "finallyLoc");
                                if (qr && Jr) {
                                    if (this.prev < zn.catchLoc)
                                        return Nn(zn.catchLoc, !0);
                                    if (this.prev < zn.finallyLoc)
                                        return Nn(zn.finallyLoc)
                                } else if (qr) {
                                    if (this.prev < zn.catchLoc)
                                        return Nn(zn.catchLoc, !0)
                                } else {
                                    if (!Jr)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < zn.finallyLoc)
                                        return Nn(zn.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(et, ut) {
                        for (var Nn = this.tryEntries.length - 1; Nn >= 0; --Nn) {
                            var qn = this.tryEntries[Nn];
                            if (qn.tryLoc <= this.prev && gt.call(qn, "finallyLoc") && this.prev < qn.finallyLoc) {
                                var zn = qn;
                                break
                            }
                        }
                        zn && (et === "break" || et === "continue") && zn.tryLoc <= ut && ut <= zn.finallyLoc && (zn = null);
                        var Vr = zn ? zn.completion : {};
                        return Vr.type = et,
                            Vr.arg = ut,
                            zn ? (this.method = "next",
                                this.next = zn.finallyLoc,
                                Ur) : this.complete(Vr)
                    },
                    complete: function(et, ut) {
                        if (et.type === "throw")
                            throw et.arg;
                        return et.type === "break" || et.type === "continue" ? this.next = et.arg : et.type === "return" ? (this.rval = this.arg = et.arg,
                            this.method = "return",
                            this.next = "end") : et.type === "normal" && ut && (this.next = ut),
                            Ur
                    },
                    finish: function(et) {
                        for (var ut = this.tryEntries.length - 1; ut >= 0; --ut) {
                            var Nn = this.tryEntries[ut];
                            if (Nn.finallyLoc === et)
                                return this.complete(Nn.completion, Nn.afterLoc),
                                    Xr(Nn),
                                    Ur
                        }
                    },
                    catch: function(et) {
                        for (var ut = this.tryEntries.length - 1; ut >= 0; --ut) {
                            var Nn = this.tryEntries[ut];
                            if (Nn.tryLoc === et) {
                                var qn = Nn.completion;
                                if (qn.type === "throw") {
                                    var zn = qn.arg;
                                    Xr(Nn)
                                }
                                return zn
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(et, ut, Nn) {
                        return this.delegate = {
                            iterator: ra(et),
                            resultName: ut,
                            nextLoc: Nn
                        },
                        this.method === "next" && (this.arg = Ve),
                            Ur
                    }
                },
                R
        }
        function Ut(Ve, R, ce, gt, Ft, Kt, St) {
            try {
                var Xt = Ve[Kt](St)
                    , Rn = Xt.value
            } catch (kn) {
                return void ce(kn)
            }
            Xt.done ? R(Rn) : F().resolve(Rn).then(gt, Ft)
        }
        function xe(Ve) {
            return function() {
                var R = this
                    , ce = arguments;
                return new (F())(function(gt, Ft) {
                        var Kt = Ve.apply(R, ce);
                        function St(Rn) {
                            Ut(Kt, gt, Ft, St, Xt, "next", Rn)
                        }
                        function Xt(Rn) {
                            Ut(Kt, gt, Ft, St, Xt, "throw", Rn)
                        }
                        St(void 0)
                    }
                )
            }
        }
        var We = Kn.notesApi.getNotes
            , Nt = Kn.notesApi.createNote
            , hn = Kn.notesApi.updateNote
            , Ln = Kn.engagementApi.getSummary
            , fn = Kn.engagementApi.getBmwSummary
            , $e = Kn.engagementApi.getSmartNote
            , tt = Kn.engagementApi.getInitSmartNoteQuota
            , ot = Kn.engagementApi.getTranslation
            , on = Kn.engagementApi.saveCrmIdRequest
            , Fe = Kn.variableApi.getVariablesOnEngagement
            , Mr = Pt.userBehavior.AicBehaviorType
            , Jt = Pt.userBehavior.behaviorName
            , Dt = Pt.userBehavior.behaviorCategory
            , an = Pt.userBehavior.dispatchUserBehaviorMonitor;
        const vn = {
            name: "CurrentSession",
            inject: ["$agent", "$getPhoneInstance"],
            mixins: [wt.A, yt.A, Pe.A, En.A, Bt, dn.A],
            data: function() {
                return {
                    notesList: [],
                    isLoading: !1,
                    editLoading: !1,
                    cacheNotes: "",
                    isShowCurrent: !1,
                    callStatus: 0,
                    isLoadingEnagement: !1,
                    systemGlobalVariables: [],
                    customGlobalVariables: [],
                    activeNames: [],
                    engagementData: {},
                    sessionActiveTabindex: -1,
                    customActiveTabindex: -1,
                    systemActiveTabindex: -1,
                    summary: null,
                    summaryTimer: null,
                    summaryCleanupTimer: null,
                    smartNoteTimer: null,
                    alertText: "",
                    requestId: "",
                    quota: null,
                    showEngagementEvents: !1,
                    customTabValue: "notes",
                    canShowFollowUp: !0,
                    notesLoaded: !1,
                    followUpLoaded: !0,
                    isShowingSmartNoteNotEnough: !1,
                    showKoreAITranscript: !1
                }
            },
            setup: function() {
                var R = (0,
                    U.ref)(!1)
                    , ce = (0,
                    nt.J)()
                    , gt = ce.getCustomerEnterIdForChannel
                    , Ft = (0,
                    In.useQuill)()
                    , Kt = Ft.getText
                    , St = Ft.getHtmlByDelta
                    , Xt = (0,
                    Ot.useSessionPanelsState)()
                    , Rn = Xt.notesInput
                    , kn = Xt.smartNoteGenerating
                    , pr = (0,
                    Ot.useSessionPanelsActions)()
                    , Or = pr.setNotesInput
                    , we = pr.setSmartNoteGenerating
                    , lr = pr.setSmartNoteStackByIndex
                    , Tr = pr.setSmartNoteChangedByUserByIndex
                    , Lr = pr.deleteSmartNoteStackByNoteId
                    , Ur = pr.emptySmartNoteStackByTaskId
                    , Hr = (0,
                    Ot.useSessionPanelsGetters)()
                    , Yr = Hr.currentSmartNoteTemplate
                    , mr = Hr.currentSmartNoteRecord
                    , Je = (0,
                    In.useWrapping)()
                    , qt = Je.isWrapupStatus
                    , bn = Je.isShowWrapup
                    , br = Je.isShowWrappingIndicator
                    , xr = Je.createNoteLoading
                    , ir = Je.getNotesParams
                    , Gr = (0,
                    In.useAgentAssist)()
                    , Zr = Gr.getEnableValue
                    , na = Gr.queryAgentAssistPermission
                    , Xr = Gr.enableValues
                    , aa = Gr.getCurrentAAParams
                    , ra = Gr.initSmartNoteTemplate
                    , kt = Gr.isChannelSupportAic
                    , et = (0,
                    Ot.useCrmActions)()
                    , ut = et.setSelectedDisposition
                    , Nn = (0,
                    Ot.useCrmGetters)()
                    , qn = Nn.getSelectedDisposition
                    , zn = (0,
                    In.useClient)()
                    , Vr = zn.inPhone
                    , qr = zn.inSMS
                    , Jr = zn.inChat
                    , ca = zn.inVideo
                    , sa = zn.inMonitorPhone
                    , fa = zn.inMonitorSMS
                    , Do = zn.inMonitorChat
                    , ma = zn.inMonitorVideo
                    , Ro = zn.isLive
                    , Hi = zn.isVoice
                    , Mi = zn.inViewPhone
                    , Ka = zn.inViewVideo
                    , Pi = zn.isChatDropIn
                    , jo = zn.isVideoDropIn
                    , Uo = zn.isMessaging
                    , Ki = (0,
                    In.useResizableHeight)({
                    initHeight: 230,
                    minHeight: 230
                })
                    , Ps = Ki.resizableRef
                    , ks = Ki.height
                    , $o = Ki.startDragging
                    , Bo = function() {
                    R.value = !0,
                        rn()(function() {
                            R.value = !1
                        }, 500)
                };
                return {
                    inPhone: Vr,
                    inSMS: qr,
                    inChat: Jr,
                    inVideo: ca,
                    inMonitorPhone: sa,
                    inMonitorSMS: fa,
                    inMonitorChat: Do,
                    inMonitorVideo: ma,
                    isLive: Ro,
                    isVoice: Hi,
                    inViewPhone: Mi,
                    inViewVideo: Ka,
                    isChatDropIn: Pi,
                    isVideoDropIn: jo,
                    isMessaging: Uo,
                    resizableRef: Ps,
                    noteAreaHeight: ks,
                    startDragging: $o,
                    smartNoteGenerating: kn,
                    notesInput: Rn,
                    setNotesInput: Or,
                    setSmartNoteGenerating: we,
                    setSmartNoteStackByIndex: lr,
                    setSmartNoteChangedByUserByIndex: Tr,
                    deleteSmartNoteStackByNoteId: Lr,
                    emptySmartNoteStackByTaskId: Ur,
                    currentSmartNoteRecord: mr,
                    currentSmartNoteTemplate: Yr,
                    initSmartNoteTemplate: ra,
                    createNoteLoading: xr,
                    getNotesParams: ir,
                    isWrapupStatus: qt,
                    isShowWrapup: bn,
                    isShowWrappingIndicator: br,
                    getEnableValue: Zr,
                    queryAgentAssistPermission: na,
                    getCurrentAAParams: aa,
                    setSelectedDisposition: ut,
                    getSelectedDisposition: qn,
                    enableValues: Xr,
                    isChannelSupportAic: kt,
                    getText: Kt,
                    getHtmlByDelta: St,
                    eGenerateSmartNoteAction: Ot.eGenerateSmartNoteAction,
                    showGeneratedClass: R,
                    showGeneratedClassAnimation: Bo,
                    getCustomerEnterIdForChannel: gt
                }
            },
            props: {
                isFromHistoryData: {
                    type: Boolean,
                    default: !1
                },
                cacheVariables: {
                    type: Object,
                    default: null
                },
                observerSize: {
                    type: Object,
                    default: function() {
                        return {}
                    }
                },
                isAlive: {
                    type: Boolean,
                    default: !1
                },
                engagementCollapseActive: {
                    type: Array,
                    default: function() {
                        return []
                    }
                },
                isShowEngagementEvents: {
                    type: Boolean,
                    default: !1
                },
                isEmailChannel: {
                    type: Boolean,
                    default: !1
                }
            },
            created: function() {
                this.activeNames = this.engagementCollapseActive,
                this.enableZvaAgentAssist && (this.isMessaging || this.isVoice) && this.bindZpnsEvt()
            },
            mounted: function() {
                var R = this;
                return xe(Jn().mark(function ce() {
                    var gt, Ft, Kt, St, Xt;
                    return Jn().wrap(function(kn) {
                        for (; ; )
                            switch (kn.prev = kn.next) {
                                case 0:
                                    if (R.cleanUp(),
                                    R.smartNoteTimer && clearTimeout(R.smartNoteTimer),
                                        R.getCallNotes({
                                            source: "init"
                                        }),
                                        R.getVariablesOnEngagement(),
                                        R.getEngagementData(),
                                        !R.isChannelSupportAic) {
                                        kn.next = 16;
                                        break
                                    }
                                    return kn.next = 8,
                                        R.getEnableValue("enableAicSummary");
                                case 8:
                                    return Ft = kn.sent,
                                        kn.next = 11,
                                        R.getEnableValue("enableEaSmartNote");
                                case 11:
                                    Kt = kn.sent,
                                    Ft && R.getSummaryByTime(),
                                    Kt && R.initSmartNoteQuota(),
                                        R.initPreWrapupSmartNote(),
                                        R.initSmartNoteTemplate();
                                case 16:
                                    R.phoneInstance = (gt = R.$getPhoneInstance) === null || gt === void 0 ? void 0 : gt.call(R),
                                    R.phoneInstance && ((St = R.phoneInstance) === null || St === void 0 || (St = St.messager) === null || St === void 0 || (Xt = St.on) === null || Xt === void 0 || Xt.call(St, "sync.wrapupdone", R.syncOnWrapupDone));
                                case 18:
                                case "end":
                                    return kn.stop()
                            }
                    }, ce)
                }))()
            },
            destroyed: function() {
                var R, ce;
                this.enableZvaAgentAssist && (this.isMessaging || this.isVoice) && this.unBindZpnsEvt(),
                (R = this.phoneInstance) === null || R === void 0 || (R = R.messager) === null || R === void 0 || (ce = R.off) === null || ce === void 0 || ce.call(R, "sync.wrapupdone", this.syncOnWrapupDone)
            },
            beforeDestroy: function() {
                this.$emit("handleShowEngagementEvents", !1),
                    this.cleanUp(),
                this.smartNoteTimer && clearTimeout(this.smartNoteTimer)
            },
            computed: bt(bt(bt(bt({}, (0,
                Mt.mapGetters)("sessionPanels", ["currentTask", "currentTaskId", "currentActiveTask", "currentMonitorTask", "activeTaskDurationList", "selectedContactId"])), (0,
                Mt.mapGetters)({
                user: "user"
            })), (0,
                Mt.mapGetters)("livechat", ["currentEngagement"])), {}, {
                currentNotesInput: {
                    get: function() {
                        return this.notesInput[this.currentTaskId] || ""
                    },
                    set: function(R) {
                        this.setNotesInput({
                            taskId: this.currentTaskId,
                            content: R
                        }),
                            this.setSmartNoteStackByIndex({
                                taskId: this.currentTaskId,
                                index: this.smartNoteStackChooseIndex,
                                note: R
                            })
                    }
                },
                noteInputPlaceholder: function() {
                    var R, ce, gt;
                    return (R = this.smartNoteGenerating) !== null && R !== void 0 && (R = R[this.currentTaskId]) !== null && R !== void 0 && R.loading && !vr()(ce = [Ot.eGenerateSmartNoteAction.GENERATE]).call(ce, (gt = this.smartNoteGenerating) === null || gt === void 0 || (gt = gt[this.currentTaskId]) === null || gt === void 0 ? void 0 : gt.action) ? this.$t("cci.engagement.name.currentSession.smart.note.generating") : this.$t("cci.engagement.name.currentSession.typeYourNote")
                },
                smartNoteStackChooseIndex: {
                    get: function() {
                        var R;
                        return ((R = this.smartNoteGenerating) === null || R === void 0 || (R = R[this.currentTaskId]) === null || R === void 0 ? void 0 : R.chooseNoteIndex) || 0
                    },
                    set: function(R) {
                        var ce;
                        this.setSmartNoteGenerating({
                            taskId: this.currentTaskId,
                            chooseNoteIndex: R
                        }),
                            this.setNotesInput({
                                taskId: this.currentTaskId,
                                content: ((ce = this.smartNoteGenerating) === null || ce === void 0 || (ce = ce[this.currentTaskId]) === null || ce === void 0 || (ce = ce.notes[R]) === null || ce === void 0 ? void 0 : ce.note) || ""
                            })
                    }
                },
                showSmartNoteChangeBtns: function() {
                    var R, ce;
                    return !!((R = this.smartNoteGenerating) !== null && R !== void 0 && (R = R[this.currentTaskId]) !== null && R !== void 0 && (R = R.notes) !== null && R !== void 0 && R.length) && !((ce = this.smartNoteGenerating) !== null && ce !== void 0 && (ce = ce[this.currentTaskId]) !== null && ce !== void 0 && ce.loading)
                },
                showAddNotes: function() {
                    var R, ce, gt = (0,
                        Ct.getChannelType)((R = this.currentActiveTask) === null || R === void 0 || (R = R.channelType) === null || R === void 0 ? void 0 : R.toLowerCase(), (ce = this.currentActiveTask) === null || ce === void 0 ? void 0 : ce.subChannel), Ft = (0,
                        Ct.getCrmStoreConfig)(Pt.QUEUE_CHANNEL_TYPE.EMAIL), Kt = Ft != null && Ft.callLogConfigs ? Ft.callLogConfigs : {
                        hideNotes: !1
                    };
                    return this.getSettingEnabled("add-edit-note") && (this.isWrapupStatus || this.isOnCallStatus || this.inVideo && this.isVideoAlive || this.inSMS && this.isSMSAlive || this.inChat && this.isChatAlive || this.inMonitorVideo || this.isChatDropIn) && (gt !== Pt.QUEUE_CHANNEL_TYPE.EMAIL || !Kt.hideNotes)
                },
                showNotesTab: function() {
                    return this.showAddNotes || this.notesList.length > 0
                },
                currentObserverSize: function() {
                    var R, ce = this;
                    return kr()(R = Et()(this.observerSize)).call(R, function(gt) {
                        return ce.observerSize[gt]
                    })
                },
                engagementId: function() {
                    var R, ce;
                    return ((R = this.currentEngagement) === null || R === void 0 ? void 0 : R.engagementId) || ((ce = this.currentActiveTask) === null || ce === void 0 ? void 0 : ce.engagementId)
                },
                currentSessionData: function() {
                    var R = null;
                    if (this.inMonitorSMS || this.inMonitorChat || this.inMonitorVideo) {
                        var ce = this.currentMonitorTask || {}
                            , gt = ce.engagement;
                        R = bt(bt({}, this.currentMonitorTask || {}), gt || {}),
                            R.channelType = this.toUpperCase(gt?.tkType || gt?.type)
                    } else {
                        var Ft;
                        R = bt({}, this.currentActiveTask || {}),
                            R.channelType = this.toUpperCase((Ft = this.currentActiveTask) === null || Ft === void 0 ? void 0 : Ft.tkType)
                    }
                    return R || {}
                },
                showSourceField: function() {
                    var R, ce = this, gt = W.CHANNEL_KEYS.facebook, Ft = W.CHANNEL_KEYS.whatsapp;
                    return Yt()(R = [gt.keyUpper, Ft.keyUpper]).call(R, function(Kt) {
                        return ce.isTargetChannel(Kt)
                    })
                },
                taskSourceIcon: function() {
                    var R;
                    return (R = this.currentSessionData) === null || R === void 0 ? void 0 : R.sourceIcon
                },
                taskSource: function() {
                    var R, ce = (R = this.currentSessionData) === null || R === void 0 ? void 0 : R.sourceName;
                    return this.isTargetChannel(W.CHANNEL_KEYS.whatsapp.keyUpper) ? ce ? this.$options.filters.phoneNumber(ce, this.user.countryOrRegion) : "-" : ce || "--"
                },
                isRingingStatus: function() {
                    var R;
                    return this.inPhone && ((R = this.currentActiveTask) === null || R === void 0 ? void 0 : R.eventType) === "created"
                },
                isOnCallStatus: function() {
                    var R, ce;
                    return this.inPhone && Qe()(R = ["accepted", "takeover.accepted"]).call(R, (ce = this.currentActiveTask) === null || ce === void 0 ? void 0 : ce.eventType) > -1
                },
                isOutBoundCall: function() {
                    if (this.inPhone) {
                        var R;
                        return ((R = this.currentActiveTask) === null || R === void 0 ? void 0 : R.direction) === "outbound"
                    } else if (this.inMonitorPhone) {
                        var ce;
                        return ((ce = this.currentActiveTask) === null || ce === void 0 ? void 0 : ce.direction) === "outbound"
                    } else {
                        var gt = this.$attrs
                            , Ft = gt.channelType
                            , Kt = gt.direction;
                        return Ft === "PHONE" && Kt === "OUT"
                    }
                },
                isVideoAlive: function() {
                    var R, ce;
                    return Qe()(R = ["v.accepted"]).call(R, (ce = this.currentActiveTask) === null || ce === void 0 ? void 0 : ce.eventType) > -1
                },
                isSMSAlive: function() {
                    var R, ce;
                    return Qe()(R = ["sms.accepted"]).call(R, (ce = this.currentActiveTask) === null || ce === void 0 ? void 0 : ce.eventType) > -1
                },
                isChatAlive: function() {
                    var R, ce;
                    return Qe()(R = ["chat.accepted"]).call(R, (ce = this.currentActiveTask) === null || ce === void 0 ? void 0 : ce.eventType) > -1
                },
                needShowEndTime: function() {
                    return (this.inPhone && !this.isOnCallStatus && !this.isRingingStatus || this.inVideo && !this.isVideoAlive || this.inSMS && !this.isSMSAlive || this.inChat && !this.isChatAlive) && !this.inMonitorPhone
                },
                needShowDuration: function() {
                    return (this.inPhone && !this.isOnCallStatus && !this.isRingingStatus || this.inVideo && !this.isVideoAlive || this.inSMS && !this.isSMSAlive || this.inChat && !this.isChatAlive) && !this.inMonitorPhone
                },
                needShowQueue: function() {
                    if (this.inMonitorPhone) {
                        var R = this.currentActiveTask.queueName;
                        return !!R
                    } else if (this.inMonitorSMS || this.inMonitorChat) {
                        var ce = this.currentMonitorTask.engagement.queueName;
                        return !!ce
                    }
                    return !0
                },
                taskChannelType: function() {
                    var R;
                    return (R = this.currentSessionData) === null || R === void 0 ? void 0 : R.channelType
                },
                iconLive: function() {
                    return this.isLive || this.inViewVideo || this.inViewPhone
                },
                taskEngagementId: function() {
                    var R;
                    return (R = this.currentSessionData) === null || R === void 0 ? void 0 : R.engagementId
                },
                taskStartTime: function() {
                    var R;
                    if (this.inPhone || this.inVideo || this.inSMS || this.inChat) {
                        var ce;
                        R = this.currentActiveTask.createTs || this.currentActiveTask.takeoverTs || this.currentActiveTask.acceptTs,
                        (ce = this.currentActiveTask) !== null && ce !== void 0 && ce.isConference && (R = this.engagementData.startTime)
                    } else if (this.inMonitorPhone)
                        R = this.currentActiveTask.monitorStartTs;
                    else if (this.inMonitorSMS || this.inMonitorChat)
                        R = this.currentMonitorTask.monitorStartTs;
                    else if (this.inMonitorVideo) {
                        var gt;
                        R = ((gt = this.currentMonitorTask) === null || gt === void 0 ? void 0 : gt.monitorStartTs) || this.$attrs.createTime || this.$attrs.startTime
                    } else
                        R = this.$attrs.createTime || this.$attrs.startTime;
                    return R || zt()()
                },
                taskEndTime: function() {
                    var R, ce = 0;
                    return this.inPhone || this.inVideo || this.inSMS || this.inChat ? R = this.currentActiveTask.completeTs : (R = this.$attrs.createTime || this.$attrs.startTime || zt()(),
                        ce = this.$attrs.duration || 0),
                    new Date(R).getTime() + ce * 1e3
                },
                taskDurationInSeconds: function() {
                    var R = 0;
                    if (this.inPhone || this.inVideo || this.inSMS || this.inChat) {
                        var ce = this.currentActiveTask.createTs || this.currentActiveTask.takeoverTs || this.currentActiveTask.acceptTs
                            , gt = this.currentActiveTask.completeTs || zt()();
                        R = Math.floor((gt - ce) / 1e3)
                    } else
                        R = this.$attrs.duration;
                    return R
                },
                taskDuration: function() {
                    var R = 0;
                    if (this.inPhone || this.inVideo || this.inSMS || this.inChat) {
                        var ce = this.currentActiveTask.createTs || this.currentActiveTask.takeoverTs || this.currentActiveTask.acceptTs
                            , gt = this.currentActiveTask.completeTs || zt()();
                        R = Math.floor((gt - ce) / 1e3)
                    } else
                        R = this.$attrs.duration;
                    return this.secs2HHMMSS(R)
                },
                taskQueue: function() {
                    var R, ce, gt = (R = this.currentSessionData) === null || R === void 0 ? void 0 : R.queueName;
                    if (this.inMonitorVideo) {
                        var Ft;
                        gt = ((Ft = this.currentMonitorTask) === null || Ft === void 0 || (Ft = Ft.engagement) === null || Ft === void 0 || (Ft = Ft.queueNames) === null || Ft === void 0 ? void 0 : Ft[0]) || "-"
                    }
                    return (ce = this.currentActiveTask) !== null && ce !== void 0 && ce.isConference && (gt = this.engagementData.currentQueueName),
                    gt || "-"
                },
                taskAgent: function() {
                    var R, ce = this.currentSessionData, gt = ce.userName, Ft = ce.agentName, Kt = gt || Ft || "-";
                    if (this.inPhone || this.inVideo || this.inSMS || this.inChat)
                        Kt = this.user.name;
                    else if (this.inMonitorPhone)
                        Kt = Ft || "Agent";
                    else if (this.inMonitorSMS || this.inMonitorChat) {
                        var St;
                        Kt = ((St = this.currentMonitorTask) === null || St === void 0 || (St = St.engagement) === null || St === void 0 || (St = St.agent) === null || St === void 0 ? void 0 : St.name) || "-"
                    } else if (this.inMonitorVideo) {
                        var Xt;
                        Kt = ((Xt = this.currentMonitorTask) === null || Xt === void 0 || (Xt = Xt.engagement) === null || Xt === void 0 || (Xt = Xt.agentNames) === null || Xt === void 0 ? void 0 : Xt[0]) || "-"
                    }
                    return (R = this.currentActiveTask) !== null && R !== void 0 && R.isConference && (Kt = this.engagementData.assignedAgentName),
                        Kt
                },
                wrapupTime: function() {
                    var R, ce = (R = this.currentSessionData) === null || R === void 0 ? void 0 : R.wrapUpTime;
                    return ce ? this.secs2HHMMSS(ce) : "-"
                },
                taskDisposition: function() {
                    var R;
                    return ((R = this.currentSessionData) === null || R === void 0 ? void 0 : R.disposition) || "-"
                },
                taskDirection: function() {
                    var R;
                    return (R = this.currentSessionData) === null || R === void 0 ? void 0 : R.direction
                },
                calcChannelName: function() {
                    var R = this
                        , ce = this.currentSessionData
                        , gt = ce.channelType
                        , Ft = ce.subChannel
                        , Kt = ce.useSource
                        , St = ce.source
                        , Xt = W.CHANNEL_KEYS.facebook
                        , Rn = W.CHANNEL_KEYS.whatsapp
                        , kn = W.CHANNEL_KEYS.email
                        , pr = W.CHANNEL_KEYS.inAppChat
                        , Or = W.CHANNEL_KEYS.instagram
                        , we = W.CHANNEL_KEYS.teamchat
                        , lr = function(Hr, Yr) {
                        return Hr && Yr || R.$t("cci.analytics.label.VideoCall")
                    }
                        , Tr = function(Hr) {
                        if (!Hr || !R.isLive)
                            return R.$t("cci.webChat");
                        switch (Hr) {
                            case pr.keyUpper:
                                return R.$t("cci.inAppChat");
                            case Xt.keyUpper:
                                return R.$t("cci.common.label.facebook_messenger");
                            case Rn.keyUpper:
                                return R.$t("cci.common.label.whats_app");
                            case kn.keyUpper:
                                return R.$t("cci.email");
                            case Or.keyUpper:
                                return R.$t("cci.common.label.instagram");
                            case we.keyUpper:
                                return R.$t("cci.common.label.zoomTeamChat");
                            default:
                                return R.$t("cci.webChat")
                        }
                    }
                        , Lr = function() {
                        switch (gt) {
                            case kn.recentKey:
                                return R.$t("cci.email");
                            case "VIDEO":
                                return lr(Kt, St);
                            case "SMS":
                                return R.$t("cci.sms");
                            case "CHAT":
                                return Tr(Ft);
                            default:
                                return R.$t("cci.voice")
                        }
                    };
                    return Lr()
                },
                isInChat: function() {
                    var R;
                    return this.inChat || this.inMonitorChat || vr()(R = ["CHAT", "IN_APP_CHAT", W.CHANNEL_KEYS.facebook.keyUpper, W.CHANNEL_KEYS.whatsapp.keyUpper]).call(R, this.taskChannelType)
                },
                isInVideo: function() {
                    var R;
                    return this.inVideo || this.inMonitorVideo || this.inViewVideo || vr()(R = ["VIDEO"]).call(R, this.taskChannelType)
                },
                enableEngagementInformationOnClient: function() {
                    return this.account.enableEngagementInformationOnClient
                },
                enableZvaAgentAssist: function() {
                    return this.account.enableZva && this.account.enableZvaAgentAssist
                },
                isShowCustomGlobalVariable: function() {
                    return this.hasAccessVariables && this.customGlobalVariables.length
                },
                isShowSystemGlobalVariable: function() {
                    return this.hasAccessVariables && this.systemGlobalVariables.length
                },
                hasAccessVariables: function() {
                    return this.enableEngagementInformationOnClient && this.isAlive
                },
                isView: function() {
                    var R;
                    if (this.currentActiveTask) {
                        var ce = this.currentActiveTask
                            , gt = ce.eventType
                            , Ft = ce.isMonitorChannel;
                        return Ft && gt !== "takeover.accepted"
                    }
                    return ((R = this.currentEngagement) === null || R === void 0 ? void 0 : R.superVisor) === "view"
                },
                showSummary: function() {
                    var R = this.enableValues.enableAicSummary
                        , ce = R === void 0 ? !1 : R;
                    return ce && this.isLive && this.isChannelSupportAic && this.summary
                },
                showSmartNote: function() {
                    var R = this.enableValues.enableEaSmartNote
                        , ce = R === void 0 ? !1 : R;
                    return ce && this.isLive && this.isChannelSupportAic && !this.isView
                },
                showSmartNoteBtn: function() {
                    var R, ce, gt;
                    return this.showSmartNote && !((R = this.smartNoteGenerating) !== null && R !== void 0 && (R = R[this.currentTaskId]) !== null && R !== void 0 && R.loading && vr()(ce = [Ot.eGenerateSmartNoteAction.RE_GENERATE, Ot.eGenerateSmartNoteAction.MAKE_LONGER, Ot.eGenerateSmartNoteAction.MAKE_SHORTER, Ot.eGenerateSmartNoteAction.TRANSLATE_TO]).call(ce, (gt = this.smartNoteGenerating) === null || gt === void 0 || (gt = gt[this.currentTaskId]) === null || gt === void 0 ? void 0 : gt.action))
                },
                disableGenerateSmartNote: function() {
                    return this.quota && this.quota.total === this.quota.used
                },
                loadingWrapDuration: function() {
                    var R = this.activeTaskDurationList[this.currentTaskId];
                    return R?.durationStage === "callHangup"
                },
                disposition: function() {
                    return this.getSelectedDisposition(this.engagementId)
                }
            }),
            components: (Be = {
                EngagementEvents: In.EngagementEventsV2
            },
                un(un(un(un(un(un(un(un(un(un(Be, Ue.name, Ue), "VariablesList", He.A), "ProfileIcon", In.ProfileIcon), "ConversationSummary", me), "ZpnsRefreshGlobalVariables", In.ZpnsRefreshGlobalVariables), "WrappingIndicator", tn.WrappingIndicator), "V2WrappingBlock", In.V2WrappingBlock), "NotesHistory", In.NotesHistory), "CustomTab", In.CustomTab), "GenerateSmartNoteConfigBtn", In.GenerateSmartNoteConfigBtn),
                un(un(un(Be, "FollowUp", In.FollowUp), "RichInput", In.RichInput), "SmartNoteStack", In.SmartNoteStack)),
            filters: {
                formatTimeNodot: function(R) {
                    return Xe()(R).format("h:mm A   MM/DD/YYYY")
                },
                formatTime: function(R) {
                    return Xe()(R).format("h:mm A \xB7 MM/DD/YYYY")
                }
            },
            methods: bt(bt(bt(bt({}, (0,
                Mt.mapActions)("sessionPanels", ["clearActiveTask", "clearChatTask", "clearOutboundTask", "setWhyStatusChange"])), (0,
                Mt.mapActions)("crm", ["setNotes"])), (0,
                Mt.mapActions)("coreVoice", ["getCurrentCallEngagement"])), {}, {
                cleanUp: function() {
                    this.summaryTimer && (clearTimeout(this.summaryTimer),
                        this.summaryTimer = null),
                    this.summaryCleanupTimer && (clearTimeout(this.summaryCleanupTimer),
                        this.summaryCleanupTimer = null)
                },
                handleNoteUserInput: function() {
                    this.setSmartNoteChangedByUserByIndex({
                        taskId: this.currentTaskId,
                        index: this.smartNoteStackChooseIndex
                    })
                },
                handleCloseEvents: function() {
                    var R = this;
                    rn()(function() {
                        R.$emit("handleShowEngagementEvents", !1)
                    }, 500),
                        this.showEngagementEvents = !1
                },
                handleClickViewEvents: function() {
                    this.$emit("handleShowEngagementEvents", !0),
                        this.showEngagementEvents = !0
                },
                toUpperCase: function(R) {
                    return R ? R?.toUpperCase() : ""
                },
                getCrmSaveParams: function() {
                    var R = this;
                    return xe(Jn().mark(function ce() {
                        var gt, Ft, Kt;
                        return Jn().wrap(function(Xt) {
                            for (; ; )
                                switch (Xt.prev = Xt.next) {
                                    case 0:
                                        return gt = R.engagementId,
                                            Xt.next = 3,
                                            R.getCustomerEnterIdForChannel();
                                    case 3:
                                        return Ft = Xt.sent,
                                            Kt = (0,
                                                Ct.getSelectedUserId)(gt),
                                            Xt.abrupt("return", bt({
                                                crmId: Kt
                                            }, Ft));
                                    case 6:
                                    case "end":
                                        return Xt.stop()
                                }
                        }, ce)
                    }))()
                },
                saveCrmId: function() {
                    var R = this;
                    return xe(Jn().mark(function ce() {
                        var gt, Ft, Kt, St;
                        return Jn().wrap(function(Rn) {
                            for (; ; )
                                switch (Rn.prev = Rn.next) {
                                    case 0:
                                        if (!R.isEmailChannel) {
                                            Rn.next = 2;
                                            break
                                        }
                                        return Rn.abrupt("return");
                                    case 2:
                                        return Rn.next = 4,
                                            R.getCrmSaveParams();
                                    case 4:
                                        if (gt = Rn.sent,
                                            gt.crmId) {
                                            Rn.next = 7;
                                            break
                                        }
                                        return Rn.abrupt("return");
                                    case 7:
                                        return Rn.next = 9,
                                            (0,
                                                Pt.tryApiCatch)(on, gt);
                                    case 9:
                                        Ft = Rn.sent,
                                            Kt = st(Ft, 1),
                                            St = Kt[0],
                                        St && R.$message.error(St.message);
                                    case 13:
                                    case "end":
                                        return Rn.stop()
                                }
                        }, ce)
                    }))()
                },
                handleFollowUpLoaded: function() {
                    this.followUpLoaded = !0,
                        this.initCustomTabValue()
                },
                initCustomTabValue: function() {
                    var R = this;
                    this.customTabValue = "followUp",
                        this.$nextTick(function() {
                            R.showNotesTab ? R.customTabValue = "notes" : R.canShowFollowUp && (R.customTabValue = "followUp")
                        })
                },
                changeCanShowFollowUp: function(R) {
                    this.canShowFollowUp = R
                },
                isTargetChannel: function(R) {
                    var ce, gt, Ft = this, Kt = this.currentSessionData, St = Kt.channelType, Xt = Kt.subChannel;
                    return vr()(ce = Lt()(gt = [Xt, St]).call(gt, function(Rn) {
                        return Ft.toUpperCase(Rn)
                    })).call(ce, this.toUpperCase(R))
                },
                handleAddNoteCancel: function() {
                    this.currentNotesInput && (this.setNotesInput({
                        taskId: this.currentTaskId,
                        content: ""
                    }),
                        this.emptySmartNoteStackByTaskId({
                            taskId: this.currentTaskId
                        })),
                        an(Jt.aicBehaviorName[Mr.AicGenerateSmartNoteCancel], Dt.aicBehavior)
                },
                handleEditNotes: function(R) {
                    this.cacheNotes = R.richTextNotes,
                        R.isEdit = !0
                },
                handleCancelEditNotes: function(R) {
                    R.richTextNotes = this.cacheNotes,
                        this.cacheNotes = "",
                        R.isEdit = !1
                },
                jumpByHighlight: function(R) {
                    var ce, gt, Ft = ((ce = this.currentEngagement) === null || ce === void 0 ? void 0 : ce.engagementId) || ((gt = this.currentActiveTask) === null || gt === void 0 ? void 0 : gt.engagementId);
                    Ft && this.$bus.$emit("jumpByHighlight", bt(bt({}, R), {}, {
                        engagementId: Ft
                    })),
                        an(Jt.aicBehaviorName[Mr.AicConversationHighLight], Dt.aicBehavior)
                },
                bindZpnsEvt: function() {
                    var R = this.$agent()
                        , ce = R.zpns;
                    ce.on("message", this.zpnsDropInEventCallback)
                },
                unBindZpnsEvt: function() {
                    var R = this.$agent()
                        , ce = R.zpns;
                    ce.off("message", this.zpnsDropInEventCallback)
                },
                insertSmartNotes: function(R, ce) {
                    var gt = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}
                        , Ft = gt.currentNoteId;
                    if (ce = ce || this.currentTaskId,
                    (R != null && R.smartNotes || R != null && R.smartNotesTag) && ce) {
                        var Kt, St = R.smartNotesTag || R.smartNotes;
                        if (R.format === "json") {
                            try {
                                St = JSON.parse(St)
                            } catch {}
                            St = this.getHtmlByDelta(St)
                        }
                        if ((Kt = this.currentNotesInput) !== null && Kt !== void 0 && vr()(Kt).call(Kt, St))
                            return;
                        this.setSmartNoteGenerating({
                            taskId: ce,
                            note: R.smartNotesTag || R.smartNotes,
                            noteSourceString: R.smartNotesTag || R.smartNotes,
                            format: R.format || "html",
                            currentNoteId: Ft
                        }),
                            this.setNotesInput({
                                taskId: ce,
                                content: St
                            }),
                            this.alertText = "Generated smart note successfully"
                    }
                },
                zpnsDropInEventCallback: function(R) {
                    var ce = this
                        , gt = R.name
                        , Ft = R.content;
                    if (!(gt !== "/agent/assist/smartNote" && gt !== "/agent/assist/summary")) {
                        var Kt = function() {
                            var Je = Ft.data, qt, bn;
                            return ce.currentEngagement ? (qt = ce.currentEngagement.engagementId,
                                bn = ce.currentEngagement.chatSessionId) : ce.currentActiveTask && (qt = ce.currentActiveTask.engagementId,
                                bn = ce.currentActiveTask.businessId),
                            qt === Je.engagementId && bn === Je.sessionId
                        };
                        if (Kt()) {
                            var St = Ft.data
                                , Xt = Ft.status
                                , Rn = Ft.quota;
                            if (Xt !== "FAIL") {
                                if (gt === "/agent/assist/smartNote") {
                                    if (St) {
                                        var kn, pr, Or = kr()(kn = Et()(this.smartNoteGenerating)).call(kn, function(mr) {
                                            var Je;
                                            return ((Je = ce.smartNoteGenerating) === null || Je === void 0 ? void 0 : Je[mr].requestId) === St.requestId
                                        });
                                        if (this.insertSmartNotes(St, Or),
                                        (pr = this.smartNoteGenerating) !== null && pr !== void 0 && (pr = pr[Or]) !== null && pr !== void 0 && pr.timer) {
                                            var we;
                                            clearTimeout((we = this.smartNoteGenerating) === null || we === void 0 ? void 0 : we[Or].timer)
                                        }
                                        this.setSmartNoteGenerating({
                                            taskId: Or,
                                            loading: !1,
                                            requestId: ""
                                        })
                                    }
                                    if (Rn) {
                                        var lr = Rn.total
                                            , Tr = Rn.used;
                                        this.quota = {
                                            total: lr,
                                            used: Tr
                                        }
                                    }
                                }
                                if (gt === "/agent/assist/summary") {
                                    var Lr = St || {}
                                        , Ur = Lr.generatedAt
                                        , Hr = Lr.shortSummary
                                        , Yr = Lr.longSummary;
                                    this.summary = {
                                        generatedAt: Ur,
                                        shortSummary: Hr,
                                        longSummary: Yr,
                                        loading: !1
                                    },
                                        this.cleanUp()
                                }
                            }
                        }
                    }
                },
                editNotes: function(R) {
                    var ce = this;
                    return xe(Jn().mark(function gt() {
                        var Ft, Kt, St, Xt, Rn, kn, pr, Or, we;
                        return Jn().wrap(function(Tr) {
                            for (; ; )
                                switch (Tr.prev = Tr.next) {
                                    case 0:
                                        return Ft = ce.getNotesParams(ce.currentNotesInput),
                                            Ft ? (Ft.id = R.id,
                                                Ft.richTextNotes = R.richTextNotes,
                                                Ft.notes = ce.getText(R.richTextNotes)) : (Kt = ce.currentSessionData,
                                                St = Kt.engagementId,
                                                Xt = Kt.contactId,
                                                Rn = Xt === void 0 ? "" : Xt,
                                                Ft = {
                                                    engagementId: St,
                                                    contactId: Rn,
                                                    richTextNotes: R.richTextNotes,
                                                    notes: ce.getText(R.richTextNotes),
                                                    id: R.id
                                                }),
                                            R.editLoading = !0,
                                            Tr.next = 5,
                                            (0,
                                                Pt.tryApiCatch)(hn, Ft);
                                    case 5:
                                        if (kn = Tr.sent,
                                            pr = st(kn, 2),
                                            Or = pr[0],
                                            we = pr[1],
                                            R.editLoading = !1,
                                            !Or) {
                                            Tr.next = 12;
                                            break
                                        }
                                        return Tr.abrupt("return", ce.$message.error(Or));
                                    case 12:
                                        if (we) {
                                            Tr.next = 14;
                                            break
                                        }
                                        return Tr.abrupt("return");
                                    case 14:
                                        R.isEdit = !1,
                                            ce.$message.success(ce.$t("cci.common.success")),
                                            ce.cacheNotes = "",
                                            ce.getCallNotes();
                                    case 18:
                                    case "end":
                                        return Tr.stop()
                                }
                        }, gt)
                    }))()
                },
                getCallNotes: function() {
                    var R = arguments
                        , ce = this;
                    return xe(Jn().mark(function gt() {
                        var Ft, Kt, St, Xt, Rn, kn, pr, Or, we, lr, Tr, Lr, Ur, Hr, Yr, mr;
                        return Jn().wrap(function(qt) {
                            for (; ; )
                                switch (qt.prev = qt.next) {
                                    case 0:
                                        if (Ft = R.length > 0 && R[0] !== void 0 ? R[0] : {},
                                            Kt = Ft.isWrappingDone,
                                            St = Kt === void 0 ? !1 : Kt,
                                            Xt = Ft.EID,
                                            Rn = Xt === void 0 ? "" : Xt,
                                            kn = Ft.source,
                                            pr = kn === void 0 ? "" : kn,
                                            ce.isLoading = !0,
                                            Or = Rn || ce.taskEngagementId,
                                            Or) {
                                            qt.next = 7;
                                            break
                                        }
                                        return ce.notesLoaded = !0,
                                            qt.abrupt("return");
                                    case 7:
                                        return we = ce.currentTaskId,
                                            qt.next = 10,
                                            (0,
                                                Pt.tryApiCatch)(We, {
                                                engagementId: Or,
                                                page: 1,
                                                size: 20
                                            });
                                    case 10:
                                        if (lr = qt.sent,
                                            Tr = st(lr, 2),
                                            Lr = Tr[0],
                                            Ur = Tr[1],
                                        we === ce.currentTaskId) {
                                            qt.next = 17;
                                            break
                                        }
                                        return Or && Mn()(Ur?.records) && (Hr = Ur.records,
                                            ce.setNotes({
                                                engagementId: Or,
                                                notes: Lt()(Hr).call(Hr, function(bn) {
                                                    return bt({
                                                        editLoading: !1,
                                                        isEdit: !1,
                                                        richTextNotes: bn?.richTextNotes || bn?.notes
                                                    }, bn)
                                                })
                                            })),
                                            qt.abrupt("return");
                                    case 17:
                                        if (ce.isLoading = !1,
                                            ce.notesLoaded = !0,
                                            !Lr) {
                                            qt.next = 21;
                                            break
                                        }
                                        return qt.abrupt("return", ce.$message.error(Lr));
                                    case 21:
                                        if (Ur) {
                                            qt.next = 23;
                                            break
                                        }
                                        return qt.abrupt("return");
                                    case 23:
                                        Yr = Ur.records,
                                            mr = Yr === void 0 ? [] : Yr,
                                            ce.notesList = Lt()(mr).call(mr, function(bn) {
                                                return bt({
                                                    editLoading: !1,
                                                    isEdit: !1,
                                                    richTextNotes: bn.richTextNotes || bn.notes
                                                }, bn)
                                            }),
                                        !St && pr === "init" && ce.initCustomTabValue(),
                                        Or && ce.setNotes({
                                            engagementId: Or,
                                            notes: ce.notesList
                                        });
                                    case 27:
                                    case "end":
                                        return qt.stop()
                                }
                        }, gt)
                    }))()
                },
                createNote: function() {
                    var R = this;
                    return xe(Jn().mark(function ce() {
                        var gt, Ft, Kt, St, Xt, Rn;
                        return Jn().wrap(function(pr) {
                            for (; ; )
                                switch (pr.prev = pr.next) {
                                    case 0:
                                        return gt = R.currentTaskId,
                                            Ft = R.getNotesParams(R.currentNotesInput),
                                            R.createNoteLoading = !0,
                                            pr.next = 5,
                                            (0,
                                                Pt.tryApiCatch)(Nt, Ft);
                                    case 5:
                                        if (Kt = pr.sent,
                                            St = st(Kt, 2),
                                            Xt = St[0],
                                            Rn = St[1],
                                            R.createNoteLoading = !1,
                                            !Xt) {
                                            pr.next = 13;
                                            break
                                        }
                                        return R.$message.error(Xt),
                                            pr.abrupt("return");
                                    case 13:
                                        if (Rn) {
                                            pr.next = 15;
                                            break
                                        }
                                        return pr.abrupt("return");
                                    case 15:
                                        R.setNotesInput({
                                            taskId: gt,
                                            content: ""
                                        }),
                                            R.emptySmartNoteStackByTaskId({
                                                taskId: gt
                                            }),
                                            R.$message.success(R.$t("cci.common.success")),
                                            R.getCallNotes();
                                    case 19:
                                    case "end":
                                        return pr.stop()
                                }
                        }, ce)
                    }))()
                },
                handleTranslate: function(R) {
                    var ce = this;
                    return xe(Jn().mark(function gt() {
                        var Ft, Kt, St, Xt, Rn, kn, pr, Or, we, lr, Tr, Lr, Ur, Hr;
                        return Jn().wrap(function(mr) {
                            for (; ; )
                                switch (mr.prev = mr.next) {
                                    case 0:
                                        if (Ft = R.action,
                                            Kt = R.language,
                                            St = ce.getCurrentAAParams(),
                                            St) {
                                            mr.next = 4;
                                            break
                                        }
                                        return mr.abrupt("return");
                                    case 4:
                                        return Xt = (0,
                                            Pt.getRandomStr)(10),
                                            Rn = ce.getText(ce.currentNotesInput),
                                            ce.setSmartNoteGenerating({
                                                taskId: ce.currentTaskId,
                                                loading: !0,
                                                action: Ft,
                                                currentNoteId: Xt
                                            }),
                                            ce.currentNotesInput = "",
                                            kn = ce.currentTaskId,
                                            mr.next = 11,
                                            (0,
                                                Pt.tryApiCatch)(ot, {
                                                engagementId: St.engagementId,
                                                text: Rn,
                                                langCode: Kt,
                                                source: "SMART_NOTE"
                                            });
                                    case 11:
                                        if (pr = mr.sent,
                                            Or = st(pr, 2),
                                            we = Or[0],
                                            lr = Or[1],
                                            !we) {
                                            mr.next = 21;
                                            break
                                        }
                                        return (Tr = ce.smartNoteGenerating) !== null && Tr !== void 0 && (Tr = Tr[kn]) !== null && Tr !== void 0 && Tr.timer && clearTimeout((Lr = ce.smartNoteGenerating) === null || Lr === void 0 ? void 0 : Lr[kn].timer),
                                            ce.nativeNotify(we, "error"),
                                            ce.setSmartNoteGenerating({
                                                taskId: kn,
                                                loading: !1
                                            }),
                                            ce.deleteSmartNoteStackByNoteId({
                                                taskId: kn,
                                                noteId: Xt
                                            }),
                                            mr.abrupt("return");
                                    case 21:
                                        lr && (ce.insertSmartNotes({
                                            smartNotes: lr.translatedText
                                        }, kn, {
                                            currentNoteId: Xt
                                        }),
                                            ce.setSmartNoteGenerating({
                                                taskId: kn,
                                                loading: !1,
                                                requestId: ""
                                            }),
                                        (Ur = ce.smartNoteGenerating) !== null && Ur !== void 0 && (Ur = Ur[kn]) !== null && Ur !== void 0 && Ur.timer && clearTimeout((Hr = ce.smartNoteGenerating) === null || Hr === void 0 ? void 0 : Hr[kn].timer),
                                        ce.currentTaskId === kn && ce.showGeneratedClassAnimation());
                                    case 22:
                                    case "end":
                                        return mr.stop()
                                }
                        }, gt)
                    }))()
                },
                handleGenerateSmartNote: function() {
                    var R = arguments
                        , ce = this;
                    return xe(Jn().mark(function gt() {
                        var Ft, Kt, St, Xt, Rn, kn, pr, Or, we, lr, Tr, Lr, Ur, Hr, Yr, mr, Je, qt, bn, br, xr, ir, Gr, Zr, na, Xr, aa, ra, kt;
                        return Jn().wrap(function(ut) {
                            for (; ; )
                                switch (ut.prev = ut.next) {
                                    case 0:
                                        if (kn = R.length > 0 && R[0] !== void 0 ? R[0] : {},
                                            pr = kn.source,
                                            Or = pr === void 0 ? "NORMAL" : pr,
                                            we = kn.action,
                                            lr = we === void 0 ? Ot.eGenerateSmartNoteAction.GENERATE : we,
                                            Tr = kn.language,
                                        lr !== Ot.eGenerateSmartNoteAction.TRANSLATE_TO) {
                                            ut.next = 4;
                                            break
                                        }
                                        return ce.handleTranslate({
                                            action: lr,
                                            language: Tr
                                        }),
                                            ut.abrupt("return");
                                    case 4:
                                        if (Lr = ce.getCurrentAAParams(),
                                            Lr) {
                                            ut.next = 7;
                                            break
                                        }
                                        return ut.abrupt("return");
                                    case 7:
                                        return Ur = (0,
                                            Pt.getRandomStr)(10),
                                            Hr = ce.getText(ce.currentNotesInput),
                                            Yr = ce.currentSmartNoteRecord ? bt({}, ce.currentSmartNoteRecord) : null,
                                            ce.setSmartNoteGenerating({
                                                taskId: ce.currentTaskId,
                                                loading: !0,
                                                action: lr,
                                                currentNoteId: Ur
                                            }),
                                            ce.currentNotesInput = "",
                                            mr = (Ft = ce.smartNoteGenerating) === null || Ft === void 0 || (Ft = Ft[ce.currentTaskId]) === null || Ft === void 0 ? void 0 : Ft.requestId,
                                        mr && (Lr = bt(bt({}, Lr), {}, {
                                            requestId: mr
                                        })),
                                        vr()(Kt = [Ot.eGenerateSmartNoteAction.RE_GENERATE, Ot.eGenerateSmartNoteAction.MAKE_LONGER, Ot.eGenerateSmartNoteAction.MAKE_SHORTER]).call(Kt, lr) || (Hr = ""),
                                        ce.currentSmartNoteTemplate && vr()(St = [Ot.eGenerateSmartNoteAction.GENERATE]).call(St, lr) && (Hr = ""),
                                        Yr?.format === "json" && Yr !== null && Yr !== void 0 && Yr.noteSourceString && vr()(Xt = [Ot.eGenerateSmartNoteAction.RE_GENERATE, Ot.eGenerateSmartNoteAction.MAKE_LONGER, Ot.eGenerateSmartNoteAction.MAKE_SHORTER]).call(Xt, lr) && (Hr = Yr.noteSourceString),
                                            Lr = bt(bt({}, Lr), {}, {
                                                preferredLanguage: window.__global_lang__,
                                                source: Or,
                                                action: lr,
                                                previous: Hr
                                            }),
                                            Je = ce.currentTaskId,
                                            ut.next = 21,
                                            (0,
                                                Pt.tryApiCatch)($e, Lr);
                                    case 21:
                                        if (qt = ut.sent,
                                            bn = st(qt, 2),
                                            br = bn[0],
                                            xr = bn[1],
                                            !br) {
                                            ut.next = 31;
                                            break
                                        }
                                        return (ir = ce.smartNoteGenerating) !== null && ir !== void 0 && (ir = ir[Je]) !== null && ir !== void 0 && ir.timer && clearTimeout((Gr = ce.smartNoteGenerating) === null || Gr === void 0 ? void 0 : Gr[Je].timer),
                                            ce.nativeNotify(br, "error"),
                                            ce.setSmartNoteGenerating({
                                                taskId: Je,
                                                loading: !1
                                            }),
                                            ce.deleteSmartNoteStackByNoteId({
                                                taskId: Je,
                                                noteId: Ur
                                            }),
                                            ut.abrupt("return");
                                    case 31:
                                        Zr = xr.status,
                                            na = xr.data,
                                            Xr = xr.requestId,
                                            ut.t0 = Zr,
                                            ut.next = ut.t0 === "FAIL" ? 35 : ut.t0 === "NONE" ? 39 : ut.t0 === "PENDING" ? 44 : ut.t0 === "SUCCESS" ? 46 : 52;
                                        break;
                                    case 35:
                                        return ce.nativeNotify(ce.$t("cci.engagement.name.currentSession.smart.note.generate.fail"), "error"),
                                            ce.setSmartNoteGenerating({
                                                taskId: Je,
                                                loading: !1,
                                                requestId: ""
                                            }),
                                            ce.deleteSmartNoteStackByNoteId({
                                                taskId: Je,
                                                noteId: Ur
                                            }),
                                            ut.abrupt("break", 52);
                                    case 39:
                                        return ce.isShowingSmartNoteNotEnough || (ce.nativeNotify(ce.$t("cci.expertassist.smart.note.not.enough"), "warning"),
                                            ce.isShowingSmartNoteNotEnough = !0,
                                            rn()(function() {
                                                ce.isShowingSmartNoteNotEnough = !1
                                            }, 1e4)),
                                            ce.setSmartNoteGenerating({
                                                taskId: Je,
                                                loading: !1,
                                                requestId: ""
                                            }),
                                            ce.deleteSmartNoteStackByNoteId({
                                                taskId: Je,
                                                noteId: Ur
                                            }),
                                        (Rn = ce.smartNoteGenerating) !== null && Rn !== void 0 && (Rn = Rn[Je]) !== null && Rn !== void 0 && Rn.timer && clearTimeout((aa = ce.smartNoteGenerating) === null || aa === void 0 ? void 0 : aa[Je].timer),
                                            ut.abrupt("break", 52);
                                    case 44:
                                        return Xr && ce.setSmartNoteGenerating({
                                            requestId: Xr,
                                            taskId: Je
                                        }),
                                            ut.abrupt("break", 52);
                                    case 46:
                                        if (!na) {
                                            ut.next = 52;
                                            break
                                        }
                                        return ce.insertSmartNotes(na, Je, {
                                            currentNoteId: Ur
                                        }),
                                            ce.setSmartNoteGenerating({
                                                taskId: Je,
                                                loading: !1,
                                                requestId: ""
                                            }),
                                        (ra = ce.smartNoteGenerating) !== null && ra !== void 0 && (ra = ra[Je]) !== null && ra !== void 0 && ra.timer && clearTimeout((kt = ce.smartNoteGenerating) === null || kt === void 0 ? void 0 : kt[Je].timer),
                                        ce.currentTaskId === Je && ce.showGeneratedClassAnimation(),
                                            ut.abrupt("break", 52);
                                    case 52:
                                    case "end":
                                        return ut.stop()
                                }
                        }, gt)
                    }))()
                },
                initPreWrapupSmartNote: (0,
                    $n.debounce)(xe(Jn().mark(function Ve() {
                    var R, ce;
                    return Jn().wrap(function(Ft) {
                        for (; ; )
                            switch (Ft.prev = Ft.next) {
                                case 0:
                                    if (!(this.showAddNotes && this.isWrapupStatus)) {
                                        Ft.next = 7;
                                        break
                                    }
                                    if (!((0,
                                        $n.isBoolean)((R = this.smartNoteGenerating) === null || R === void 0 || (R = R[this.currentTaskId]) === null || R === void 0 ? void 0 : R.loading) || this.currentNotesInput)) {
                                        Ft.next = 3;
                                        break
                                    }
                                    return Ft.abrupt("return");
                                case 3:
                                    return Ft.next = 5,
                                        this.getEnableValue("enableEaPreSmartNote");
                                case 5:
                                    ce = Ft.sent,
                                    ce && this.handleGenerateSmartNote({
                                        source: "AUTO"
                                    });
                                case 7:
                                case "end":
                                    return Ft.stop()
                            }
                    }, Ve, this)
                })), 100),
                secs2HHMMSS: function() {
                    var R = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
                    return (0,
                        Pt.secsToHHMMSS)(R)
                },
                onWrapupDone: function(R) {
                    var ce = this;
                    return xe(Jn().mark(function gt() {
                        var Ft, Kt, St, Xt, Rn, kn, pr, Or, we, lr, Tr, Lr, Ur, Hr, Yr, mr, Je, qt, bn, br, xr, ir, Gr, Zr, na, Xr;
                        return Jn().wrap(function(ra) {
                            for (; ; )
                                switch (ra.prev = ra.next) {
                                    case 0:
                                        return Rn = R.taskId,
                                            kn = Rn === void 0 ? ce.currentTaskId : Rn,
                                            pr = R.engagementId,
                                            Or = pr === void 0 ? (Ft = ce.currentEngagement) === null || Ft === void 0 ? void 0 : Ft.engagementId : pr,
                                            we = R.direction,
                                            lr = we === void 0 ? (Kt = ce.currentTask) === null || Kt === void 0 ? void 0 : Kt.direction : we,
                                            Tr = R.inChat,
                                            Lr = Tr === void 0 ? ce.inChat : Tr,
                                            Ur = R.inSMS,
                                            Hr = Ur === void 0 ? ce.inSMS : Ur,
                                            Yr = R.inPhone,
                                            mr = Yr === void 0 ? ce.inPhone : Yr,
                                            Je = R.sync,
                                            qt = Je === void 0 ? !0 : Je,
                                            console.log("onWrapupDone start: ", ce.currentActiveTask),
                                            bn = Ot.storeUtils === null || Ot.storeUtils === void 0 || (St = Ot.storeUtils.crm) === null || St === void 0 || (Xt = St.getDefaultDisposition) === null || Xt === void 0 ? void 0 : Xt.call(St),
                                            br = bt(bt({}, ce.currentActiveTask), {}, {
                                                defaultDispostion: bn
                                            }),
                                            ra.next = 6,
                                            (0,
                                                Ee.getCRMInstance)();
                                    case 6:
                                        if (xr = ra.sent,
                                            !(xr && xr.processWrapup)) {
                                            ra.next = 13;
                                            break
                                        }
                                        if (console.log("onWrapupDone execute processWrapup: ", br),
                                            !qt) {
                                            ra.next = 13;
                                            break
                                        }
                                        return ir = xr.processWrapup,
                                            ra.next = 13,
                                            ir(br);
                                    case 13:
                                        Lr || Hr ? ce.clearChatTask({
                                            taskId: kn,
                                            engagementId: Or
                                        }) : mr && lr === "outbound" ? (ce.setWhyStatusChange({
                                            triggerMode: "manually",
                                            triggerReason: "onWrapupDone-outbound",
                                            triggerEngagementId: "",
                                            triggerTaskId: kn,
                                            triggerAt: "".concat(zt()())
                                        }),
                                            ce.clearOutboundTask(kn),
                                        qt && ((Gr = ce.phoneInstance) === null || Gr === void 0 || (Gr = Gr.messager) === null || Gr === void 0 || (Zr = Gr.syncWrapupTask) === null || Zr === void 0 || Zr.call(Gr, kn))) : (ce.clearActiveTask(kn),
                                            ce.setWhyStatusChange({
                                                triggerMode: "manually",
                                                triggerReason: "onWrapupDone",
                                                triggerEngagementId: "",
                                                triggerTaskId: kn,
                                                triggerAt: "".concat(zt()())
                                            }),
                                            ce.$emit("wrapupDone"),
                                        qt && ((na = ce.phoneInstance) === null || na === void 0 || (na = na.messager) === null || na === void 0 || (Xr = na.syncWrapupTask) === null || Xr === void 0 || Xr.call(na, kn)));
                                    case 14:
                                    case "end":
                                        return ra.stop()
                                }
                        }, gt)
                    }))()
                },
                hasCacheData: function() {
                    var R;
                    return this.taskEngagementId && this.taskEngagementId == ((R = this.cacheVariables) === null || R === void 0 ? void 0 : R.engagementId)
                },
                getVariablesOnEngagement: function() {
                    var R = arguments
                        , ce = this;
                    return xe(Jn().mark(function gt() {
                        var Ft, Kt, St, Xt, Rn, kn, pr, Or, we, lr;
                        return Jn().wrap(function(Lr) {
                            for (; ; )
                                switch (Lr.prev = Lr.next) {
                                    case 0:
                                        if (Ft = R.length > 0 && R[0] !== void 0 ? R[0] : !0,
                                            ce.hasAccessVariables) {
                                            Lr.next = 3;
                                            break
                                        }
                                        return Lr.abrupt("return");
                                    case 3:
                                        if (!(Ft && ce.hasCacheData())) {
                                            Lr.next = 7;
                                            break
                                        }
                                        return ce.systemGlobalVariables = ((Kt = ce.cacheVariables) === null || Kt === void 0 ? void 0 : Kt.systemGlobalVariables) || [],
                                            ce.customGlobalVariables = ((St = ce.cacheVariables) === null || St === void 0 ? void 0 : St.customGlobalVariables) || [],
                                            Lr.abrupt("return");
                                    case 7:
                                        return ce.isLoadingEnagement = !0,
                                            Xt = {
                                                inClientEngagementSec: !0,
                                                engagementId: ce.taskEngagementId
                                            },
                                            Lr.next = 11,
                                            (0,
                                                Pt.tryApiCatch)(Fe, Xt);
                                    case 11:
                                        if (Rn = Lr.sent,
                                            kn = st(Rn, 2),
                                            pr = kn[0],
                                            Or = kn[1],
                                            ce.isLoadingEnagement = !1,
                                            !pr) {
                                            Lr.next = 18;
                                            break
                                        }
                                        return Lr.abrupt("return", ce.$message.error(pr));
                                    case 18:
                                        we = ce.systemGlobalVariables = Or.systemGlobalVariables || [],
                                            lr = ce.customGlobalVariables = Or.customGlobalVariables || [],
                                            ce.$emit("update:cacheVariables", {
                                                engagementId: ce.taskEngagementId,
                                                systemGlobalVariables: we,
                                                customGlobalVariables: lr
                                            });
                                    case 21:
                                    case "end":
                                        return Lr.stop()
                                }
                        }, gt)
                    }))()
                },
                syncOnWrapupDone: function(R) {
                    R.taskId === this.currentTaskId && this.onWrapupDone({
                        sync: !1
                    })
                },
                getEngagementData: function() {
                    var R = this;
                    return xe(Jn().mark(function ce() {
                        var gt, Ft, Kt, St, Xt;
                        return Jn().wrap(function(kn) {
                            for (; ; )
                                switch (kn.prev = kn.next) {
                                    case 0:
                                        if ((gt = R.currentActiveTask) !== null && gt !== void 0 && gt.isConference) {
                                            kn.next = 2;
                                            break
                                        }
                                        return kn.abrupt("return");
                                    case 2:
                                        return kn.next = 4,
                                            R.getCurrentCallEngagement({
                                                id: R.currentActiveTask.engagementId
                                            });
                                    case 4:
                                        if (Ft = kn.sent,
                                            Kt = st(Ft, 2),
                                            St = Kt[0],
                                            Xt = Kt[1],
                                            !St) {
                                            kn.next = 10;
                                            break
                                        }
                                        return kn.abrupt("return");
                                    case 10:
                                        R.engagementData = Xt;
                                    case 11:
                                    case "end":
                                        return kn.stop()
                                }
                        }, ce)
                    }))()
                },
                getSummaryByTime: function() {
                    var R = this;
                    this.cleanUp();
                    var ce = function() {
                        R.getSummary(),
                            R.summaryTimer = rn()(ce, 6e3)
                    };
                    ce(),
                        this.summaryCleanupTimer = rn()(function() {
                            var gt;
                            R.summaryTimer && clearTimeout(R.summaryTimer),
                            (gt = R.summary) !== null && gt !== void 0 && gt.loading && (R.summary = null)
                        }, 2e4)
                },
                getSummary: function() {
                    var R = this;
                    return xe(Jn().mark(function ce() {
                        var gt, Ft, Kt, St, Xt, Rn, kn, pr, Or, we;
                        return Jn().wrap(function(Tr) {
                            for (; ; )
                                switch (Tr.prev = Tr.next) {
                                    case 0:
                                        if (gt = R.getCurrentAAParams(),
                                            gt) {
                                            Tr.next = 3;
                                            break
                                        }
                                        return Tr.abrupt("return");
                                    case 3:
                                        return Tr.next = 5,
                                            (0,
                                                Pt.tryApiCatch)(R.isView ? fn : Ln, bt(bt({}, gt), {}, {
                                                preferredLanguage: window.__global_lang__
                                            }));
                                    case 5:
                                        if (Ft = Tr.sent,
                                            Kt = st(Ft, 2),
                                            St = Kt[0],
                                            Xt = Kt[1],
                                            !St) {
                                            Tr.next = 14;
                                            break
                                        }
                                        return R.cleanUp(),
                                            R.nativeNotify(St, "error"),
                                            R.summary = null,
                                            Tr.abrupt("return");
                                    case 14:
                                        Rn = Xt.status,
                                            kn = Xt.data,
                                            Tr.t0 = Rn,
                                            Tr.next = Tr.t0 === "SUCCESS" ? 18 : Tr.t0 === "PENDING" ? 27 : Tr.t0 === "NONE" ? 29 : 32;
                                        break;
                                    case 18:
                                        if (!kn) {
                                            Tr.next = 25;
                                            break
                                        }
                                        return pr = kn.generatedAt,
                                            Or = kn.shortSummary,
                                            we = kn.longSummary,
                                            R.summary = {
                                                generatedAt: pr,
                                                shortSummary: Or,
                                                longSummary: we,
                                                loading: !1
                                            },
                                            R.cleanUp(),
                                            Tr.abrupt("break", 32);
                                    case 25:
                                        return R.summary = {
                                            loading: !0
                                        },
                                            Tr.abrupt("break", 32);
                                    case 27:
                                        return R.summary = {
                                            loading: !0
                                        },
                                            Tr.abrupt("break", 32);
                                    case 29:
                                        return R.cleanUp(),
                                            R.summary = null,
                                            Tr.abrupt("break", 32);
                                    case 32:
                                    case "end":
                                        return Tr.stop()
                                }
                        }, ce)
                    }))()
                },
                initSmartNoteQuota: function() {
                    var R = this;
                    return xe(Jn().mark(function ce() {
                        var gt, Ft, Kt, St, Xt, Rn, kn;
                        return Jn().wrap(function(Or) {
                            for (; ; )
                                switch (Or.prev = Or.next) {
                                    case 0:
                                        if (gt = R.getCurrentAAParams(),
                                            gt) {
                                            Or.next = 3;
                                            break
                                        }
                                        return Or.abrupt("return");
                                    case 3:
                                        return Or.next = 5,
                                            (0,
                                                Pt.tryApiCatch)(tt, gt);
                                    case 5:
                                        if (Ft = Or.sent,
                                            Kt = st(Ft, 2),
                                            St = Kt[0],
                                            Xt = Kt[1],
                                            !St) {
                                            Or.next = 12;
                                            break
                                        }
                                        return R.nativeNotify(St, "error"),
                                            Or.abrupt("return");
                                    case 12:
                                        Xt ? (Rn = Xt.total,
                                            kn = Xt.used,
                                            R.quota = {
                                                total: Rn,
                                                used: kn
                                            }) : R.quota = null;
                                    case 13:
                                    case "end":
                                        return Or.stop()
                                }
                        }, ce)
                    }))()
                }
            }),
            watch: {
                isWrapupStatus: function(R, ce) {
                    console.log("isWrapupStatus", R, ce),
                    !ce && R && this.initPreWrapupSmartNote()
                },
                "currentActiveTask.engagementId": function() {
                    var Ve = xe(Jn().mark(function ce() {
                        var gt, Ft;
                        return Jn().wrap(function(St) {
                            for (; ; )
                                switch (St.prev = St.next) {
                                    case 0:
                                        if (this.getCallNotes({
                                            source: "init"
                                        }),
                                            this.getEngagementData(),
                                            this.getVariablesOnEngagement(),
                                            this.queryAgentAssistPermission(),
                                            this.handleCloseEvents(),
                                            !this.isChannelSupportAic) {
                                            St.next = 16;
                                            break
                                        }
                                        return St.next = 8,
                                            this.getEnableValue("enableAicSummary");
                                    case 8:
                                        return gt = St.sent,
                                            St.next = 11,
                                            this.getEnableValue("enableEaSmartNote");
                                    case 11:
                                        Ft = St.sent,
                                        gt && this.getSummaryByTime(),
                                        Ft && this.initSmartNoteQuota(),
                                            this.initPreWrapupSmartNote(),
                                            this.initSmartNoteTemplate();
                                    case 16:
                                    case "end":
                                        return St.stop()
                                }
                        }, ce, this)
                    }));
                    function R() {
                        return Ve.apply(this, arguments)
                    }
                    return R
                }(),
                "currentMonitorTask.engagementId": function() {
                    this.getCallNotes({
                        source: "init"
                    }),
                        this.getVariablesOnEngagement()
                },
                activeNames: {
                    deep: !0,
                    handler: function(R) {
                        this.$emit("update:engagementCollapseActive", R)
                    }
                },
                currentTaskId: function() {
                    this.followUpLoaded = !1,
                        this.notesLoaded = !1,
                        this.canShowFollowUp = !0,
                    this.isLive && this.queryAgentAssistPermission()
                }
            }
        };
        var nn = (0,
            Vn.A)(vn, M, Q, !1, null, "715c06c8", null);
        const tr = nn.exports
    }
    ,
    11862: (pn, E, a) => {
        "use strict";
        a.d(E, {
            A: () => D
        });
        var Y = a(69761)
            , J = a.n(Y)
            , $ = function() {
            var G = this
                , V = G._self._c;
            return V("div", G._l(G.variablesList, function(K) {
                var te;
                return V("zm-form-item", {
                    key: K.globalVariableId,
                    attrs: {
                        label: K.globalVariableDisplayName || K.globalVariableName,
                        tabindex: "-1"
                    }
                }, [K.dataType === "Boolean" ? V("zm-checkbox", {
                    attrs: {
                        value: K.value === "Yes" || K.value === "true",
                        disabled: !0
                    }
                }) : K.dataType === "Percent" ? V("span", {
                    class: {
                        "line-content": G.isFromProfile
                    }
                }, [G._v(`
      ` + G._s(K.value ? K.value + "%" : "--"))]) : J()(te = ["URL"]).call(te, K.dataType) ? V("span", {
                    class: {
                        "line-content": G.isFromProfile
                    },
                    attrs: {
                        title: K.value || ""
                    }
                }, [K.value ? V("zm-button", {
                    staticStyle: {
                        padding: "0",
                        "vertical-align": "initial"
                    },
                    attrs: {
                        href: K.value,
                        type: "link",
                        target: "_blank"
                    }
                }, [G._v(`
        ` + G._s(K.value) + `
      `)]) : [G._v(" -- ")]], 2) : K.dataType === "DateTime" ? V("span", {
                    class: {
                        "line-content": G.isFromProfile,
                        zm_ellipsis: !G.isFromProfile
                    },
                    attrs: {
                        title: K.value || ""
                    }
                }, [K.value ? V("span", [G._v(`
        ` + G._s(G._f("toLocaleDate")(G.getUtcTimeStamp(K.value), G.getFormatStr(!1, " "), G.tz)) + `
      `)]) : V("span", [G._v("--")])]) : V("span", {
                    class: {
                        "line-content": G.isFromProfile,
                        zm_ellipsis: !G.isFromProfile
                    },
                    attrs: {
                        title: K.value || ""
                    }
                }, [G._v(`
      ` + G._s(K.value || "--"))])], 1)
            }), 1)
        }
            , k = []
            , P = a(83314);
        const Q = {
            name: "VariablesList",
            mixins: [P.A],
            props: {
                variablesList: {
                    type: Array,
                    default: function() {
                        return []
                    }
                },
                isFromProfile: {
                    type: Boolean,
                    default: !0
                }
            }
        };
        var O = a(50855)
            , F = (0,
            O.A)(Q, $, k, !1, null, "06815244", null);
        const D = F.exports
    }
    ,
    9571: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                __esModule: () => $.B,
                default: () => Q
            });
        var Y = function() {
            var F = this
                , D = F._self._c
                , z = F._self._setupProxy;
            return D("WorkSession", {
                attrs: {
                    "before-work-session-start": F.beforeWorkSessionStart
                }
            }, [F._t("default")], 2)
        }
            , J = []
            , $ = a(36310);
        const k = $.A;
        var P = a(50855)
            , M = (0,
            P.A)(k, Y, J, !1, null, null, null);
        const Q = M.exports
    }
    ,
    62225: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => F
            });
        var Y = a(16106)
            , J = a(77563)
            , $ = function() {
            var z = this
                , G = z._self._c;
            return G("div", {
                staticClass: "click-to-dial-confirm__footer"
            }, [!z.to || z.to === "CALL" ? G("zm-button", {
                attrs: {
                    type: "primary"
                },
                on: {
                    click: function(K) {
                        return z.$emit("clickToCall")
                    }
                }
            }, [G(J.A, {
                staticClass: "click-to-dial-confirm__call",
                attrs: {
                    "aria-hidden": "true",
                    "font-size": "8px"
                }
            }), z._v(z._s(z.$t("cci.callBar.call")))], 1) : z._e(), z._v(" "), (!z.to || z.to === "SMS") && z.isSMSChannelEnabled ? G("zm-button", {
                attrs: {
                    type: z.to === "SMS" ? "primary" : void 0
                },
                on: {
                    click: function(K) {
                        return z.$emit("clickToSms")
                    }
                }
            }, [G(Y.A, {
                staticClass: "click-to-dial-confirm__sms",
                attrs: {
                    "aria-hidden": "true",
                    "font-size": "8px"
                }
            }), z._v(`
    ` + z._s(z.$t("cci.sms")))], 1) : z._e()], 1)
        }
            , k = [];
        const M = {
            name: "ClickToDialFooter",
            props: {
                isSMSChannelEnabled: {
                    type: Boolean,
                    default: !0
                },
                to: {
                    type: String,
                    default: void 0
                }
            }
        };
        var Q = a(50855)
            , O = (0,
            Q.A)(M, $, k, !1, null, "6cb8e0a3", null);
        const F = O.exports
    }
    ,
    86485: (pn, E, a) => {
        "use strict";
        a.r(E),
            a.d(E, {
                default: () => iy
            });
        var Y = function() {
            var e = this
                , n = e._self._c;
            return n("div", {
                staticStyle: {
                    height: "100%"
                }
            }, [n("MergeWindow", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.showMergeWindow,
                    expression: "showMergeWindow"
                }]
            }), e._v(" "), n("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !e.showMergeWindow,
                    expression: "!showMergeWindow"
                }, {
                    name: "loading",
                    rawName: "v-loading",
                    value: e.loading,
                    expression: "loading"
                }],
                staticStyle: {
                    height: "100%"
                }
            }, [!e.ready && !e.loading ? n("div", {
                staticStyle: {
                    "text-align": "center",
                    "padding-top": "100px"
                }
            }, [n("zm-button", {
                staticStyle: {
                    margin: "20px auto"
                },
                attrs: {
                    plain: ""
                },
                on: {
                    click: e.handleLogout
                }
            }, [e._v(`
        ` + e._s(e.$t("cci.callBar.logout")) + `
      `)])], 1) : e._e(), e._v(" "), e.ready ? [e.connectingToCore ? n("p", {
                staticClass: "multiTab__startTip",
                staticStyle: {
                    "background-color": "#fff2f0"
                }
            }, [e._v(`
        ` + e._s(e.$t("callbar.phone.connecting")) + `
      `)]) : e._e(), e._v(" "), e.coreNotStarted ? n("p", {
                staticClass: "multiTab__startTip",
                staticStyle: {
                    cursor: "pointer"
                },
                on: {
                    click: function() {
                        return e.handleFocusCoreTab()
                    }
                }
            }, [e._v(`
        ` + e._s(e.$t("cci.home.multiTab.subtab.startTip")) + `
      `)]) : e._e(), e._v(" "), e.needStart ? n("p", {
                staticClass: "start__action"
            }, [e._v(`
        ` + e._s(e.$t("cci.home.multiTab.startTip")) + `
        `), n("span", {
                staticClass: "start_button",
                on: {
                    click: e.handleStart
                }
            }, [e._v(e._s(e.$t("cci.flows.start")))])]) : e._e(), e._v(" "), n("div", {
                staticClass: "client-wrap-container",
                style: {
                    height: e.connectingToCore || e.coreNotStarted || e.needStart ? "calc(100% - 40px)" : "100%"
                },
                attrs: {
                    id: "cti-wrap-container"
                }
            }, [n("LeftSideBar", {
                attrs: {
                    worker: e.worker,
                    status: e.status,
                    "schedule-status-id-record": e.scheduleStatusIdRecord,
                    "opened-core-tab": e.openedCoreTab,
                    "menu-tab": e.menuTab,
                    "wrapup-done-flag": e.wrapupDoneFlag,
                    "refresh-recent-list": e.refreshRecentList,
                    "sms-outbound-has-draft": e.smsOutboundHasDraft,
                    "feature-options": e.featureOptions,
                    "zpns-status": e.zpnsStatus,
                    "status-modify-time": e.statusModifyTime
                },
                on: {
                    handleMenuClick: e.handleMenuClick
                }
            }), e._v(" "), n("section", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !e.isHideContent,
                    expression: "!isHideContent"
                }],
                staticClass: "main-content",
                class: {
                    smalltype: e.isSmallModel
                }
            }, [n("top-bar", {
                attrs: {
                    "enable-pop-out": e.enablePopOut
                },
                on: {
                    handleLogout: e.handleLogout,
                    popOut: function() {
                        return e.handleFocusCoreTab()
                    }
                }
            }), e._v(" "), n("div", {
                staticClass: "content-wrap"
            }, [n("div", {
                staticClass: "content-wrap-main",
                class: {
                    flex_wrap: e.isPhoneShowed && e.isPhoneInfoPanelShowed,
                    in_zendesk: e.isInZendesk
                }
            }, [e.isSmallModel ? n("div", {
                staticClass: "content-wrap-back",
                on: {
                    click: function(f) {
                        return e._handleHideCont(!0)
                    }
                }
            }, [n("span", {
                staticClass: "zm-icon-left"
            })]) : e._e(), e._v(" "), n("keep-alive", [e.menuComponentsMap[e.menuTab] !== "SmsOutboundContent" ? n(e.menuComponentsMap[e.menuTab], {
                tag: "component",
                attrs: {
                    "is-small-model": e.isSmallModel,
                    "contact-info": e.sessionRow || {},
                    "feature-options": e.featureOptions
                }
            }) : e._e()], 1), e._v(" "), e.menuComponentsMap[e.menuTab] === "SmsOutboundContent" ? n("SmsOutboundContent", {
                on: {
                    draft: function(f) {
                        e.smsOutboundHasDraft = f
                    }
                }
            }) : e._e(), e._v(" "), n("MonitorIndicator", {
                attrs: {
                    "is-show": e.isShowPhoneMonitorForAgent,
                    "agent-be-monitor-info": e.agentBeMonitorInfo
                }
            }), e._v(" "), e.isShowVideoOutbound ? n("VideoOutboundDialog", {
                on: {
                    close: function(f) {
                        e.isShowVideoOutbound = !1
                    }
                }
            }) : e._e(), e._v(" "), n("section", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.showPanelContainer,
                    expression: "showPanelContainer"
                }],
                class: ["panel__content-container", e.hidePhonePanelWhenIncomingRinging ? "phone-ringing--hide" : "", e.needShowAIEASideBarViwer ? "include-aiea" : ""],
                style: {
                    height: e.isShowPhoneMonitorForAgent ? "calc(100% - 32px)" : "100%"
                }
            }, [n("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !e.showSideBarViewer,
                    expression: "!showSideBarViewer"
                }],
                staticClass: "panel__channel-container"
            }, [n("phone-panel", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.isPhonePanelShowed,
                    expression: "isPhonePanelShowed"
                }],
                ref: "phone",
                class: {
                    "phone-global--show": e.enableGlobalDial
                },
                attrs: {
                    "phone-tab-wrap": e.isPhoneShowed,
                    duration: e.wraupDisplayTime
                },
                scopedSlots: e._u([e.isPhoneInfoPanelShowed ? {
                    key: "header",
                    fn: function(f) {
                        return [n("ThePanelHeader", {
                            attrs: {
                                title: e.wrapupNumber,
                                duration: e.wraupDisplayTime,
                                "engagement-id": f?.engagementId,
                                to: f?.to,
                                "sentiment-score-map": e.sentimentScoreMap,
                                "show-command": "",
                                "border-bottom": ""
                            }
                        })]
                    }
                } : null], null, !0)
            }), e._v(" "), n("Chat", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.isChatPanelShowed,
                    expression: "isChatPanelShowed"
                }],
                staticStyle: {
                    width: "100%"
                },
                attrs: {
                    "feature-options": e.featureOptions
                },
                on: {
                    end: e.handleEndChat
                },
                scopedSlots: e._u([e.isChatPanelShowed ? {
                    key: "header",
                    fn: function(f) {
                        return [n("ThePanelHeader", {
                            attrs: {
                                title: e.chatVideoName,
                                duration: e.wraupDisplayTime,
                                "engagement-id": f?.engagementId,
                                to: f?.to,
                                "sentiment-score-map": e.sentimentScoreMap,
                                "show-command": "",
                                "border-bottom": ""
                            }
                        })]
                    }
                } : null], null, !0)
            }), e._v(" "), n("LiveVideoV3", {
                ref: "liveVideo",
                staticStyle: {
                    width: "100%"
                },
                attrs: {
                    "is-video-showed": e.isVideoShowed,
                    "feature-options": e.featureOptions,
                    "enable-native-video": e.enableNativeVideo
                },
                scopedSlots: e._u([e.isVideoShowed ? {
                    key: "header",
                    fn: function(f) {
                        return [n("ThePanelHeader", {
                            attrs: {
                                title: e.chatVideoName,
                                duration: e.wraupDisplayTime,
                                "engagement-id": f?.engagementId,
                                to: f?.to,
                                "sentiment-score-map": e.sentimentScoreMap,
                                "show-command": "",
                                "border-bottom": ""
                            }
                        })]
                    }
                } : null], null, !0)
            })], 1), e._v(" "), n("TheSideBarViewer", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.needShowSideBarViewer && !e.isExpertAssistPanelShowed,
                    expression: "needShowSideBarViewer && !isExpertAssistPanelShowed"
                }],
                ref: "sideBar",
                staticClass: "infoPanel",
                attrs: {
                    "enable-zva-agent-assist": e.enableZvaAgentAssist,
                    "enable-pop-out": e.enablePopOut
                },
                on: {
                    wrapupDone: e.handleWrapupDone,
                    "click-back": e.hideUserPanels
                }
            }), e._v(" "), n("TheAieaSideBarView", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.needShowAIEASideBarViwer,
                    expression: "needShowAIEASideBarViwer"
                }],
                staticClass: "aiInfoPanel",
                attrs: {
                    "enable-zva-agent-assist": e.enableZvaAgentAssist,
                    "enable-pop-out": e.enablePopOut
                },
                on: {
                    wrapupDone: e.handleWrapupDone,
                    "click-back": e.hideUserPanels
                }
            })], 1), e._v(" "), e.isMenuLogSettingsSelected ? n("logSettings") : e._e(), e._v(" "), e.isMenuNotificationCenterSelected ? n("notificationCenter") : e._e()], 1), e._v(" "), n("RightSideBar", {
                attrs: {
                    "is-right-bar-showed": e.needShowRightBar,
                    "enable-zva-agent-assist": e.enableZvaAgentAssist,
                    "is-video-showed": e.isVideoShowed,
                    "enable-pop-out": e.enablePopOut
                }
            })], 1)], 1)], 1), e._v(" "), n("ChatTask", {
                attrs: {
                    "opened-core-tab": e.openedCoreTab
                },
                on: {
                    end: e.handleEndChat
                }
            }), e._v(" "), n("LiveVideoTask", {
                attrs: {
                    status: e.queryCurrentStatus(),
                    "feature-options": e.featureOptions
                }
            }), e._v(" "), e.inboxReadPermission ? n("NotifyUnsolvedVoicemails") : e._e()] : e._e(), e._v(" "), n("SMSWarning")], 2), e._v(" "), n("GlobalRing")], 1)
        }
            , J = []
            , $ = a(65770)
            , k = a.n($)
            , P = a(69761)
            , M = a.n(P)
            , Q = a(83537)
            , O = a.n(Q)
            , F = a(69279)
            , D = a.n(F)
            , z = a(74732)
            , G = a.n(z)
            , V = a(14950)
            , K = a.n(V)
            , te = a(27425)
            , ee = a.n(te)
            , pe = a(39084)
            , ne = a.n(pe)
            , X = a(61849)
            , x = a.n(X)
            , H = a(81352)
            , q = a.n(H)
            , _e = a(84653)
            , ie = a.n(_e)
            , ze = a(59814)
            , Oe = a.n(ze)
            , Cn = a(89099)
            , at = a.n(Cn)
            , Sn = a(44987)
            , Ce = a.n(Sn)
            , wn = a(34622)
            , Ae = a.n(wn)
            , nr = a(27785)
            , mt = a.n(nr)
            , jn = a(83030)
            , ve = a.n(jn)
            , or = a(65888)
            , pt = a.n(or)
            , je = a(34187)
            , Ke = a.n(je)
            , it = a(73007)
            , Ne = a.n(it)
            , Gt = a(23716)
            , en = a.n(Gt)
            , rn = a(2208)
            , Tt = a.n(rn)
            , vr = a(39864)
            , rr = a.n(vr)
            , kr = a(8233)
            , Re = a.n(kr)
            , Et = a(92336)
            , An = a.n(Et)
            , Yt = a(5339)
            , gn = a.n(Yt)
            , Qe = a(74061)
            , ar = a.n(Qe)
            , zt = a(53578)
            , Zt = a(76856)
            , Lt = a(83266)
            , gr = a(93044)
            , Mn = a(76709)
            , U = a(56405)
            , Mt = a(14587)
            , Kn = a(72579)
            , In = a.n(Kn)
            , tn = a(67918)
            , Ot = a(89012)
            , Pt = a.n(Ot)
            , $n = a(97951);
        function dt() {
            return request({
                url: "/cci/web/getToken?".concat(_Date$now()),
                meetingWebPath: !0,
                baseURL: "",
                method: "post"
            })
        }
        function Xe() {
            return request({
                url: "/cci/web/long/token?".concat(_Date$now()),
                meetingWebPath: !0,
                baseURL: "",
                method: "post"
            })
        }
        function ht(i) {
            var e = i.headers;
            return request({
                url: "/cci/web/access/token",
                meetingWebPath: !0,
                baseURL: "",
                method: "post",
                headers: e
            })
        }
        function yn() {
            return (0,
                $n.default)({
                url: "/user/sec/logout",
                method: "post"
            })
        }
        function dn(i) {
            var e = i.headers;
            return (0,
                $n.default)({
                url: "/cci/web/crm/logout",
                meetingWebPath: !0,
                baseURL: "",
                method: "post",
                headers: e
            })
        }
        function Gn() {
            return request({
                url: "/wallboard/session/account/zr/getAccessTokenV2",
                withCredentials: !0,
                method: "get"
            })
        }
        function sr() {
            return request({
                url: "/wallboard/session/account/zr/refreshToken",
                withCredentials: !0,
                method: "get"
            })
        }
        function Zn() {
            return request({
                url: "zoom/web/menu",
                method: "post"
            })
        }
        function _r() {
            return request({
                url: "/zoom/web/account/is-setup",
                method: "get"
            })
        }
        function Pn(i) {
            return request({
                url: "/zoom/web/account/setup",
                method: "post",
                data: i
            })
        }
        function Ze() {
            return request({
                url: "/zoom/web/account/is_show_country",
                method: "get"
            })
        }
        function Vn(i) {
            return request({
                url: "/zoom/web/account/country/list",
                method: "get",
                params: i
            })
        }
        function Se(i) {
            return request({
                url: "/zoom/web/account/state/list",
                method: "get",
                params: i
            })
        }
        function Ue(i) {
            return request({
                url: "/pbx/qos/usr-info?".concat(_Date$now()),
                meetingWebPath: !0,
                baseURL: "",
                method: "post",
                data: i
            })
        }
        function yt() {
            var i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}
                , e = i.headers
                , n = e === void 0 ? {} : e;
            return request({
                url: "feature/list",
                method: "get",
                headers: n
            })
        }
        function Qt(i) {
            "@babel/helpers - typeof";
            return Qt = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                Qt(i)
        }
        function Hn(i, e) {
            var n = _Object$keys(i);
            if (_Object$getOwnPropertySymbols) {
                var l = _Object$getOwnPropertySymbols(i);
                e && (l = _filterInstanceProperty(l).call(l, function(f) {
                    return _Object$getOwnPropertyDescriptor(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function cr(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? _forEachInstanceProperty(n = Hn(Object(f), !0)).call(n, function(g) {
                    Rr(i, g, f[g])
                }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(i, _Object$getOwnPropertyDescriptors(f)) : _forEachInstanceProperty(l = Hn(Object(f))).call(l, function(g) {
                    _Object$defineProperty(i, g, _Object$getOwnPropertyDescriptor(f, g))
                })
            }
            return i
        }
        function Rr(i, e, n) {
            return (e = Pr(e))in i ? _Object$defineProperty(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function Pr(i) {
            var e = rt(i, "string");
            return Qt(e) == "symbol" ? e : e + ""
        }
        function rt(i, e) {
            if (Qt(i) != "object" || !i)
                return i;
            var n = i[_Symbol$toPrimitive];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (Qt(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        function ae() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            ae = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && Qt(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(Qt(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function de(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function ye(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            de(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            de(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function Le(i, e, n, l, f) {
            return Te.apply(this, arguments)
        }
        function Te() {
            return Te = ye(ae().mark(function i(e, n, l, f, g) {
                var I, T;
                return ae().wrap(function(N) {
                    for (; ; )
                        switch (N.prev = N.next) {
                            case 0:
                                return I = {
                                    status: e,
                                    clientVersion: f,
                                    instanceId: g
                                },
                                n && (I.taskId = n),
                                l && (I.subReason = l),
                                    N.next = 5,
                                    (0,
                                        $n.default)({
                                        url: "/user/status",
                                        method: "put",
                                        headers: {
                                            accept: "*/*",
                                            "content-type": "application/json"
                                        },
                                        data: I
                                    });
                            case 5:
                                return T = N.sent,
                                    N.abrupt("return", T.data);
                            case 7:
                            case "end":
                                return N.stop()
                        }
                }, i)
            })),
                Te.apply(this, arguments)
        }
        function be(i) {
            return me.apply(this, arguments)
        }
        function me() {
            return me = ye(ae().mark(function i(e) {
                var n, l;
                return ae().wrap(function(g) {
                    for (; ; )
                        switch (g.prev = g.next) {
                            case 0:
                                return n = e.status,
                                    l = e.agentId,
                                    g.abrupt("return", request({
                                        url: "/user/agent/status",
                                        method: "put",
                                        data: {
                                            status: n,
                                            agentId: l
                                        }
                                    }));
                            case 2:
                            case "end":
                                return g.stop()
                        }
                }, i)
            })),
                me.apply(this, arguments)
        }
        function He() {
            return (0,
                $n.default)({
                url: "/agent-status/cancel-offline-job",
                method: "delete"
            })
        }
        function Ct(i, e) {
            return (0,
                $n.default)({
                url: "/agent-status/ws-connected",
                method: "post",
                params: i,
                data: e
            })
        }
        function wt(i, e) {
            var n = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/agent_statuses",
                method: "get",
                params: e
            });
            return n
        }
        function Bt(i) {
            var e = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/agent_statuses/" + i.agentStatusId,
                method: "get"
            });
            return e
        }
        function En(i) {
            var e = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/agent_statuses/" + i.agentStatusId,
                method: "delete"
            });
            return e
        }
        function Pe(i, e) {
            var n = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/task-channels",
                method: "get",
                params: e
            });
            return n
        }
        function W(i) {
            var e = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/task-channels/" + i.taskChannelId,
                method: "delete"
            });
            return e
        }
        function Ee(i, e) {
            var n = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/taskqueues",
                method: "get",
                params: e
            });
            return n
        }
        function nt(i) {
            var e = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/taskqueues/" + i.queueId,
                method: "get"
            });
            return e
        }
        function Ie(i, e) {
            var n = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/taskqueues/" + i.queueId,
                method: "post",
                data: e
            });
            return n
        }
        function Be(i) {
            var e = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/taskqueues/" + i.queueId,
                method: "delete"
            });
            return e
        }
        function st(i, e) {
            var n = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/tasks",
                method: "get",
                params: e
            });
            return n
        }
        function jt(i) {
            var e = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/tasks/" + i.taskId,
                method: "get"
            });
            return e
        }
        function _t(i, e) {
            var n = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/tasks/" + i.taskId,
                method: "post",
                data: e
            });
            return n
        }
        function Ge(i) {
            var e = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/tasks/" + i.taskId,
                method: "delete"
            });
            return e
        }
        function It(i, e) {
            var n = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/tasks/" + i.taskId + "/reservations",
                method: "get",
                params: e
            });
            return n
        }
        function cn(i) {
            var e = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/tasks/" + i.taskId + "/reservations/" + i.reservationId,
                method: "get"
            });
            return e
        }
        function ct(i, e) {
            var n = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/tasks/" + i.taskId + "/reservations/" + i.reservationId,
                method: "post",
                data: e
            });
            return n
        }
        function De(i, e) {
            var n = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/agents",
                method: "get",
                params: e
            });
            return n
        }
        function bt(i) {
            var e = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/agents/" + i.agentId,
                method: "get"
            });
            return e
        }
        function un(i, e) {
            var n = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/agents/" + i.agentId,
                method: "post",
                data: e
            });
            return n
        }
        function ur(i) {
            var e = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/agents/" + i.agentId,
                method: "delete"
            });
            return e
        }
        function _n(i, e) {
            var n = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/flows",
                method: "get",
                params: e
            });
            return n
        }
        function Jn(i) {
            var e = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/flows/" + i.flowId,
                method: "get"
            });
            return e
        }
        function Ut(i, e) {
            var n = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/flows/" + i.flowId,
                method: "post",
                data: e
            });
            return n
        }
        function xe(i) {
            var e = request({
                url: "console/routingengine/" + i.accountId + "/workspaces/" + i.workspaceId + "/flows/" + i.flowId,
                method: "delete"
            });
            return e
        }
        function We(i) {
            return Nt.apply(this, arguments)
        }
        function Nt() {
            return Nt = ye(ae().mark(function i(e) {
                var n;
                return ae().wrap(function(f) {
                    for (; ; )
                        switch (f.prev = f.next) {
                            case 0:
                                return f.next = 2,
                                    request({
                                        url: "call/history",
                                        headers: {
                                            accept: "*/*"
                                        },
                                        params: e
                                    });
                            case 2:
                                return n = f.sent,
                                    f.abrupt("return", n.data.result);
                            case 4:
                            case "end":
                                return f.stop()
                        }
                }, i)
            })),
                Nt.apply(this, arguments)
        }
        function hn(i) {
            return Ln.apply(this, arguments)
        }
        function Ln() {
            return Ln = ye(ae().mark(function i(e) {
                var n;
                return ae().wrap(function(f) {
                    for (; ; )
                        switch (f.prev = f.next) {
                            case 0:
                                return f.next = 2,
                                    request({
                                        url: "/call/transfer/acceptCall",
                                        method: "post",
                                        data: e
                                    });
                            case 2:
                                if (n = f.sent,
                                    n.data.status) {
                                    f.next = 5;
                                    break
                                }
                                throw new Error(n.data.errorMessage);
                            case 5:
                                return f.abrupt("return", n.data.result);
                            case 6:
                            case "end":
                                return f.stop()
                        }
                }, i)
            })),
                Ln.apply(this, arguments)
        }
        function fn(i) {
            return $e.apply(this, arguments)
        }
        function $e() {
            return $e = ye(ae().mark(function i(e) {
                var n, l;
                return ae().wrap(function(g) {
                    for (; ; )
                        switch (g.prev = g.next) {
                            case 0:
                                return n = "/call/transfer/updateCallStatus",
                                    g.next = 3,
                                    request({
                                        url: n,
                                        method: "post",
                                        data: e
                                    });
                            case 3:
                                if (l = g.sent,
                                    l.data.status) {
                                    g.next = 6;
                                    break
                                }
                                throw new Error(l.data.errorMessage);
                            case 6:
                                return g.abrupt("return", cr(cr({}, l.data.result), {}, {
                                    traceId: l?.traceId
                                }));
                            case 7:
                            case "end":
                                return g.stop()
                        }
                }, i)
            })),
                $e.apply(this, arguments)
        }
        function tt(i) {
            return request({
                url: "/routingengine/task/cherrypickTaskByEngagement",
                method: "post",
                data: i
            })
        }
        function ot(i) {
            return request({
                url: "/routingengine/task/uncherrypickTaskByEngagement",
                method: "post",
                data: i
            })
        }
        var on = a(38236)
            , Fe = a(27313)
            , Mr = function() {
            var e = this
                , n = e._self._c;
            return n("div", {
                ref: "aiExpertAssistRightPanel",
                staticClass: "aiea-sidebar-view__container"
            }, [n("div", {
                staticClass: "aiea-sidebar-view__container__header"
            }, [n("div", {
                staticClass: "ai-title",
                attrs: {
                    role: "heading",
                    "aria-level": "2"
                }
            }, [e._v(`
      ` + e._s(e.$t("cci.agentassist.AgentAssist")) + `
    `)]), e._v(" "), n("zm-button", {
                attrs: {
                    type: "icon",
                    icon: "zm-icon-close",
                    ghost: "",
                    size: "small"
                },
                on: {
                    click: function(f) {
                        return e.$emit("click-back")
                    }
                }
            })], 1), e._v(" "), e.isChannelSupportAiea ? [e.activeRightTabIndex === e.eRightBarTab.expertAssist ? n("AIExpertAssistPanelEnhance", {
                ref: "AIExpertAssistPanelRef",
                attrs: {
                    "is-crm": ""
                }
            }) : e._e()] : e._e()], 2)
        }
            , Jt = []
            , Dt = a(4439)
            , an = a(61367)
            , Bn = a(30824)
            , vn = a(83314);
        function nn(i) {
            "@babel/helpers - typeof";
            return nn = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                nn(i)
        }
        function tr(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function Ve(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = tr(Object(f), !0)).call(n, function(g) {
                    R(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = tr(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function R(i, e, n) {
            return (e = ce(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function ce(i) {
            var e = gt(i, "string");
            return nn(e) == "symbol" ? e : e + ""
        }
        function gt(i, e) {
            if (nn(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (nn(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        const Ft = {
            data: function() {
                return {
                    eRightBarTab: U.eRightBarTab,
                    eMenuName: U.eMenuName
                }
            },
            computed: Ve(Ve({}, (0,
                zt.mapGetters)("sessionPanels", ["activeRightTabIndexWithoutDefault", "closedRightTabIndex", "rightbarTabIndex", "currentActiveTask", "currentMonitorTask", "engagementInPage", "historyIsInDetailPage", "menuTab"])), {}, {
                isLive: function() {
                    return this.inActivity || this.inMonitoring
                },
                inActivity: function() {
                    return this.inPhone || this.inSMS || this.inChat || this.inVideo || this.inMonitorPhone
                },
                inMonitoring: function() {
                    return this.inMonitorSMS || this.inMonitorChat || this.inMonitorVideo
                },
                currentEventType: function() {
                    var e;
                    return (e = this.currentActiveTask) === null || e === void 0 ? void 0 : e.eventType
                },
                inPhone: function() {
                    var e, n;
                    return this.menuTab === U.eMenuName.sessionActive && K()(e = ["accepted", "takeover.accepted", "call.ended", "callHangup"]).call(e, (n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.eventType) > -1
                },
                inChat: function() {
                    var e, n, l, f;
                    return this.menuTab === U.eMenuName.chatPanel && K()(e = ["chat.accepted", "chat.ended"]).call(e, (n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.eventType) > -1 || this.menuTab === U.eMenuName.chatWrapup && K()(l = ["chat.ended"]).call(l, (f = this.currentActiveTask) === null || f === void 0 ? void 0 : f.eventType) > -1
                },
                inEmail: function() {
                    var e, n, l, f, g;
                    return (this.menuTab === U.eMenuName.chatPanel && K()(e = ["chat.accepted", "chat.ended"]).call(e, (n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.eventType) > -1 || this.menuTab === U.eMenuName.chatWrapup && K()(l = ["chat.ended"]).call(l, (f = this.currentActiveTask) === null || f === void 0 ? void 0 : f.eventType) > -1) && ((g = this.currentActiveTask) === null || g === void 0 ? void 0 : g.subChannel) === U.CHANNEL_KEYS.email.keyUpper
                },
                inSMS: function() {
                    var e, n, l, f;
                    return this.menuTab === U.eMenuName.chatPanel && K()(e = ["sms.accepted", "sms.ended"]).call(e, (n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.eventType) > -1 || this.menuTab === U.eMenuName.chatWrapup && K()(l = ["sms.ended"]).call(l, (f = this.currentActiveTask) === null || f === void 0 ? void 0 : f.eventType) > -1
                },
                inVideo: function() {
                    var e, n;
                    return this.menuTab === U.eMenuName.sessionActive && K()(e = ["v.accepted", "v.ended"]).call(e, (n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.eventType) > -1
                },
                inMonitorPhone: function() {
                    var e, n, l;
                    return this.menuTab === U.eMenuName.sessionMonitor && K()(e = ["monitor.start"]).call(e, (n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.eventType) > -1 && ((l = this.currentActiveTask) === null || l === void 0 ? void 0 : l.channel) !== "video"
                },
                inMonitorChat: function() {
                    var e;
                    return this.menuTab === U.eMenuName.sessionMonitorChatSMS && ((e = this.currentMonitorTask) === null || e === void 0 ? void 0 : e.type) === "chat"
                },
                inMonitorSMS: function() {
                    var e;
                    return this.menuTab === U.eMenuName.sessionMonitorChatSMS && ((e = this.currentMonitorTask) === null || e === void 0 ? void 0 : e.type) === "sms"
                },
                inMonitorVideo: function() {
                    var e;
                    return this.menuTab === U.eMenuName.sessionMonitor && ((e = this.currentMonitorTask) === null || e === void 0 ? void 0 : e.type) === "video"
                },
                inViewPhone: function() {
                    return this.menuTab === U.eMenuName.engagements && this.engagementInPage === "inActivePhoneView"
                },
                inViewVideo: function() {
                    return this.menuTab === U.eMenuName.engagements && this.engagementInPage === "inActiveVideoView"
                },
                isRightProfileShowed: function() {
                    return this.isLive ? this.activeRightTabIndexWithoutDefault === U.eRightBarTab.profile : this.inViewVideo || this.inViewPhone ? this.rightbarTabIndex === U.eRightBarTab.profile : this.menuTab === U.eMenuName.engagements && this.historyIsInDetailPage ? this.closedRightTabIndex === U.eRightBarTab.profile : this.menuTab === U.eMenuName.sessionRecent ? this.closedRightTabIndex === U.eRightBarTab.profile : !1
                },
                isRightEngagementShowed: function() {
                    return this.isLive ? this.activeRightTabIndexWithoutDefault === U.eRightBarTab.engagement : this.inViewVideo || this.inViewPhone ? this.rightbarTabIndex === U.eRightBarTab.engagement : this.menuTab === U.eMenuName.engagements && this.historyIsInDetailPage ? this.closedRightTabIndex === U.eRightBarTab.engagement : this.menuTab === U.eMenuName.sessionRecent ? this.closedRightTabIndex === U.eRightBarTab.engagement : !1
                },
                isRightTicketShowed: function() {
                    return this.isLive ? this.activeRightTabIndexWithoutDefault === U.eRightBarTab.ticket : this.inViewVideo || this.inViewPhone ? this.rightbarTabIndex === U.eRightBarTab.ticket : this.menuTab === U.eMenuName.engagements && this.historyIsInDetailPage ? this.closedRightTabIndex === U.eRightBarTab.ticket : this.menuTab === U.eMenuName.sessionRecent ? this.closedRightTabIndex === U.eRightBarTab.ticket : !1
                },
                isResponseAssistantShowed: function() {
                    return this.isLive ? this.activeRightTabIndexWithoutDefault === U.eRightBarTab.responseAssistant : this.inViewVideo || this.inViewPhone ? this.rightbarTabIndex === U.eRightBarTab.responseAssistant : this.menuTab === U.eMenuName.responseAssistant && this.historyIsInDetailPage ? this.closedRightTabIndex === U.eRightBarTab.responseAssistant : this.menuTab === U.eMenuName.sessionRecent ? this.closedRightTabIndex === U.eRightBarTab.responseAssistant : !1
                },
                isAgentAssistShowed: function() {
                    return this.isLive ? this.activeRightTabIndexWithoutDefault === U.eRightBarTab.agentAssist : this.inViewVideo || this.inViewPhone ? this.rightbarTabIndex === U.eRightBarTab.agentAssist : this.menuTab === U.eMenuName.agentAssist && this.historyIsInDetailPage ? this.closedRightTabIndex === U.eRightBarTab.agentAssist : this.menuTab === U.eMenuName.sessionRecent ? this.closedRightTabIndex === U.eRightBarTab.agentAssist : !1
                },
                isKnowledgeBaseShowed: function() {
                    return this.isLive ? this.activeRightTabIndexWithoutDefault === U.eRightBarTab.knowledgeBase : this.inViewVideo || this.inViewPhone ? this.rightbarTabIndex === U.eRightBarTab.knowledgeBase : this.menuTab === U.eMenuName.knowledgeBase && this.historyIsInDetailPage ? this.closedRightTabIndex === U.eRightBarTab.knowledgeBase : this.menuTab === U.eMenuName.sessionRecent ? this.closedRightTabIndex === U.eRightBarTab.knowledgeBase : !1
                },
                isExpertAssistPanelShowed: function() {
                    return this.isLive ? this.activeRightTabIndexWithoutDefault === U.eRightBarTab.expertAssist : this.inViewVideo || this.inViewPhone ? this.rightbarTabIndex === U.eRightBarTab.expertAssist : this.menuTab === U.eMenuName.expertAssist && this.historyIsInDetailPage ? this.closedRightTabIndex === U.eRightBarTab.expertAssist : this.menuTab === U.eMenuName.sessionRecent ? this.closedRightTabIndex === U.eRightBarTab.expertAssist : !1
                },
                rightAppActiveId: function() {
                    return this.isLive ? this.activeRightTabIndexWithoutDefault : this.inViewVideo || this.inViewPhone ? this.rightbarTabIndex : this.menuTab === U.eMenuName.engagements ? this.closedRightTabIndex : this.menuTab === U.eMenuName.sessionRecent ? this.closedRightTabIndex : ""
                },
                isRightJourneyShowed: function() {
                    return !1
                },
                isWrapupStatus: function() {
                    var e, n, l, f;
                    return this.inPhone && ((e = this.currentActiveTask) === null || e === void 0 ? void 0 : e.eventType) === "call.ended" || this.inVideo && ((n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.eventType) === "v.ended" || this.inSMS && ((l = this.currentActiveTask) === null || l === void 0 ? void 0 : l.eventType) === "sms.ended" || this.inChat && ((f = this.currentActiveTask) === null || f === void 0 ? void 0 : f.eventType) === "chat.ended"
                },
                isShowWrapup: function() {
                    var e, n, l, f, g;
                    return this.inPhone && (((e = this.currentActiveTask) === null || e === void 0 ? void 0 : e.eventType) === "call.ended" || ((n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.eventType) === "callHangup") || this.inVideo && ((l = this.currentActiveTask) === null || l === void 0 ? void 0 : l.eventType) === "v.ended" || this.inSMS && ((f = this.currentActiveTask) === null || f === void 0 ? void 0 : f.eventType) === "sms.ended" || this.inChat && ((g = this.currentActiveTask) === null || g === void 0 ? void 0 : g.eventType) === "chat.ended"
                }
            }),
            methods: {}
        };
        var Kt = a(4285)
            , St = a(77719);
        function Xt(i) {
            "@babel/helpers - typeof";
            return Xt = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                Xt(i)
        }
        function Rn(i, e) {
            return lr(i) || we(i, e) || pr(i, e) || kn()
        }
        function kn() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function pr(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return Or(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? Or(i, e) : void 0
            }
        }
        function Or(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function we(i, e) {
            var n = i == null ? null : typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (n != null) {
                var l, f, g, I, T = [], A = !0, N = !1;
                try {
                    if (g = (n = n.call(i)).next,
                    e === 0) {
                        if (Object(n) !== n)
                            return;
                        A = !1
                    } else
                        for (; !(A = (l = g.call(n)).done) && (T.push(l.value),
                        T.length !== e); A = !0)
                            ;
                } catch (re) {
                    N = !0,
                        f = re
                } finally {
                    try {
                        if (!A && n.return != null && (I = n.return(),
                        Object(I) !== I))
                            return
                    } finally {
                        if (N)
                            throw f
                    }
                }
                return T
            }
        }
        function lr(i) {
            if (rr()(i))
                return i
        }
        function Tr() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Tr = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && Xt(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(Xt(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function Lr(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function Ur(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            Lr(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            Lr(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function Hr(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function Yr(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = Hr(Object(f), !0)).call(n, function(g) {
                    mr(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = Hr(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function mr(i, e, n) {
            return (e = Je(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function Je(i) {
            var e = qt(i, "string");
            return Xt(e) == "symbol" ? e : e + ""
        }
        function qt(i, e) {
            if (Xt(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (Xt(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        var bn = Zt.queueApi.getQueueInfoSingle;
        const xr = {
            name: "TheAieaPanel",
            mixins: [vn.A, Ft, Kt.A],
            props: {
                enableZvaAgentAssist: {
                    type: Boolean,
                    default: !1
                }
            },
            setup: function() {
                var e = (0,
                    Lt.useAgentAssist)()
                    , n = e.getEnableValue
                    , l = e.queryAgentAssistPermission
                    , f = e.isChannelSupportAiea
                    , g = (0,
                    St.useCollapse)()
                    , I = g.setCollapse;
                return {
                    queryAgentAssistPermission: l,
                    getEnableValue: n,
                    setCollapse: I,
                    isChannelSupportAiea: f
                }
            },
            data: function() {
                return {
                    crmPlatfrom: (0,
                        Bn.getCRM)(),
                    timeMap: [],
                    WAIT: 1e3,
                    eRightBarTab: U.eRightBarTab,
                    mounted: !1,
                    observerSize: {
                        middle: !1,
                        small: !1,
                        mini: !1
                    }
                }
            },
            computed: Yr(Yr(Yr({}, (0,
                zt.mapGetters)("sessionPanels", ["currentActiveTask", "currentTaskId", "cciQueues", "activeRightTabIndex"])), (0,
                zt.mapGetters)("crm", ["getAppPanelWidth"])), {}, {
                agentAssistInfo: function() {
                    var e = this.currentActiveTask || {}
                        , n = e.queueId
                        , l = e.direction
                        , f = e.outboundQueueId
                        , g = e.tkType
                        , I = l === "outbound" && g === "phone" ? f : n;
                    return I ? this.cciQueues[I] : {
                        agentAssistCategoryId: "",
                        agentAssistCategoryName: ""
                    }
                }
            }),
            watch: {
                currentTaskId: function(e, n) {
                    e && n && (this.onCurrentTaskChange(e),
                        this.queryAgentAssistPermission())
                },
                isShowWrapup: function(e) {
                    e && this.onWrapupStatus()
                },
                activeRightTabIndex: function(e) {
                    e === U.eRightBarTab.expertAssist ? this.setCollapse(!0) : this.$bus.$emit("clearExtensionStatus")
                },
                getAppPanelWidth: function(e) {
                    var n = this.crmPlatfrom === Dt.CRMS.MsDynamics;
                    n && e === an.AppWidthState.MINIMIZED && this.$emit("click-back")
                }
            },
            methods: Yr(Yr(Yr({}, (0,
                zt.mapActions)("sessionPanels", ["setRightTabIndex"])), (0,
                zt.mapMutations)("sessionPanels", ["addQueueInfo4AgentAssist", "setHasInitKB", "setHasInitAA"])), {}, {
                onCurrentTaskChange: function() {
                    this.isLive && this.initAgentAssistPanel()
                },
                handleWrapDone: function() {
                    this.$emit("wrapupDone")
                },
                initAgentAssistPanel: function() {
                    var e = this;
                    return Ur(Tr().mark(function n() {
                        var l, f, g, I, T, A, N;
                        return Tr().wrap(function(fe) {
                            for (; ; )
                                switch (fe.prev = fe.next) {
                                    case 0:
                                        return f = e.isChannelSupportAiea,
                                            fe.next = 3,
                                            e.getEnableValue("enableEaIntent");
                                    case 3:
                                        return g = fe.sent,
                                            fe.next = 6,
                                            e.getEnableValue("enableEaKb");
                                    case 6:
                                        return I = fe.sent,
                                            fe.next = 9,
                                            e.getEnableValue("enableEaBestAction");
                                    case 9:
                                        T = fe.sent,
                                        f && (g || I || T) && M()(l = [U.eRightBarTab.knowledgeBase, U.eRightBarTab.agentAssist, U.eRightBarTab.expertAssist]).call(l, e.activeRightTabIndex) && (e.$bus.$emit("clearExtensionStatus"),
                                        (A = e.$refs) === null || A === void 0 || (A = A.AIExpertAssistPanelRef) === null || A === void 0 || A.reset(),
                                            N = e.activeRightTabIndex === e.eRightBarTab.expertAssist,
                                        N && (e.setHasInitKB(!0),
                                            e.setHasInitAA(!0)),
                                            e.$nextTick(function() {
                                                N && (e.setHasInitKB(!1),
                                                    e.setHasInitAA(!1))
                                            }));
                                    case 11:
                                    case "end":
                                        return fe.stop()
                                }
                        }, n)
                    }))()
                },
                initDetectMessage: function(e) {
                    var n = this;
                    return Ur(Tr().mark(function l() {
                        var f, g, I, T, A, N, re, fe, ke, Ht, vt, Me, he, sn, ln, lt, Tn, Wn, Dn, xt;
                        return Tr().wrap(function(xn) {
                            for (; ; )
                                switch (xn.prev = xn.next) {
                                    case 0:
                                        if (f = e.type,
                                            g = e.message,
                                            I = e.messageId,
                                            T = e.sr,
                                        T === "click" && (n.setHasInitKB(!0),
                                            n.setHasInitAA(!0)),
                                            A = n.enableZvaAgentAssist,
                                            N = n.isChannelSupportAiea,
                                        A && N) {
                                            xn.next = 5;
                                            break
                                        }
                                        return xn.abrupt("return");
                                    case 5:
                                        if (re = n.agentAssistInfo,
                                            fe = re.queueId,
                                            ke = re.agentAssistCategoryId,
                                            Ht = ke === void 0 ? "" : ke,
                                            fe) {
                                            xn.next = 8;
                                            break
                                        }
                                        return xn.abrupt("return");
                                    case 8:
                                        if (!(fe && !Ht)) {
                                            xn.next = 23;
                                            break
                                        }
                                        return xn.next = 11,
                                            (0,
                                                U.tryApiCatch)(bn, {
                                                id: fe
                                            });
                                    case 11:
                                        if (vt = xn.sent,
                                            Me = Rn(vt, 2),
                                            he = Me[0],
                                            sn = Me[1],
                                            !he) {
                                            xn.next = 17;
                                            break
                                        }
                                        return xn.abrupt("return", n.$message.error(he));
                                    case 17:
                                        if (!(sn && sn !== null && sn !== void 0 && sn.agentAssistCategoryId)) {
                                            xn.next = 23;
                                            break
                                        }
                                        if (ln = sn.agentAssistCategoryId,
                                            lt = ln === void 0 ? "" : ln,
                                            Tn = sn.agentAssistCategoryName,
                                            Wn = Tn === void 0 ? "" : Tn,
                                            Dn = {
                                                agentAssistCategoryId: lt,
                                                agentAssistCategoryName: Wn,
                                                id: fe
                                            },
                                            n.addQueueInfo4AgentAssist(Dn),
                                            lt) {
                                            xn.next = 23;
                                            break
                                        }
                                        return xn.abrupt("return");
                                    case 23:
                                        T === "click" && (xt = f === "intent" || f === "knowledgeBase" || f === "expertAssist" ? U.eRightBarTab.expertAssist : -1,
                                            n.setRightTabIndex({
                                                taskId: n.currentTaskId,
                                                val: xt
                                            })),
                                            n.$nextTick(function() {
                                                var wr;
                                                (wr = n.$refs) === null || wr === void 0 || (wr = wr.AIExpertAssistPanelRef) === null || wr === void 0 || wr.detect({
                                                    sr: T,
                                                    message: g,
                                                    messageId: I
                                                })
                                            });
                                    case 25:
                                    case "end":
                                        return xn.stop()
                                }
                        }, l)
                    }))()
                },
                autoSelectEngagementTab: function() {
                    this.isShowWrapup && this.setRightTabIndex({
                        taskId: this.currentTaskId,
                        val: U.eRightBarTab.engagement
                    })
                },
                onWrapupStatus: function() {
                    (this.inPhone || this.inVideo || this.inSMS || this.inChat) && this.autoSelectEngagementTab()
                },
                toggle: function(e) {
                    var n, l = this;
                    Ce()(n = q()(this.observerSize)).call(n, function(f) {
                        return l.observerSize[f] = !1
                    }),
                    e && (this.observerSize[e] = !0)
                }
            }),
            deactivated: function() {
                this.mounted = !1
            },
            mounted: function() {
                this.mounted = !0,
                    this.$bus.$on("SELECTICON", this.initDetectMessage)
            },
            beforeDestroy: function() {
                this.$bus.$off("SELECTICON", this.initDetectMessage)
            },
            components: {
                AIExpertAssistPanelEnhance: Lt.AIExpertAssistPanelEnhance
            }
        };
        var ir = a(50855)
            , Gr = (0,
            ir.A)(xr, Mr, Jt, !1, null, "30a8c6b7", null);
        const Zr = Gr.exports;
        var na = function() {
            var e = this
                , n = e._self._c;
            return n("div", {
                staticClass: "chat-task"
            }, [e.showNotify && !e.enableCrmInboundNotifyPanel ? n("TaskNotify", {
                attrs: {
                    data: e.currentTask,
                    info: e.info,
                    "reject-loading": e.rejectLoading,
                    "accept-loading": e.acceptLoading
                },
                on: {
                    reject: e.onRejectTask,
                    accept: e.onAcceptTaskHelper
                }
            }) : e._e(), e._v(" "), n("audio", {
                ref: "ringAudio",
                attrs: {
                    preload: "auto"
                }
            }, [n("source", {
                attrs: {
                    src: e.ding,
                    type: "audio/wav"
                }
            })]), e._v(" "), n("audio", {
                ref: "messageRingAudio",
                attrs: {
                    id: "messageRingAudio",
                    preload: "auto"
                }
            }, [n("source", {
                attrs: {
                    src: e.notificationRing,
                    type: "audio/wav"
                }
            })])], 1)
        }
            , Xr = []
            , aa = a(22562)
            , ra = a.n(aa)
            , kt = a(83632)
            , et = a(38534)
            , ut = a(97508)
            , Nn = a(50010)
            , qn = a(72713)
            , zn = a(79917)
            , Vr = a(53019)
            , qr = a(88967)
            , Jr = function() {
            var e = this
                , n = e._self._c;
            return n("div", {
                staticClass: "task-notify"
            }, [e.conversationVisible ? n("Conversation", {
                attrs: {
                    "chat-room-id": e.data.chatRoomId,
                    "session-id": e.data.chatId,
                    "is-chat-transfer": e.data.isChatTransfer,
                    "channel-type": e.data.isChatTransfer,
                    "customer-name": e.data.customerName,
                    "reject-loading": e.rejectLoading,
                    "accept-loading": e.acceptLoading
                },
                on: {
                    reject: e.onReject,
                    accept: e.onAccept
                }
            }) : n("NotifyModal", {
                key: e.info.taskSid,
                attrs: {
                    "reject-loading": e.rejectLoading,
                    "accept-loading": e.acceptLoading,
                    data: e.data || {},
                    info: e.info
                },
                on: {
                    reject: e.onReject,
                    accept: e.onAccept,
                    preview: e.openConversation
                }
            })], 1)
        }
            , ca = []
            , sa = function() {
            var e = this
                , n = e._self._c;
            return n("ZccDialog", {
                staticClass: "conversation",
                attrs: {
                    title: e.title,
                    visible: !0,
                    modal: !1,
                    width: "590px",
                    "mini-screen-enlargement": !1
                }
            }, [n("div", {
                staticClass: "conversation__content"
            }, [n("div", {
                staticClass: "conversation__label"
            }, [e._v("Profile")]), e._v(" "), n("div", {
                staticClass: "conversation__profile"
            }, [n("div", {
                staticClass: "conversation__avatar"
            }), e._v(" "), n("span", {
                staticClass: "conversation__name"
            }, [e._v(e._s(e.customerName))])]), e._v(" "), n("div", {
                staticClass: "conversation__label"
            }, [e._v("Conversation Details")]), e._v(" "), n("div", {
                staticClass: "conversation__details"
            }, [e.loading ? n("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: e.loading,
                    expression: "loading"
                }],
                staticClass: "conversation__details__loading"
            }) : e._e(), e._v(" "), e._l(e.list, function(l, f) {
                return n("div", {
                    key: f,
                    staticClass: "conversation__message"
                }, [n("div", {
                    class: ["conversation__message-avatar", {
                        bot: l.isBot
                    }]
                }), e._v(" "), n("div", {
                    staticClass: "conversation__message-content"
                }, [n("div", {
                    staticClass: "conversation__message-head"
                }, [n("span", {
                    staticClass: "conversation__message-name"
                }, [e._v(e._s(l.name))]), e._v(" "), n("span", {
                    staticClass: "conversation__message-time"
                }, [e._v(e._s(l.time))])]), e._v(" "), n("div", {
                    staticClass: "conversation__message-text"
                }, [e._v(`
            ` + e._s(l.content) + `
          `)])])])
            })], 2)]), e._v(" "), n("div", {
                staticClass: "conversation__footer",
                attrs: {
                    slot: "footer"
                },
                slot: "footer"
            }, [n("zm-button", {
                attrs: {
                    plain: "",
                    loading: e.rejectLoading || e.rejectProgressLoading,
                    disabled: e.actionLoading
                },
                on: {
                    click: e.onReject
                }
            }, [e._v(e._s(e.rejectText))]), e._v(" "), n("zm-button", {
                attrs: {
                    type: "primary",
                    loading: e.acceptLoading || e.acceptProgressLoading,
                    disabled: e.actionLoading
                },
                on: {
                    click: e.onAccept
                }
            }, [e._v("Accept")])], 1)])
        }
            , fa = []
            , Do = a(53584)
            , ma = a.n(Do)
            , Ro = a(18854)
            , Hi = a.n(Ro);
        function Mi(i) {
            "@babel/helpers - typeof";
            return Mi = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                Mi(i)
        }
        function Ka() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Ka = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && Mi(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(Mi(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function Pi(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function jo(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            Pi(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            Pi(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        var Uo = Zt.chatApi.getHistoryByTime
            , Ki = function(e) {
            var n = U.chatUtils.historyMessageAdapter(e) || {}
                , l = n.fromName
                , f = n.sendTime
                , g = n.type
                , I = n.text;
            if (!g || g === "system")
                return null;
            var T = g === "image" ? {
                content: "(image)",
                isDelta: !1
            } : U.chatUtils.transfromDelta(I)
                , A = T.content
                , N = T.isDelta;
            return {
                name: l,
                isBot: g === "bot",
                isDelta: N,
                content: A,
                time: Hi()(f).format("HH:mm A")
            }
        };
        const ks = {
            name: "Conversation",
            props: {
                isChatTransfer: {
                    type: Boolean,
                    default: !1
                },
                chatRoomId: {
                    type: String,
                    default: ""
                },
                customerName: {
                    type: String,
                    default: ""
                },
                rejectLoading: {
                    type: Boolean,
                    default: !1
                },
                acceptLoading: {
                    type: Boolean,
                    default: !1
                }
            },
            data: function() {
                return {
                    loading: !1,
                    list: [],
                    actionLoading: !1,
                    acceptProgressLoading: !1,
                    rejectProgressLoading: !1
                }
            },
            mounted: function() {
                this.fetchHistory()
            },
            computed: {
                title: function() {
                    return this.isChatTransfer ? "Preview" : "Incoming Engagement"
                },
                rejectText: function() {
                    return this.isChatTransfer ? "Reject" : "Skip"
                }
            },
            methods: {
                fetchHistory: function() {
                    var e = this;
                    return jo(Ka().mark(function n() {
                        var l, f, g, I;
                        return Ka().wrap(function(A) {
                            for (; ; )
                                switch (A.prev = A.next) {
                                    case 0:
                                        return e.loading = !0,
                                            A.next = 3,
                                            Uo({
                                                sessionId: e.sessionId
                                            });
                                    case 3:
                                        g = A.sent,
                                            I = g.events,
                                            e.list = en()(l = Oe()(f = ma()(I).call(I, function(N) {
                                                return Ki(N)
                                            })).call(f, function(N) {
                                                return !!N
                                            })).call(l),
                                            e.loading = !1;
                                    case 7:
                                    case "end":
                                        return A.stop()
                                }
                        }, n)
                    }))()
                },
                onReject: function() {
                    this.actionLoading || (this.rejectProgressLoading = !0,
                        this.actionLoading = !0,
                        this.$emit("reject"))
                },
                onAccept: function() {
                    this.actionLoading || (this.acceptProgressLoading = !0,
                        this.actionLoading = !0,
                        this.$emit("accept"))
                }
            }
        };
        var $o = (0,
            ir.A)(ks, sa, fa, !1, null, "67e8d01f", null);
        const Bo = $o.exports;
        var Os = function() {
            var e, n = this, l = n._self._c;
            return l("TaskNotifyPanel", {
                attrs: {
                    "panel-type": (e = n.info) === null || e === void 0 ? void 0 : e.taskType,
                    "channel-label": n.data.channelType,
                    info: n.info,
                    loading: n.actionLoading
                },
                on: {
                    onReject: n.onReject
                }
            }, [l("div", {
                staticClass: "notify-modal__actions",
                attrs: {
                    slot: "actions"
                },
                slot: "actions"
            }, [n.data.isChatTransfer ? l("div", {
                staticClass: "notify-modal__reject"
            }, [l("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: n.rejectLoading,
                    expression: "rejectLoading"
                }],
                staticClass: "notify-modal__btn notify-modal__reject-btn",
                on: {
                    click: n.onReject
                }
            }, [l("i", {
                staticClass: "notify-modal__icon notify-modal__reject-icon"
            })]), n._v(" "), l("div", {
                staticClass: "notify-modal__text"
            }, [n._v(`
        ` + n._s(n.$t("cci.client.Reject")) + `
      `)])]) : l("div", {
                staticClass: "notify-modal__skip"
            }, [l("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: n.rejectLoading,
                    expression: "rejectLoading"
                }],
                staticClass: "notify-modal__btn notify-modal__reject-btn",
                on: {
                    click: n.onReject
                }
            }, [l("i", {
                staticClass: "notify-modal__icon notify-modal__reject-icon"
            })]), n._v(" "), l("div", {
                staticClass: "notify-modal__text"
            }, [n._v(`
        ` + n._s(n.$t("callbar.phone.declineCall")) + `
      `)])]), n._v(" "), l("div", {
                staticClass: "notify-modal__accept"
            }, [l("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: n.acceptLoading,
                    expression: "acceptLoading"
                }],
                staticClass: "notify-modal__btn notify-modal__accept-btn",
                on: {
                    click: n.onAccept
                }
            }, [l("i", {
                staticClass: "notify-modal__icon notify-modal__accept-icon"
            })]), n._v(" "), l("div", {
                staticClass: "notify-modal__text"
            }, [n._v(`
        ` + n._s(n.$t("callbar.phone.acceptCall")) + `
      `)])])])])
        }
            , Gf = [];
        const gc = {
            name: "NotifyModal",
            components: {
                TaskNotifyPanel: Lt.TaskNotifyPanel
            },
            props: {
                rejectLoading: {
                    type: Boolean,
                    default: !1
                },
                acceptLoading: {
                    type: Boolean,
                    default: !1
                },
                data: {
                    type: Object,
                    default: function() {
                        return {}
                    }
                },
                info: {
                    type: Object,
                    default: function() {
                        return {}
                    }
                }
            },
            mounted: function() {
                ((0,
                    U.isClient)() || (0,
                    U.isPWA)()) && this.$bus.$on("clientNotifyCallStatus", this.onClientBtnActions)
            },
            data: function() {
                return {
                    actionLoading: !1
                }
            },
            computed: {
                title: function() {
                    var e = this.data.channelType;
                    return this.data.isChatTransfer ? e + " Transfer Request" : e
                },
                status: function() {
                    return this.data.isChatTransfer ? "From Agent" : "is chatting..."
                }
            },
            methods: {
                onAccept: function() {
                    this.actionLoading || (this.actionLoading = !0,
                        this.$emit("accept"))
                },
                onReject: function() {
                    this.actionLoading || (this.actionLoading = !0,
                        this.$emit("reject"))
                },
                onPreview: function() {
                    this.actionLoading || (this.actionLoading = !0,
                        this.$emit("preview"))
                },
                onClientBtnActions: function(e) {
                    var n, l, f, g;
                    console.log("onClientBtnActions", e);
                    var I = e.result
                        , T = I === void 0 ? {} : I
                        , A = T.taskSid;
                    A === ((n = this.data.rez) === null || n === void 0 || (n = n.task) === null || n === void 0 ? void 0 : n.id) && (K()(l = [1, 3, 4, 5, 6]).call(l, (e == null || (f = e.result) === null || f === void 0 ? void 0 : f.status) || 0) > -1 ? this.onAccept() : (e == null || (g = e.result) === null || g === void 0 ? void 0 : g.status) === U.eClientBtnActionType.CCICallAcceptStatus_Rejected && this.onReject())
                }
            },
            beforeDestroy: function() {
                ((0,
                    U.isClient)() || (0,
                    U.isPWA)()) && this.$bus.$off("clientNotifyCallStatus", this.onClientBtnActions)
            }
        };
        var xs = (0,
            ir.A)(gc, Os, Gf, !1, null, "a769649e", null);
        const bo = xs.exports
            , yc = {
            name: "TaskNotify",
            props: {
                rejectLoading: {
                    type: Boolean,
                    default: !1
                },
                acceptLoading: {
                    type: Boolean,
                    default: !1
                },
                data: {
                    type: Object,
                    default: function() {
                        return {}
                    }
                },
                info: {
                    type: Object,
                    default: function() {
                        return {}
                    }
                }
            },
            components: {
                Conversation: Bo,
                NotifyModal: bo
            },
            data: function() {
                return {
                    conversationVisible: !1
                }
            },
            methods: {
                openConversation: function() {
                    this.conversationVisible = !0
                },
                onReject: function() {
                    this.$emit("reject")
                },
                onAccept: function() {
                    this.$emit("accept")
                }
            }
        };
        var _c = (0,
            ir.A)(yc, Jr, ca, !1, null, null, null);
        const bc = _c.exports;
        function Za(i) {
            "@babel/helpers - typeof";
            return Za = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                Za(i)
        }
        function Ds(i, e) {
            return js(i) || Ec(i, e) || Rs(i, e) || Cc()
        }
        function Cc() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Rs(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return Vo(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? Vo(i, e) : void 0
            }
        }
        function Vo(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function Ec(i, e) {
            var n = i == null ? null : typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (n != null) {
                var l, f, g, I, T = [], A = !0, N = !1;
                try {
                    if (g = (n = n.call(i)).next,
                    e === 0) {
                        if (Object(n) !== n)
                            return;
                        A = !1
                    } else
                        for (; !(A = (l = g.call(n)).done) && (T.push(l.value),
                        T.length !== e); A = !0)
                            ;
                } catch (re) {
                    N = !0,
                        f = re
                } finally {
                    try {
                        if (!A && n.return != null && (I = n.return(),
                        Object(I) !== I))
                            return
                    } finally {
                        if (N)
                            throw f
                    }
                }
                return T
            }
        }
        function js(i) {
            if (rr()(i))
                return i
        }
        function wa() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            wa = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && Za(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(Za(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function Ic(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function ii(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            Ic(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            Ic(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function Us(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function ga(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = Us(Object(f), !0)).call(n, function(g) {
                    wc(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = Us(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function wc(i, e, n) {
            return (e = Tc(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function Tc(i) {
            var e = Sc(i, "string");
            return Za(e) == "symbol" ? e : e + ""
        }
        function Sc(i, e) {
            if (Za(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (Za(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        var Eo = Zt.chatApi.rejectChat
            , Ac = Zt.engagementApi.getPreviewSummary
            , Qi = {
            chat_leave: "leave",
            supervisor_view: "view",
            supervisor_barge: "barge",
            chat_ended: "end",
            email_ended: "end"
        };
        const $s = {
            props: {
                openedCoreTab: {
                    type: Boolean,
                    default: !1
                }
            },
            inject: ["$agent"],
            mixins: [Nn.A, vn.A, zn.A],
            setup: function(e) {
                var n = (0,
                    Lt.useAgentAssist)()
                    , l = n.getEnableValue
                    , f = (0,
                    Mn.useSessionPanelsActions)()
                    , g = f.updateCurrentAcceptTaskId
                    , I = (0,
                    Mn.useCrmChatTaskActions)()
                    , T = I.initZpns
                    , A = I.initSendMessageToSub
                    , N = I.onAcceptTask
                    , re = I.closeTask;
                return (0,
                    Lt.useCoreTabListenerHelper)(U.CrmChatTaskCoreToLocalKey, e),
                    (0,
                        Lt.useMultiConsistency)(),
                    {
                        getEnableValue: l,
                        updateCurrentAcceptTaskId: g,
                        initSendMessageToSub: A,
                        initZpns: T,
                        onAcceptTask: N,
                        closeTask: re
                    }
            },
            computed: ga(ga(ga(ga(ga({}, (0,
                zt.mapState)("callbar", {
                clientVersion: "version"
            })), (0,
                zt.mapGetters)("livechat", ["engagements", "currentTask", "currentEngagement", "specifiedChatTask"])), (0,
                zt.mapGetters)("sessionPanels", ["currentActiveTask", "activeTasks", "activeTaskQueue", "monitorTaskQueue", "cciQueueDispostions"])), (0,
                zt.mapGetters)({
                currentAgent: "user",
                piiSettings: "piiSettings",
                nacosConfig: "nacosConfig"
            })), {}, {
                showNotify: function() {
                    return this.currentTask && !this.currentTask.closed
                },
                enableCrmInboundNotifyPanel: function() {
                    var e;
                    return (e = this.account) === null || e === void 0 ? void 0 : e.enableCrmInboundNotifyPanel
                },
                enableEngagementInformationOnClient: function() {
                    var e;
                    return (e = this.account) === null || e === void 0 ? void 0 : e.enableEngagementInformationOnClient
                },
                enableZvaAgentAssist: function() {
                    var e, n;
                    return ((e = this.account) === null || e === void 0 ? void 0 : e.enableZva) && ((n = this.account) === null || n === void 0 ? void 0 : n.enableZvaAgentAssist)
                },
                enablePlaySoundWhenReceiveNewMessage: function() {
                    var e;
                    return (e = this.account) === null || e === void 0 ? void 0 : e.enableAgentNewMessageNotifications
                }
            }),
            components: {
                TaskNotify: bc
            },
            data: function() {
                return {
                    rejectLoading: !1,
                    acceptLoading: !1,
                    zpns: null,
                    ding: kt,
                    info: {},
                    notificationRing: et,
                    inComingId: null
                }
            },
            mounted: function() {
                this.enablePlaySoundWhenReceiveNewMessage && this.setDisableMessageNotification(!1),
                    this.$bus.$on("clientNotifyCallStatus", this.onClientBtnActions)
            },
            watch: {
                currentTask: function(e, n) {
                    if (e && !e.closed && (!n || n.id !== e.id) && this.notifyNativeClient(e),
                        this.enableCrmInboundNotifyPanel)
                        if (e && !e.closed) {
                            var l, f = (l = e.rez) === null || l === void 0 || (l = l.task) === null || l === void 0 ? void 0 : l.id;
                            this.inComingId && (U.monitor.dispatchMonitor({
                                sessionId: e.chatSessionId,
                                taskId: e.id,
                                engagementId: e.engagementId,
                                name: "rez.created_cancelIncoming"
                            }, U.monitor.MONITOR_CHAT_CHANEL),
                                this.$bus.$emit("CCIUIAPI_CancelIncomingCall", this.inComingId)),
                                this.inComingId = f;
                            var g = this.createParams(this.currentTask, !0);
                            this.$bus.$emit("CCIUIAPI_IncomingCall", this.inComingId, g),
                                U.monitor.dispatchMonitor({
                                    sessionId: e.chatSessionId,
                                    taskId: e.id,
                                    engagementId: e.engagementId,
                                    name: "rez.created_notifyClient"
                                }, U.monitor.MONITOR_CHAT_CHANEL),
                                this.updateIncoming(e, g)
                        } else
                            this.inComingId && this.$bus.$emit("CCIUIAPI_CancelIncomingCall", this.inComingId)
                }
            },
            methods: ga(ga(ga({}, (0,
                zt.mapActions)("livechat", ["changeEngagementSuperVisor", "clearEngagement", "switchEngagement", "changeEngagement", "postAgentEventRing"])), (0,
                zt.mapActions)("sessionPanels", ["createQueueQuery", "createQueueDispositionQuery", "createOutboundQueueQuery", "createOutboundQueueDispositionQuery", "updateSMSTask", "updateChatTask", "updateAbnormalChatSMSTask", "switchMenuTarget", "createQueueQuery4AgentAssist", "switchActiveTask", "setDisableMessageNotification"])), {}, {
                updateIncoming: function(e, n) {
                    var l = this;
                    return ii(wa().mark(function f() {
                        var g, I, T, A, N, re, fe, ke, Ht, vt, Me, he, sn, ln;
                        return wa().wrap(function(Tn) {
                            for (; ; )
                                switch (Tn.prev = Tn.next) {
                                    case 0:
                                        if (I = e.channelType,
                                            T = I === void 0 ? "" : I,
                                            A = (e == null || (g = e.rez) === null || g === void 0 || (g = g.task) === null || g === void 0 ? void 0 : g.attributes) || {},
                                            N = A.subChannel,
                                            re = N === void 0 ? "" : N,
                                            fe = T === "SMS" || T === "Chat" && re !== U.CHANNEL_KEYS.email.keyUpper,
                                            ke = T === "Chat" && re === U.CHANNEL_KEYS.whatsapp.keyUpper,
                                            !(T === "SMS" || ke)) {
                                            Tn.next = 10;
                                            break
                                        }
                                        Me = (e == null || (Ht = e.rez) === null || Ht === void 0 || (Ht = Ht.task) === null || Ht === void 0 || (Ht = Ht.attributes) === null || Ht === void 0 || (Ht = Ht.userInfo) === null || Ht === void 0 ? void 0 : Ht.phoneNumber) || (e == null || (vt = e.rez) === null || vt === void 0 || (vt = vt.task) === null || vt === void 0 || (vt = vt.attributes) === null || vt === void 0 ? void 0 : vt.from),
                                            l.updateNotificationName(n, {
                                                phoneNumber: Me
                                            }, e.rez.task.id, e, fe),
                                            U.monitor.dispatchMonitor({
                                                sessionId: e.chatSessionId,
                                                taskId: e.id,
                                                engagementId: e.engagementId,
                                                name: "rez.created_notifyClient_update_".concat(T)
                                            }, U.monitor.MONITOR_CHAT_CHANEL),
                                            Tn.next = 27;
                                        break;
                                    case 10:
                                        if (!(T === "Chat" && re === U.CHANNEL_KEYS.email.keyUpper)) {
                                            Tn.next = 15;
                                            break
                                        }
                                        l.updateNotificationName(n, {
                                            email: e == null || (he = e.rez) === null || he === void 0 || (he = he.task) === null || he === void 0 || (he = he.attributes) === null || he === void 0 || (he = he.userInfo) === null || he === void 0 ? void 0 : he.email
                                        }, e.rez.task.id, e, fe),
                                            U.monitor.dispatchMonitor({
                                                sessionId: e.chatSessionId,
                                                taskId: e.id,
                                                engagementId: e.engagementId,
                                                name: "rez.created_notifyClient_update_".concat(T)
                                            }, U.monitor.MONITOR_CHAT_CHANEL),
                                            Tn.next = 27;
                                        break;
                                    case 15:
                                        if (!fe) {
                                            Tn.next = 27;
                                            break
                                        }
                                        return Tn.next = 18,
                                            l.getEnableAicSummary(e);
                                    case 18:
                                        if (sn = Tn.sent,
                                            sn) {
                                            Tn.next = 21;
                                            break
                                        }
                                        return Tn.abrupt("return");
                                    case 21:
                                        return l.$bus.$emit("CCIUIAPI_UpdateIncomingCall", e.rez.task.id, ga(ga({}, n), {}, {
                                            summary: "",
                                            summaryLoading: !0
                                        })),
                                            U.monitor.dispatchMonitor({
                                                sessionId: e.chatSessionId,
                                                taskId: e.id,
                                                engagementId: e.engagementId,
                                                name: "rez.created_notifyClient_summary_loading"
                                            }, U.monitor.MONITOR_CHAT_CHANEL),
                                            Tn.next = 25,
                                            l.getSummary(e);
                                    case 25:
                                        ln = Tn.sent,
                                        ln && (U.monitor.dispatchMonitor({
                                            sessionId: e.chatSessionId,
                                            taskId: e.id,
                                            engagementId: e.engagementId,
                                            name: "rez.created_notifyClient_summary_update"
                                        }, U.monitor.MONITOR_CHAT_CHANEL),
                                            l.$bus.$emit("CCIUIAPI_UpdateIncomingCall", e.rez.task.id, ga(ga({}, n), {}, {
                                                summary: ln,
                                                summaryLoading: !1
                                            })));
                                    case 27:
                                    case "end":
                                        return Tn.stop()
                                }
                        }, f)
                    }))()
                },
                updateNotificationName: function(e, n, l, f, g) {
                    var I = this;
                    return ii(wa().mark(function T() {
                        var A, N, re, fe, ke, Ht, vt, Me, he, sn, ln, lt, Tn, Wn, Dn, xt, Nr;
                        return wa().wrap(function(wr) {
                            for (; ; )
                                switch (wr.prev = wr.next) {
                                    case 0:
                                        if (A = f.customerName || I.$t("cci.common.unknown.name"),
                                            N = "",
                                            !(!(n != null && n.phoneNumber) && !(n != null && n.email) || !l)) {
                                            wr.next = 15;
                                            break
                                        }
                                        if (!g) {
                                            wr.next = 13;
                                            break
                                        }
                                        return wr.next = 6,
                                            I.getEnableAicSummary(f);
                                    case 6:
                                        if (re = wr.sent,
                                            re) {
                                            wr.next = 9;
                                            break
                                        }
                                        return wr.abrupt("return");
                                    case 9:
                                        return I.$bus.$emit("CCIUIAPI_UpdateIncomingCall", l, ga(ga({}, e), {}, {
                                            summary: N,
                                            summaryLoading: !0
                                        })),
                                            wr.next = 12,
                                            I.getSummary(f);
                                    case 12:
                                        N = wr.sent;
                                    case 13:
                                        wr.next = 40;
                                        break;
                                    case 15:
                                        if (!g) {
                                            wr.next = 32;
                                            break
                                        }
                                        return wr.next = 18,
                                            O().allSettled([I.requestNotificationName(n), I.getEnableAicSummary(f)]);
                                    case 18:
                                        if (vt = wr.sent,
                                            Me = ((fe = vt[0]) === null || fe === void 0 ? void 0 : fe.value) || {},
                                            he = Me.items,
                                            sn = he === void 0 ? [] : he,
                                            ln = ((ke = vt[1]) === null || ke === void 0 ? void 0 : ke.value) || !1,
                                        sn.length === 1 && (Ht = sn[0]) !== null && Ht !== void 0 && Ht.name && (A = (lt = sn[0]) === null || lt === void 0 ? void 0 : lt.name),
                                            I.$bus.$emit("CCIUIAPI_UpdateIncomingCall", l, ga(ga({}, e), {}, {
                                                fromName: A,
                                                summaryLoading: ln
                                            })),
                                            !ln) {
                                            wr.next = 29;
                                            break
                                        }
                                        return wr.next = 26,
                                            I.getSummary(f);
                                    case 26:
                                        N = wr.sent,
                                            wr.next = 30;
                                        break;
                                    case 29:
                                        return wr.abrupt("return");
                                    case 30:
                                        wr.next = 40;
                                        break;
                                    case 32:
                                        return wr.next = 34,
                                            I.requestNotificationName(n);
                                    case 34:
                                        return Wn = wr.sent,
                                            Dn = Wn.items,
                                            xt = Dn === void 0 ? [] : Dn,
                                        xt.length === 1 && (Tn = xt[0]) !== null && Tn !== void 0 && Tn.name && (A = (Nr = xt[0]) === null || Nr === void 0 ? void 0 : Nr.name),
                                            I.$bus.$emit("CCIUIAPI_UpdateIncomingCall", l, ga(ga({}, e), {}, {
                                                fromName: A
                                            })),
                                            wr.abrupt("return");
                                    case 40:
                                        I.$bus.$emit("CCIUIAPI_UpdateIncomingCall", l, ga(ga({}, e), {}, {
                                            fromName: A,
                                            summary: N,
                                            summaryLoading: !1
                                        }));
                                    case 41:
                                    case "end":
                                        return wr.stop()
                                }
                        }, T)
                    }))()
                },
                onClientBtnActions: function(e) {
                    var n, l, f, g, I = e.result, T = I === void 0 ? {} : I, A = T.taskSid;
                    A === ((n = this.currentTask) === null || n === void 0 || (n = n.rez) === null || n === void 0 || (n = n.task) === null || n === void 0 ? void 0 : n.id) && ((e == null || (l = e.result) === null || l === void 0 ? void 0 : l.status) === Lt.InboundPrevClientBtnActionType.CCICallAcceptStatus_Accepted ? this.onAcceptTaskHelper() : (e == null || (f = e.result) === null || f === void 0 ? void 0 : f.status) === Lt.InboundPrevClientBtnActionType.CCICallAcceptStatus_Rejected ? this.onRejectTask() : (e == null || (g = e.result) === null || g === void 0 ? void 0 : g.status) === Lt.InboundPrevClientBtnActionType.CCICallAcceptStatus_Ignore && (this.inComingId = null))
                },
                onAcceptTaskHelper: function(e) {
                    var n = arguments
                        , l = this;
                    return ii(wa().mark(function f() {
                        var g, I;
                        return wa().wrap(function(A) {
                            for (; ; )
                                switch (A.prev = A.next) {
                                    case 0:
                                        g = n.length > 1 && n[1] !== void 0 ? n[1] : !1,
                                            l.onAcceptTask({
                                                task: e,
                                                autoAccept: g,
                                                syncLocal: !1
                                            });
                                        try {
                                            l.postAgentEventRing({
                                                rez: (I = l.currentTask) === null || I === void 0 ? void 0 : I.rez,
                                                event: U.ringingEventList.accept
                                            })
                                        } catch (N) {
                                            console.error("report ringing data error", N)
                                        }
                                    case 3:
                                    case "end":
                                        return A.stop()
                                }
                        }, f)
                    }))()
                },
                translateToastMessage: function(e, n, l) {
                    try {
                        if (!e)
                            return l;
                        var f = this.$t("cci.chat.toastMessage.".concat(e), (0,
                            U.parseLocalizationParams)(e, n));
                        return f === "cci.chat.toastMessage.".concat(e) ? l : f
                    } catch {
                        return l
                    }
                },
                onNotify: function(e) {
                    var n = this
                        , l = e.type
                        , f = e.text
                        , g = e.toastSuccess
                        , I = e.eventType
                        , T = e.engagementId
                        , A = e.queueId
                        , N = e.templateKey
                        , re = e.templateParams
                        , fe = 6;
                    if (Number(l) === fe) {
                        var ke = this.translateToastMessage(N, re, f);
                        if (I === "REJECT_TRANSFER_TO_AGENT")
                            this.chatNotify(ke, g ? "" : "error", {
                                text: "View this Engagement",
                                data: null,
                                callback: function() {
                                    var xn, wr, Dr = D()(xn = n.activeTaskQueue).call(xn, function(r) {
                                        return r.engagementId === T
                                    }), Fr = Dr || {}, fr = Fr.taskId, yr = D()(wr = n.monitorTaskQueue).call(wr, function(r) {
                                        return r.engagementId === T
                                    }), hr = yr || {}, c = hr.taskId;
                                    fr ? (n.switchEngagement(T),
                                        n.switchActiveTask(fr),
                                        n.switchMenuTarget(U.eMenuName.chatPanel)) : c && (n.switchEngagement(T),
                                        n.switchActiveTask(c),
                                        n.switchMenuTarget(U.eMenuName.sessionMonitorChatSMS))
                                }
                            });
                        else if (I === "END_LEAVE") {
                            var Ht = this.currentActiveTask || {}
                                , vt = Ht.engagementId;
                            if (vt !== T) {
                                var Me, he = D()(Me = ra()(this.activeTasks)).call(Me, function(Nr) {
                                    return Nr.engagementId === T
                                }), sn = he || {}, ln = sn.taskId, lt = sn.direction, Tn = sn.tkType, Wn = 0;
                                if (A) {
                                    var Dn;
                                    if (Wn = (Dn = this.cciQueueDispostions[A]) === null || Dn === void 0 || (Dn = Dn.result) === null || Dn === void 0 ? void 0 : Dn.length,
                                    (Tn === "sms" || Tn === "chat") && lt === "OUT_BOUND") {
                                        var xt;
                                        Wn = (xt = this.cciOutboundQueueDispostions[A]) === null || xt === void 0 || (xt = xt.result) === null || xt === void 0 ? void 0 : xt.length
                                    }
                                }
                                ln && A && Wn > 0 ? this.chatNotify(ke, g ? "" : "error", {
                                    text: "Wrap Up",
                                    data: ln,
                                    callback: this.onClickWraup
                                }, 6e3) : this.chatNotify(ke, g ? "" : "error")
                            } else
                                this.chatNotify(ke, g ? "" : "error")
                        } else
                            this.chatNotify(ke, g ? "" : "error")
                    }
                },
                onClickWraup: function(e) {
                    var n = this;
                    this.updateCurrentAcceptTaskId(null),
                        this.$nextTick(function() {
                            n.updateCurrentAcceptTaskId(e)
                        })
                },
                onSuperVisor: function(e) {
                    var n = e.eventName
                        , l = e.eventType
                        , f = e.engagementId
                        , g = e.taskId
                        , I = e.channelType
                        , T = e.from
                        , A = e.fromName
                        , N = e.isInvolved
                        , re = e.feature
                        , fe = re === void 0 ? {} : re
                        , ke = this.$agent()
                        , Ht = ke.userInfo
                        , vt = {
                        id: T,
                        name: A || T
                    }
                        , Me = Qi[n];
                    if (!(!Me || T === Ht.id || N === !0) && (Me === "view" && l === "DOWNGRADE_TO_VIEW" && this.changeEngagement({
                        superVisor: "view",
                        engagementId: f,
                        agent: null,
                        feature: fe
                    }),
                        this.changeEngagementSuperVisor({
                            event: Me,
                            engagementId: f,
                            supervisor: vt
                        }),
                    Me === "end"))
                        if (l === "END_BARGE" || l === "END_VIEW") {
                            var he;
                            ((he = this.currentEngagement) === null || he === void 0 ? void 0 : he.engagementId) === f && this.$bus.$emit("home-menu-select", 6, {
                                tab: "active"
                            }),
                                this.clearEngagement(f)
                        } else
                            this.wrapupChat({
                                taskId: g,
                                engagementId: f,
                                channelType: I,
                                hangupCause: l
                            })
                },
                wrapupChat: function(e) {
                    var n, l = e.channelType, f = e.taskId, g = e.engagementId, I = e.hangupCause;
                    U.monitor.dispatchMonitor({
                        taskId: f,
                        engagementId: g,
                        name: "chat_wrap_up"
                    }, U.monitor.MONITOR_CHAT_CHANEL),
                        l === "SMS" ? ((0,
                            qn.onSmsChatEnded)({
                            engagementId: g
                        }),
                            this.updateSMSTask({
                                taskId: f,
                                engagementId: g,
                                completeTs: ee()(),
                                eventType: "sms.ended",
                                hangupCause: I
                            })) : ((0,
                            qn.onWebChatEnded)({
                            engagementId: g
                        }),
                            this.updateChatTask({
                                taskId: f,
                                engagementId: g,
                                completeTs: ee()(),
                                eventType: "chat.ended",
                                hangupCause: I
                            }));
                    var T = this.currentTask;
                    T && ((n = T.rez) === null || n === void 0 || (n = n.task) === null || n === void 0 ? void 0 : n.id) === f && this.closeTask(f)
                },
                playDing: function() {
                    this.$refs.ringAudio.play()
                },
                getSummary: function(e) {
                    return ii(wa().mark(function n() {
                        var l, f, g, I, T;
                        return wa().wrap(function(N) {
                            for (; ; )
                                switch (N.prev = N.next) {
                                    case 0:
                                        return l = e.chatSessionId,
                                            f = e.engagementId,
                                            g = e.queueId,
                                            I = g === void 0 ? "" : g,
                                            T = {
                                                businessId: "messaging",
                                                engagementId: f,
                                                sessionId: l,
                                                queueId: I
                                            },
                                            N.next = 4,
                                            Ac(T);
                                    case 4:
                                        if (N.t0 = N.sent,
                                            N.t0) {
                                            N.next = 7;
                                            break
                                        }
                                        N.t0 = "";
                                    case 7:
                                        return N.abrupt("return", N.t0);
                                    case 8:
                                    case "end":
                                        return N.stop()
                                }
                        }, n)
                    }))()
                },
                getEnableAicSummary: function(e) {
                    var n = this;
                    return ii(wa().mark(function l() {
                        var f, g, I, T, A, N, re;
                        return wa().wrap(function(ke) {
                            for (; ; )
                                switch (ke.prev = ke.next) {
                                    case 0:
                                        return ke.prev = 0,
                                            f = e.chatId,
                                            g = f === void 0 ? "" : f,
                                            I = e.engagementId,
                                            T = I === void 0 ? "" : I,
                                            A = e.queueId,
                                            N = A === void 0 ? "" : A,
                                            re = {
                                                businessId: "messaging",
                                                sessionId: g,
                                                engagementId: T,
                                                queueId: N,
                                                isPreview: !0
                                            },
                                            ke.next = 5,
                                            n.getEnableValue("enableAicSummary", re);
                                    case 5:
                                        if (ke.t0 = ke.sent,
                                            ke.t0) {
                                            ke.next = 8;
                                            break
                                        }
                                        ke.t0 = !1;
                                    case 8:
                                        return ke.abrupt("return", ke.t0);
                                    case 11:
                                        return ke.prev = 11,
                                            ke.t1 = ke.catch(0),
                                            ke.abrupt("return", !1);
                                    case 14:
                                    case "end":
                                        return ke.stop()
                                }
                        }, l, null, [[0, 11]])
                    }))()
                },
                requestNotificationName: function(e) {
                    return ii(wa().mark(function n() {
                        var l, f, g, I;
                        return wa().wrap(function(A) {
                            for (; ; )
                                switch (A.prev = A.next) {
                                    case 0:
                                        return A.next = 2,
                                            (0,
                                                U.tryApiCatch)(ut.kK, e);
                                    case 2:
                                        if (l = A.sent,
                                            f = Ds(l, 2),
                                            g = f[0],
                                            I = f[1],
                                            !g) {
                                            A.next = 8;
                                            break
                                        }
                                        return A.abrupt("return", {});
                                    case 8:
                                        return A.abrupt("return", I);
                                    case 9:
                                    case "end":
                                        return A.stop()
                                }
                        }, n)
                    }))()
                },
                createParams: function(e) {
                    var n, l, f, g, I = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1, T = (0,
                        U.getPreviewTemplate)({
                        sessionId: e.chatSessionId,
                        enterId: "",
                        engagementId: e.engagementId,
                        zmAid: U.ZCache.getAid(),
                        zmHaid: U.ZCache.getHaid()
                    });
                    (0,
                        Vr.safelog)(function(oy) {
                        var sy = oy.log;
                        return sy("[Chat channel] taskId:".concat(e.rez.task.id, " task recevied."), {
                            sessionId: e.chatSessionId,
                            engagementId: e.engagementId
                        })
                    });
                    var A = e != null && (n = e.rez) !== null && n !== void 0 && (n = n.task) !== null && n !== void 0 && n.manuallyAssigned ? e == null || (l = e.rez) === null || l === void 0 || (l = l.task) === null || l === void 0 || (l = l.attributes) === null || l === void 0 ? void 0 : l.assignedBy : void 0, N = this.piiSettings || {}, re = N.maskPiiInfo, fe = re === void 0 ? !1 : re, ke = N.detailSettings, Ht = ke === void 0 ? {} : ke, vt, Me = !1, he = !1, sn = 0, ln = "", lt = "", Tn = e.channelType, Wn = Tn === void 0 ? "" : Tn, Dn = e.customerName, xt = (e == null || (f = e.rez) === null || f === void 0 || (f = f.task) === null || f === void 0 ? void 0 : f.attributes) || {}, Nr = xt.subChannel, xn = Nr === void 0 ? "" : Nr, wr = xt.userInfo, Dr = wr === void 0 ? {} : wr;
                    if (Wn === "SMS") {
                        var Fr = Ht.phoneNumber || {}
                            , fr = Fr.toggle
                            , yr = fr === void 0 ? !1 : fr
                            , hr = Fr.allowUserHiden
                            , c = hr === void 0 ? !1 : hr
                            , r = Fr.activeEngagementShow
                            , o = r === void 0 ? !1 : r
                            , p = Fr.allowDurations
                            , _ = p === void 0 ? 0 : p;
                        Me = !!(fe && yr && o && Dn),
                            vt = (Me ? Dn.replace(U.phiReg, "*") : Dn) || "",
                            he = Me && c,
                            sn = _
                    } else {
                        var y = Ht.displayName || {}
                            , j = y.toggle
                            , ue = j === void 0 ? !1 : j
                            , le = y.allowUserHiden
                            , At = le === void 0 ? !1 : le
                            , Ye = y.activeEngagementShow
                            , Rt = Ye === void 0 ? !1 : Ye
                            , va = y.allowDurations
                            , ia = va === void 0 ? 0 : va;
                        Me = !!(fe && ue && Rt && Dn),
                            vt = (Me ? Dn.replace(U.phiReg, "*") : Dn) || "",
                            he = Me && At,
                            sn = ia
                    }
                    var Pa = "";
                    if (this.enableEngagementInformationOnClient) {
                        var Ni = ""
                            , Sa = ""
                            , _o = ""
                            , xo = "";
                        if (Wn === "Chat") {
                            var pa, Va;
                            Sa = e == null || (pa = e.rez) === null || pa === void 0 || (pa = pa.task) === null || pa === void 0 || (pa = pa.attributes) === null || pa === void 0 || (pa = pa.userInfo) === null || pa === void 0 ? void 0 : pa.email,
                                xo = e == null || (Va = e.rez) === null || Va === void 0 || (Va = Va.task) === null || Va === void 0 || (Va = Va.attributes) === null || Va === void 0 ? void 0 : Va.customerId,
                                _o = xn === U.CHANNEL_KEYS.email.keyUpper ? U.QUERY_KEYS_FOR_CONTANT[1] : U.QUERY_KEYS_FOR_CONTANT[0]
                        }
                        if (Wn === "SMS") {
                            var za;
                            Ni = e == null || (za = e.rez) === null || za === void 0 || (za = za.task) === null || za === void 0 || (za = za.attributes) === null || za === void 0 ? void 0 : za.from,
                                _o = U.QUERY_KEYS_FOR_CONTANT[2]
                        }
                        Pa = (0,
                            U.getContactDetailsTemplate)({
                            engagementId: e.engagementId,
                            phoneNumber: Ni,
                            originNumber: Ni,
                            Email: Sa,
                            zmAid: U.ZCache.getAid(),
                            zmHaid: U.ZCache.getHaid(),
                            piiSettings: this.piiSettings,
                            timeZone: this.tz,
                            timeFormatStr: this.getFormatStr(!1, " "),
                            queryKeyForContact: _o,
                            customerId: xo
                        })
                    }
                    if (Wn === "Chat") {
                        var Ls = Dr.avatarUrl
                            , Ya = Ls === void 0 ? "" : Ls
                            , Ns = {
                            facebook_messenger: "facebook",
                            whats_app: "whatsapp",
                            instagram: "instagram",
                            team_chat: "teamchat"
                        }
                            , Ms = xn?.toLowerCase();
                        xn && Ns[Ms] && (ln = Ns[Ms],
                            lt = Ya || "")
                    }
                    var Ha = {
                        fromMask: vt,
                        showMask: Me,
                        showMaskEye: he,
                        fromMaskDuration: sn,
                        locationMask: "",
                        showLocationMask: !1,
                        showLocationMaskEye: !1,
                        locationMaskDuration: 0,
                        from: "",
                        fromName: e.customerName || this.$t("cci.common.unknown.name"),
                        fromLocation: "",
                        fromAvatar: lt,
                        taskSid: e.rez.task.id,
                        taskType: e.channelType.toLowerCase(),
                        taskIconType: ln,
                        toQueue: e.queueName || "",
                        isTransfer: !!e.isChatTransfer,
                        transferFrom: "",
                        transferFromName: e.transferFromName,
                        previewContent: "",
                        previewHtml: btoa(T),
                        previewContactDetailsUrl: btoa(Pa),
                        supportAudio: !1,
                        summary: "",
                        summaryLoading: !1,
                        chatHistoryInfo: (g = this.$agent()) === null || g === void 0 ? void 0 : g.userInfo,
                        enableCrmChatHistory: this.nacosConfig.enableCrmChatHistory,
                        enableCrmVariables: this.nacosConfig.enableCrmVariables,
                        assignedBy: A
                    };
                    return I && (Ha.brandName = this.$t("cci.callBar.login.title"),
                        Ha.callTypeText = this.$t(U.chatUtils.setCallTypeText(Wn, xn, e.isChatTransfer))),
                    Wn === "Chat" && xn === U.CHANNEL_KEYS.email.keyUpper && (Ha.taskType = "email",
                        Ha.previewHtml = "",
                        Ha.chatHistoryInfo = null),
                    Ha.engagementId || (Ha.engagementId = e.engagementId),
                        Ha
                },
                notifyNativeClient: function(e) {
                    var n = this.createParams(e);
                    this.info = n
                },
                onRejectTask: function() {
                    var e = this;
                    return ii(wa().mark(function n() {
                        var l, f, g, I, T, A, N, re, fe;
                        return wa().wrap(function(Ht) {
                            for (; ; )
                                switch (Ht.prev = Ht.next) {
                                    case 0:
                                        f = e.currentTask,
                                            g = f.rez,
                                            I = f.channelType,
                                            T = g.task.id,
                                            U.monitor.dispatchMonitor({
                                                engagementId: g.task.attributes.engagementId,
                                                taskId: g.task.id,
                                                name: "task.reject"
                                            }, U.monitor.MONITOR_CHAT_CHANEL);
                                        try {
                                            e.postAgentEventRing({
                                                rez: (A = e.currentTask) === null || A === void 0 ? void 0 : A.rez,
                                                event: U.ringingEventList.reject
                                            })
                                        } catch (vt) {
                                            console.error("report ringing data error", vt)
                                        }
                                        return Ht.next = 6,
                                            (0,
                                                U.tryApiCatch)(Eo, (g == null || (l = g.task) === null || l === void 0 || (l = l.attributes) === null || l === void 0 ? void 0 : l.subChannel) === U.CHANNEL_KEYS.email.keyUpper ? "email" : I, {
                                                reservationSid: g.id,
                                                taskSid: T
                                            });
                                    case 6:
                                        N = Ht.sent,
                                            re = Ds(N, 1),
                                            fe = re[0],
                                        fe && (U.monitor.dispatchMonitor({
                                            engagementId: g.task.attributes.engagementId,
                                            taskId: g.task.id,
                                            name: "task.reject_failed"
                                        }, U.monitor.MONITOR_CHAT_CHANEL),
                                            (0,
                                                Vr.safelog)(function(vt) {
                                                var Me = vt.error;
                                                return Me("[Chat channel] taskId:".concat(T, " reject/skip fail"), {
                                                    reservationSid: g.id,
                                                    taskSid: T,
                                                    err: fe
                                                })
                                            }),
                                            e.chatNotify("reject/skip fail", "error")),
                                            (0,
                                                Vr.safelog)(function(vt) {
                                                var Me = vt.log;
                                                return Me("[Chat channel] taskId:".concat(T, " reject/skip succeed"))
                                            }),
                                            e.closeTask(T);
                                    case 12:
                                    case "end":
                                        return Ht.stop()
                                }
                        }, n)
                    }))()
                },
                onWebChatAccepted: function(e) {
                    (0,
                        qn.onWebChatAccepted)(e)
                },
                goOnCreatedRez: function(e) {
                    this.enableEngagementInformationOnClient ? (0,
                        qr.getSystemVariablesByEngagement)(e.engagementId).then(function() {
                        (0,
                            qn.onIncomingWebChat)(e.task)
                    }) : (0,
                        qn.onIncomingWebChat)(e.task)
                }
            }),
            beforeDestroy: function() {
                this.$bus.$off("clientNotifyCallStatus", this.onClientBtnActions)
            }
        };
        var Lc = (0,
            ir.A)($s, na, Xr, !1, null, null, null);
        const Nc = Lc.exports;
        var Mc = function() {
            var e = this
                , n = e._self._c
                , l = e._self._setupProxy;
            return n("div", [n("zm-tabs", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !e.showRightPanel,
                    expression: "!showRightPanel"
                }],
                staticClass: "engagements-tab",
                attrs: {
                    type: "pipeline",
                    "aria-label": e.$t("cci.common.types_of_engagement_dashboard")
                },
                model: {
                    value: e.activeName,
                    callback: function(g) {
                        e.activeName = g
                    },
                    expression: "activeName"
                }
            }, [e.allowActiveEngagements ? n("zm-tab-pane", {
                attrs: {
                    label: e.$t("cci.active"),
                    "aria-label": e.$t("cci.active"),
                    name: "active"
                }
            }, [e.activeName === "active" ? n("div", [n("div", {
                staticClass: "tab-title"
            }, [e._v(`
          ` + e._s(e.$t("cci.analytics.activeEngagements")) + `
          `), n("zm-button", {
                staticClass: "cus-zm-icon",
                attrs: {
                    type: "icon",
                    icon: "zm-icon-refresh",
                    disabled: e.isRefresh,
                    ghost: "",
                    "aria-label": e.$t("cci.engagement.refresh_active_engagement")
                },
                on: {
                    click: function(g) {
                        return e.handleRefresh("isActive")
                    }
                }
            })], 1), e._v(" "), n("active-list", {
                attrs: {
                    "is-refresh": e.isRefresh
                },
                on: {
                    "update:isRefresh": function(g) {
                        e.isRefresh = g
                    },
                    "update:is-refresh": function(g) {
                        e.isRefresh = g
                    }
                }
            })], 1) : e._e()]) : e._e(), e._v(" "), e.allowCompletedEngagements ? n("zm-tab-pane", {
                staticStyle: {
                    height: "100%"
                },
                attrs: {
                    label: e.$t("cci.completed"),
                    "aria-label": e.$t("cci.completed"),
                    name: "closed"
                }
            }, [e.activeName === "closed" ? n("div", [n("div", {
                staticClass: "tab-title"
            }, [e._v(`
          ` + e._s(e.$t("cci.engagement.completed")) + `
          `), n("zm-button", {
                staticClass: "cus-zm-icon",
                attrs: {
                    type: "icon",
                    icon: "zm-icon-refresh",
                    disabled: e.completedIsRefresh,
                    ghost: "",
                    "aria-label": e.$t("cci.engagement.refresh_completed")
                },
                on: {
                    click: function(g) {
                        return e.handleRefresh()
                    }
                }
            })], 1), e._v(" "), n("history-list", {
                attrs: {
                    "completed-is-refresh": e.completedIsRefresh
                },
                on: {
                    "update:completedIsRefresh": function(g) {
                        e.completedIsRefresh = g
                    },
                    "update:completed-is-refresh": function(g) {
                        e.completedIsRefresh = g
                    },
                    openRightPanel: e.openRightPanel
                }
            })], 1) : e._e()]) : e._e()], 1), e._v(" "), e.showRightPanel ? n("div", {
                staticClass: "engagement-panel"
            }, [n("div", {
                staticClass: "panel-title"
            }, [n("zm-button", {
                staticClass: "panel-back-btn",
                attrs: {
                    type: "link",
                    ghost: "",
                    icon: "zm-icon-left"
                },
                on: {
                    click: e.closeRightPanel
                }
            }, [e._v(`
        ` + e._s(e.$t("cci.common.button.back")) + `
      `)]), e._v(" "), n("span", {
                staticClass: "panel-title-content"
            }, [e._v(e._s(e.currentSelectItem.title))])], 1), e._v(" "), e.showEmptyPage ? n("div", {
                staticClass: "empty-box"
            }, [n("Empty")], 1) : e._e(), e._v(" "), e.showEmptyPage ? e._e() : n("zm-collapse", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: e.variablesLoading,
                    expression: "variablesLoading"
                }],
                staticClass: "closed-engagement-collapse"
            }, [e.customGlobalVariables.length > 0 ? n("zm-collapse-item", {
                attrs: {
                    title: e.$t("cci.engagement.customVariables", {
                        count: e.customGlobalVariables.length
                    })
                }
            }, [n("zm-form", [n("variables-list", {
                attrs: {
                    "variables-list": e.customGlobalVariables,
                    "is-from-profile": !1
                }
            })], 1)], 1) : e._e(), e._v(" "), e.systemGlobalVariables.length > 0 ? n("zm-collapse-item", {
                attrs: {
                    title: e.$t("cci.engagement.systemVariables", {
                        count: e.systemGlobalVariables.length
                    })
                }
            }, [n("zm-form", [n("variables-list", {
                attrs: {
                    "variables-list": e.systemGlobalVariables,
                    "is-from-profile": !1
                }
            })], 1)], 1) : e._e()], 1)], 1) : e._e()], 1)
        }
            , Pc = []
            , Bs = a(11862)
            , kc = a(83592)
            , Oc = function() {
            var e = this
                , n = e._self._c;
            return n("zm-tabs", {
                staticClass: "active-engagements-tabs call-list",
                attrs: {
                    value: e.activeName
                },
                on: {
                    "tab-click": e.changeTab,
                    "tab-enter": e.changeTab
                }
            }, e._l(e.channelTabs, function(l) {
                return n("zm-tab-pane", {
                    key: l.value,
                    attrs: {
                        name: "".concat(l.value)
                    }
                }, [n("span", {
                    attrs: {
                        slot: "label"
                    },
                    slot: "label"
                }, [n("span", {
                    attrs: {
                        "aria-label": l.label
                    }
                }, [e._v(e._s(l.label))])]), e._v(" "), e.activeName === "".concat(l.value) ? n("active-engagements", {
                    attrs: {
                        channel: e.channel,
                        "active-name": e.activeName,
                        "user-info": e.userInfo,
                        "is-refresh": e.isRefresh
                    },
                    on: {
                        changeRefresh: e.changeRefresh
                    }
                }) : e._e()], 1)
            }), 1)
        }
            , xc = []
            , Dc = a(12608)
            , oa = a.n(Dc)
            , Vs = a(5412)
            , Rc = function() {
            var e = this
                , n = e._self._c
                , l = e._self._setupProxy;
            return n("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: e.loading,
                    expression: "loading"
                }],
                staticClass: "active"
            }, [n("div", {
                staticClass: "active__top"
            }, [n("search-filter", {
                staticStyle: {
                    margin: "4px"
                },
                attrs: {
                    channel: e.channel,
                    channels: e.channels,
                    client: e.client
                },
                on: {
                    change: e.changeFilters
                }
            }), e._v(" "), n("filter-dropdown", {
                attrs: {
                    type: "active"
                },
                model: {
                    value: e.dropdownCheckList,
                    callback: function(g) {
                        e.dropdownCheckList = g
                    },
                    expression: "dropdownCheckList"
                }
            })], 1), e._v(" "), n("active-engage-channel-table", {
                attrs: {
                    client: e.client,
                    filters: e.filters,
                    "check-list": e.checkList,
                    "is-refresh": e.isRefresh,
                    channel: e.channel,
                    "refresh-rate": e.refreshRate,
                    "menu-tab": e.menuTab,
                    "is-menu-engagements-selected": e.isMenuEngagementsSelected
                },
                on: {
                    updateIsRefresh: e.updateIsRefresh,
                    events: e.handleEvents
                }
            })], 1)
        }
            , jc = []
            , ka = a(6372);
        function Aa(i) {
            "@babel/helpers - typeof";
            return Aa = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                Aa(i)
        }
        function Fo() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Fo = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && Aa(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(Aa(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function Fs(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function Uc(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            Fs(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            Fs(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function Wo(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function Go(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = Wo(Object(f), !0)).call(n, function(g) {
                    $c(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = Wo(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function $c(i, e, n) {
            return (e = Ws(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function Ws(i) {
            var e = zo(i, "string");
            return Aa(e) == "symbol" ? e : e + ""
        }
        function zo(i, e) {
            if (Aa(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (Aa(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        const Kf = {
            computed: Go({}, (0,
                zt.mapGetters)({
                analyticsConfig: "search/analyticsConfig"
            })),
            methods: Go(Go({}, (0,
                zt.mapActions)({
                queryAnalyticsConfig: "search/queryAnalyticsConfig"
            })), {}, {
                getAnalyticsConfig: function() {
                    var e = this;
                    return Uc(Fo().mark(function n() {
                        var l;
                        return Fo().wrap(function(g) {
                            for (; ; )
                                switch (g.prev = g.next) {
                                    case 0:
                                        if ((l = e.analyticsConfig) !== null && l !== void 0 && l.hasQuery) {
                                            g.next = 9;
                                            break
                                        }
                                        return g.prev = 1,
                                            g.next = 4,
                                            e.queryAnalyticsConfig();
                                    case 4:
                                        g.next = 9;
                                        break;
                                    case 6:
                                        g.prev = 6,
                                            g.t0 = g.catch(1),
                                            console.error(g.t0);
                                    case 9:
                                    case "end":
                                        return g.stop()
                                }
                        }, n, null, [[1, 6]])
                    }))()
                }
            })
        };
        var Gs = function() {
            var e = this
                , n = e._self._c
                , l = e._self._setupProxy;
            return n(l.CommonTable, {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: l.tableLoading,
                    expression: "tableLoading"
                }],
                attrs: {
                    "data-source": l.dataSource,
                    pagination: l.pagination,
                    "format-total": l.formatTotal,
                    "check-list": e.checkList,
                    "is-new-messaging": l.isNewMessaging
                },
                on: {
                    "update:pagination": function(g) {
                        l.pagination = g
                    },
                    handlePageChange: l.handlePageChange,
                    "active-engage-action": l.handleActionClick
                }
            })
        }
            , Yi = []
            , Bc = a(45871)
            , Vc = a.n(Bc);
        const Fc = Vc();
        var Wc = (0,
            ir.A)(Fc, Gs, Yi, !1, null, null, null);
        const Qf = Wc.exports;
        var Gc = function() {
            var e = this
                , n = e._self._c
                , l = e._self._setupProxy;
            return n("zm-dropdown", [n("div", {
                staticClass: "search_fill"
            }), e._v(" "), n("zm-dropdown-menu", {
                attrs: {
                    slot: "dropdown"
                },
                slot: "dropdown"
            }, [n("zm-checkbox-group", {
                staticClass: "history_filter",
                model: {
                    value: e.checkListModel,
                    callback: function(g) {
                        e.checkListModel = g
                    },
                    expression: "checkListModel"
                }
            }, [e._l(e.engagementFilterMaps, function(f) {
                return n("zm-checkbox", {
                    key: f.value,
                    attrs: {
                        label: f.value
                    }
                }, [e._v(e._s(f.label))])
            }), n("br")], 2)], 1)], 1)
        }
            , zc = []
            , Hc = function() {
            var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "active"
                , n = {
                completed: (0,
                    Qe.ref)((0,
                    U.GET_ENGAGEMENTS_FILTER_MAPS)(ka.i18n)),
                active: (0,
                    Qe.ref)((0,
                    U.GET_ACTIVE_FILTER_MAPS)(ka.i18n))
            };
            return {
                engagementFilterMaps: n[e]
            }
        };
        const Ho = (0,
            Qe.defineComponent)({
            name: "FilterDropdown",
            components: {},
            props: {
                checkList: {
                    type: Array,
                    default: function() {
                        return []
                    }
                },
                type: {
                    type: String,
                    default: "active"
                }
            },
            model: {
                prop: "checkList",
                event: "update:checkList"
            },
            setup: function(e, n) {
                var l = Hc(e.type)
                    , f = l.engagementFilterMaps
                    , g = (0,
                    Qe.computed)({
                    get: function() {
                        return e.checkList
                    },
                    set: function(T) {
                        n.emit("update:checkList", T)
                    }
                });
                return {
                    engagementFilterMaps: f,
                    checkListModel: g
                }
            }
        });
        var zs = (0,
            ir.A)(Ho, Gc, zc, !1, null, "77f8cd6e", null);
        const Kc = zs.exports;
        var Hs = function() {
            var e = this
                , n = e._self._c
                , l = e._self._setupProxy;
            return n("queue-multi-select", {
                staticClass: "filter-wrapper__item",
                attrs: {
                    "channel-types": e.basicChannels,
                    "disable-messaging-queues": !0
                },
                model: {
                    value: Oe()(e).queueId,
                    callback: function(g) {
                        e.$set(Oe()(e), "queueId", g)
                    },
                    expression: "filter.queueId"
                }
            })
        }
            , oi = []
            , Qc = function() {
            var e = this
                , n = e._self._c;
            return n("zm-multi-select", e._b({
                attrs: {
                    value: e.bindValue,
                    loading: e.loading,
                    options: e.filterQueues,
                    "filter-all-label": e.$t("cci.common.label.queue.all"),
                    placeholder: e.$t("cci.common.label.queue.all"),
                    "convert-all-to-empty": e.filterQueues && e.filterQueues.length === 1 ? !1 : e.convertAllToEmpty,
                    "search-placeholder": e.searchPlaceholder,
                    "value-key": "value",
                    "collapse-tags": "",
                    "aria-label": e.$t("cci.analytics.label.queueFilter") + e.selectNameList,
                    "aria-expanded": !1
                },
                on: {
                    input: e.change
                }
            }, "zm-multi-select", e.$attrs, !1))
        }
            , Yc = []
            , Zc = a(37082)
            , Zi = a.n(Zc)
            , Jc = a(53720)
            , Xc = a.n(Jc);
        function si(i) {
            "@babel/helpers - typeof";
            return si = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                si(i)
        }
        function qc(i, e) {
            var n = typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (!n) {
                if (rr()(i) || (n = eu(i)) || e && i && typeof i.length == "number") {
                    n && (i = n);
                    var l = 0
                        , f = function() {};
                    return {
                        s: f,
                        n: function() {
                            return l >= i.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: i[l++]
                            }
                        },
                        e: function(N) {
                            throw N
                        },
                        f
                    }
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
            }
            var g, I = !0, T = !1;
            return {
                s: function() {
                    n = n.call(i)
                },
                n: function() {
                    var N = n.next();
                    return I = N.done,
                        N
                },
                e: function(N) {
                    T = !0,
                        g = N
                },
                f: function() {
                    try {
                        I || n.return == null || n.return()
                    } finally {
                        if (T)
                            throw g
                    }
                }
            }
        }
        function eu(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return Ks(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? Ks(i, e) : void 0
            }
        }
        function Ks(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function Oa() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Oa = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && si(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(si(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function Qs(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function Ko(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            Qs(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            Qs(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function Ys(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function Io(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = Ys(Object(f), !0)).call(n, function(g) {
                    Zs(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = Ys(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function Zs(i, e, n) {
            return (e = li(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function li(i) {
            var e = Qo(i, "string");
            return si(e) == "symbol" ? e : e + ""
        }
        function Qo(i, e) {
            if (si(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (si(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        const nu = {
            name: "QueueMultiSelect",
            model: {
                prop: "value",
                event: "change"
            },
            props: {
                value: {
                    type: Array,
                    default: function() {
                        return []
                    }
                },
                convertAllToEmpty: {
                    type: Boolean,
                    default: !0
                },
                searchPlaceholder: {
                    type: String,
                    default: ka.i18n.t("cci.common.search_queues")
                },
                channelTypes: {
                    type: Array
                },
                disableMessagingQueues: {
                    type: Boolean,
                    default: !1
                },
                enableSmsQueues: {
                    type: Boolean,
                    default: !1
                },
                uniqueCacheKey: {
                    type: String,
                    required: !1
                }
            },
            data: function() {
                return {
                    loading: !1,
                    bindValue: [],
                    filterQueues: []
                }
            },
            computed: Io(Io({}, (0,
                zt.mapGetters)({
                analyticsConfig: "search/analyticsConfig",
                ringGroup: "search/ringGroup"
            })), {}, {
                ifEnableMessagingChannel: function() {
                    return !this.disableMessagingQueues && !this.enableSmsQueues && this.analyticsConfig && this.analyticsConfig.enableMessagingChannel === "true"
                },
                selectNameList: function() {
                    var e, n = [];
                    return (e = this.bindValue) === null || e === void 0 || ma()(e).call(e, function(l) {
                        n.push(l.label)
                    }),
                        n.length ? ": " + n.join(",") : ""
                }
            }),
            watch: {
                value: {
                    immediate: !0,
                    handler: function(e, n) {
                        this.parseValue(e)
                    }
                },
                channelTypes: {
                    immediate: !0,
                    handler: function(e, n) {
                        this.filterByChannelType()
                    }
                },
                ringGroup: {
                    handler: function() {
                        this.filterByChannelType()
                    }
                }
            },
            created: function() {
                var e = this;
                return Ko(Oa().mark(function n() {
                    var l, f;
                    return Oa().wrap(function(I) {
                        for (; ; )
                            switch (I.prev = I.next) {
                                case 0:
                                    return I.next = 2,
                                        e.getAnalyticsConfig();
                                case 2:
                                    return I.next = 4,
                                        e.getQueueList();
                                case 4:
                                    if (e.value.length === 0 && e.uniqueCacheKey) {
                                        l = window.sessionStorage.getItem(e.uniqueCacheKey),
                                            f = [];
                                        try {
                                            f = JSON.parse(l)
                                        } catch {
                                            f = []
                                        }
                                        rr()(f) && f.length > 0 && e.change(f)
                                    } else
                                        e.parseValue(e.value);
                                case 5:
                                case "end":
                                    return I.stop()
                            }
                    }, n)
                }))()
            },
            methods: Io(Io({}, (0,
                zt.mapActions)({
                queryAnalyticsConfig: "search/queryAnalyticsConfig",
                queryQueues: "search/queryQueues"
            })), {}, {
                change: function(e) {
                    this.isDiff(e) && (this.uniqueCacheKey && window.sessionStorage.setItem(this.uniqueCacheKey, Zi()(e)),
                        this.$emit("change", ma()(e).call(e, function(n) {
                            return n.value
                        })))
                },
                isDiff: function(e) {
                    var n = ma()(e).call(e, function(g) {
                        return g.value
                    });
                    if (this.value.length !== n.length)
                        return !0;
                    var l, f = !1;
                    return Ce()(l = this.value).call(l, function(g) {
                        M()(n).call(n, g) || (f = !0)
                    }),
                        f
                },
                parseValue: function(e) {
                    var n;
                    this.bindValue = Oe()(n = this.filterQueues).call(n, function(l) {
                        return M()(e).call(e, l.value)
                    })
                },
                getAnalyticsConfig: function() {
                    var e = this;
                    return Ko(Oa().mark(function n() {
                        var l;
                        return Oa().wrap(function(g) {
                            for (; ; )
                                switch (g.prev = g.next) {
                                    case 0:
                                        if ((l = e.analyticsConfig) !== null && l !== void 0 && l.hasQuery) {
                                            g.next = 9;
                                            break
                                        }
                                        return g.prev = 1,
                                            g.next = 4,
                                            e.queryAnalyticsConfig();
                                    case 4:
                                        g.next = 9;
                                        break;
                                    case 6:
                                        g.prev = 6,
                                            g.t0 = g.catch(1),
                                            console.error(g.t0);
                                    case 9:
                                    case "end":
                                        return g.stop()
                                }
                        }, n, null, [[1, 6]])
                    }))()
                },
                getQueueList: function() {
                    var e = this;
                    return Ko(Oa().mark(function n() {
                        return Oa().wrap(function(f) {
                            for (; ; )
                                switch (f.prev = f.next) {
                                    case 0:
                                        return f.prev = 0,
                                            e.loading = !0,
                                            f.next = 4,
                                            e.queryQueues();
                                    case 4:
                                        f.next = 9;
                                        break;
                                    case 6:
                                        f.prev = 6,
                                            f.t0 = f.catch(0),
                                            console.log(f.t0);
                                    case 9:
                                        return f.prev = 9,
                                            e.loading = !1,
                                            f.finish(9);
                                    case 12:
                                    case "end":
                                        return f.stop()
                                }
                        }, n, null, [[0, 6, 9, 12]])
                    }))()
                },
                filterByChannelType: function() {
                    this.filterQueues = this.searchMethod()
                },
                hasChannelType: function() {
                    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
                    if (this.channelTypes && this.channelTypes.length) {
                        var n = !1, l = qc(e), f;
                        try {
                            for (l.s(); !(f = l.n()).done; ) {
                                var g, I = f.value;
                                if (M()(g = this.channelTypes).call(g, I)) {
                                    n = !0;
                                    break
                                }
                            }
                        } catch (T) {
                            l.e(T)
                        } finally {
                            l.f()
                        }
                        return n
                    }
                    return !0
                },
                matchLabel: function(e) {
                    var n, l = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
                    return M()(n = e.toLowerCase()).call(n, l.toLowerCase())
                },
                searchMethod: function(e) {
                    var n, l = this, f = this.ringGroup;
                    return Xc()(n = Oe()(f).call(f, function(g) {
                        return l.matchLabel(g.label, e) && l.hasChannelType(g.channelTypes)
                    })).call(n, function(g, I) {
                        var T, A, N = (T = g.label) === null || T === void 0 ? void 0 : T.toUpperCase(), re = (A = I.label) === null || A === void 0 ? void 0 : A.toUpperCase();
                        return N < re ? -1 : N > re ? 1 : 0
                    })
                }
            })
        };
        var Js = (0,
            ir.A)(nu, Qc, Yc, !1, null, null, null);
        const Xs = Js.exports;
        function Ji(i) {
            "@babel/helpers - typeof";
            return Ji = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                Ji(i)
        }
        function qs(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function el(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = qs(Object(f), !0)).call(n, function(g) {
                    Yf(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = qs(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function Yf(i, e, n) {
            return (e = ru(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function ru(i) {
            var e = au(i, "string");
            return Ji(e) == "symbol" ? e : e + ""
        }
        function au(i, e) {
            if (Ji(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (Ji(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        const iu = (0,
            Qe.defineComponent)({
            name: "FilterSearch",
            mixins: [vn.A],
            props: {
                channel: {
                    type: String,
                    default: void 0
                },
                channels: {
                    type: Array,
                    required: !0
                },
                defaultQueueIds: Array
            },
            components: {
                QueueMultiSelect: Xs
            },
            data: function() {
                var e;
                return {
                    filter: {
                        queueId: this.client ? void 0 : this.defaultQueueIds,
                        channel: ma()(e = this.channels).call(e, function(n) {
                            return U.ServerChannelEnum[n]
                        }).toString()
                    }
                }
            },
            computed: el(el({}, (0,
                zt.mapGetters)({
                featureList: "featureList"
            })), {}, {
                basicChannels: function() {
                    var e, n = [];
                    return Ce()(e = this.channels).call(e, function(l) {
                        n.push(l)
                    }),
                        n
                }
            }),
            methods: {
                reset: function() {
                    var e;
                    this.filter = {
                        queueId: void 0,
                        channel: ma()(e = this.channels).call(e, function(n) {
                            return U.ServerChannelEnum[n]
                        }).toString()
                    }
                }
            },
            watch: {
                filter: {
                    deep: !0,
                    immediate: !0,
                    handler: function(e) {
                        this.$emit("change", e)
                    }
                }
            }
        });
        var ou = (0,
            ir.A)(iu, Hs, oi, !1, null, "062b8139", null);
        const su = ou.exports;
        function Ja(i) {
            "@babel/helpers - typeof";
            return Ja = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                Ja(i)
        }
        function Yo(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function tl(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = Yo(Object(f), !0)).call(n, function(g) {
                    nl(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = Yo(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function nl(i, e, n) {
            return (e = lu(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function lu(i) {
            var e = rl(i, "string");
            return Ja(e) == "symbol" ? e : e + ""
        }
        function rl(i, e) {
            if (Ja(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (Ja(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        function cu(i) {
            return Zo(i) || ci(i) || uu(i) || al()
        }
        function al() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function uu(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return wo(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? wo(i, e) : void 0
            }
        }
        function ci(i) {
            if (typeof ve() < "u" && Re()(i) != null || i["@@iterator"] != null)
                return An()(i)
        }
        function Zo(i) {
            if (rr()(i))
                return wo(i)
        }
        function wo(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function Jo() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Jo = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && Ja(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(Ja(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function il(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function ol(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            il(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            il(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        const du = (0,
            Qe.defineComponent)({
            name: "ActiveEngagements",
            mixins: [Kf],
            data: function() {
                return {
                    filters: void 0,
                    loading: !1
                }
            },
            created: function() {
                var e = this;
                return ol(Jo().mark(function n() {
                    return Jo().wrap(function(f) {
                        for (; ; )
                            switch (f.prev = f.next) {
                                case 0:
                                    return f.next = 2,
                                        e.getAnalyticsConfig();
                                case 2:
                                case "end":
                                    return f.stop()
                            }
                    }, n)
                }))()
            },
            props: {
                client: {
                    type: Boolean,
                    default: !1
                },
                isRefresh: {
                    type: Boolean,
                    default: !1
                },
                userInfo: {
                    type: Object,
                    required: !0
                },
                defaultId: {
                    type: String,
                    default: void 0
                },
                defaultQueueIds: Array,
                channel: {
                    type: String,
                    required: !0
                },
                title: {
                    type: String,
                    required: void 0
                },
                disableSuperVisor: {
                    type: Object,
                    default: function() {
                        return {}
                    }
                }
            },
            components: {
                SearchFilter: su,
                FilterDropdown: Kc,
                ActiveEngageChannelTable: Qf
            },
            setup: function() {
                var e = (0,
                    U.GET_ACTIVE_FILTER_MAPS)(ka.i18n)
                    , n = ma()(e).call(e, function(g) {
                    return g.value
                })
                    , l = (0,
                    Qe.ref)(cu(n))
                    , f = (0,
                    Qe.computed)(function() {
                    return Oe()(n).call(n, function(g) {
                        var I;
                        return M()(I = l.value).call(I, g)
                    })
                });
                return {
                    checkList: f,
                    dropdownCheckList: l
                }
            },
            computed: tl(tl({}, (0,
                zt.mapGetters)("sessionPanels", ["menuTab"])), {}, {
                isMenuEngagementsSelected: function() {
                    return this.menuTab === U.eMenuName.engagements
                },
                refreshRate: function() {
                    var e, n, l = "5000";
                    switch (this.channel) {
                        case "messaging":
                            l = ((e = this.analyticsConfig) === null || e === void 0 ? void 0 : e.messagingActiveEngagementsRefreshRate) || "5000";
                            break;
                        case "email":
                            l = ((n = this.analyticsConfig) === null || n === void 0 ? void 0 : n.emailActiveEngagementsRefreshRate) || "5000";
                            break;
                        default:
                    }
                    return l
                },
                channels: function() {
                    return this.channel === "messaging" ? [U.ChannelTypeMap.messaging, U.ChannelTypeMap.sms, U.ChannelTypeMap.chat, U.ChannelTypeMap.app_chat] : [U.ChannelTypeMap[this.channel]]
                }
            }),
            methods: {
                updateIsRefresh: function(e) {
                    this.$emit("changeRefresh", e)
                },
                handleEvents: function(e) {
                    for (var n, l = arguments.length, f = new Array(l > 1 ? l - 1 : 0), g = 1; g < l; g++)
                        f[g - 1] = arguments[g];
                    this.$emit.apply(this, oa()(n = ["events", e]).call(n, f))
                },
                changeFilters: function(e) {
                    this.filters = e
                }
            }
        });
        var fu = (0,
            ir.A)(du, Rc, jc, !1, null, "8124b986", null);
        const Oi = fu.exports;
        function ui(i) {
            "@babel/helpers - typeof";
            return ui = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                ui(i)
        }
        function ja() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            ja = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && ui(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(ui(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function Xo(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function Xi(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            Xo(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            Xo(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function sl(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function To(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = sl(Object(f), !0)).call(n, function(g) {
                    pu(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = sl(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function pu(i, e, n) {
            return (e = hu(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function hu(i) {
            var e = qi(i, "string");
            return ui(e) == "symbol" ? e : e + ""
        }
        function qi(i, e) {
            if (ui(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (ui(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        const ll = {
            name: "EngagementsTabs",
            mixins: [vn.A],
            components: {
                ActiveEngagements: Oi
            },
            props: {
                isRefresh: {
                    type: Boolean,
                    default: !1
                },
                userInfo: {
                    type: Object,
                    default: function() {
                        return {}
                    }
                }
            },
            data: function() {
                return {
                    activeName: "".concat(U.ChannelTypeMap.voice),
                    channelTabs: []
                }
            },
            computed: To(To({}, (0,
                zt.mapGetters)({
                analyticsConfig: "search/analyticsConfig"
            })), {}, {
                channel: function() {
                    return this.activeName === "messaging" ? "messaging" : U.ChannelTypeMap[this.activeName]
                },
                disableSuperVisor: function() {
                    return {
                        videoBarging: !this.account.enableVideoSupervisorBarging
                    }
                }
            }),
            created: function() {
                var e = this;
                return Xi(ja().mark(function n() {
                    return ja().wrap(function(f) {
                        for (; ; )
                            switch (f.prev = f.next) {
                                case 0:
                                    return f.next = 2,
                                        e.getAnalyticsConfig();
                                case 2:
                                    e.init();
                                case 3:
                                case "end":
                                    return f.stop()
                            }
                    }, n)
                }))()
            },
            watch: {
                isRefresh: function(e) {
                    this.changeRefresh(e)
                }
            },
            methods: To(To({}, (0,
                zt.mapActions)({
                queryAnalyticsConfig: "search/queryAnalyticsConfig"
            })), {}, {
                getAnalyticsConfig: function() {
                    var e = this;
                    return Xi(ja().mark(function n() {
                        var l;
                        return ja().wrap(function(g) {
                            for (; ; )
                                switch (g.prev = g.next) {
                                    case 0:
                                        if ((l = e.analyticsConfig) !== null && l !== void 0 && l.hasQuery) {
                                            g.next = 9;
                                            break
                                        }
                                        return g.prev = 1,
                                            g.next = 4,
                                            e.queryAnalyticsConfig();
                                    case 4:
                                        g.next = 9;
                                        break;
                                    case 6:
                                        g.prev = 6,
                                            g.t0 = g.catch(1),
                                            console.error(g.t0);
                                    case 9:
                                    case "end":
                                        return g.stop()
                                }
                        }, n, null, [[1, 6]])
                    }))()
                },
                init: function() {
                    var e = this;
                    return Xi(ja().mark(function n() {
                        return ja().wrap(function(f) {
                            for (; ; )
                                switch (f.prev = f.next) {
                                    case 0:
                                        e.getEnableChannels();
                                    case 1:
                                    case "end":
                                        return f.stop()
                                }
                        }, n)
                    }))()
                },
                changeRefresh: function(e) {
                    this.$emit("update:isRefresh", e)
                },
                getEnableChannels: function() {
                    var e = this, n, l, f, g, I, T, A = (0,
                        Vs.Jp)(this.account, "false", "false"), N = [];
                    Ce()(A).call(A, function(re) {
                        re.label = e.$t("cci.common.label.".concat(re.key)),
                        (!re.children || !re.children.length) && N.push(re)
                    }),
                    ((n = this.account) !== null && n !== void 0 && n.enableMessageChannel || (l = this.account) !== null && l !== void 0 && l.enableSmsChannel || (f = this.account) !== null && f !== void 0 && f.enableChatChannel || (g = this.account) !== null && g !== void 0 && g.enableInAppChatChannel) && N.push({
                        key: "messaging",
                        value: "messaging",
                        label: this.$t("cci.common.label.messaging")
                    }),
                    (I = this.account) !== null && I !== void 0 && I.enableEmailChannel && ((T = this.analyticsConfig) === null || T === void 0 || T.enableEmailChannel),
                        this.channelTabs = N
                },
                changeTab: function(e) {
                    this.activeName = e.name,
                        this.changeRefresh(!1)
                },
                handleEvents: function(e) {
                    for (var n, l = arguments.length, f = new Array(l > 1 ? l - 1 : 0), g = 1; g < l; g++)
                        f[g - 1] = arguments[g];
                    this.$emit.apply(this, oa()(n = ["events", e]).call(n, f))
                }
            })
        };
        var mu = (0,
            ir.A)(ll, Oc, xc, !1, null, "2de10352", null);
        const gu = mu.exports;
        var yu = function() {
            var e = this
                , n = e._self._c
                , l = e._self._setupProxy;
            return n("div", {
                staticClass: "call-list"
            }, [n("div", {
                staticClass: "search-and-filters mg-t-24"
            }, [n("zm-input", {
                staticClass: "mg-b-4",
                attrs: {
                    placeholder: e.$t("cci.inbox.search_by_name_number_engagementID"),
                    "aria-label": e.$t("cci.inbox.search_by_name_number_engagementID"),
                    "prefix-icon": "zm-icon-search",
                    type: "text",
                    clearable: ""
                },
                on: {
                    input: e.onInput
                },
                model: {
                    value: e.keywordValue,
                    callback: function(g) {
                        e.keywordValue = g
                    },
                    expression: "keywordValue"
                }
            }), e._v(" "), n("div", {
                staticClass: "select-filter-box"
            }, [n("SelectFilter", {
                ref: "engagementFilter",
                on: {
                    submit: e.filterSubmit
                }
            }), e._v(" "), n("zm-button", {
                attrs: {
                    "aria-label": e.$t("cci.engagement.closedTab.button.clearAll"),
                    type: "link",
                    ghost: ""
                },
                on: {
                    click: e.clearAllFilters
                }
            }, [e._v(`
        ` + e._s(e.$t("cci.engagement.closedTab.button.clearAll")) + `
      `)])], 1)], 1), e._v(" "), n("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: e.tableLoading,
                    expression: "tableLoading"
                }],
                staticClass: "list_wrap"
            }, [e._l(e.dataSource, function(f) {
                return n("div", {
                    key: f.id,
                    staticClass: "list_item"
                }, [n("div", {
                    staticClass: "list_title ellipsis"
                }, [n("span", {
                    class: ["icon_img", {
                        phone: f.channelType === "PHONE",
                        inbound: f.direction === "IN",
                        outbound: f.direction === "OUT",
                        chat: e.isChatChannelType(f),
                        sms: f.channelType === "SMS",
                        video: f.channelType === "VIDEO",
                        email: f.channelType === e.CHANNEL_KEYS.email.recentKey
                    }]
                }), e._v(" "), n("span", [e._v(e._s(e.calcTitle(f)))])]), e._v(" "), n("div", {
                    staticClass: "list_detail"
                }, [e._l(e.showColumns, function(g) {
                    var I;
                    return [!g.hideWhenEmpty || f[g.value] ? n("div", {
                        key: g.value,
                        staticClass: "zm_ellipsis",
                        attrs: {
                            title: e.useCalcText({
                                item: f,
                                key: g.value
                            })
                        }
                    }, [n("span", {
                        staticClass: "zm_ellipsis_label"
                    }, [e._v(e._s(g.label))]), e._v(" "), n("span", {
                        staticClass: "zm_ellipsis_detail",
                        class: {
                            clickabled: M()(I = ["engagementId"]).call(I, g.value)
                        },
                        on: {
                            click: function(A) {
                                return e.handleClickItem(f, g.value)
                            }
                        }
                    }, [e._v(e._s(e.useCalcText({
                        item: f,
                        key: g.value
                    })))])]) : e._e()]
                })], 2)])
            }), e._v(" "), n("div", {
                staticClass: "table_bottom"
            }, [e.pagination.total == 0 ? n("div", {
                staticClass: "empty"
            }, [e._v(`
        ` + e._s(e.$t("cci.common.noResult")) + `
      `)]) : e._e(), e._v(" "), n("zm-pagination", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.pagination.total > 0,
                    expression: "pagination.total > 0"
                }],
                attrs: {
                    "current-page": e.pagination.page,
                    "page-size": e.pagination.size,
                    layout: "prev, next, total",
                    total: e.pagination.total,
                    "format-total": e.formatTotal
                },
                on: {
                    "update:currentPage": function(g) {
                        return e.$set(e.pagination, "page", g)
                    },
                    "update:current-page": function(g) {
                        return e.$set(e.pagination, "page", g)
                    },
                    "current-change": e.handlePageChange
                }
            })], 1)], 2)])
        }
            , Xf = []
            , _u = a(96559)
            , qo = a.n(_u)
            , xa = a(35878)
            , cl = a(73680)
            , bu = a(71487)
            , Cu = a(4673)
            , Eu = function() {
            var e = this
                , n = e._self._c;
            return n("div", {
                staticClass: "engagement-filters"
            }, [n("zm-button", {
                attrs: {
                    "aria-label": e.$t("cci.common.label.advancedFilter.ariaLabel"),
                    type: "link"
                },
                on: {
                    click: e.openDialog
                }
            }, [e._v(`
    ` + e._s(e.$t("cci.engagement.closedTab.button.filter")) + `
    `)]), e._v(" "), e.isFilterChange ? n("div", {
                staticClass: "filter-barge"
            }) : e._e(), e._v(" "), n("Dialog", {
                attrs: {
                    width: "calc(80% - (100vw - 450px) / 200)",
                    "show-close": "",
                    "append-to-body": "",
                    visible: e.dialogVisible,
                    title: e.$t("cci.engagement.closedTab.button.engagement.filter"),
                    "submit-text": e.$t("cci.common.button.apply")
                },
                on: {
                    "update:visible": function(f) {
                        e.dialogVisible = f
                    },
                    submit: e.handleSubmit
                }
            }, [n("zm-form", {
                ref: "form",
                staticClass: "advanced-filter__form",
                attrs: {
                    "label-width": "160px",
                    "label-position": "top"
                },
                model: {
                    value: e.form,
                    callback: function(f) {
                        e.form = f
                    },
                    expression: "form"
                }
            }, [n("zm-form-item", {
                attrs: {
                    label: ""
                }
            }), e._v(" "), n("zm-form-item", {
                attrs: {
                    label: ""
                }
            }, [n("zm-row", [n("zm-col", {
                attrs: {
                    span: 11
                }
            }, [n("zm-date-picker", {
                staticClass: "crm-engagement-filter-item",
                attrs: {
                    type: "datetime",
                    placeholder: e.$t("cci.common.date.start.placeholder"),
                    "aria-label": e.$t("cci.common.date.start.ariaLabel"),
                    "range-separator": "-",
                    "value-format": "timestamp",
                    size: "small"
                },
                model: {
                    value: e.form.startTime,
                    callback: function(f) {
                        e.$set(e.form, "startTime", f)
                    },
                    expression: "form.startTime"
                }
            })], 1), e._v(" "), n("zm-col", {
                staticClass: "line",
                attrs: {
                    span: 2
                }
            }, [e._v("\xA0")]), e._v(" "), n("zm-col", {
                attrs: {
                    span: 11
                }
            }, [n("zm-date-picker", {
                staticClass: "crm-engagement-filter-item",
                attrs: {
                    type: "datetime",
                    placeholder: e.$t("cci.common.date.end.placeholder"),
                    "aria-label": e.$t("cci.common.date.end.ariaLabel"),
                    "range-separator": "-",
                    "value-format": "timestamp",
                    size: "small"
                },
                model: {
                    value: e.form.endTime,
                    callback: function(f) {
                        e.$set(e.form, "endTime", f)
                    },
                    expression: "form.endTime"
                }
            })], 1)], 1)], 1), e._v(" "), n("zm-form-item", [n("zm-row", [n("zm-col", {
                attrs: {
                    span: 11
                }
            }, [n("queue-multi-select-v3", {
                attrs: {
                    "convert-all-to-empty": !1,
                    "channel-types": e.channelTypes
                },
                model: {
                    value: e.form.queueIds,
                    callback: function(f) {
                        e.$set(e.form, "queueIds", f)
                    },
                    expression: "form.queueIds"
                }
            })], 1), e._v(" "), n("zm-col", {
                staticClass: "line",
                attrs: {
                    span: 2
                }
            }, [e._v("\xA0")]), e._v(" "), n("zm-col", {
                attrs: {
                    span: 11
                }
            }, [n("team-total-multi-async-select-v3", {
                staticClass: "flex-item call_search-filter",
                attrs: {
                    "convert-all-to-empty": !1
                },
                model: {
                    value: e.form.teams,
                    callback: function(f) {
                        e.$set(e.form, "teams", f)
                    },
                    expression: "form.teams"
                }
            })], 1)], 1)], 1), e._v(" "), n("zm-form-item", [n("zm-row", [n("zm-col", {
                attrs: {
                    span: 11
                }
            }, [n("channel-multi-select-v3", {
                attrs: {
                    "filter-all-label": e.$t("cci.engagement.closedTab.filter.channel")
                },
                model: {
                    value: e.form.channelType,
                    callback: function(f) {
                        e.$set(e.form, "channelType", f)
                    },
                    expression: "form.channelType"
                }
            })], 1), e._v(" "), n("zm-col", {
                staticClass: "line",
                attrs: {
                    span: 2
                }
            }, [e._v("\xA0")]), e._v(" "), n("zm-col", {
                attrs: {
                    span: 11
                }
            }, [n("disposition-multi-select-v3", {
                staticClass: "flex-item call_search-filter",
                attrs: {
                    "filter-all-label": e.$t("cci.engagement.closedTab.filter.disposition"),
                    placeholder: e.$t("cci.engagement.closedTab.filter.disposition")
                },
                model: {
                    value: e.form.disposition,
                    callback: function(f) {
                        e.$set(e.form, "disposition", f)
                    },
                    expression: "form.disposition"
                }
            })], 1)], 1)], 1), e._v(" "), n("zm-form-item", [n("zm-row", [n("zm-col", {
                attrs: {
                    span: 11
                }
            }, [n("agent-multi-select-v3", {
                attrs: {
                    "filter-all-label": e.$t("cci.engagement.closedTab.filter.channel"),
                    placeholder: e.$t("cci.engagement.closedTab.filter.channel")
                },
                model: {
                    value: e.form.agentId,
                    callback: function(f) {
                        e.$set(e.form, "agentId", f)
                    },
                    expression: "form.agentId"
                }
            })], 1), e._v(" "), n("zm-col", {
                staticClass: "line",
                attrs: {
                    span: 2
                }
            }, [e._v("\xA0")]), e._v(" "), n("zm-col", {
                attrs: {
                    span: 11
                }
            }, [n("direction-select-v3", {
                attrs: {
                    "filter-all-label": e.$t("cci.engagement.closedTab.filter.disposition"),
                    placeholder: e.$t("cci.engagement.closedTab.filter.disposition")
                },
                model: {
                    value: e.form.direction,
                    callback: function(f) {
                        e.$set(e.form, "direction", f)
                    },
                    expression: "form.direction"
                }
            })], 1)], 1)], 1)], 1)], 1)], 1)
        }
            , Iu = []
            , So = function() {
            var e = this
                , n = e._self._c;
            return n("ZccDialog", {
                attrs: {
                    title: e.title,
                    visible: e._visible,
                    "custom-class": e.customClass,
                    width: e.width,
                    "append-to-body": e.appendToBody,
                    "show-close": e.showClose,
                    "mini-screen-enlargement": !1
                },
                on: {
                    "update:visible": function(f) {
                        e._visible = f
                    },
                    close: function(f) {
                        return e.$emit("close")
                    }
                },
                scopedSlots: e._u([{
                    key: "title",
                    fn: function() {
                        return [n("h2", {
                            staticClass: "zm-dialog__title",
                            domProps: {
                                textContent: e._s(e.title)
                            }
                        })]
                    },
                    proxy: !0
                }, {
                    key: "footer",
                    fn: function() {
                        return [n("span", {
                            staticClass: "dialog-footer flex space-between"
                        }, [e._t("leftFooter", function() {
                            return [n("span")]
                        }), e._v(" "), e._t("rightFooter", function() {
                            return [n("div", {
                                staticClass: "dialog-footer--right"
                            }, [n("zm-button", {
                                attrs: {
                                    loading: e.loading,
                                    disabled: e.disabled,
                                    "aria-label": e.submitAriaLabel,
                                    type: "primary"
                                },
                                on: {
                                    click: e.onSubmit
                                }
                            }, [e._v(`
            ` + e._s(e.submitText || e.$t("cci.common.button.confirm")) + `
          `)]), e._v(" "), n("zm-button", {
                                attrs: {
                                    "aria-label": e.cancelAriaLabel,
                                    plain: ""
                                },
                                on: {
                                    click: e.onCancel
                                }
                            }, [e._v(`
            ` + e._s(e.cancelText || e.$t("cci.common.button.cancel")) + `
          `)])], 1)]
                        })], 2)]
                    },
                    proxy: !0
                }], null, !0)
            }, [e._v(" "), e._t("default")], 2)
        }
            , wu = [];
        const qf = {
            props: {
                appendToBody: Boolean,
                loading: Boolean,
                disabled: Boolean,
                visible: Boolean,
                title: String,
                width: {
                    type: String,
                    default: "900px"
                },
                customClass: {
                    type: String
                },
                submitText: {
                    type: String
                },
                cancelText: {
                    type: String
                },
                submitAriaLabel: String,
                cancelAriaLabel: String,
                showClose: Boolean,
                showConfirm: {
                    type: Boolean,
                    default: !0
                }
            },
            computed: {
                _visible: {
                    get: function() {
                        return this.visible
                    },
                    set: function(e) {
                        this.$emit("update:visible", e)
                    }
                }
            },
            methods: {
                onSubmit: function() {
                    this.$emit("submit")
                },
                closeDialog: function() {
                    this._visible = !1
                },
                onCancel: function() {
                    this.closeDialog(),
                        this.$emit("cancel")
                }
            }
        };
        var ep = (0,
            ir.A)(qf, So, wu, !1, null, null, null);
        const tp = ep.exports;
        function Ao(i) {
            "@babel/helpers - typeof";
            return Ao = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                Ao(i)
        }
        function Tu(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function Su(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = Tu(Object(f), !0)).call(n, function(g) {
                    np(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = Tu(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function np(i, e, n) {
            return (e = rp(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function rp(i) {
            var e = ap(i, "string");
            return Ao(e) == "symbol" ? e : e + ""
        }
        function ap(i, e) {
            if (Ao(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (Ao(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        var ip = U.inboxConstant.ASSIGNMENT_TYPE
            , Au = {
            keyword: "",
            queueIds: [],
            inboxIds: [],
            startTime: "",
            endTime: "",
            channelType: [],
            disposition: [],
            teams: [],
            agentId: []
        };
        const op = {
            props: {
                value: {
                    type: Object,
                    default: function() {
                        return {
                            advanced: null,
                            keyword: ""
                        }
                    }
                },
                maxlength: {
                    type: Number,
                    default: 128
                },
                channelType: {
                    type: Number,
                    default: U.ChannelTypeMap.voice
                },
                assignmentType: {
                    type: Number,
                    default: ip.ALL
                },
                isFrom: Number,
                disabled: Boolean
            },
            components: {
                Dialog: tp,
                AgentMultiSelectV3: Lt.AgentMultiSelectV3,
                AgentMultiSelect: Lt.AgentMultiSelect,
                ChannelMultiSelectV3: Lt.ChannelMultiSelectV3,
                DirectionSelectV3: Lt.DirectionSelectV3,
                DispositionMultiSelectV3: Lt.DispositionMultiSelectV3,
                QueueMultiSelectV3: Lt.QueueMultiSelectV3,
                TeamTotalMultiAsyncSelectV3: Lt.TeamTotalMultiAsyncSelectV3
            },
            data: function() {
                return {
                    form: Su({}, Au)
                }
            },
            computed: {
                isFilterChange: function() {
                    return Zi()(this.form) !== Zi()(Au)
                }
            },
            setup: function() {
                var e = (0,
                    Qe.ref)(!1)
                    , n = [U.ChannelTypeMap.voice, U.ChannelTypeMap.chat, U.ChannelTypeMap.sms, U.ChannelTypeMap.app_chat, U.ChannelTypeMap.zr, U.ChannelTypeMap.video, U.ChannelTypeMap.email, U.ChannelTypeMap.messaging]
                    , l = function() {
                    e.value = !0
                };
                return {
                    dialogVisible: e,
                    openDialog: l,
                    channelTypes: n
                }
            },
            methods: {
                handleSubmit: function() {
                    this.dialogVisible = !1,
                        this.$emit("submit", Su({}, this.form))
                },
                resetParams: function() {
                    this.form = {
                        keyword: "",
                        queueIds: [],
                        inboxIds: [],
                        startTime: "",
                        endTime: "",
                        channelType: [],
                        disposition: [],
                        teams: [],
                        agentId: []
                    }
                }
            }
        };
        var sp = (0,
            ir.A)(op, Eu, Iu, !1, null, "53079dca", null);
        const lp = sp.exports;
        function xi(i) {
            "@babel/helpers - typeof";
            return xi = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                xi(i)
        }
        function cp(i, e) {
            return fp(i) || dp(i, e) || Lu(i, e) || up()
        }
        function up() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function dp(i, e) {
            var n = i == null ? null : typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (n != null) {
                var l, f, g, I, T = [], A = !0, N = !1;
                try {
                    if (g = (n = n.call(i)).next,
                    e === 0) {
                        if (Object(n) !== n)
                            return;
                        A = !1
                    } else
                        for (; !(A = (l = g.call(n)).done) && (T.push(l.value),
                        T.length !== e); A = !0)
                            ;
                } catch (re) {
                    N = !0,
                        f = re
                } finally {
                    try {
                        if (!A && n.return != null && (I = n.return(),
                        Object(I) !== I))
                            return
                    } finally {
                        if (N)
                            throw f
                    }
                }
                return T
            }
        }
        function fp(i) {
            if (rr()(i))
                return i
        }
        function pp(i) {
            return mp(i) || vp(i) || Lu(i) || hp()
        }
        function hp() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Lu(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return ul(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? ul(i, e) : void 0
            }
        }
        function vp(i) {
            if (typeof ve() < "u" && Re()(i) != null || i["@@iterator"] != null)
                return An()(i)
        }
        function mp(i) {
            if (rr()(i))
                return ul(i)
        }
        function ul(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function dl() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            dl = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && xi(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(xi(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function Nu(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function gp(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            Nu(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            Nu(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function es(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function Ua(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = es(Object(f), !0)).call(n, function(g) {
                    yp(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = es(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function yp(i, e, n) {
            return (e = _p(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function _p(i) {
            var e = bp(i, "string");
            return xi(e) == "symbol" ? e : e + ""
        }
        function bp(i, e) {
            if (xi(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (xi(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        var Cp = Zt.reportV2Api.getHistoryList
            , eo = {};
        const Ep = (0,
            Qe.defineComponent)({
            name: "HistoryList",
            props: {
                completedIsRefresh: {
                    type: Boolean,
                    default: !1
                }
            },
            setup: function(e, n) {
                var l = n.emit
                    , f = (0,
                    Mn.useSessionPanelsActions)()
                    , g = f.setRightPanelHistoryTaskData
                    , I = f.setRightBarTabIndexInHistory
                    , T = (0,
                    Mn.useCrmRecentActions)()
                    , A = T.updateSessionRow
                    , N = T.updateSelectIdx
                    , re = (0,
                    Bn.getCRM)() === Dt.CRMS.MsDynamics
                    , fe = (0,
                    Mn.useCrmGetters)()
                    , ke = fe.getAppPanelWidth
                    , Ht = (0,
                    Mn.useStore)()
                    , vt = (0,
                    Qe.ref)(null)
                    , Me = (0,
                    Qe.inject)("$handleMenuClick")
                    , he = (0,
                    Mn.useAppGetters)()
                    , sn = he.profiles
                    , ln = (0,
                    Lt.useDataSilentUpdate)({
                    queryFn: Cp
                })
                    , lt = ln.getData
                    , Tn = (0,
                    Qe.ref)("")
                    , Wn = (0,
                    Qe.ref)([])
                    , Dn = (0,
                    Qe.computed)(function() {
                    var At;
                    return (At = Ht.getters) === null || At === void 0 ? void 0 : At.user
                })
                    , xt = (0,
                    Lt.useCrmUser)()
                    , Nr = xt.getCrmName
                    , xn = (0,
                    Qe.ref)({
                    size: 10,
                    total: 0,
                    page: 1,
                    sortValue: [""]
                })
                    , wr = (0,
                    Qe.ref)(!1)
                    , Dr = (0,
                    Cu.useCompletedEngagement)()
                    , Fr = Dr.showColumns
                    , fr = function(Ye) {
                    return U.CachedEngagementUsers.getInstance().getName(Ye.engagementId) || Nr(Ye.engagementId, Ye.customerNumber, Ye.email) || Ye.customerName || (0,
                        cl.phoneNumber)(Ye.customerNumber, Dn.value.countryOrRegion)
                };
                (0,
                    Qe.watch)(function() {
                    return e.completedIsRefresh
                }, function(At) {
                    At && (p(Ua(Ua({}, eo), {}, {
                        page: 1
                    })),
                        k()(function() {
                            l("update:completedIsRefresh", !1)
                        }, 1e3))
                });
                var yr = function(Ye, Rt) {
                    var va;
                    M()(va = ["engagementId"]).call(va, Rt) && r(Ua({}, Ye))
                }
                    , hr = (0,
                    Qe.computed)(function() {
                    return re && ke.value === 44
                })
                    , c = function() {
                    var At = gp(dl().mark(function Ye() {
                        var Rt;
                        return dl().wrap(function(ia) {
                            for (; ; )
                                switch (ia.prev = ia.next) {
                                    case 0:
                                        if (!hr.value) {
                                            ia.next = 5;
                                            break
                                        }
                                        return ia.next = 3,
                                            (0,
                                                xa.getCRMInstance)();
                                    case 3:
                                        Rt = ia.sent,
                                        Rt?.openDialPanel && Rt.openDialPanel();
                                    case 5:
                                    case "end":
                                        return ia.stop()
                                }
                        }, Ye)
                    }));
                    return function() {
                        return At.apply(this, arguments)
                    }
                }()
                    , r = function(Ye) {
                    N(-1),
                        Me(U.eMenuName.sessionRecent),
                        I(0),
                        g(Ye),
                        A(Ye),
                        c()
                }
                    , o = function(Ye) {
                    var Rt = [];
                    return Ye && Ce()(Ye).call(Ye, function(va) {
                        var ia = va.children;
                        Rt = oa()(Rt).call(Rt, ia ? pp(o(ia)) : va)
                    }),
                        Rt
                }
                    , p = function() {
                    var Ye, Rt, va, ia, Pa, Ni, Sa, _o, xo, pa = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                    eo = pa;
                    var Va = pa.page || xn.value.page
                        , za = xn.value.sortValue[Va - 1]
                        , Ls = {
                        size: 10,
                        page: Va || 1,
                        keyword: qo()(pa.keyword),
                        order: "endTime",
                        desc: !0,
                        endTime: pa.endTime ? Hi()(pa.endTime).format("YYYY-MM-DD HH:mm:ss") : "",
                        startTime: pa.startTime ? Hi()(pa.startTime).format("YYYY-MM-DD HH:mm:ss") : "",
                        direction: pa.direction,
                        queueIds: (pa.queueIds || []).join(","),
                        teamIds: (Ye = ma()(Rt = pa.teams || []).call(Rt, function(Ya) {
                            return Ya.id
                        })) === null || Ye === void 0 ? void 0 : Ye.join(","),
                        channelTypes: (va = ma()(ia = o(pa.channelType)).call(ia, function(Ya) {
                            return Ya.key
                        })) === null || va === void 0 ? void 0 : va.join(","),
                        dispositionIds: (Pa = ma()(Ni = pa.disposition || []).call(Ni, function(Ya) {
                            return Ya.id
                        })) === null || Pa === void 0 ? void 0 : Pa.join(","),
                        agentIds: (Sa = ma()(_o = pa.agentId || []).call(_o, function(Ya) {
                            return Ya.id
                        })) === null || Sa === void 0 ? void 0 : Sa.join(","),
                        checkQueueAccess: !0,
                        timezone: ((xo = sn.value) === null || xo === void 0 ? void 0 : xo.timezone) || "UTC"
                    };
                    za && (Ls.sortValue = za),
                        wr.value = !0,
                        lt(Ua(Ua({}, Ls), {}, {
                            size: 10
                        }), function(Ya) {
                            var Ns = cp(Ya, 2)
                                , Ms = Ns[0]
                                , Ha = Ns[1];
                            if (wr.value = !1,
                                Ms) {
                                console.error(Ms);
                                return
                            }
                            xn.value.total = Ha.totalSize,
                                xn.value.page = Va || 1,
                                Wn.value = Ha.list,
                                xn.value.sortValue[pa.page || 1] = Ha.sortValue
                        })
                }
                    , _ = function(Ye) {
                    p(Ua(Ua({}, eo), {}, {
                        page: Ye
                    }))
                }
                    , y = function() {
                    var Ye = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                    p(Ua(Ua({}, eo), {}, {
                        keyword: Tn.value
                    }, Ye))
                }
                    , j = function() {
                    vt.value.resetParams(),
                        eo = {},
                        Tn.value = "",
                        p()
                }
                    , ue = (0,
                    tn.debounce)(function() {
                    y({
                        page: 1
                    })
                }, 1e3)
                    , le = function(Ye) {
                    p(Ua(Ua(Ua({}, eo), Ye), {}, {
                        page: 1
                    }))
                };
                return (0,
                    Qe.onBeforeMount)(p),
                    {
                        calcTitle: fr,
                        onInput: ue,
                        filterSubmit: le,
                        engagementFilter: vt,
                        keywordValue: Tn,
                        formatTotal: function(Ye) {
                            var Rt, va, ia = (xn.value.page - 1) * xn.value.size + 1, Pa = ia + xn.value.size - 1;
                            return oa()(Rt = oa()(va = "".concat(ia, "-")).call(va, Pa < Ye ? Pa : Ye, " of ")).call(Rt, Ye)
                        },
                        clearAllFilters: j,
                        handleClickItem: yr,
                        handleSubmit: p,
                        useCalcText: bu.U,
                        showColumns: Fr,
                        dataSource: Wn,
                        tableLoading: wr,
                        pagination: xn,
                        handlePageChange: _,
                        phoneNumber: cl.phoneNumber,
                        CHANNEL_KEYS: U.CHANNEL_KEYS,
                        isChatChannelType: Vs._J
                    }
            },
            components: {
                SelectFilter: lp
            }
        });
        var Ip = (0,
            ir.A)(Ep, yu, Xf, !1, null, "e2cdea1e", null);
        const wp = Ip.exports;
        function Tp(i, e) {
            return Np(i) || Lp(i, e) || Ap(i, e) || Sp()
        }
        function Sp() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Ap(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return Mu(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? Mu(i, e) : void 0
            }
        }
        function Mu(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function Lp(i, e) {
            var n = i == null ? null : typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (n != null) {
                var l, f, g, I, T = [], A = !0, N = !1;
                try {
                    if (g = (n = n.call(i)).next,
                    e === 0) {
                        if (Object(n) !== n)
                            return;
                        A = !1
                    } else
                        for (; !(A = (l = g.call(n)).done) && (T.push(l.value),
                        T.length !== e); A = !0)
                            ;
                } catch (re) {
                    N = !0,
                        f = re
                } finally {
                    try {
                        if (!A && n.return != null && (I = n.return(),
                        Object(I) !== I))
                            return
                    } finally {
                        if (N)
                            throw f
                    }
                }
                return T
            }
        }
        function Np(i) {
            if (rr()(i))
                return i
        }
        var Mp = Zt.variableApi.getHistoryVariablesOnEngagement;
        const Pp = (0,
            Qe.defineComponent)({
            name: "Engagements",
            components: {
                HistoryList: wp,
                ActiveList: gu,
                VariablesList: Bs.A,
                Empty: Lt.Empty
            },
            props: {
                isSmallModel: {
                    type: Boolean,
                    default: !1
                },
                featureOptions: {
                    type: Object,
                    default: function() {
                        return {}
                    }
                }
            },
            setup: function(e) {
                var n = this
                    , l = (0,
                    Qe.ref)(!1)
                    , f = (0,
                    Qe.ref)(!1)
                    , g = (0,
                    Qe.ref)(!1)
                    , I = (0,
                    Qe.ref)([])
                    , T = (0,
                    Qe.ref)([])
                    , A = (0,
                    Qe.ref)({})
                    , N = e.featureOptions
                    , re = (0,
                    Qe.ref)(!1)
                    , fe = (0,
                    kc.useAccountConfig)()
                    , ke = fe.getSettingEnabled
                    , Ht = fe.getPermissionEnabled
                    , vt = (0,
                    Lt.useDataSilentUpdate)({
                    queryFn: Mp
                })
                    , Me = vt.getData
                    , he = (N != null && N.enable_client_setting ? ke("completed-engagements") : Ht("VecHistory:Read")) ? (0,
                    Qe.ref)("closed") : (0,
                    Qe.ref)("active")
                    , sn = (0,
                    Qe.computed)(function() {
                    return N != null && N.enable_client_setting ? ke("active-engagements") : Ht("VecLiveSession:Read")
                })
                    , ln = (0,
                    Qe.computed)(function() {
                    return N != null && N.enable_client_setting ? ke("completed-engagements") : Ht("VecHistory:Read")
                })
                    , lt = function(xt, Nr) {
                    var xn = {
                        inClientProfileSec: !0,
                        inClientEngagementSec: !0,
                        engagementId: xt[Nr]
                    };
                    A.value = xt,
                        f.value = !0,
                        re.value = !0,
                        I.value = [],
                        T.value = [],
                        Me(xn, function(wr) {
                            var Dr = Tp(wr, 2)
                                , Fr = Dr[0]
                                , fr = Dr[1];
                            if (re.value = !1,
                                Fr) {
                                n.$message.error(Fr);
                                return
                            }
                            I.value = fr.customGlobalVariables || [],
                                T.value = fr.systemGlobalVariables || []
                        })
                }
                    , Tn = function() {
                    f.value = !1
                }
                    , Wn = (0,
                    Qe.computed)(function() {
                    return !re.value && !T.value.length && !I.value.length
                });
                return {
                    showEmptyPage: Wn,
                    activeName: he,
                    completedIsRefresh: l,
                    isRefresh: g,
                    allowActiveEngagements: sn,
                    allowCompletedEngagements: ln,
                    showRightPanel: f,
                    currentSelectItem: A,
                    customGlobalVariables: I,
                    systemGlobalVariables: T,
                    closeRightPanel: Tn,
                    variablesLoading: re,
                    handleRefresh: function(xt) {
                        xt === "isActive" ? g.value = !0 : l.value = !0
                    },
                    openRightPanel: lt
                }
            }
        });
        var kp = (0,
            ir.A)(Pp, Mc, Pc, !1, null, null, null);
        const Op = kp.exports;
        var fl = function() {
            var e = this
                , n = e._self._c
                , l = e._self._setupProxy;
            return n("div", {
                staticClass: "client-inbox__wrap h-full overflow-auto"
            }, [n("transition-group", {
                staticClass: "h-full overflow-auto",
                attrs: {
                    name: "toggle",
                    tag: "div"
                }
            }, [l.isSoftDeleted ? n("div", {
                key: "1",
                staticClass: "h-full overflow-auto"
            }, [n("div", {
                staticClass: "inbox-title"
            }, [n("zm-button", {
                attrs: {
                    icon: "zm-icon-left",
                    type: "link"
                },
                on: {
                    click: l.viewDeletedInboxOrNot
                }
            }, [e._v(`
          ` + e._s(e.$t("cci.common.button.back")) + `
        `)]), e._v(" "), n("span", {
                staticClass: "inbox-title__text"
            }, [e._v(e._s(e.$t("cci.inbox.recently_deleted")))]), e._v(" "), n(l.AxIcon, {
                attrs: {
                    ghost: "",
                    "icon-class-name": "zm-icon-refresh",
                    "prop-click-method": l.refreshDataList,
                    "prop-aria-label": e.$tc("cci.inbox.refresh_recently_deleted")
                }
            })], 1), e._v(" "), n(l.Base, {
                ref: "$baseRef",
                attrs: {
                    "soft-deleted": 1
                }
            })], 1) : n("div", {
                key: "0",
                staticClass: "h-full overflow-auto"
            }, [l.assignPageVisible ? e._e() : n("div", {
                staticClass: "inbox-title"
            }, [n("div", {
                staticClass: "inbox-title__text"
            }, [n("span", [e._v(e._s(e.$t("cci.inbox")))]), e._v(" "), n(l.AxIcon, {
                attrs: {
                    ghost: "",
                    "icon-class-name": "zm-icon-refresh",
                    "prop-click-method": l.refreshDataList,
                    "prop-aria-label": e.$tc("cci.engagement.refresh_inbox")
                }
            })], 1), e._v(" "), n("zm-button", {
                attrs: {
                    type: "link",
                    tabindex: "0"
                },
                on: {
                    click: l.viewDeletedInboxOrNot
                }
            }, [e._v(`
          ` + e._s(e.$t("cci.inbox.recently_deleted")) + `
        `)])], 1), e._v(" "), n(l.Base, {
                ref: "$baseRef",
                attrs: {
                    "soft-deleted": 0,
                    "show-selection-col": "",
                    "show-recently-deleted": "",
                    "tab-type": "pipeline"
                },
                on: {
                    bulkDelete: l.batchDeleteInbox,
                    "inbox:assignPageVisibleChange": l.assignPageVisibleChange
                }
            })], 1)])], 1)
        }
            , di = []
            , fi = a(36646)
            , ts = a.n(fi);
        const Pu = ts();
        var ku = (0,
            ir.A)(Pu, fl, di, !1, null, "58ab104a", null);
        const pl = ku.exports;
        var Ou = function() {
            var e = this
                , n = e._self._c;
            return n("div", {
                staticClass: "task"
            }, [e.currentTask ? n("TaskNotify", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.showTaskNotify,
                    expression: "showTaskNotify"
                }],
                attrs: {
                    task: e.currentTask,
                    info: e.info,
                    "auto-accept": e.autoAccept,
                    "is-upgrade": e.isUpgrade
                },
                on: {
                    reject: e.onClear,
                    accept: e.onAccept,
                    dismiss: e.onDismiss
                }
            }) : e._e(), e._v(" "), n("audio", {
                ref: "ringAudio",
                attrs: {
                    preload: "auto",
                    loop: ""
                }
            }, [n("source", {
                attrs: {
                    src: a(20086),
                    type: "audio/wav"
                }
            })]), e._v(" "), e.showUpgradeLoading || e.showOutboundLoading ? n("UpgradeLoading", {
                attrs: {
                    text: e.loadingText
                }
            }) : e._e()], 1)
        }
            , xu = []
            , hl = a(73164)
            , ns = a.n(hl);
        const vl = ns();
        var Di = (0,
            ir.A)(vl, Ou, xu, !1, null, null, null);
        const Du = Di.exports;
        var Ru = function() {
            var e = this
                , n = e._self._c
                , l = e._self._setupProxy;
            return n("section", {
                staticClass: "log-settings"
            }, [n("div", {
                staticClass: "log-settings__headers"
            }, [e._v(e._s(e.$t("cci.crm.settings.title")))]), e._v(" "), n("div", {
                staticClass: "log-settings__rows"
            }, [n("span", {
                staticClass: "settings-label"
            }, [e._v(`
      ` + e._s(e.$t("cci.crm.settings.log.debug.title")))]), e._v(" "), n("zm-switch", {
                attrs: {
                    "label-by": "title",
                    "label-text": e.$t("cci.crm.settings.log.debug.title")
                },
                on: {
                    change: e.onConsoleChange
                },
                model: {
                    value: e.isConsoleEnabled,
                    callback: function(g) {
                        e.isConsoleEnabled = g
                    },
                    expression: "isConsoleEnabled"
                }
            })], 1), e._v(" "), n("div", {
                staticClass: "log-settings__rows"
            }, [n("span", {
                staticClass: "settings-label"
            }, [e._v(e._s(e.$t("cci.crm.settings.log.monitor.title")))]), e._v(" "), n("zm-switch", {
                attrs: {
                    "label-by": "title",
                    "label-text": e.$t("cci.crm.settings.log.monitor.title")
                },
                on: {
                    change: e.onJoinLoggerChange
                },
                model: {
                    value: e.isJoinLoggerEnabled,
                    callback: function(g) {
                        e.isJoinLoggerEnabled = g
                    },
                    expression: "isJoinLoggerEnabled"
                }
            })], 1), e._v(" "), e.showEnableReportingQOSToggle ? n("div", {
                staticClass: "log-settings__rows"
            }, [n("span", {
                staticClass: "settings-label"
            }, [e._v(e._s(e.$t("cci.crm.settings.log.qos.title"))), n("br"), e._v(`
      ` + e._s(e.$t("cci.crm.settings.cti.webrtc.login")))]), e._v(" "), n("zm-switch", {
                attrs: {
                    "label-by": "title",
                    "label-text": e.$t("cci.crm.settings.log.qos.title")
                },
                on: {
                    change: e.setIsReportingQOSEnabledStatus
                },
                model: {
                    value: e.isReportingQOSEnabled,
                    callback: function(g) {
                        e.isReportingQOSEnabled = g
                    },
                    expression: "isReportingQOSEnabled"
                }
            })], 1) : e._e(), e._v(" "), n("div", {
                staticClass: "settings__headers"
            }, [e._v(e._s(e.$t("cci.crm.cti.settings.title")))]), e._v(" "), n("div", {
                staticClass: "settings__rows"
            }, [n("span", {
                staticClass: "settings-label"
            }, [e._v(`
      ` + e._s(e.$t("cci.crm.settings.cti.webrtc.title"))), n("br"), e._v(`
      ` + e._s(e.$t("cci.crm.settings.cti.webrtc.login")))]), e._v(" "), n("zm-switch", {
                attrs: {
                    "label-by": "title",
                    "label-text": e.$t("cci.crm.settings.log.debug.title")
                },
                on: {
                    change: e.onWebRTCChange
                },
                model: {
                    value: e.isWebRTCEnabled,
                    callback: function(g) {
                        e.isWebRTCEnabled = g
                    },
                    expression: "isWebRTCEnabled"
                }
            })], 1), e._v(" "), n("DeviceSettings")], 1)
        }
            , ju = []
            , Uu = function() {
            var e = this
                , n = e._self._c
                , l = e._self._setupProxy;
            return l.enableMediaDeviceSelection ? n("div", [n("div", {
                staticClass: "settings__headers"
            }, [e._v(`
    ` + e._s(l.settingTitle) + `
  `)]), e._v(" "), n("div", {
                staticClass: "settings__rows"
            }, [n("span", {
                staticClass: "settings-label"
            }, [e._v(" " + e._s(l.inputlabel))]), e._v(" "), n("div", [n("zm-select", {
                staticClass: "device-list",
                attrs: {
                    value: l.microphoneId
                },
                on: {
                    change: l.onMicrophoneChanged
                }
            }, e._l(l.inputAudioDevices, function(f) {
                return n("zm-option", {
                    key: f.deviceId,
                    attrs: {
                        label: f.label,
                        value: f.deviceId
                    }
                })
            }), 1)], 1)]), e._v(" "), n("div", {
                staticClass: "settings__rows"
            }, [n("span", {
                staticClass: "settings-label"
            }, [e._v(" " + e._s(l.outputlabel))]), e._v(" "), n("div", [n("zm-select", {
                staticClass: "device-list",
                attrs: {
                    value: l.speakerId
                },
                on: {
                    change: l.onSpeakerChanged
                }
            }, e._l(l.outputAudioDevices, function(f) {
                return n("zm-option", {
                    key: f.deviceId,
                    attrs: {
                        label: f.label,
                        value: f.deviceId
                    }
                })
            }), 1)], 1)]), e._v(" "), n("div", {
                staticClass: "settings__rows"
            }, [n("span", {
                staticClass: "settings-label"
            }, [e._v(" " + e._s(l.ringingOutputlabel))]), e._v(" "), n("div", [n("zm-select", {
                staticClass: "device-list",
                attrs: {
                    value: l.ringingOutputDeviceId
                },
                on: {
                    change: l.onRingingOutputChanged
                }
            }, e._l(l.outputAudioDevices, function(f) {
                return n("zm-option", {
                    key: f.deviceId,
                    attrs: {
                        label: f.label,
                        value: f.deviceId
                    }
                })
            }), 1)], 1)])]) : e._e()
        }
            , $u = []
            , rs = a(442);
        const ml = rs.A;
        var as = (0,
            ir.A)(ml, Uu, $u, !1, null, "39195ebc", null);
        const xp = as.exports
            , Bu = (0,
            Qe.defineComponent)({
            setup: function() {
                var e = (0,
                    Mn.useCtiGetters)()
                    , n = e.isSettingsFEConsoleEnabled
                    , l = e.isSettingsFELogEnabled
                    , f = e.isSettingsWebRTCEnabled
                    , g = e.isSettingsWebRTCPopOutEnabled
                    , I = e.isReportingQOSEnabled
                    , T = e.showEnableReportingQOSToggle
                    , A = (0,
                    Qe.ref)(n.value)
                    , N = (0,
                    Qe.ref)(l.value)
                    , re = (0,
                    Qe.ref)(f.value)
                    , fe = (0,
                    Qe.ref)(g.value)
                    , ke = (0,
                    Mn.useCtiActions)()
                    , Ht = ke.setSettingsFElogEnableStatus
                    , vt = ke.setSettingsFEConsoleEnableStatus
                    , Me = ke.setSettingsWebRTCEnableStatus
                    , he = ke.setSettingsWebRTCPopOutEnabled
                    , sn = ke.setIsReportingQOSEnabledStatus;
                (0,
                    Qe.watch)(n, function() {
                    A.value = n.value
                }),
                    (0,
                        Qe.watch)(l, function() {
                        N.value = l.value
                    }),
                    (0,
                        Qe.watch)(f, function() {
                        re.value = f.value
                    }),
                    (0,
                        Qe.watch)(g, function() {
                        fe.value = g.value
                    });
                var ln = function(xt) {
                    xt ? localStorage.setItem("consoleLoggingLastTime", ee()().toString()) : localStorage.removeItem("consoleLoggingLastTime"),
                        vt(xt)
                }
                    , lt = function(xt) {
                    console.log("isJoinLoggerEnabled:", xt, N.value),
                        xt ? localStorage.setItem("frontendLoggingLastTime", "open") : localStorage.setItem("frontendLoggingLastTime", "close"),
                        Ht(xt)
                }
                    , Tn = function(xt) {
                    console.log("isWebRTCEnabled:", xt, re.value, {
                        isSettingsWebRTCEnabled: f
                    }),
                        xt ? localStorage.setItem("enableWebRTC", "true") : localStorage.removeItem("enableWebRTC"),
                        Me(xt)
                }
                    , Wn = function(xt) {
                    console.log("isPopOutEnabled:", xt, fe.value, {
                        isSettingsWebRTCPopOutEnabled: g
                    }),
                        xt ? localStorage.setItem("enableWebRTCPopOut", "true") : localStorage.removeItem("enableWebRTCPopOut"),
                        he(xt)
                };
                return {
                    isConsoleEnabled: A,
                    isJoinLoggerEnabled: N,
                    isWebRTCEnabled: re,
                    isPopOutEnabled: fe,
                    isReportingQOSEnabled: I,
                    showEnableReportingQOSToggle: T,
                    onConsoleChange: ln,
                    onJoinLoggerChange: lt,
                    onWebRTCChange: Tn,
                    onPopOutChange: Wn,
                    setIsReportingQOSEnabledStatus: sn
                }
            },
            components: {
                DeviceSettings: xp
            }
        });
        var Vu = (0,
            ir.A)(Bu, Ru, ju, !1, null, "6c1c4920", null);
        const Fu = Vu.exports;
        var Wu = function() {
            var e = this
                , n = e._self._c
                , l = e._self._setupProxy;
            return n("section", {
                staticClass: "notifications"
            }, [n("div", {
                staticClass: "notifications__headers"
            }, [e._v(`
    ` + e._s(e.$t("cci.crm.notification.center.title")) + `
  `)]), e._v(" "), e._l(e.notifications, function(f) {
                return n("div", {
                    key: f.id,
                    staticClass: "notifications__rows"
                }, [e._m(0, !0), e._v(" "), n("div", {
                    staticClass: "notification-middle"
                }, [n("div", {
                    staticClass: "notification-text"
                }, [e._v(e._s(f.text))]), e._v(" "), n("zm-button", {
                    attrs: {
                        type: "primary",
                        ghost: ""
                    },
                    on: {
                        click: function(I) {
                            return e.performAction(f)
                        }
                    }
                }, [e._v(e._s(f.actionText))])], 1), e._v(" "), n("div", {
                    staticClass: "notification-right"
                }, [n("i", {
                    staticClass: "zm-icon-delete-outline zcc-icon-del",
                    on: {
                        click: function(I) {
                            return e.deleteNotification(f.id)
                        }
                    }
                })])])
            }), e._v(" "), e.notifications.length === 0 ? n("div", {
                staticClass: "notifications__empty"
            }, [n("div", {
                staticClass: "text"
            }, [e._v(e._s(e.$t("cci.crm.notification.emptyText")))])]) : e._e()], 2)
        }
            , Lo = [function() {
            var i = this
                , e = i._self._c
                , n = i._self._setupProxy;
            return e("div", {
                staticClass: "notification-left"
            }, [e("i", {
                staticClass: "zm-icon-warning zcc-icon-warn"
            })])
        }
        ]
            , is = a(70184)
            , No = a.n(is);
        const jp = (0,
            Qe.defineComponent)({
            setup: function() {
                var e = (0,
                    Mn.useCtiGetters)(), n = e.refreshTokenDecodeInfo, l = e.showTokenExpireInBell, f, g = (0,
                    Lt.useNotification)(), I = g.notifications, T = g.setTokenExpireHours, A = g.checkSessionExpiration, N = g.deleteNotification;
                (0,
                    Qe.onMounted)(function() {
                    re(),
                        f = No()(function() {
                            re()
                        }, 6e4)
                }),
                    (0,
                        Qe.watch)(function() {
                        return n.value.exp
                    }, function() {
                        re()
                    });
                var re = function() {
                    var Ht = Math.floor(ee()() / 1e3)
                        , vt = n.value.exp - Ht
                        , Me = vt / 3600;
                    T(Math.ceil(Me)),
                        A()
                }
                    , fe = function(Ht) {
                    var vt = n.value.uid;
                    Ht.id === "session-expire-".concat(vt) && U.eventBus.$emit("clickToReLoginInNotification")
                };
                return (0,
                    Qe.onBeforeUnmount)(function() {
                    f && clearInterval(f)
                }),
                    {
                        refreshTokenDecodeInfo: n,
                        showTokenExpireInBell: l,
                        notifications: I,
                        deleteNotification: N,
                        performAction: fe
                    }
            }
        });
        var Gu = (0,
            ir.A)(jp, Wu, Lo, !1, null, "2e65a69f", null);
        const zu = Gu.exports;
        var Hu = function() {
            var e, n = this, l = n._self._c, f = n._self._setupProxy;
            return l("div", {
                class: ["phone__cont", n.$slots.header && "flex-start"]
            }, [f.showAlert ? l("zm-alert", {
                staticClass: "phone-alert",
                attrs: {
                    type: "success",
                    "show-icon": "",
                    closable: !1
                }
            }, [l("div", {
                attrs: {
                    slot: "title"
                },
                slot: "title"
            }, [l("span", [n._v(n._s(n.$t("callbar.phone.transcript.enabled.alert")))]), n._v(" "), l("zm-button", {
                staticClass: "phone-alert__transcript",
                attrs: {
                    type: "link"
                },
                on: {
                    click: f.viewTranscript
                }
            }, [n._v(n._s(n.$t("callbar.phone.transcript.view")))])], 1)]) : n._e(), n._v(" "), f.callStatus === f.ON_PHONE_STATUS ? l("div", {
                staticClass: "pstn-tips-container"
            }, [l(f.inboundCallMeOnTip), n._v(" "), l(f.outboundCallMeOnTip, {
                attrs: {
                    duration: n.duration
                }
            }), n._v(" "), l(f.transferByVoicemailOnlyTip, {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: (e = f.callState.UIState) === null || e === void 0 ? void 0 : e.showTransferPad,
                    expression: "callState.UIState?.showTransferPad"
                }]
            })], 1) : n._e(), n._v(" "), f.currentCall ? n._e() : l(f.CallMeOnSwitch), n._v(" "), n._t("header", null, {
                engagementId: f.theEngagementId,
                to: f.theTo
            }), n._v(" "), l("div", {
                staticClass: "tab",
                class: {
                    "phone-tab-wrap": n.phoneTabWrap
                }
            }, [l(f.Phone, {
                ref: "phoneRef",
                on: {
                    "in-coming-call": f.handleIncomingCall,
                    "on-outbound-call": f.handleOutboundCall,
                    "on-next-call": f.handleCampaignNextCall,
                    "on-call-accepted": f.handleCallAccepted
                }
            })], 1), n._v(" "), n._t("default")], 2)
        }
            , Ku = []
            , Qu = a(32556)
            , Yu = a.n(Qu);
        const Zu = Yu();
        var Ju = (0,
            ir.A)(Zu, Hu, Ku, !1, null, "3375290a", null);
        const pi = Ju.exports;
        var hi = function() {
            var e = this
                , n = e._self._c
                , l = e._self._setupProxy;
            return n("aside", {
                class: ["sideBar side-bar-crm", e.collapse ? "collapse-sid-bar" : ""]
            }, [n("div", {
                staticClass: "side-bar-crm-content"
            }, [n("section", {
                staticClass: "side-row collapse-status-row"
            }, [n(e.statusComponent, {
                tag: "component",
                attrs: {
                    "init-status": e.initStatus,
                    "schedule-status-id-record": e.scheduleStatusIdRecord,
                    "wrapup-done-flag": e.wrapupDoneFlag,
                    "zpns-status": e.zpnsStatus,
                    "opened-core-tab": e.openedCoreTab,
                    "status-duration": e.statusDuration
                },
                on: {
                    updateStatusModifyTime: e.updateStatusModifyTime,
                    updateStatusIdGlobal: e.updateStatusIdGlobal
                }
            }), e._v(" "), n("ChannelDropdown", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !e.collapse,
                    expression: "!collapse"
                }],
                attrs: {
                    "sms-outbound-has-draft": e.smsOutboundHasDraft
                },
                on: {
                    handleMenuClick: e.handleMenuClick
                }
            })], 1), e._v(" "), n("section", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.collapse,
                    expression: "collapse"
                }],
                staticClass: "side-row side-row-timer"
            }, [n("div", {
                staticClass: "side-row-timer__text",
                on: {
                    mouseover: function(g) {
                        return e.mouseoverStatusDuration(g, e.statusDurationWithDynamicHours)
                    },
                    mouseleave: e.mouseleaveStatusDuration
                }
            }, [e._v(`
        ` + e._s(e.statusDurationWithDynamicHours) + `
      `)])]), e._v(" "), n("section", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.collapse,
                    expression: "collapse"
                }],
                staticClass: "side-row side-row__underline"
            }, [n("ChannelDropdown", {
                attrs: {
                    "sms-outbound-has-draft": e.smsOutboundHasDraft
                },
                on: {
                    handleMenuClick: e.handleMenuClick
                }
            })], 1), e._v(" "), e._l(e.tabList, function(f) {
                return n("section", {
                    key: f.key,
                    class: ["side-row", "side-row__tablist"]
                }, [n("ul", {
                    staticClass: "nav-menu"
                }, [n("zm-tooltip", {
                    attrs: {
                        content: f.name,
                        disabled: !e.collapse,
                        tabindex: "-1",
                        placement: "right"
                    }
                }, [f.permission ? n("li", {
                    class: {
                        selected: e.menuTab === f.tabValue
                    },
                    attrs: {
                        "aria-label": f.name
                    },
                    on: {
                        click: function(I) {
                            return e.handleMenuClick(f.tabValue)
                        }
                    }
                }, [n("div", {
                    staticClass: "icon-wrapper"
                }, [n("span", {
                    class: ["nav-icon", "".concat(f.key)]
                })]), e._v(" "), n("span", {
                    staticClass: "menu-label"
                }, [e._v(e._s(f.name))]), e._v(" "), f.tabValue === 8 && e.showVMBadge ? [(e.totalNotifications.unread || e.totalNotifications.opening) < 100 || !e.collapse ? n("VMBadge", {
                    staticClass: "side-bar-left-vm-badge",
                    attrs: {
                        active: e.menuTab === e.eMenuName.inbox,
                        "first-count": e.totalNotifications.unread,
                        "second-count": e.totalNotifications.opening,
                        limit: 99,
                        "enable-level": ""
                    }
                }) : n("span", [n("zm-badge", {
                    staticClass: "side-bar-left-vm-bot",
                    class: {
                        "is-active": e.menuTab === e.eMenuName.inbox
                    },
                    attrs: {
                        "is-dot": ""
                    }
                })], 1)] : e._e()], 2) : e._e()])], 1)])
            }), e._v(" "), n("div", {
                staticClass: "expand-btn-content-parent"
            }, [e.isAppMinimized ? e._e() : n("div", {
                staticClass: "expand-btn-content",
                attrs: {
                    tabindex: "0",
                    role: "button",
                    "aria-label": e.$t("cci.client.menu.expand-collapse")
                },
                on: {
                    click: function(g) {
                        return e.setCollapse(!e.collapse)
                    }
                }
            }, [n("i", {
                class: [e.collapse ? "expand-btn" : "collapse-btn", "menu-display-btn"]
            })])]), e._v(" "), n("div", {
                class: ["side-scroll", "side-bar-scroll", {
                    "side-scroll-collapse": e.collapse
                }]
            }, [n("section", {
                staticClass: "side-row"
            }, [n("SessionActive", {
                attrs: {
                    "active-session": e.menuTab,
                    collapse: e.collapse,
                    "enable-zva-agent-assist": e.enableZvaAgentAssist
                },
                on: {
                    selectPhone: e.handleActivePhoneSelect,
                    selectChat: e.handleActiveChatSelect,
                    setCollapse: e.setCollapse
                }
            })], 1), e._v(" "), n("section", {
                staticClass: "side-row",
                attrs: {
                    role: "none"
                }
            }, [n("SessionTransfer", {
                attrs: {
                    "active-session": e.menuTab,
                    collapse: e.collapse
                },
                on: {
                    selectPhone: e.handleActivePhoneSelect
                }
            })], 1), e._v(" "), n("section", {
                staticClass: "side-row"
            }, [n("SessionConference", {
                attrs: {
                    "active-session": e.menuTab,
                    collapse: e.collapse
                },
                on: {
                    selectPhone: e.handleActivePhoneSelect
                }
            })], 1), e._v(" "), n("section", {
                staticClass: "side-row"
            }, [n("SessionChatWrapup", {
                attrs: {
                    "active-session": e.menuTab,
                    collapse: e.collapse
                },
                on: {
                    select: e.handleChatWrapupSelect,
                    setCollapse: e.setCollapse
                }
            })], 1), e._v(" "), n("section", {
                staticClass: "side-row"
            }, [n("SessionRecent", {
                attrs: {
                    "active-session": e.menuTab,
                    "wrapup-done-flag": e.wrapupDoneFlag,
                    "refresh-recent-list": e.refreshRecentList,
                    collapse: e.collapse
                },
                on: {
                    select: e.handleRecentSelect,
                    setCollapse: e.setCollapse
                }
            })], 1)])], 2), e._v(" "), n("div", {
                class: ["zoom-info", e.collapse ? "zoom-info-collapse" : "zoom-info-expand"]
            }, [n("i", {
                staticClass: "zoom-logo-icon"
            }), e._v(" "), n("span", {
                class: ["zoom-version", e.collapse ? "zoom-version-collapse" : "zoom-version-expand"]
            }, [e._v("V3.0.0")])])])
        }
            , os = []
            , Xu = a(37173)
            , qu = a.n(Xu);
        const gl = qu();
        var ed = (0,
            ir.A)(gl, hi, os, !1, null, "7d253178", null);
        const td = ed.exports;
        var yl = a(49372)
            , ss = a(77511)
            , _l = a(10673)
            , Ri = a(72114)
            , bl = a(10988)
            , Cl = a(30263)
            , nd = a(82133)
            , rd = a(93273)
            , El = a(98753)
            , Qa = a(89233)
            , Up = a(38488)
            , ad = a(82898)
            , id = function() {
            var e = this
                , n = e._self._c;
            return n("aside", {
                staticClass: "rightbar",
                class: {
                    showAIPreview: e.isAppearAIPreviewCard
                }
            }, [n("section", {
                class: ["sideRow", {
                    "rightbar-hidden": !e.isRightBarShowed
                }]
            }, [n("zm-tooltip", {
                attrs: {
                    "popper-class": "cus-rightbar-popper",
                    content: e.$t("cci.inbox.tab.profile"),
                    placement: "left"
                }
            }, [n("div", {
                attrs: {
                    tabindex: "-1"
                }
            }, [n("div", {
                staticClass: "cus-tab",
                class: {
                    selected: e.isRightProfileShowed
                },
                attrs: {
                    tabindex: "0",
                    role: "button",
                    "aria-label": e.$t("cci.inbox.tab.profile"),
                    "aria-expanded": "".concat(e.isRightProfileShowed)
                },
                on: {
                    click: function(f) {
                        return e.onTabClick(e.eRightBarTab.profile)
                    },
                    keydown: [function(l) {
                        var f;
                        return !K()(f = l.type).call(f, "key") && e._k(l.keyCode, "enter", 13, l.key, "Enter") ? null : e.onTabClick(e.eRightBarTab.profile)
                    }
                        , function(l) {
                            var f;
                            return !K()(f = l.type).call(f, "key") && e._k(l.keyCode, "space", 32, l.key, [" ", "Spacebar"]) ? null : e.onTabClick(e.eRightBarTab.profile)
                        }
                    ]
                }
            }, [e.isRightProfileShowed ? n(ad.A, {
                staticClass: "cus-tab-icon"
            }) : n(Up.A, {
                staticClass: "cus-tab-icon"
            })], 1)])]), e._v(" "), e.showTicketScreenBtn ? n("zm-tooltip", {
                attrs: {
                    "popper-class": "cus-rightbar-popper",
                    content: e.$t("cci.crm.zendesk.nav.ticket"),
                    placement: "left"
                }
            }, [n("div", {
                attrs: {
                    tabindex: "-1"
                }
            }, [n("div", {
                staticClass: "cus-tab",
                class: {
                    selected: e.isRightTicketShowed
                },
                attrs: {
                    tabindex: "0",
                    role: "button",
                    "aria-label": e.$t("cci.crm.zendesk.nav.ticket"),
                    "aria-expanded": "".concat(e.isRightTicketShowed)
                },
                on: {
                    click: function(f) {
                        return e.onTabClick(e.eRightBarTab.ticket)
                    },
                    keydown: [function(l) {
                        var f;
                        return !K()(f = l.type).call(f, "key") && e._k(l.keyCode, "enter", 13, l.key, "Enter") ? null : e.onTabClick(e.eRightBarTab.ticket)
                    }
                        , function(l) {
                            var f;
                            return !K()(f = l.type).call(f, "key") && e._k(l.keyCode, "space", 32, l.key, [" ", "Spacebar"]) ? null : e.onTabClick(e.eRightBarTab.ticket)
                        }
                    ]
                }
            }, [e.isRightTicketShowed ? n(Qa.A, {
                staticClass: "cus-tab-icon"
            }) : n(El.A, {
                staticClass: "cus-tab-icon"
            })], 1)])]) : e._e(), e._v(" "), n("zm-tooltip", {
                attrs: {
                    "popper-class": "cus-rightbar-popper",
                    content: e.$t("cci.engagement.name.currentSession.engagementTab"),
                    placement: "left"
                }
            }, [n("div", {
                attrs: {
                    tabindex: "-1"
                }
            }, [n("div", {
                staticClass: "cus-tab",
                class: {
                    selected: e.isRightEngagementShowed
                },
                attrs: {
                    tabindex: "0",
                    role: "button",
                    "aria-label": e.$t("cci.engagement.name.currentSession.engagementTab"),
                    "aria-expanded": "".concat(e.isRightEngagementShowed)
                },
                on: {
                    click: function(f) {
                        return e.onTabClick(e.eRightBarTab.engagement)
                    },
                    keydown: [function(l) {
                        var f;
                        return !K()(f = l.type).call(f, "key") && e._k(l.keyCode, "enter", 13, l.key, "Enter") ? null : e.onTabClick(e.eRightBarTab.engagement)
                    }
                        , function(l) {
                            var f;
                            return !K()(f = l.type).call(f, "key") && e._k(l.keyCode, "space", 32, l.key, [" ", "Spacebar"]) ? null : e.onTabClick(e.eRightBarTab.engagement)
                        }
                    ]
                }
            }, [e.isRightEngagementShowed ? n(rd.default, {
                staticClass: "cus-tab-icon"
            }) : n(nd.default, {
                staticClass: "cus-tab-icon"
            })], 1)])]), e._v(" "), e.displayAgentAssistTemplate || e.showResponseAssistant ? n("div", {
                staticClass: "divider"
            }) : e._e(), e._v(" "), e.displayAgentAssistTemplate ? [n("div", [n("div", {
                staticClass: "ai-tip-container"
            }, [n("AINoticePopover", {
                attrs: {
                    "is-appear": e.isAppearAIPreviewCard,
                    "ai-popover-content": e.aiPopoverContent
                },
                on: {
                    changeTab: function(f) {
                        return e.onTabClick(e.eRightBarTab.expertAssist)
                    }
                }
            })], 1), e._v(" "), n("zm-tooltip", {
                attrs: {
                    disabled: e.isAppearAIPreviewCard,
                    "popper-class": "cus-rightbar-popper",
                    content: e.$t("cci.agentassist.AgentAssist"),
                    placement: "left"
                }
            }, [n("div", {
                attrs: {
                    tabindex: "-1"
                }
            }, [n("div", {
                staticClass: "cus-tab",
                class: {
                    selected: e.isRightExportAssistShowed
                },
                attrs: {
                    tabindex: "0",
                    role: "button",
                    "aria-label": e.isShowDot ? e.$t("cci.agentassist.AgentAssist.new") : e.$t("cci.agentassist.AgentAssist"),
                    "aria-expanded": "".concat(e.activeRightTabIndexWithoutDefault === e.eRightBarTab.expertAssist)
                },
                on: {
                    click: function(f) {
                        return e.onTabClick(e.eRightBarTab.expertAssist)
                    },
                    keydown: [function(l) {
                        var f;
                        return !K()(f = l.type).call(f, "key") && e._k(l.keyCode, "enter", 13, l.key, "Enter") ? null : e.onTabClick(e.eRightBarTab.expertAssist)
                    }
                        , function(l) {
                            var f;
                            return !K()(f = l.type).call(f, "key") && e._k(l.keyCode, "space", 32, l.key, [" ", "Spacebar"]) ? null : e.onTabClick(e.eRightBarTab.expertAssist)
                        }
                        , function(l) {
                            return l.ctrlKey || l.shiftKey || l.altKey || l.metaKey ? null : e.handleAieaIconUnActive.apply(null, arguments)
                        }
                        , function(l) {
                            var f;
                            return !K()(f = l.type).call(f, "key") && e._k(l.keyCode, "tab", 9, l.key, "Tab") || !l.shiftKey ? null : e.handleAieaIconUnActive.apply(null, arguments)
                        }
                    ],
                    focus: e.handleAieaIconActive,
                    mouseover: e.showAIPreviewCard,
                    mouseout: e.hiddenAIPreviewCard
                }
            }, [n("zm-badge", {
                attrs: {
                    "is-dot": e.isShowDot
                }
            }, [e.isDark ? [e.isRightExportAssistShowed ? n(Cl.A, {
                staticClass: "ai-tab-dark-focus-icon"
            }) : n(bl.A, {
                staticClass: "ai-tab-dark-icon"
            })] : [e.isRightExportAssistShowed ? n(Cl.A, {
                staticClass: "ai-tab-icon"
            }) : n(bl.A, {
                staticClass: "ai-tab-icon"
            })]], 2)], 1)])])], 1)] : e._e(), e._v(" "), e.showResponseAssistant ? n("zm-tooltip", {
                attrs: {
                    "popper-class": "cus-rightbar-popper",
                    content: e.$t("cci.agentassist.responseAssist"),
                    placement: "left"
                }
            }, [n("div", {
                attrs: {
                    tabindex: "-1"
                }
            }, [n("div", {
                staticClass: "cus-tab",
                class: {
                    selected: e.isRightResponseAssistShowed
                },
                attrs: {
                    tabindex: "0",
                    role: "button",
                    "aria-label": e.$t("cci.agentassist.responseAssist"),
                    "aria-expanded": "".concat(e.activeRightTabIndexWithoutDefault === e.eRightBarTab.responseAssistant)
                },
                on: {
                    click: function(f) {
                        return e.onTabClick(e.eRightBarTab.responseAssistant)
                    },
                    keydown: [function(l) {
                        var f;
                        return !K()(f = l.type).call(f, "key") && e._k(l.keyCode, "enter", 13, l.key, "Enter") ? null : e.onTabClick(e.eRightBarTab.responseAssistant)
                    }
                        , function(l) {
                            var f;
                            return !K()(f = l.type).call(f, "key") && e._k(l.keyCode, "space", 32, l.key, [" ", "Spacebar"]) ? null : e.onTabClick(e.eRightBarTab.responseAssistant)
                        }
                    ]
                }
            }, [e.isDark ? [e.isRightResponseAssistShowed ? n(Ri.A, {
                staticClass: "cus-tab-icon"
            }) : n(_l.A, {
                staticClass: "cus-tab-icon"
            })] : [e.isRightResponseAssistShowed ? n(ss.A, {
                staticClass: "cus-tab-icon"
            }) : n(yl.A, {
                staticClass: "cus-tab-icon"
            })]], 2)])]) : e._e(), e._v(" "), e.rightbarAppList.length ? n("div", {
                staticClass: "divider"
            }) : e._e(), e._v(" "), e._l(e.rightbarAppList, function(l) {
                return n("zm-tooltip", {
                    key: l.id,
                    attrs: {
                        "popper-class": "cus-rightbar-popper",
                        content: l.displayName,
                        placement: "left"
                    }
                }, [n("div", {
                    attrs: {
                        tabindex: "-1"
                    }
                }, [n("div", {
                    staticClass: "cus-tab",
                    class: {
                        selected: e.rightAppActiveId === l.id
                    },
                    attrs: {
                        tabindex: "0",
                        role: "button",
                        "aria-label": l.displayName,
                        "aria-expanded": "".concat(e.rightAppActiveId === l.id)
                    },
                    on: {
                        click: function(g) {
                            return e.onTabClick(l.id)
                        },
                        keydown: [function(f) {
                            var g;
                            return !K()(g = f.type).call(g, "key") && e._k(f.keyCode, "enter", 13, f.key, "Enter") ? null : e.onTabClick(l.id)
                        }
                            , function(f) {
                                var g;
                                return !K()(g = f.type).call(g, "key") && e._k(f.keyCode, "space", 32, f.key, [" ", "Spacebar"]) ? null : e.onTabClick(l.id)
                            }
                        ]
                    }
                }, [n("div", {
                    staticClass: "icon-zcc-app",
                    style: {
                        backgroundImage: "url(".concat(l.iconURL, ")")
                    }
                })])])])
            })], 2), e._v(" "), n("WindowSizeCustom", {
                attrs: {
                    "is-video-showed": e.isVideoShowed
                }
            })], 1)
        }
            , od = []
            , vi = a(14311)
            , ba = function() {
            var e = this
                , n = e._self._c
                , l = e._self._setupProxy;
            return n("section", {
                staticClass: "rightbar-window-size-custom"
            }, [e._l(e.sizeButtonList, function(f) {
                return n("div", {
                    key: f.size,
                    class: ["rightbar-icon", {
                        "rightbar-icon-not-allowed": f.size === e.PanelSizes.lg && !e.isVideoShowed
                    }, "rightbar-icon-".concat(e.panelSize === f.size ? f.selectedIcon : f.defaultIcon)],
                    on: {
                        click: function(I) {
                            return e.onSizeChange(f.size)
                        }
                    }
                })
            }), e._v(" "), n("div", {
                staticClass: "rightbar-icon",
                on: {
                    click: e.onOpenSettings
                }
            }, [n(vi.A, {
                class: "cus-icon".concat(e.islogSettingsOpened ? "-selected" : ""),
                attrs: {
                    width: "16px",
                    height: "16px"
                }
            })], 1)], 2)
        }
            , Il = []
            , Xa = a(58941);
        const wl = Xa.A;
        var qa = (0,
            ir.A)(wl, ba, Il, !1, null, "dfdb9f08", null);
        const sd = qa.exports;
        function mi(i) {
            "@babel/helpers - typeof";
            return mi = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                mi(i)
        }
        function ls() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            ls = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && mi(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(mi(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function cs(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function Tl(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            cs(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            cs(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function Sl(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function Da(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = Sl(Object(f), !0)).call(n, function(g) {
                    $p(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = Sl(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function $p(i, e, n) {
            return (e = ld(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function ld(i) {
            var e = cd(i, "string");
            return mi(e) == "symbol" ? e : e + ""
        }
        function cd(i, e) {
            if (mi(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (mi(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        var ud = Zt.zccAppApi.updateZccAppEngagementNotes;
        const dd = {
            name: "RightBar",
            components: {
                AINoticePopover: Lt.AINoticePopover,
                WindowSizeCustom: sd
            },
            mixins: [Ft, Kt.A],
            props: {
                enableZvaAgentAssist: {
                    type: Boolean,
                    default: !1
                },
                isRightBarShowed: {
                    type: Boolean,
                    default: !1
                },
                enablePopOut: {
                    type: Boolean,
                    default: !1
                },
                isVideoShowed: {
                    type: Boolean,
                    default: !1
                }
            },
            setup: function() {
                var e = (0,
                    Lt.useMessagingRightBar)()
                    , n = e.showResponseAssistant
                    , l = (0,
                    Lt.useAccount)()
                    , f = l.account
                    , g = l.userOptions
                    , I = (0,
                    Lt.useAIRightBar)()
                    , T = I.isShowDot
                    , A = I.aiPopoverContent
                    , N = I.isAppearAIPreviewCard
                    , re = I.showAIPreviewCard
                    , fe = I.hiddenAIPreviewCard
                    , ke = (0,
                    Lt.useAgentAssist)()
                    , Ht = ke.queryAgentAssistPermission
                    , vt = ke.enableValues
                    , Me = ke.isSupportAIExpertAssist
                    , he = ke.isChannelSupportAiea;
                return {
                    queryAgentAssistPermission: Ht,
                    showResponseAssistant: n,
                    enableValues: vt,
                    account: f,
                    userOptions: g,
                    isSupportAIExpertAssist: Me,
                    isShowDot: T,
                    aiPopoverContent: A,
                    isAppearAIPreviewCard: N,
                    isChannelSupportAiea: he,
                    showAIPreviewCard: re,
                    hiddenAIPreviewCard: fe
                }
            },
            data: function() {
                return {
                    eRightBarTab: U.eRightBarTab,
                    showTicketScreenBtn: (0,
                        U.isInZendesk)() || (0,
                        U.isInCoreTab)() && this.enablePopOut && (0,
                        U.getCoreTabCrmPlatform)() === Dt.CRMS.Zendesk
                }
            },
            created: function() {
                this.$bus.$on("SELECTICON", this.changeTab)
            },
            methods: Da(Da({}, (0,
                zt.mapActions)("sessionPanels", ["setRightTabIndex", "setRightBarTabIndexInHistory", "setRightBarTabIndex", "fetchZccAppList"])), {}, {
                onTabClick: function(e) {
                    if (this.isLive)
                        if (this.activeRightTabIndexWithoutDefault === e) {
                            if (this.showVdiChat)
                                return;
                            this.setRightTabIndex({
                                taskId: this.currentTaskId,
                                val: -1
                            })
                        } else
                            this.setRightTabIndex({
                                taskId: this.currentTaskId,
                                val: e
                            });
                    else
                        this.inViewVideo || this.inViewPhone ? this.rightbarTabIndex === e ? this.setRightBarTabIndex(-1) : this.setRightBarTabIndex(e) : this.menuTab === U.eMenuName.engagements && this.historyIsInDetailPage ? this.closedRightTabIndex === e ? this.setRightBarTabIndexInHistory(-1) : this.setRightBarTabIndexInHistory(e) : this.menuTab === U.eMenuName.sessionRecent && (this.closedRightTabIndex === e ? this.setRightBarTabIndexInHistory(-1) : this.setRightBarTabIndexInHistory(e));
                    console.log("activeRightTabIndex: ", this.activeRightTabIndex),
                        console.log("isRightTicketShowed: ", this.isRightTicketShowed),
                        console.log("isRightEngagementShowed: ", this.isRightEngagementShowed),
                        this.$bus.$emit("clearExtensionStatus")
                },
                changeTab: function(e) {
                    var n = e.type
                        , l = e.sr;
                    if (l === "click" && this.isLive) {
                        var f = n === "intent" || n === "knowledgeBase" || n === "expertAssist" ? this.eRightBarTab.expertAssist : n === "response" ? this.eRightBarTab.responseAssistant : -1;
                        this.setRightTabIndex({
                            taskId: this.currentTaskId,
                            val: f
                        })
                    }
                },
                switchCurrentTask: function() {
                    var e, n, l = this, f, g;
                    !(0,
                        U.enableZccApp)() || !this.engagementDataForZccApp || ((!((e = this.rightbarAppList) !== null && e !== void 0 && e.length) || !((n = this.rightbarAppList) !== null && n !== void 0 && D()(n).call(n, function(I) {
                        return I.id === l.rightAppActiveId
                    }))) && this.hideZccApp(),
                    (f = window.zoomSdk) === null || f === void 0 || f.postJsMessage({
                        functionName: "CCIUIAPI_ZCCAppSwitchEngagement",
                        params: {
                            engagementId: ((g = this.engagementDataForZccApp) === null || g === void 0 ? void 0 : g.engagementId) || "",
                            engagement: Da({}, this.engagementDataForZccApp || {})
                        }
                    }))
                },
                listenWindowResize: function() {
                    var e, n = this, l, f = (e = this.rightbarAppList) === null || e === void 0 ? void 0 : D()(e).call(e, function(N) {
                        return N.id === n.rightAppActiveId
                    });
                    if (!(!(0,
                        U.enableZccApp)() || !f)) {
                        console.log("ZccApp listenWindowResize");
                        var g = document.querySelector(".panel-resize-line")
                            , I = g.nextElementSibling;
                        if (!(!g || !I)) {
                            var T = g?.getBoundingClientRect() || {}
                                , A = I?.getBoundingClientRect() || {};
                            (l = window.zoomSdk) === null || l === void 0 || l.postJsMessage({
                                functionName: "CCIUIAPI_ZCCAppResize",
                                params: {
                                    applicationId: f.applicationId,
                                    x: T?.x || 0,
                                    y: T?.y || 0,
                                    width: A?.right - A?.left,
                                    height: T?.bottom - T?.top
                                }
                            })
                        }
                    }
                },
                hideZccApp: function() {
                    var e, n;
                    console.log("ZccApp hideZccApp", this.rightbarAppList),
                    !(!(0,
                        U.enableZccApp)() || !((e = this.rightbarAppList) !== null && e !== void 0 && e.length)) && (console.log("ZccApp CCIUIAPI_ZCCAppHide"),
                    (n = window.zoomSdk) === null || n === void 0 || n.postJsMessage({
                        functionName: "CCIUIAPI_ZCCAppHide",
                        params: {}
                    }))
                },
                showZccApp: function(e) {
                    var n, l, f, g, I = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
                    if (console.log("ZccApp show", this.engagementDataForZccApp),
                        !(!(0,
                            U.enableZccApp)() || !((n = this.rightbarAppList) !== null && n !== void 0 && n.length) || !e)) {
                        var T = (l = this.rightbarAppList) === null || l === void 0 ? void 0 : D()(l).call(l, function(ke) {
                            return ke.id === e
                        });
                        if (T) {
                            var A = document.querySelector(".panel-resize-line")
                                , N = A.nextElementSibling;
                            if (!(!A || !N)) {
                                var re = A?.getBoundingClientRect() || {}
                                    , fe = N?.getBoundingClientRect() || {};
                                (f = window.zoomSdk) === null || f === void 0 || f.postJsMessage({
                                    functionName: "CCIUIAPI_ZCCAppShow",
                                    params: {
                                        applicationId: T.applicationId,
                                        x: re?.x || 0,
                                        y: re?.y || 0,
                                        width: fe?.right - fe?.left,
                                        height: re?.bottom - re?.top,
                                        switch: I,
                                        engagementId: ((g = this.engagementDataForZccApp) === null || g === void 0 ? void 0 : g.engagementId) || "",
                                        engagement: Da({}, this.engagementDataForZccApp || {})
                                    }
                                })
                            }
                        }
                    }
                },
                initZccAppList: function() {
                    var e, n = this;
                    if (!(this.inMonitorPhone || this.inMonitorSMS || this.inMonitorChat || this.inMonitorVideo))
                        return this.fetchZccAppList({
                            queueId: (e = this.engagementDataForZccApp) === null || e === void 0 ? void 0 : e.queueId
                        }).then(function() {
                            n.showZccApp(n.rightAppActiveId)
                        })
                },
                handleAieaIconActive: function() {
                    this.isShowDot && this.showAIPreviewCard()
                },
                handleAieaIconUnActive: function() {
                    this.hiddenAIPreviewCard()
                }
            }),
            watch: {
                currentTaskId: function(e) {
                    if (this.isLive) {
                        var n;
                        this.queryAgentAssistPermission();
                        var l = M()(n = [this.eRightBarTab.knowledgeBase, this.eRightBarTab.agentAssist]).call(n, this.activeRightTabIndexWithoutDefault);
                        e && this.enableZvaAgentAssist && l && (this.displayAgentAssist || this.setRightTabIndex({
                            taskId: this.currentTaskId,
                            val: -1
                        }))
                    }
                },
                engagementDataForZccApp: {
                    handler: function(e, n) {
                        var l = this;
                        return Tl(ls().mark(function f() {
                            var g;
                            return ls().wrap(function(T) {
                                for (; ; )
                                    switch (T.prev = T.next) {
                                        case 0:
                                            if ((0,
                                                U.enableZccApp)()) {
                                                T.next = 2;
                                                break
                                            }
                                            return T.abrupt("return");
                                        case 2:
                                            return T.next = 4,
                                                l.initZccAppList();
                                        case 4:
                                            e?.engagementId !== n?.engagementId ? l.$nextTick(function() {
                                                l.switchCurrentTask()
                                            }) : l.$nextTick(function() {
                                                var A;
                                                l.updateZccAppEngagementData(((A = l.engagementDataForZccApp) === null || A === void 0 ? void 0 : A.engagementId) || "", l.engagementDataForZccApp)
                                            }),
                                                ud((g = l.engagementDataForZccApp) === null || g === void 0 ? void 0 : g.engagementId);
                                        case 6:
                                        case "end":
                                            return T.stop()
                                    }
                            }, f)
                        }))()
                    },
                    immediate: !0
                },
                rightAppActiveId: function(e, n) {
                    var l, f, g, I = this;
                    if (!(!(0,
                        U.enableZccApp)() || !((l = this.rightbarAppList) !== null && l !== void 0 && l.length))) {
                        var T = (f = this.rightbarAppList) === null || f === void 0 ? void 0 : D()(f).call(f, function(N) {
                            return N.id === e
                        })
                            , A = (g = this.rightbarAppList) === null || g === void 0 ? void 0 : D()(g).call(g, function(N) {
                            return N.id === n
                        });
                        A && !T && (console.log("ZccApp CCIUIAPI_ZCCAppHide"),
                            this.hideZccApp()),
                        T && this.$nextTick(function() {
                            I.showZccApp(T.id, !!A)
                        })
                    }
                },
                infoPanelWidth: function() {
                    this.listenWindowResize()
                }
            },
            computed: Da(Da(Da(Da({}, (0,
                zt.mapGetters)("sessionPanels", ["activeRightTabIndexWithoutDefault", "rightbarTabIndex", "rightbarAppList", "closedRightTabIndex", "historyIsInDetailPage", "currentTaskId", "cciQueues", "currentActiveTask", "activeTaskQueue", "infoPanelWidth", "activeTaskDataForZccApp", "rightPanelHistoryTaskDataForZccApp"])), (0,
                zt.mapGetters)("video", ["showVdiChat"])), (0,
                zt.mapGetters)({
                nacosConfig: "nacosConfig"
            })), {}, {
                engagementDataForZccApp: function() {
                    var e;
                    return this.activeTaskDataForZccApp ? Da(Da({}, this.activeTaskDataForZccApp), {}, {
                        status: "active"
                    }) : M()(e = [U.eMenuName.sessionRecent, U.eMenuName.engagements]).call(e, this.menuTab) ? Da(Da({}, this.rightPanelHistoryTaskDataForZccApp), {}, {
                        status: "closed"
                    }) : null
                },
                isRightExportAssistShowed: function() {
                    return this.activeRightTabIndexWithoutDefault === U.eRightBarTab.expertAssist
                },
                isRightResponseAssistShowed: function() {
                    return this.activeRightTabIndexWithoutDefault === U.eRightBarTab.responseAssistant
                },
                showAgentAssist: function() {
                    var e = this.isSupportAIExpertAssist || !1;
                    if (e) {
                        var n = this.enableValues.enableEaIntent;
                        return !!n
                    }
                    return !1
                },
                showKnowledgeBase: function() {
                    var e = this.isSupportAIExpertAssist || !1;
                    if (e) {
                        var n = this.enableValues.enableEaKb;
                        return !!n
                    }
                    return !1
                },
                showBestAction: function() {
                    var e = this.isSupportAIExpertAssist || !1;
                    if (e) {
                        var n = this.enableValues.enableEaBestAction;
                        return !!n
                    }
                    return !1
                },
                displayAgentAssist: function() {
                    return this.showAgentAssist || this.showKnowledgeBase || this.showBestAction
                },
                displayAgentAssistTemplate: function() {
                    var e = (0,
                        Mn.getNacos)("disableAieaInCTI")
                        , n = (0,
                        Mn.getNacos)("disableVideoAieaInCTI");
                    return n && this.inVideo ? !1 : !e && this.isChannelSupportAiea && this.displayAgentAssist && this.enableZvaAgentAssist
                }
            }),
            mounted: function() {
                window.addEventListener("resize", this.listenWindowResize)
            },
            beforeDestroy: function() {
                this.$bus.$off("SELECTICON", this.changeTab),
                    window.removeEventListener("resize", this.listenWindowResize),
                    this.hideZccApp()
            }
        };
        var gi = (0,
            ir.A)(dd, id, od, !1, null, "091a2fac", null);
        const us = gi.exports;
        var Al = a(76735)
            , fd = function() {
            var e, n, l, f, g = this, I = g._self._c, T = g._self._setupProxy;
            return I("div", {
                staticClass: "top-side-bar"
            }, [g.isAppMinimized ? g._e() : I("h1", {
                staticClass: "top-side-bar__title"
            }, [g.enablePopOut && g.isPopOut ? g._e() : I("span", [g._v(g._s(g.$t("cci.callBar.login.title")))]), g._v(" "), g.enablePopOut && !g.isPopOut ? I("zm-tooltip", {
                attrs: {
                    content: g.$t("cci.crm.cti.webrtc.popout.title.tip"),
                    placement: "bottom-end"
                }
            }, [I("zm-button", {
                staticClass: "popOut-icon-container",
                attrs: {
                    ghost: ""
                }
            }, [I("popOutIcon", {
                class: {
                    "popOut-icon": !0,
                    disabled: g.hasOngoingVideoTask
                },
                on: {
                    click: g.handlePopOut
                }
            })], 1)], 1) : g._e(), g._v(" "), g.enablePopOut && g.isPopOut ? I("zm-button", {
                class: {
                    "merge-button": !0,
                    disabled: g.hasOngoingVideoTask
                },
                attrs: {
                    ghost: ""
                },
                on: {
                    click: g.handleMergeWindow
                }
            }, [g._v(`
      ` + g._s(g.$t("cci.zccapp.merge.window")) + `
      `), I("popInIcon", {
                staticClass: "popIn-icon"
            })], 1) : g._e()], 1), g._v(" "), I("span", {
                staticClass: "alert-bell",
                on: {
                    click: g.onOpenNotification
                }
            }, [I("zm-badge", {
                attrs: {
                    value: g.notifications.length,
                    hidden: g.notifications.length === 0,
                    size: "small"
                }
            }, [I(Al.A, {
                class: ["alert-bell-icon", g.isNotificationCenterOpened ? "icon-selected" : ""]
            })], 1)], 1), g._v(" "), g.isAppMinimized ? g._e() : I("zm-tooltip", {
                attrs: {
                    placement: "bottom-end"
                }
            }, [I("div", {
                staticClass: "userInfo-content",
                attrs: {
                    slot: "content"
                },
                slot: "content"
            }, [I("div", {
                attrs: {
                    title: ((e = g.user) === null || e === void 0 ? void 0 : e.name) || ""
                }
            }, [g._v(`
        ` + g._s(((n = g.user) === null || n === void 0 ? void 0 : n.name) || "") + `
      `)]), g._v(" "), I("div", {
                attrs: {
                    title: ((l = g.user) === null || l === void 0 ? void 0 : l.email) || ""
                }
            }, [g._v(g._s(((f = g.user) === null || f === void 0 ? void 0 : f.email) || ""))])]), g._v(" "), g.isInCoreTab ? g._e() : I("div", {
                staticClass: "logout",
                on: {
                    click: g.handleLogout
                }
            })])], 1)
        }
            , Ll = []
            , Nl = a(77803)
            , pd = a.n(Nl)
            , hd = a(85972)
            , vd = a.n(hd);
        function Fa(i) {
            "@babel/helpers - typeof";
            return Fa = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                Fa(i)
        }
        function Ml() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Ml = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && Fa(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(Fa(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function Pl(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function md(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            Pl(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            Pl(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        const gd = (0,
            Qe.defineComponent)({
            mixins: [vn.A],
            components: {
                popOutIcon: vd(),
                popInIcon: pd()
            },
            props: {
                enablePopOut: {
                    type: Boolean
                }
            },
            setup: function(e, n) {
                var l = n.emit
                    , f = (0,
                    Mn.useCrmGetters)()
                    , g = f.getAppPanelWidth
                    , I = (0,
                    Mn.useCtiGetters)()
                    , T = I.isPopOut
                    , A = (0,
                    Bn.getCRM)() === Dt.CRMS.MsDynamics
                    , N = (0,
                    Qe.computed)(function() {
                    return A && g.value === an.AppWidthState.MINIMIZED
                })
                    , re = (0,
                    Mn.useSessionPanelsGetters)()
                    , fe = re.menuTab
                    , ke = (0,
                    Mn.useSessionPanelsActions)()
                    , Ht = ke.setMenuTab
                    , vt = (0,
                    Qe.ref)(fe.value)
                    , Me = (0,
                    Lt.useNotification)()
                    , he = Me.unreadNotificationCount
                    , sn = Me.notifications
                    , ln = (0,
                    Lt.usePopOut)()
                    , lt = ln.handlePopOut
                    , Tn = ln.handleMergeWindow
                    , Wn = (0,
                    Lt.useStatus)()
                    , Dn = Wn.hasOngoingVideoTask
                    , xt = function() {
                    var wr = md(Ml().mark(function Dr() {
                        return Ml().wrap(function(fr) {
                            for (; ; )
                                switch (fr.prev = fr.next) {
                                    case 0:
                                        fe.value === U.eMenuName.crmNotificationCenter ? Ht(vt.value) : (vt.value = fe.value,
                                            Ht(U.eMenuName.crmNotificationCenter));
                                    case 1:
                                    case "end":
                                        return fr.stop()
                                }
                        }, Dr)
                    }));
                    return function() {
                        return wr.apply(this, arguments)
                    }
                }()
                    , Nr = (0,
                    Qe.computed)(function() {
                    return fe.value === U.eMenuName.crmNotificationCenter
                })
                    , xn = function() {
                    lt(),
                        l("popOut")
                };
                return {
                    isAppMinimized: N,
                    handleLogout: function() {
                        l("handleLogout")
                    },
                    hasOngoingVideoTask: Dn,
                    handlePopOut: xn,
                    handleMergeWindow: Tn,
                    onOpenNotification: xt,
                    isNotificationCenterOpened: Nr,
                    unreadNotificationCount: he,
                    notifications: sn,
                    isPopOut: T,
                    isInCoreTab: (0,
                        U.isInCoreTab)()
                }
            }
        });
        var yd = (0,
            ir.A)(gd, fd, Ll, !1, null, "2d7c421f", null);
        const _d = yd.exports;
        var bd = function() {
            var e, n = this, l = n._self._c;
            return l("div", {
                ref: "profilePanel",
                class: n.renderProfileClass
            }, [!n.isShowWrapup && !n.isShowEngagementEvents && !n.isShowSavedReplyDetail ? l("ThePanelHeader", {
                attrs: {
                    "show-back-icon": !n.isShowWrapup,
                    "engagement-id": (e = n.currentActiveTask) === null || e === void 0 ? void 0 : e.engagementId
                },
                on: {
                    "click-back": function(g) {
                        return n.$emit("click-back")
                    }
                }
            }) : n._e(), n._v(" "), n.isRightProfileShowed ? l("CurrentUserProfile", {
                staticClass: "sidebar-view user-detail",
                class: {
                    videoAlive: n.inVideo && n.isVideoAlive
                },
                attrs: {
                    "contact-info": n.contactInfo,
                    "is-alive": n.isAlive
                }
            }) : n.isRightEngagementShowed ? l(n.CurrentSession, {
                ref: "currentSession",
                tag: "component",
                attrs: {
                    "is-alive": n.isAlive,
                    "observer-size": n.observerSize,
                    "cache-variables": n.cacheVariables,
                    "engagement-collapse-active": n.engagementCollapseActive,
                    "is-email-channel": n.isEmailChannel,
                    "is-show-engagement-events": n.isShowEngagementEvents
                },
                on: {
                    "update:cacheVariables": function(g) {
                        n.cacheVariables = g
                    },
                    "update:cache-variables": function(g) {
                        n.cacheVariables = g
                    },
                    "update:engagementCollapseActive": function(g) {
                        n.engagementCollapseActive = g
                    },
                    "update:engagement-collapse-active": function(g) {
                        n.engagementCollapseActive = g
                    },
                    wrapupDone: n.handleWrapDone,
                    handleShowEngagementEvents: function(g) {
                        return n.isShowEngagementEvents = g
                    }
                }
            }) : n.isRightTicketShowed ? l(n.CurrentTicket, {
                tag: "component"
            }) : n._e(), n._v(" "), n.activeRightTabIndex === n.eRightBarTab.responseAssistant ? l("ResponseAssistant", {
                ref: "ResponseAssistant",
                attrs: {
                    "is-crm": ""
                }
            }) : n._e(), n._v(" "), l("zpns-refresh-global-variables", {
                on: {
                    "zpns:need_refresh_display_name": n.updateZpnsDisplayName
                }
            })], 1)
        }
            , yi = []
            , ds = a(95197)
            , fs = a.n(ds)
            , kl = a(23317)
            , Cd = a.n(kl)
            , Ed = a(88823)
            , Id = a.n(Ed)
            , wd = a(8880)
            , Td = function() {
            var e, n = this, l = n._self._c;
            return l("div", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: n.isLoading,
                    expression: "isLoading"
                }],
                staticClass: "user-detail"
            }, [l("div", {
                staticClass: "user-detail__header"
            }, [l("nameAvatar", {
                attrs: {
                    title: n.displayName,
                    color: n.getAvatarColor(n.displayName),
                    size: 48
                }
            }), n._v(" "), l("span", {
                staticClass: "user-detail__header-name",
                attrs: {
                    title: n.displayName
                }
            }, [n._v(`
      ` + n._s(n.displayName) + `
    `)])], 1), n._v(" "), l("div", {
                staticClass: "user-detail__line custom-scroll-y"
            }, [l("div", [l("zm-form", {
                staticClass: "client-normal-element-focus",
                attrs: {
                    id: "profile-tabindex-wrap",
                    "label-position": "left",
                    "label-width": "143px",
                    tabindex: "0",
                    "aria-label": oa()(e = "".concat(n.$t("cci.inbox.tab.profile"), " ")).call(e, n.$t("cci.engagement.name.currentSession.detailsTab")),
                    role: "group"
                },
                nativeOn: {
                    keydown: function(g) {
                        return function(I) {
                            return n.handleItemKeyDown(I, "profile-tabindex-wrap", "profileActiveTabindex")
                        }
                            .apply(null, arguments)
                    }
                }
            }, [n.contactId ? l("zm-form-item", {
                attrs: {
                    tabindex: "-1",
                    label: "".concat(n.idLabel, " ID")
                }
            }, [l("div", {
                staticClass: "line-content phone-number"
            }, [n._v(n._s(n.contactId))])]) : n._e(), n._v(" "), n.formattedPhoneNumber ? l("zm-form-item", {
                attrs: {
                    tabindex: "-1",
                    label: "Customer Number"
                }
            }, [l("div", {
                staticClass: "line-content phone-number"
            }, [n._v(`
            ` + n._s(n.formattedPhoneNumber) + `
          `)])]) : n._e(), n._v(" "), n.userEmail ? l("zm-form-item", {
                attrs: {
                    tabindex: "-1",
                    label: "Customer Email"
                }
            }, [l("div", {
                staticClass: "line-content phone-number"
            }, [n._v(n._s(n.userEmail))])]) : n._e()], 1), n._v(" "), l("zm-form", {
                attrs: {
                    "label-position": "left",
                    "label-width": "143px"
                }
            }, [l("zm-collapse", {
                model: {
                    value: n.activeNames,
                    callback: function(g) {
                        n.activeNames = g
                    },
                    expression: "activeNames"
                }
            }, [n.systemGlobalVariablesLength ? l("zm-collapse-item", {
                attrs: {
                    title: n.$t("cci.engagement.systemVariables", {
                        count: n.systemGlobalVariablesLength
                    }),
                    name: "1"
                }
            }, [l("variables-list", {
                attrs: {
                    id: "system-profile-wrap",
                    tabindex: "0",
                    "variables-list": n.variablesListResult.system,
                    "aria-label": n.$t("cci.engagement.systemVariables", {
                        count: n.systemGlobalVariablesLength
                    }),
                    role: "group"
                },
                nativeOn: {
                    keydown: function(g) {
                        return function(I) {
                            return n.handleItemKeyDown(I, "system-profile-wrap", "systemActiveTabindex")
                        }
                            .apply(null, arguments)
                    },
                    focus: function(g) {
                        return n.resetFocusIndex(n.systemGlobalVariablesLength === 1, "systemActiveTabindex")
                    }
                }
            })], 1) : n._e(), n._v(" "), n.customGlobalVariablesLength ? l("zm-collapse-item", {
                attrs: {
                    title: n.$t("cci.engagement.customVariables", {
                        count: n.customGlobalVariablesLength
                    }),
                    name: "2"
                }
            }, [l("variables-list", {
                attrs: {
                    id: "custom-profile-wrap",
                    tabindex: "0",
                    "variables-list": n.variablesListResult.custom,
                    "aria-label": n.$t("cci.engagement.customVariables", {
                        count: n.customGlobalVariablesLength
                    }),
                    role: "group"
                },
                nativeOn: {
                    keydown: function(g) {
                        return function(I) {
                            return n.handleItemKeyDown(I, "custom-profile-wrap", "customActiveTabindex")
                        }
                            .apply(null, arguments)
                    },
                    focus: function(g) {
                        return n.resetFocusIndex(n.customGlobalVariablesLength === 1, "customActiveTabindex")
                    }
                }
            })], 1) : n._e()], 1)], 1)], 1)]), n._v(" "), n.isAgentCanSeeHistoryTab && !n.isEmailChannel ? l("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !n.isLoading,
                    expression: "!isLoading"
                }],
                class: {
                    "history-tab-wrapper": n.showContent && n.currentListLen > 3
                }
            }, [l("History", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: n.showContent,
                    expression: "showContent"
                }],
                attrs: {
                    "engagement-id": n.engagementId,
                    "customer-id": n.contactInfo.customerId,
                    "customer-number": n.phoneNumber,
                    "contact-id": n.contactInfo.contactId
                },
                on: {
                    historyEngagementListChange: n.handleHistoryListLengthChange
                }
            }), n._v(" "), l("SideContent", {
                on: {
                    close: n.handleSideContentClose,
                    open: n.handleSideContentOpen
                }
            })], 1) : n._e(), n._v(" "), l("zpns-refresh-global-variables", {
                on: {
                    "zpns:need_refresh_global_variables": n.handleZpnsNotifyRefreshVariables
                }
            })], 1)
        }
            , Sd = []
            , Ol = a(72785)
            , _i = a(14535)
            , xl = a(8277)
            , Dl = function() {
            var e = this
                , n = e._self._c;
            return n("zm-avatar", {
                key: "avatar",
                style: {
                    backgroundColor: e.color,
                    fontSize: e.fontSize,
                    minWidth: "24px",
                    fontWeight: e.fontWeight
                },
                attrs: {
                    size: e.size,
                    shape: "square"
                }
            }, [e._v(`
  ` + e._s(e.splitName(e.title)) + `
`)])
        }
            , Ad = []
            , Fp = a(93752)
            , Rl = a.n(Fp);
        const Ld = {
            props: {
                fontSize: {
                    type: String,
                    default: "24px"
                },
                size: {
                    type: Number,
                    default: 24
                },
                color: {
                    type: String,
                    default: "#539dfa"
                },
                title: {
                    type: String,
                    default: ""
                },
                fontWeight: {
                    type: Number,
                    default: 400
                }
            },
            methods: {
                splitName: function(e) {
                    if (!e || e === "")
                        return "";
                    e = Rl()(e).call(e);
                    var n = e.split(" ")
                        , l = "";
                    if (n.length && n.length > 1) {
                        var f, g;
                        l = (((f = n[0][0]) === null || f === void 0 ? void 0 : f.toUpperCase()) || "") + (((g = n[1][0]) === null || g === void 0 ? void 0 : g.toUpperCase()) || "")
                    } else {
                        var I, T;
                        l = (((I = e[0]) === null || I === void 0 ? void 0 : I.toUpperCase()) || "") + (((T = e[1]) === null || T === void 0 ? void 0 : T.toUpperCase()) || "")
                    }
                    return l || ""
                }
            }
        };
        var Nd = (0,
            ir.A)(Ld, Dl, Ad, !1, null, null, null);
        const Md = Nd.exports;
        function ji(i) {
            "@babel/helpers - typeof";
            return ji = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                ji(i)
        }
        function to() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            to = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && ji(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(ji(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function ps(i, e) {
            return Od(i) || Gp(i, e) || kd(i, e) || Pd()
        }
        function Pd() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function kd(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return jl(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? jl(i, e) : void 0
            }
        }
        function jl(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function Gp(i, e) {
            var n = i == null ? null : typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (n != null) {
                var l, f, g, I, T = [], A = !0, N = !1;
                try {
                    if (g = (n = n.call(i)).next,
                    e === 0) {
                        if (Object(n) !== n)
                            return;
                        A = !1
                    } else
                        for (; !(A = (l = g.call(n)).done) && (T.push(l.value),
                        T.length !== e); A = !0)
                            ;
                } catch (re) {
                    N = !0,
                        f = re
                } finally {
                    try {
                        if (!A && n.return != null && (I = n.return(),
                        Object(I) !== I))
                            return
                    } finally {
                        if (N)
                            throw f
                    }
                }
                return T
            }
        }
        function Od(i) {
            if (rr()(i))
                return i
        }
        function Ul(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function $l(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            Ul(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            Ul(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function Bl(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function no(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = Bl(Object(f), !0)).call(n, function(g) {
                    xd(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = Bl(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function xd(i, e, n) {
            return (e = Dd(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function Dd(i) {
            var e = Rd(i, "string");
            return ji(e) == "symbol" ? e : e + ""
        }
        function Rd(i, e) {
            if (ji(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (ji(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        var jd = Zt.variableApi.getVariablesOnEngagement
            , Ud = Zt.variableApi.getHistoryVariablesOnEngagement
            , $d = U.phoneUtils.voiceApi.getEngagement;
        const Bd = {
            name: "CurrentUserProfile",
            mixins: [Ol.A, vn.A, Ft],
            components: {
                nameAvatar: Md,
                VariablesList: Bs.A,
                History: xl.History,
                SideContent: xl.SideContent,
                ZpnsRefreshGlobalVariables: Lt.ZpnsRefreshGlobalVariables
            },
            props: {
                isAlive: {
                    type: Boolean,
                    default: !1
                },
                contactInfo: {
                    type: Object,
                    default: function() {
                        return {
                            contactId: "",
                            customerId: ""
                        }
                    }
                }
            },
            setup: function(e) {
                var n = (0,
                    Mn.useSessionPanelsGetters)()
                    , l = n.currentTask
                    , f = n.currentActiveTask
                    , g = n.rightPanelHistoryTaskData
                    , I = (0,
                    Lt.useDataSilentUpdate)({
                    queryFn: Ud,
                    staleTime: 60 * 60 * 1e3
                })
                    , T = I.getData
                    , A = (0,
                    Lt.useDataSilentUpdate)({
                    queryFn: $d,
                    staleTime: 60 * 60 * 1e3
                })
                    , N = A.getData
                    , re = (0,
                    Qe.ref)(10)
                    , fe = (0,
                    Lt.useCrmUser)()
                    , ke = fe.getCrmName
                    , Ht = fe.getCrmEmailById
                    , vt = fe.getCrmPhoneById
                    , Me = fe.getCurrentEngagementMap
                    , he = (0,
                    Qe.ref)(!0)
                    , sn = (0,
                    Lt.usePii)()
                    , ln = sn.calcPhoneWithPhiMask
                    , lt = (0,
                    Qe.computed)(function() {
                    var Dn = f.value || {}
                        , xt = Dn.isConference
                        , Nr = Dn.isVoiceConferenceHost;
                    return xt || Nr
                })
                    , Tn = (0,
                    Qe.computed)(function() {
                    var Dn, xt;
                    return e.isAlive ? (Dn = f.value) === null || Dn === void 0 ? void 0 : Dn.engagementId : (xt = g.value) === null || xt === void 0 ? void 0 : xt.engagementId
                })
                    , Wn = function(xt) {
                    re.value = xt
                };
                return {
                    currentTask: l,
                    currentActiveTask: f,
                    rightPanelHistoryTaskData: g,
                    getCrmName: ke,
                    getCrmEmailById: Ht,
                    getCrmPhoneById: vt,
                    getCurrentEngagementMap: Me,
                    calcPhoneWithPhiMask: ln,
                    engagementId: Tn,
                    isConference: lt,
                    tGetHistoryVariablesOnEngagement: T,
                    tGetEngagement: N,
                    showContent: he,
                    currentListLen: re,
                    handleHistoryListLengthChange: Wn
                }
            },
            data: function() {
                return {
                    variablesListResult: {},
                    isLoading: !1,
                    activeNames: [],
                    customActiveTabindex: -1,
                    systemActiveTabindex: -1,
                    crmUsersDataCache: {},
                    engagementData: {}
                }
            },
            created: function() {
                this.getVariblesList(),
                this.isConference && this.getEngagementData()
            },
            computed: no(no(no({}, (0,
                zt.mapGetters)("crm", ["getCurrentUserTabVariablesCaches"])), (0,
                zt.mapGetters)({
                currentAgent: "user",
                piiSettings: "piiSettings"
            })), {}, {
                isAgentCanSeeHistoryTab: function() {
                    var e = this.isAccountFlagEnabled("enableConsumerHistory")
                        , n = this.isAccountFlagEnabled("viewConsumerHistorySwitch")
                        , l = this.getSettingEnabled("view-consumer-history");
                    return e && l && n
                },
                currentUser: function() {
                    return this.getCurrentEngagementMap(this.engagementId)
                },
                contactId: function() {
                    var e = this.currentUser || {}
                        , n = e.users
                        , l = e.selectedUser
                        , f = "";
                    return n && n.length > 0 && (f = l != null && l.id ? l.id : n[0].id),
                        f
                },
                userEmail: function() {
                    var e, n = this.getCrmEmailById(this.engagementId);
                    if (this.isAlive) {
                        var f;
                        e = (f = this.currentActiveTask) === null || f === void 0 || (f = f.userInfo) === null || f === void 0 ? void 0 : f.email
                    } else {
                        var l;
                        e = (l = this.rightPanelHistoryTaskData) === null || l === void 0 ? void 0 : l.customerEmail
                    }
                    return n || e || ""
                },
                phoneNumber: function() {
                    var e = this.getCrmPhoneById(this.engagementId);
                    if (this.isWhatsapp) {
                        var n;
                        return (n = this.profileUserInfo) === null || n === void 0 ? void 0 : n.phoneNumber
                    }
                    var l = "";
                    if (this.inPhone || this.inVideo || this.inSMS) {
                        var f = this.currentActiveTask || {}
                            , g = f.tkType
                            , I = f.direction
                            , T = f.callerIdInfoBO;
                        if (g === "phone")
                            if (I === "outbound")
                                l = this.currentActiveTask.to;
                            else {
                                var A = T || {}
                                    , N = A.origNumber;
                                l = N || l
                            }
                        else if (g === "video" || g === "sms") {
                            var re;
                            l = ((re = this.currentActiveTask) === null || re === void 0 ? void 0 : re.customerName) || this.$t("cci.common.unknown"),
                            g === "video" && (l = "")
                        }
                    } else if (!this.isAlive) {
                        var fe;
                        l = (fe = this.rightPanelHistoryTaskData) === null || fe === void 0 ? void 0 : fe.customerNumber
                    }
                    return e || l
                },
                formattedPhoneNumber: function() {
                    return this.phoneNumber ? this.formatPhoneNumber(this.phoneNumber) : this.isWhatsapp ? "-" : ""
                },
                maskedFormattedPhoneNumber: function() {
                    return this.calcPhoneWithPhiMask(this.formattedPhoneNumber, {
                        scene: this.isAlive ? "active" : "close"
                    })
                },
                selectedUserName: function() {
                    return this.getCrmName(this.engagementId, this.phoneNumber, this.userEmail)
                },
                displayName: function() {
                    var e = this.currentActiveTask || {}
                        , n = e.from
                        , l = e.to
                        , f = e.direction
                        , g = e.customerName
                        , I = g === void 0 ? "" : g
                        , T = e.tempCustomerName
                        , A = e.variableCustomerName
                        , N = this.selectedUserName;
                    if (!N)
                        if (this.isAlive)
                            if (this.inPhone)
                                if (this.isConference) {
                                    var vt, Me = (vt = this.engagementData) === null || vt === void 0 || (vt = vt.participants) === null || vt === void 0 ? void 0 : D()(vt).call(vt, function(r) {
                                        return r.type === 2
                                    });
                                    N = Me?.phoneNumber || ""
                                } else
                                    N = l,
                                    f === "inbound" && (N = n),
                                    T && (N = T);
                            else
                                N = T || A || I;
                        else {
                            var re = this.rightPanelHistoryTaskData || {}
                                , fe = re.customerName
                                , ke = re.channelType
                                , Ht = ["SMS", "Voice", "PHONE"];
                            N = fe,
                            !N && M()(Ht).call(Ht, ke) && (N = this.formattedPhoneNumber)
                        }
                    var he = this.piiSettings || {}
                        , sn = he.maskPiiInfo
                        , ln = sn === void 0 ? !1 : sn
                        , lt = he.detailSettings
                        , Tn = lt === void 0 ? {} : lt;
                    if (this.inPhone || this.inSMS)
                        if (A || T) {
                            var Wn, Dn = Tn.displayName || {}, xt = Dn.toggle, Nr = xt === void 0 ? !1 : xt;
                            N = ln && Nr ? (Wn = N) === null || Wn === void 0 ? void 0 : Wn.replace(U.phiReg, "*") : N
                        } else {
                            var xn = Tn.phoneNumber || {}
                                , wr = xn.toggle
                                , Dr = wr === void 0 ? !1 : wr
                                , Fr = this.$options.filters.phoneNumber(N, this.currentAgent.countryOrRegion);
                            N = ln && Dr ? Fr?.replace(U.phiReg, "*") : Fr
                        }
                    else {
                        var fr, yr = Tn.displayName || {}, hr = yr.toggle, c = hr === void 0 ? !1 : hr;
                        N = ln && c ? (fr = N) === null || fr === void 0 ? void 0 : fr.replace(U.phiReg, "*") : N
                    }
                    return N || this.$t("cci.common.unknown")
                },
                enableEngagementInformationOnClient: function() {
                    return this.account.enableEngagementInformationOnClient
                },
                hasAccessVariables: function() {
                    return this.enableEngagementInformationOnClient
                },
                systemGlobalVariablesLength: function() {
                    var e;
                    return (e = this.variablesListResult) === null || e === void 0 || (e = e.system) === null || e === void 0 ? void 0 : e.length
                },
                customGlobalVariablesLength: function() {
                    var e;
                    return (e = this.variablesListResult) === null || e === void 0 || (e = e.custom) === null || e === void 0 ? void 0 : e.length
                },
                idLabel: function() {
                    var e;
                    return ((e = this.currentUser) === null || e === void 0 || (e = e.selectedUser) === null || e === void 0 ? void 0 : e.userEntity) || "User"
                },
                isEmailChannel: function() {
                    var e = this.contactInfo.subChannel
                        , n = e === void 0 ? "" : e;
                    return n.toLowerCase() === _i.CHANNEL_KEYS.email.keyLower
                }
            }),
            watch: {
                engagementId: function() {
                    this.variablesListResult = {},
                        this.getVariblesList()
                }
            },
            methods: no(no({}, (0,
                zt.mapActions)("crm", ["setUserTabVariables"])), {}, {
                getAvatarColor: U.getAvatarColor,
                getVariblesList: function() {
                    var e = this;
                    return $l(to().mark(function n() {
                        var l, f, g, I, T, A, N, re;
                        return to().wrap(function(ke) {
                            for (; ; )
                                switch (ke.prev = ke.next) {
                                    case 0:
                                        if (e.engagementId) {
                                            ke.next = 2;
                                            break
                                        }
                                        return ke.abrupt("return");
                                    case 2:
                                        if (l = {
                                            inClientProfileSec: !0,
                                            engagementId: e.engagementId
                                        },
                                            e.isAlive) {
                                            ke.next = 7;
                                            break
                                        }
                                        return e.isLoading = !0,
                                            e.tGetHistoryVariablesOnEngagement(l, function(Ht) {
                                                var vt = ps(Ht, 2)
                                                    , Me = vt[0]
                                                    , he = vt[1];
                                                if (e.isLoading = !1,
                                                    Me)
                                                    return e.$message.error(Me);
                                                e.variablesListResult = {
                                                    custom: he?.customGlobalVariables || [],
                                                    system: he?.systemGlobalVariables || []
                                                }
                                            }),
                                            ke.abrupt("return");
                                    case 7:
                                        if (!e.enableEngagementInformationOnClient) {
                                            ke.next = 26;
                                            break
                                        }
                                        if (f = e.getCurrentUserTabVariablesCaches(e.engagementId, "profile"),
                                            !f) {
                                            ke.next = 14;
                                            break
                                        }
                                        if (g = f.customGlobalVariables,
                                            I = f.systemGlobalVariables,
                                            !(rr()(g) && rr()(I))) {
                                            ke.next = 14;
                                            break
                                        }
                                        return e.variablesListResult = {
                                            custom: g,
                                            system: I
                                        },
                                            ke.abrupt("return");
                                    case 14:
                                        return e.isLoading = !0,
                                            ke.next = 17,
                                            (0,
                                                U.tryApiCatch)(jd, l);
                                    case 17:
                                        if (T = ke.sent,
                                            A = ps(T, 2),
                                            N = A[0],
                                            re = A[1],
                                            e.isLoading = !1,
                                            !N) {
                                            ke.next = 24;
                                            break
                                        }
                                        return ke.abrupt("return", e.$message.error(N));
                                    case 24:
                                        e.setUserTabVariables({
                                            engagementId: l.engagementId,
                                            field: "profile",
                                            variables: re
                                        }),
                                            e.variablesListResult = {
                                                custom: re?.customGlobalVariables || [],
                                                system: re?.systemGlobalVariables || []
                                            };
                                    case 26:
                                    case "end":
                                        return ke.stop()
                                }
                        }, n)
                    }))()
                },
                getEngagementData: function() {
                    var e = this;
                    return $l(to().mark(function n() {
                        return to().wrap(function(f) {
                            for (; ; )
                                switch (f.prev = f.next) {
                                    case 0:
                                        e.isLoading = !0,
                                            e.tGetEngagement({
                                                id: e.currentActiveTask.engagementId
                                            }, function(g) {
                                                var I = ps(g, 2)
                                                    , T = I[0]
                                                    , A = I[1];
                                                if (e.isLoading = !1,
                                                    T)
                                                    return console.error(T);
                                                e.engagementData = A
                                            });
                                    case 2:
                                    case "end":
                                        return f.stop()
                                }
                        }, n)
                    }))()
                },
                handleSideContentOpen: function() {
                    this.showContent = !1
                },
                handleSideContentClose: function() {
                    this.showContent = !0
                },
                handleZpnsNotifyRefreshVariables: function(e) {
                    var n;
                    ((n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.engagementId) === e && this.getVariblesList()
                }
            })
        };
        var ro = (0,
            ir.A)(Bd, Td, Sd, !1, null, "15c01eb4", null);
        const Mo = ro.exports;
        var Vl = function() {
            var e, n = this, l = n._self._c;
            return l("div", {
                class: [{
                    "in-calling": n.borderBottom
                }, "panel__header"]
            }, [n.showBackIcon ? [l("div", {
                staticClass: "sidebar-header"
            }, [l("div", {
                staticClass: "back-icon",
                attrs: {
                    "data-test-id": n.$testIds.back_to_all_engagements
                },
                on: {
                    click: function(g) {
                        return n.$emit("click-back")
                    }
                }
            }, [l("span", {
                staticClass: "zm-icon-left"
            }), n._v(" "), l("span", {
                staticClass: "back-text"
            }, [n._v(`
          ` + n._s(n.$t("cci.common.button.back")) + `
        `)])]), n._v(" "), l("div", {
                class: ["sidebar-title"]
            }, [n._v(`
        ` + n._s(n.sideBarViewerName) + `
      `)])])] : [l("ChannelHeader", {
                attrs: {
                    "channel-type": n.channelType,
                    title: n.currentUser.name || n.currentUser.phone || n.title,
                    duration: n.duration,
                    sentiment: n.sentiment
                },
                scopedSlots: n._u([((e = n.contactsList) === null || e === void 0 ? void 0 : e.length) > 1 ? {
                    key: "title",
                    fn: function() {
                        return [l("zm-dropdown", {
                            staticClass: "contacts-select",
                            on: {
                                command: n.onSelectHandler,
                                "visible-change": function(I) {
                                    return n.visible = I
                                }
                            }
                        }, [l("div", {
                            staticClass: "contacts-select__title"
                        }, [l("span", [n._v(" " + n._s(n.selectedContact))]), n._v(" "), l("i", {
                            class: ["zm-icon-down", n.visible ? "contacts-select__visible" : ""]
                        })]), n._v(" "), l("zm-dropdown-menu", {
                            staticClass: "contacts-select__dropdown",
                            attrs: {
                                slot: "dropdown"
                            },
                            slot: "dropdown"
                        }, [l("div", {
                            staticStyle: {
                                padding: "0 4px"
                            }
                        }, [l("p", {
                            staticClass: "contacts-select__dropdown__title"
                        }, [n._v(`
                ` + n._s(n.$t("cci.profile.chooseContact")) + `
              `)]), n._v(" "), l("p", {
                            staticClass: "contacts-select__dropdown__content"
                        }, [n._v(`
                ` + n._s(n.$t(n.inPhone ? "cci.profile.multipleContact.desc" : n.inChat ? "cci.profile.multipleContactEmail.desc" : "cci.profile.multipleContactVideo.desc", {
                            number: n.to || "",
                            emailaddress: n.to || ""
                        })) + `
              `)])]), n._v(" "), n._l(n.contactsList, function(g) {
                            return l("zm-dropdown-item", {
                                key: g.id,
                                attrs: {
                                    command: g.id
                                }
                            }, [l("div", {
                                staticClass: "contacts-select__dropdown__item"
                            }, [l("div", {
                                staticClass: "contacts-select__dropdown__avatar",
                                style: g.avatarStyles
                            }, [l("img", {
                                staticClass: "contacts-select__dropdown__image",
                                attrs: {
                                    src: g.avatar || n.userPhoto
                                }
                            })]), n._v(" "), l("div", {
                                staticClass: "contacts-select__dropdown__describe"
                            }, [l("p", {
                                staticClass: "contacts-select__dropdown__label"
                            }, [n._v(`
                    ` + n._s(g.calculatedName || g.name || g.phone) + `
                  `)]), n._v(" "), g.name && n.inPhone ? l("p", {
                                staticClass: "contacts-select__dropdown__phone"
                            }, [g.userPhoneType ? l("span", [n._v(`
                      ` + n._s(g.userPhoneType) + `
                    `)]) : l("span", [n._v(`
                      ` + n._s(n.$t("cci.flows.phone") + ": ") + `
                    `)]), n._v(`
                    ` + n._s(g.phone) + `
                  `)]) : n._e(), n._v(" "), g.name && (n.inChat || n.inVideo) ? l("p", {
                                staticClass: "contacts-select__dropdown__phone"
                            }, [l("span", [n._v(`
                      ` + n._s(n.$t("cci.common.label.email") + ": ") + `
                    `)]), n._v(`
                    ` + n._s(g.email) + `
                  `)]) : n._e()])])])
                        })], 2)], 1)]
                    },
                    proxy: !0
                } : null], null, !0)
            })]], 2)
        }
            , Vd = []
            , ao = a(14457);
        function bi(i) {
            "@babel/helpers - typeof";
            return bi = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                bi(i)
        }
        function Fl() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Fl = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && bi(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(bi(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function Wl(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function Fd(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            Wl(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            Wl(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function Gl(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function Ra(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = Gl(Object(f), !0)).call(n, function(g) {
                    Wa(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = Gl(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function Wa(i, e, n) {
            return (e = Wd(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function Wd(i) {
            var e = Gd(i, "string");
            return bi(e) == "symbol" ? e : e + ""
        }
        function Gd(i, e) {
            if (bi(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (bi(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        const Hd = {
            props: {
                borderBottom: Boolean,
                title: String,
                duration: String,
                showBackIcon: Boolean,
                engagementId: {
                    type: String,
                    default: void 0
                },
                to: {
                    type: String,
                    default: void 0
                },
                sentimentScoreMap: {
                    type: Object
                }
            },
            setup: function(e) {
                var n = (0,
                    Lt.useClient)()
                    , l = n.inChat
                    , f = n.inVideo
                    , g = n.inPhone
                    , I = n.inSMS
                    , T = n.inMonitorSMS
                    , A = (0,
                    Lt.useCrmUser)()
                    , N = A.getCrmNameById
                    , re = A.getCurrentEngagementMap
                    , fe = (0,
                    Qe.toRefs)(e)
                    , ke = fe.engagementId
                    , Ht = fe.sentimentScoreMap
                    , vt = (0,
                    Qe.computed)(function() {
                    return !Ht.value || !ke.value ? "" : Ht.value[ke.value]
                })
                    , Me = (0,
                    Qe.computed)(function() {
                    return f.value ? ao.ChannelType.Video : g.value ? ao.ChannelType.Phone : I.value || T.value ? ao.ChannelType.SMS : ao.ChannelType.Message
                });
                return {
                    inChat: l,
                    inVideo: f,
                    inPhone: g,
                    getCrmNameById: N,
                    getCurrentEngagementMap: re,
                    sentiment: vt,
                    channelType: Me
                }
            },
            data: function() {
                return {
                    phoneInstance: null,
                    visible: !1
                }
            },
            components: {
                ChannelHeader: ao.ChannelHeader
            },
            computed: Ra(Ra(Ra(Ra({}, (0,
                zt.mapGetters)("sessionPanels", ["activeRightTabIndexWithoutDefault"])), (0,
                zt.mapGetters)("crm", ["getContactsList"])), (0,
                zt.mapState)("crm", {
                contactsMap: "contactsMap"
            })), {}, {
                userPhoto: function() {
                    return a(185)
                },
                sideBarViewerName: function() {
                    var e = Wa(Wa(Wa(Wa(Wa(Wa(Wa({}, U.eRightBarTab.profile, this.$t("cci.inbox.tab.profile")), U.eRightBarTab.ticket, this.$t("cci.crm.zendesk.nav.ticket")), U.eRightBarTab.engagement, this.$t("cci.engagement.name.currentSession.engagementTab")), U.eRightBarTab.agentAssist, this.$t("cci.agentassist.info.retrieval")), U.eRightBarTab.knowledgeBase, this.$t("cci.agentassist.knowledgeBase")), U.eRightBarTab.expertAssist, this.$t("cci.agentassist.AgentAssist")), U.eRightBarTab.responseAssistant, this.$t("cci.agentassist.responseAssist"));
                    return e[this.activeRightTabIndexWithoutDefault] || "--"
                },
                contactsList: function() {
                    var e = this.getContactsList(this.engagementId);
                    return Ce()(e).call(e, function(n) {
                        if (n.userEntity) {
                            var l;
                            n.calculatedName = oa()(l = "".concat(n.name, " (")).call(l, n.userEntity, ")")
                        }
                    }),
                        e
                },
                currentUser: {
                    get: function() {
                        var e = this.getCurrentEngagementMap(this.engagementId);
                        return e?.selectedUser || {}
                    },
                    set: function(e) {
                        this.setSelectedUser({
                            engagementId: this.engagementId,
                            userId: e
                        })
                    }
                },
                selectedContact: function() {
                    return this.getCrmNameById(this.engagementId)
                }
            }),
            methods: Ra(Ra({}, (0,
                zt.mapActions)("crm", ["setSelectedUser"])), {}, {
                onSelectHandler: function(e) {
                    var n = this;
                    return Fd(Fl().mark(function l() {
                        var f, g, I, T, A, N;
                        return Fl().wrap(function(fe) {
                            for (; ; )
                                switch (fe.prev = fe.next) {
                                    case 0:
                                        return n.currentUser = e,
                                            fe.next = 3,
                                            (0,
                                                xa.getCRMInstance)();
                                    case 3:
                                        f = fe.sent,
                                            g = (0,
                                                Bn.getCRM)(),
                                            g === "servicenow" ? (T = Oe()(I = n.contactsList).call(I, function(ke) {
                                                return ke.id === e
                                            }),
                                                f?.updateUserForInteraction(T[0], n.engagementId)) : (N = D()(A = n.contactsList).call(A, function(ke) {
                                                return ke.id === e
                                            }),
                                                f?.screenPopUser({
                                                    id: e,
                                                    direction: an.EngagementDirections.OUTBOUND,
                                                    channel: U.QUEUE_CHANNEL_TYPE.VOICE,
                                                    userEntity: N?.userEntity
                                                }),
                                            f != null && f.setSelectedUser && f?.setSelectedUser({
                                                selectedUser: N,
                                                engagementId: n.engagementId
                                            }));
                                    case 6:
                                    case "end":
                                        return fe.stop()
                                }
                        }, l)
                    }))()
                }
            })
        };
        var Kd = (0,
            ir.A)(Hd, Vl, Vd, !1, null, "c6c49088", null);
        const hs = Kd.exports;
        var Ca = a(13447)
            , vs = a(7287);
        function Ci(i) {
            "@babel/helpers - typeof";
            return Ci = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                Ci(i)
        }
        function Qd(i, e) {
            var n = typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (!n) {
                if (rr()(i) || (n = Ui(i)) || e && i && typeof i.length == "number") {
                    n && (i = n);
                    var l = 0
                        , f = function() {};
                    return {
                        s: f,
                        n: function() {
                            return l >= i.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: i[l++]
                            }
                        },
                        e: function(N) {
                            throw N
                        },
                        f
                    }
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
            }
            var g, I = !0, T = !1;
            return {
                s: function() {
                    n = n.call(i)
                },
                n: function() {
                    var N = n.next();
                    return I = N.done,
                        N
                },
                e: function(N) {
                    T = !0,
                        g = N
                },
                f: function() {
                    try {
                        I || n.return == null || n.return()
                    } finally {
                        if (T)
                            throw g
                    }
                }
            }
        }
        function zr() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            zr = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && Ci(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(Ci(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function La(i, e) {
            return Hp(i) || Yd(i, e) || Ui(i, e) || Ea()
        }
        function Ea() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Ui(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return zl(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? zl(i, e) : void 0
            }
        }
        function zl(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function Yd(i, e) {
            var n = i == null ? null : typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (n != null) {
                var l, f, g, I, T = [], A = !0, N = !1;
                try {
                    if (g = (n = n.call(i)).next,
                    e === 0) {
                        if (Object(n) !== n)
                            return;
                        A = !1
                    } else
                        for (; !(A = (l = g.call(n)).done) && (T.push(l.value),
                        T.length !== e); A = !0)
                            ;
                } catch (re) {
                    N = !0,
                        f = re
                } finally {
                    try {
                        if (!A && n.return != null && (I = n.return(),
                        Object(I) !== I))
                            return
                    } finally {
                        if (N)
                            throw f
                    }
                }
                return T
            }
        }
        function Hp(i) {
            if (rr()(i))
                return i
        }
        function Hl(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function ya(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            Hl(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            Hl(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function Kl(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function Ta(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = Kl(Object(f), !0)).call(n, function(g) {
                    Zd(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = Kl(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function Zd(i, e, n) {
            return (e = ms(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function ms(i) {
            var e = Jd(i, "string");
            return Ci(e) == "symbol" ? e : e + ""
        }
        function Jd(i, e) {
            if (Ci(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (Ci(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        var ei = Zt.contactApi.createContact
            , Ei = Zt.contactApi.getContact
            , gs = Zt.contactApi.getContacts
            , ys = Zt.contactApi.linkContact
            , Ql = Zt.contactApi.updateContact
            , $i = Zt.contactApi.updateEngagement
            , Xd = Zt.contactApi.getAddressBook
            , Yl = Zt.contactApi.getContactInfoByCustomerId
            , Zl = Zt.livevideoApi.getParticipants
            , Bi = {
            MIDDLE: 390,
            SMALL: 335,
            MINI: 320
        };
        const qd = {
            name: "TheUserProfile",
            mixins: [vn.A, Ft, Kt.A, Ca.A],
            props: {
                isFromActiveData: {
                    type: Boolean,
                    default: !1
                },
                enableZvaAgentAssist: {
                    type: Boolean,
                    default: !1
                },
                enablePopOut: {
                    type: Boolean,
                    default: !1
                }
            },
            setup: function() {
                var e = (0,
                    Lt.useAgentAssist)()
                    , n = e.getEnableValue
                    , l = e.enableValues
                    , f = e.initSmartNoteTemplate;
                return {
                    getEnableValue: n,
                    enableValues: l,
                    initSmartNoteTemplate: f
                }
            },
            data: function() {
                return {
                    isShowEngagementEvents: !1,
                    timeMap: [],
                    WAIT: 1e3,
                    eRightBarTab: U.eRightBarTab,
                    isReloadListPage: !1,
                    panelCloseable: !1,
                    panelVisible: !1,
                    randomColorArray: [],
                    contactList: [],
                    filterContacts: [],
                    adding: !1,
                    backToPanel: !1,
                    isLoading: !0,
                    contactLoading: !1,
                    contactInfo: {},
                    requestedInfo: {},
                    editing: !1,
                    showMore: !1,
                    mounted: !1,
                    engagementCollapseActive: [],
                    templateContactId: "",
                    cacheVariables: null,
                    observerSize: {
                        middle: !1,
                        small: !1,
                        mini: !1
                    },
                    observer: null,
                    engagementData: {},
                    isEditConfirm: !1,
                    CurrentSession: null,
                    CurrentTicket: null
                }
            },
            computed: Ta(Ta(Ta(Ta({}, (0,
                zt.mapGetters)("sessionPanels", ["activeTaskQueue", "currentActiveTask", "currentTaskId", "currentMonitorTask", "rightbarTabIndex", "cciQueues", "getHasInitKB", "getHasInitAA", "menuTab", "activeRightTabIndex"])), (0,
                zt.mapGetters)({
                currentAgent: "user",
                piiSettings: "piiSettings",
                engagementSettings: "settings"
            })), (0,
                zt.mapState)("coreVoice", ["calls"])), {}, {
                renderProfileClass: function() {
                    return Ta({
                        "client-tab": !0,
                        inPhone: this.isLive,
                        videoAlive: this.inVideo && this.isVideoAlive,
                        "position-relative": this.isRightProfileShowed,
                        "x-hidden": this.isRightProfileShowed || this.isRightEngagementShowed,
                        "in-monitor-video": this.inMonitorVideo
                    }, this.observerSize)
                },
                isWhatsapp: function() {
                    return this.isTargetChannel(_i.CHANNEL_KEYS.whatsapp.keyLower)
                },
                ownExtraUserInfo: function() {
                    var e = this
                        , n = [_i.CHANNEL_KEYS.facebook.keyLower, _i.CHANNEL_KEYS.whatsapp.keyLower];
                    return G()(n).call(n, function(l) {
                        return e.isTargetChannel(l)
                    })
                },
                profileUserInfo: function() {
                    var e;
                    return this.ownExtraUserInfo ? ((e = this.contactInfo) === null || e === void 0 ? void 0 : e.userInfo) || {} : {}
                },
                customUserAvatar: function() {
                    return this.profileUserInfo.avatarUrl
                },
                defaultUserAvatar: function() {
                    return this.isDark ? a(62752) : a(44899)
                },
                agentAssistInfo: function() {
                    var e = this.currentActiveTask || {}
                        , n = e.queueId
                        , l = e.direction
                        , f = e.outboundQueueId
                        , g = e.tkType
                        , I = l === "outbound" && g === "phone" ? f : n;
                    return I ? this.cciQueues[I] : {
                        agentAssistCategoryId: "",
                        agentAssistCategoryName: ""
                    }
                },
                isContact: function() {
                    return !!this.requestedInfo.userId
                },
                isVideoAlive: function() {
                    var e, n;
                    return K()(e = ["v.accepted"]).call(e, (n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.eventType) > -1
                },
                profileUserDetailName: function() {
                    var e = this.isChatVideo ? this.contactInfo.customerName : this.profileUserDetailNumber;
                    return this.isContact ? this.requestedInfo.name : e
                },
                profileUserDetailNumber: function() {
                    if (this.isWhatsapp) {
                        var e;
                        return ((e = this.profileUserInfo) === null || e === void 0 ? void 0 : e.phoneNumber) || "-"
                    }
                    var n = this.contactInfo.from || this.contactInfo.customerNumber;
                    if (this.inPhone || this.inVideo || this.inSMS) {
                        var l = this.currentActiveTask || {}
                            , f = l.tkType
                            , g = l.direction;
                        if (f === "phone") {
                            var I;
                            if (g === "outbound")
                                n = this.contactInfo.to;
                            else {
                                var T, A = ((T = this.contactInfo) === null || T === void 0 ? void 0 : T.callerIdInfoBO) || {}, N = A.origNumber;
                                n = N || n
                            }
                            if ((I = this.currentActiveTask) !== null && I !== void 0 && I.isConference) {
                                var re, fe = (re = this.engagementData.participants) === null || re === void 0 ? void 0 : D()(re).call(re, function(Wn) {
                                    return Wn.type === 2
                                });
                                n = fe?.phoneNumber
                            }
                        } else
                            (f === "video" || f === "sms") && (n = this.contactInfo.customerName || this.$t("cci.common.unknown"),
                            f === "video" && (n = ""))
                    } else if (this.inMonitorPhone) {
                        var ke = this.currentActiveTask || {}
                            , Ht = ke.tkType
                            , vt = ke.direction
                            , Me = ke.to
                            , he = ke.from;
                        Ht === "phone" && (n = he,
                        vt === "outbound" && (n = Me))
                    } else if (this.inMonitorSMS) {
                        var sn = this.currentMonitorTask
                            , ln = sn.engagement
                            , lt = ln === void 0 ? {} : ln
                            , Tn = sn.type;
                        Tn === "sms" && (n = lt.customerName || this.$t("cci.common.unknown"))
                    }
                    return this.isVideoChannelFromActiveData && (n = ""),
                        n
                },
                calcUserDetailName: function() {
                    return this.$options.filters.phoneNumber(this.profileUserDetailName, this.currentAgent.countryOrRegion)
                },
                calcUserDetailNameWithPhiMaskForChatVideo: function() {
                    return this.contactInfo.customerName || this.$t("cci.common.unknown")
                },
                calcUserDetailNumber: function() {
                    return this.$options.filters.phoneNumber(this.profileUserDetailNumber, this.currentAgent.countryOrRegion)
                },
                isChatVideo: function() {
                    var e, n = this.contactInfo.channelType, l = n === void 0 ? "" : n;
                    return M()(e = ["chat", "in_app_chat", _i.CHANNEL_KEYS.facebook.keyLower, _i.CHANNEL_KEYS.whatsapp.keyLower, "video"]).call(e, l.toLowerCase()) || this.inVideo || this.inMonitorChat || this.inMonitorVideo || this.isEmailChannel
                },
                infoLoading: function() {
                    return this.isLoading || this.contactLoading
                },
                contactId: function() {
                    if (this.contactInfo.channelType === "PHONE")
                        return this.contactInfo.contactId || this.contactInfo.customerId;
                    if (this.inMonitorSMS || this.inMonitorChat || this.inMonitorVideo) {
                        var e;
                        return (e = this.currentMonitorTask) === null || e === void 0 ? void 0 : e.contactId
                    }
                    return this.contactInfo.contactId
                },
                customerId: function() {
                    var e;
                    if (this.inPhone || this.inSMS || this.inChat || this.inVideo) {
                        var n;
                        return ((n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.customerId) || ""
                    } else if (this.inMonitorPhone || this.inMonitorSMS || this.inMonitorChat || this.inMonitorVideo) {
                        var l;
                        return ((l = this.currentMonitorTask) === null || l === void 0 || (l = l.engagement) === null || l === void 0 ? void 0 : l.customerId) || ""
                    }
                    return ((e = this.contactInfo) === null || e === void 0 ? void 0 : e.customerId) || ""
                },
                directNumbers: function() {
                    var e, n, l = this;
                    if (!this.isContact) {
                        var f = this.$options.filters.phoneNumber(this.profileUserDetailNumber, this.currentAgent.countryOrRegion);
                        return f ? [f] : []
                    }
                    return !this.requestedInfo || !this.requestedInfo.directNumbers ? [] : ma()(e = Oe()(n = this.requestedInfo.directNumbers).call(n, function(g) {
                        return qo()(g)
                    })).call(e, function(g) {
                        return l.$options.filters.phoneNumber(g, l.currentAgent.countryOrRegion)
                    })
                },
                directNumbersWithTag: function() {
                    var e;
                    return ((e = this.requestedInfo) === null || e === void 0 ? void 0 : e.directNumbersWithTag) || []
                },
                enableEngagementInformationOnClient: function() {
                    return this.account.enableEngagementInformationOnClient
                },
                isAlive: function() {
                    var e, n, l = ["accepted", "v.accepted", "sms.accepted", "chat.accepted", "takeover.accepted", "monitor.start"];
                    return M()(l).call(l, (e = this.currentActiveTask) === null || e === void 0 ? void 0 : e.eventType) || M()(l).call(l, (n = this.currentMonitorTask) === null || n === void 0 ? void 0 : n.eventType)
                },
                hasAccessToAddContact: function() {
                    var e, n;
                    return (e = D()(n = this.engagementSettings || []).call(n, function(l) {
                        return l.settingId === "add-edit-contacts"
                    })) === null || e === void 0 ? void 0 : e.enabled
                },
                hasAccessToContact: function() {
                    var e, n, l = (e = D()(n = this.engagementSettings || []).call(n, function(g) {
                        return g.settingId === "address-book-tab"
                    })) === null || e === void 0 ? void 0 : e.enabled, f = this.getPermissionEnabled("VecAddress:Read");
                    return this.hasAccessToAddContact || l || f
                },
                isVideoChannelFromActiveData: function() {
                    var e;
                    return this.isFromActiveData && ((e = this.contactInfo) === null || e === void 0 || (e = e.channelType) === null || e === void 0 ? void 0 : e.toLowerCase()) === "video"
                },
                isEmailChannel: function() {
                    var e = this.contactInfo.subChannel
                        , n = e === void 0 ? "" : e;
                    return n.toLowerCase() === _i.CHANNEL_KEYS.email.keyLower
                },
                hostEmailAddress: function() {
                    var e;
                    return this.isEmailChannel ? (e = this.contactInfo) === null || e === void 0 || (e = e.userInfo) === null || e === void 0 ? void 0 : e.email : ""
                },
                isShowSavedReplyDetail: function() {
                    return this.activeRightTabIndex === U.eRightBarTab.responseAssistant && this.$route.name === "responseDetail"
                }
            }),
            watch: {
                currentTaskId: function(e, n) {
                    e && n && this.onCurrentTaskChange(e)
                },
                isShowWrapup: function(e) {
                    e && this.onWrapupStatus()
                },
                inActivity: function() {
                    this.inChat && (this.contactInfo = Ta({}, this.currentActiveTask))
                }
            },
            methods: Ta(Ta(Ta(Ta({}, (0,
                zt.mapActions)("sessionPanels", ["setRightTabIndex", "updateSelectedContactId"])), (0,
                zt.mapMutations)("sessionPanels", ["updateSMSTask", "updateChatTask", "updateVideoTask", "updateCallTask", "updateCurrentMonitorTaskContactId", "addQueueInfo4AgentAssist", "setHasInitKB", "setHasInitAA"])), (0,
                zt.mapActions)("coreVoice", ["getCurrentCallEngagement"])), {}, {
                isTargetChannel: function(e) {
                    var n, l, f = this.contactInfo, g = f.channelType, I = g === void 0 ? "" : g, T = f.subChannel, A = T === void 0 ? "" : T;
                    return M()(n = ma()(l = [I, A]).call(l, function(N) {
                        return N?.toLowerCase()
                    })).call(n, e)
                },
                updateContactId: function(e) {
                    this.inPhone ? this.updateCallTask(e) : this.inSMS ? this.updateSMSTask(e) : this.inMonitorPhone ? this.updateCallTask(e) : this.inChat ? this.updateChatTask(e) : this.inVideo && this.updateVideoTask(e)
                },
                updateTaskByTypeAndId: function(e, n) {
                    n === "phone" ? this.updateCallTask(e) : n === "sms" ? this.updateSMSTask(e) : n === "chat" ? this.updateChatTask(e) : n === "video" && this.updateVideoTask(e)
                },
                getChannelType: function() {
                    switch (!0) {
                        case this.inPhone:
                            return "phone";
                        case this.inSMS:
                            return "sms";
                        case this.inChat:
                            return this.isEmailChannel ? "email" : "chat";
                        case this.inVideo:
                            return "video";
                        default:
                            return ""
                    }
                },
                linkContact: function(e) {
                    var n = this;
                    return ya(zr().mark(function l() {
                        var f, g, I, T, A, N;
                        return zr().wrap(function(fe) {
                            for (; ; )
                                switch (fe.prev = fe.next) {
                                    case 0:
                                        if (!(n.inMonitorPhone || n.inMonitorSMS || n.inMonitorChat || n.inMonitorVideo)) {
                                            fe.next = 2;
                                            break
                                        }
                                        return fe.abrupt("return");
                                    case 2:
                                        if (f = n.getChannelType(),
                                            f) {
                                            fe.next = 5;
                                            break
                                        }
                                        return fe.abrupt("return");
                                    case 5:
                                        if (n.updateContactId({
                                            contactId: e,
                                            taskId: n.currentTaskId
                                        }),
                                            g = n.currentActiveTask && n.currentActiveTask[vs.LINK_CONTACT_PARAMS[f].enterId] || "",
                                            !(n.inVideo && n.currentActiveTask)) {
                                            fe.next = 17;
                                            break
                                        }
                                        if (I = n.currentActiveTask.customerEnterId,
                                            !I) {
                                            fe.next = 13;
                                            break
                                        }
                                        fe.t0 = I,
                                            fe.next = 16;
                                        break;
                                    case 13:
                                        return fe.next = 15,
                                            n.getCustomerEnterId();
                                    case 15:
                                        fe.t0 = fe.sent;
                                    case 16:
                                        g = fe.t0;
                                    case 17:
                                        return fe.next = 19,
                                            (0,
                                                U.tryApiCatch)(ys, {
                                                channelType: f,
                                                contactId: e,
                                                enterId: g,
                                                sessionId: n.currentActiveTask && n.currentActiveTask[vs.LINK_CONTACT_PARAMS[f].sessionId] || ""
                                            });
                                    case 19:
                                        T = fe.sent,
                                            A = La(T, 1),
                                            N = A[0],
                                        N && n.$message.error(N);
                                    case 23:
                                    case "end":
                                        return fe.stop()
                                }
                        }, l)
                    }))()
                },
                getCustomerEnterId: function() {
                    var e = this;
                    return ya(zr().mark(function n() {
                        return zr().wrap(function(f) {
                            for (; ; )
                                switch (f.prev = f.next) {
                                    case 0:
                                        return f.abrupt("return", new (O())(function(g) {
                                                var I;
                                                (0,
                                                    U.tryApiCatch)(Zl, (I = e.currentActiveTask) === null || I === void 0 ? void 0 : I.engagementId).then(function(T) {
                                                    var A = La(T, 2)
                                                        , N = A[0]
                                                        , re = A[1];
                                                    if (!N) {
                                                        var fe, ke = ((fe = D()(re).call(re, function(Ht) {
                                                            return Ht.type == 2
                                                        })) === null || fe === void 0 ? void 0 : fe.enterId) || "";
                                                        e.updateVideoTask(Ta(Ta({}, e.currentActiveTask), {}, {
                                                            customerEnterId: ke
                                                        })),
                                                            g(ke)
                                                    }
                                                    g("")
                                                }).catch(function() {
                                                    g("")
                                                })
                                            }
                                        ));
                                    case 1:
                                    case "end":
                                        return f.stop()
                                }
                        }, n)
                    }))()
                },
                onCurrentTaskChange: function() {
                    this.isLive && (this.initial(),
                        this.handleCancel())
                },
                handleWrapDone: function() {
                    this.$emit("wrapupDone")
                },
                getContactInfo: function(e, n) {
                    var l = this;
                    return ya(zr().mark(function f() {
                        var g;
                        return zr().wrap(function(T) {
                            for (; ; )
                                switch (T.prev = T.next) {
                                    case 0:
                                        return l.isLoading = !0,
                                        (l.inPhone || l.inSMS || l.inVideo || l.inChat) && e && l.updateSelectedContactId({
                                            contactId: e
                                        }),
                                            T.prev = 2,
                                            g = l.isChatVideo ? l.isEmailChannel ? l.hostEmailAddress ? l.getContactListByNum({
                                                email: l.hostEmailAddress
                                            }) : "" : l.getContactListByCustomerId() : l.profileUserDetailNumber ? l.getContactListByNum({
                                                phoneNumber: l.profileUserDetailNumber
                                            }) : "",
                                            T.next = 6,
                                            O().all([g, l.handleContactInfo(e, n)]);
                                    case 6:
                                        return T.prev = 6,
                                            l.isLoading = !1,
                                            T.finish(6);
                                    case 9:
                                    case "end":
                                        return T.stop()
                                }
                        }, f, null, [[2, , 6, 9]])
                    }))()
                },
                getContactListByCustomerId: function() {
                    var e = this;
                    return ya(zr().mark(function n() {
                        var l, f, g, I, T, A, N, re, fe, ke;
                        return zr().wrap(function(vt) {
                            for (; ; )
                                switch (vt.prev = vt.next) {
                                    case 0:
                                        if (l = e.currentTaskId,
                                            f = e.customerId,
                                            !(!e.isChatVideo || !f || !e.hasAccessToContact)) {
                                            vt.next = 4;
                                            break
                                        }
                                        return vt.abrupt("return");
                                    case 4:
                                        return e.contactLoading = !0,
                                            vt.next = 7,
                                            (0,
                                                U.tryApiCatch)(Yl, {
                                                customerId: f
                                            });
                                    case 7:
                                        if (g = vt.sent,
                                            I = La(g, 2),
                                            T = I[0],
                                            A = I[1],
                                            e.contactLoading = !1,
                                            !(l && l !== e.currentTaskId)) {
                                            vt.next = 14;
                                            break
                                        }
                                        return vt.abrupt("return", console.warn("incorrect contactList for current task"));
                                    case 14:
                                        if (!T) {
                                            vt.next = 18;
                                            break
                                        }
                                        return e.contactList = [],
                                            e.filterContacts = [],
                                            vt.abrupt("return");
                                    case 18:
                                        N = A || {},
                                            re = N.records,
                                            fe = re === void 0 ? [] : re,
                                        "contactFrom"in (A || {}) && Ce()(fe).call(fe, function(Me) {
                                            Me.contactFrom = A.contactFrom
                                        }),
                                            e.contactList = fe,
                                            e.filterContacts = fe,
                                        fe.length > 1 && !e.randomColorArray.length && Ce()(ke = A.records).call(ke, function() {
                                            e.randomColorArray.push((0,
                                                U.randomColor)())
                                        });
                                    case 23:
                                    case "end":
                                        return vt.stop()
                                }
                        }, n)
                    }))()
                },
                handleContactInfo: function(e, n) {
                    var l = this;
                    return ya(zr().mark(function f() {
                        var g, I, T, A, N, re;
                        return zr().wrap(function(ke) {
                            for (; ; )
                                switch (ke.prev = ke.next) {
                                    case 0:
                                        return g = l.currentTaskId,
                                            l.linkContact(e),
                                            ke.next = 4,
                                            (0,
                                                U.tryApiCatch)(Ei, {
                                                contactId: e
                                            });
                                    case 4:
                                        if (I = ke.sent,
                                            T = La(I, 2),
                                            A = T[0],
                                            N = T[1],
                                            re = N === void 0 ? {} : N,
                                            !A) {
                                            ke.next = 11;
                                            break
                                        }
                                        return ke.abrupt("return");
                                    case 11:
                                        if (!(g && g != l.currentTaskId)) {
                                            ke.next = 13;
                                            break
                                        }
                                        return ke.abrupt("return");
                                    case 13:
                                        return re.contactFrom = "UCS",
                                            console.log("handleContactInfo result:", re),
                                        re != null && re.name && g && l.updateContactId({
                                            tempCustomerName: re?.name,
                                            taskId: g
                                        }),
                                            ke.next = 18,
                                            l.fixedAddressBook(re);
                                    case 18:
                                        l.requestedInfo = l.fixedRequestedInfo(re),
                                        n && n(Ta(Ta({}, l.contactInfo), re)),
                                            l.templateContactId = e,
                                            l.clearVariablesCache();
                                    case 22:
                                    case "end":
                                        return ke.stop()
                                }
                        }, f)
                    }))()
                },
                handleContactFromOthers: function(e) {
                    var n = this;
                    return ya(zr().mark(function l() {
                        return zr().wrap(function(g) {
                            for (; ; )
                                switch (g.prev = g.next) {
                                    case 0:
                                        return g.next = 2,
                                            n.fixedAddressBook(e);
                                    case 2:
                                        n.requestedInfo = n.fixedRequestedInfo(e || {});
                                    case 3:
                                    case "end":
                                        return g.stop()
                                }
                        }, l)
                    }))()
                },
                handleForChooseOther: function(e) {
                    var n = this;
                    return ya(zr().mark(function l() {
                        return zr().wrap(function(g) {
                            for (; ; )
                                switch (g.prev = g.next) {
                                    case 0:
                                        return g.next = 2,
                                            n.handleSave({
                                                options: e
                                            });
                                    case 2:
                                    case "end":
                                        return g.stop()
                                }
                        }, l)
                    }))()
                },
                parseEmail: function(e) {
                    if (!e)
                        return e;
                    var n = Cd()(e)
                        , l = e.email;
                    if (l) {
                        var f;
                        n.emails = ((f = l.split) === null || f === void 0 ? void 0 : f.call(l, ",")) || []
                    }
                    return n
                },
                getContactListByNum: function(e) {
                    var n = this;
                    return ya(zr().mark(function l() {
                        var f, g, I, T, A, N, re, fe;
                        return zr().wrap(function(Ht) {
                            for (; ; )
                                switch (Ht.prev = Ht.next) {
                                    case 0:
                                        if (!(!e || !n.hasAccessToContact)) {
                                            Ht.next = 2;
                                            break
                                        }
                                        return Ht.abrupt("return");
                                    case 2:
                                        return n.contactLoading = !0,
                                            Ht.next = 5,
                                            (0,
                                                U.tryApiCatch)(gs, e);
                                    case 5:
                                        if (f = Ht.sent,
                                            g = La(f, 2),
                                            I = g[0],
                                            T = g[1],
                                            n.contactLoading = !1,
                                            !I) {
                                            Ht.next = 14;
                                            break
                                        }
                                        return n.contactList = [],
                                            n.filterContacts = [],
                                            Ht.abrupt("return");
                                    case 14:
                                        A = T || {},
                                            N = A.items,
                                            re = N === void 0 ? [] : N,
                                        "contactFrom"in (T || {}) && Ce()(re).call(re, function(vt) {
                                            vt.contactFrom = T.contactFrom
                                        }),
                                            n.contactList = re,
                                            n.filterContacts = re,
                                        re.length > 1 && !n.randomColorArray.length && Ce()(fe = T.items).call(fe, function() {
                                            n.randomColorArray.push((0,
                                                U.randomColor)())
                                        });
                                    case 19:
                                    case "end":
                                        return Ht.stop()
                                }
                        }, l)
                    }))()
                },
                getContactInfoByNum: function() {
                    var e = arguments
                        , n = this;
                    return ya(zr().mark(function l() {
                        var f, g, I, T, A, N, re, fe, ke, Ht, vt, Me, he, sn, ln;
                        return zr().wrap(function(Tn) {
                            for (; ; )
                                switch (Tn.prev = Tn.next) {
                                    case 0:
                                        if (f = e.length > 0 && e[0] !== void 0 ? e[0] : {},
                                            n.hasAccessToContact) {
                                            Tn.next = 3;
                                            break
                                        }
                                        return Tn.abrupt("return");
                                    case 3:
                                        return n.isLoading = !0,
                                            g = n.isLive ? n.currentTaskId : "",
                                            I = n.currentTaskId,
                                            Tn.next = 8,
                                            (0,
                                                U.tryApiCatch)(gs, f);
                                    case 8:
                                        if (T = Tn.sent,
                                            A = La(T, 2),
                                            N = A[0],
                                            re = A[1],
                                            n.isLoading = !1,
                                            !N) {
                                            Tn.next = 17;
                                            break
                                        }
                                        return n.contactList = [],
                                            n.filterContacts = [],
                                            Tn.abrupt("return");
                                    case 17:
                                        if (!(g && g !== n.currentTaskId)) {
                                            Tn.next = 19;
                                            break
                                        }
                                        return Tn.abrupt("return", console.warn("incorrect contactList for current task"));
                                    case 19:
                                        if (fe = re || {},
                                            ke = fe.items,
                                            Ht = ke === void 0 ? [] : ke,
                                        "contactFrom"in (re || {}) && Ce()(Ht).call(Ht, function(Wn) {
                                            Wn.contactFrom = re.contactFrom
                                        }),
                                            n.contactList = Ht,
                                            n.filterContacts = Ht,
                                            n.panelVisible = Ht.length > 1,
                                            vt = Ht.length,
                                            Me = Ht.length === 1,
                                        n.panelVisible && !n.randomColorArray.length && Ce()(he = re.items).call(he, function() {
                                            n.randomColorArray.push((0,
                                                U.randomColor)())
                                        }),
                                            !Me) {
                                            Tn.next = 35;
                                            break
                                        }
                                        return Tn.next = 30,
                                            n.fixedAddressBook(re);
                                    case 30:
                                        n.requestedInfo = n.fixedRequestedInfo(re.items[0]),
                                            n.linkContact(n.requestedInfo.userId),
                                        I && (sn = re.items[0]) !== null && sn !== void 0 && sn.name && n.updateContactId({
                                            tempCustomerName: (ln = re.items[0]) === null || ln === void 0 ? void 0 : ln.name,
                                            taskId: I
                                        }),
                                            Tn.next = 36;
                                        break;
                                    case 35:
                                        n.requestedInfo = {};
                                    case 36:
                                        n.panelVisible || (vt || (n.templateContactId = ""),
                                            n.clearVariablesCache()),
                                        (n.inPhone || n.inSMS) && (Me && n.updateSelectedContactId({
                                            contactId: n.requestedInfo.userId
                                        }),
                                        vt || n.updateSelectedContactId({
                                            contactId: ""
                                        }));
                                    case 38:
                                    case "end":
                                        return Tn.stop()
                                }
                        }, l)
                    }))()
                },
                handleCancel: function() {
                    this.isReloadListPage = !1,
                        this.editing = !1,
                        this.adding = !1,
                        this.showMore = !1,
                    this.backToPanel && (this.panelVisible = !0)
                },
                handleSave: function(e) {
                    var n = this;
                    return ya(zr().mark(function l() {
                        var f, g, I, T, A, N, re, fe, ke, Ht, vt, Me;
                        return zr().wrap(function(sn) {
                            for (; ; )
                                switch (sn.prev = sn.next) {
                                    case 0:
                                        return f = e.options,
                                            g = e.fn,
                                            I = n.isContact && !n.adding || f.forceUpdate,
                                        I && (f.id = n.requestedInfo.userId || f.userId),
                                            T = n.contactInfo.customerId,
                                        T && (f.customerId = T),
                                            A = I ? Ql : ei,
                                        "contactFrom"in f && f.contactFrom !== "UCS" && (A = ei),
                                            sn.next = 9,
                                            n.fixedCRMFormBody(f);
                                    case 9:
                                        return sn.next = 11,
                                            (0,
                                                U.tryApiCatch)(A, f);
                                    case 11:
                                        if (N = sn.sent,
                                            re = La(N, 2),
                                            fe = re[0],
                                            ke = re[1],
                                        g && g(),
                                            !fe) {
                                            sn.next = 18;
                                            break
                                        }
                                        return sn.abrupt("return", n.$message.error(fe));
                                    case 18:
                                        Ht = I ? n.$t("cci.updatedSuccessfully") : n.$t("cci.createdSuccessfully"),
                                            n.$message.success(Ht),
                                            n.editing = !1,
                                            n.adding = !1,
                                            n.showMore = !1,
                                            vt = I ? n.requestedInfo.userId || f.id : ke,
                                            n.updateName(function() {
                                                n.isReloadListPage = !0
                                            }, vt),
                                            Me = function(lt) {
                                                n.$emit("updateContact", {
                                                    updatedContact: !0,
                                                    updatedContactInfo: lt
                                                })
                                            }
                                            ,
                                            n.getContactInfo(vt, I ? Me : null);
                                    case 27:
                                    case "end":
                                        return sn.stop()
                                }
                        }, l)
                    }))()
                },
                updateName: function(e, n) {
                    var l = this;
                    return ya(zr().mark(function f() {
                        var g, I, T, A, N, re, fe, ke, Ht;
                        return zr().wrap(function(Me) {
                            for (; ; )
                                switch (Me.prev = Me.next) {
                                    case 0:
                                        if (!l.isLive) {
                                            Me.next = 2;
                                            break
                                        }
                                        return Me.abrupt("return");
                                    case 2:
                                        if (g = l.contactInfo,
                                            I = g.sessionId,
                                            T = g.customerEnterId,
                                            A = g.channelType,
                                            N = g.agentEnterId,
                                        T && N) {
                                            Me.next = 5;
                                            break
                                        }
                                        return Me.abrupt("return");
                                    case 5:
                                        return re = {
                                            sessionId: I,
                                            customerEnterId: T,
                                            channelType: A,
                                            agentEnterId: N,
                                            contactId: n
                                        },
                                            Me.next = 8,
                                            (0,
                                                U.tryApiCatch)($i, re);
                                    case 8:
                                        fe = Me.sent,
                                            ke = La(fe, 1),
                                            Ht = ke[0],
                                            Ht ? console.error(Ht) : e && e();
                                    case 12:
                                    case "end":
                                        return Me.stop()
                                }
                        }, f)
                    }))()
                },
                handleCommand: function(e) {
                    switch (e) {
                        case "edit":
                            this.editing = !0;
                            break;
                        case "add":
                            this.adding = !0,
                                this.editing = !0;
                            break;
                        case "create":
                            this.adding = !0,
                                this.editing = !0;
                            break;
                        case "add_to_existing":
                            this.adding = !1,
                                this.editing = !1,
                                this.panelVisible = !0,
                                this.panelCloseable = !0;
                            break
                    }
                },
                injectExtraInfoForMonitorChat: function() {
                    var e, n = ((e = this.currentMonitorTask) === null || e === void 0 ? void 0 : e.engagement) || {}, l = n.subChannel, f = n.channelType, g = n.userInfo;
                    fs()(this.contactInfo, {
                        channelType: f,
                        subChannel: l,
                        userInfo: g
                    })
                },
                initial: function() {
                    var e = this;
                    return ya(zr().mark(function n() {
                        var l, f, g;
                        return zr().wrap(function(T) {
                            for (; ; )
                                switch (T.prev = T.next) {
                                    case 0:
                                        return T.next = 2,
                                            (0,
                                                xa.getCRMAdapter)();
                                    case 2:
                                        if (l = T.sent,
                                            f = (0,
                                                U.isInCoreTab)() ? (0,
                                                U.getCoreTabCrmPlatform)() : "",
                                            !((0,
                                                U.isInCoreTab)() && e.enablePopOut && f && f !== Dt.CRMS.Salesforce)) {
                                            T.next = 8;
                                            break
                                        }
                                        return T.next = 7,
                                            (0,
                                                xa.CRMAdapterFactory)(f);
                                    case 7:
                                        l = T.sent;
                                    case 8:
                                        if (l && l.getView ? (e.CurrentSession = l.getView("Engagement"),
                                        ((0,
                                            U.isInZendesk)() || (0,
                                            U.isInCoreTab)() && e.enablePopOut && f === Dt.CRMS.Zendesk) && (e.CurrentTicket = l.getView("Ticket"))) : (e.CurrentSession = wd.default,
                                            e.CurrentTicket = null),
                                            e.initContactInfo(),
                                            e.initSmartNoteTemplate(),
                                            !(e.inMonitorChat || e.inMonitorSMS)) {
                                            T.next = 17;
                                            break
                                        }
                                        e.inMonitorChat && e.getContactInfoAndContactList(!0, function() {
                                            var A, N = (A = e.currentMonitorTask) === null || A === void 0 || (A = A.engagement) === null || A === void 0 ? void 0 : A.customerId;
                                            e.isEmailChannel ? e.handleEmailContactInfo(e.hostEmailAddress) : e.handleChatAndVideoContactInfo(N)
                                        }),
                                            e.isLoading = !1,
                                        e.inMonitorSMS && e.getContactInfoAndContactList(e.profileUserDetailNumber),
                                            T.next = 38;
                                        break;
                                    case 17:
                                        if (!(e.inPhone || e.inMonitorPhone || e.inSMS)) {
                                            T.next = 27;
                                            break
                                        }
                                        if (e.isLoading = !1,
                                            e.getContactInfoAndContactList(e.profileUserDetailNumber),
                                            e.autoSelectEngagementTab(),
                                            !((g = e.currentActiveTask) !== null && g !== void 0 && g.isConference)) {
                                            T.next = 25;
                                            break
                                        }
                                        return T.next = 24,
                                            e.getEngagementData();
                                    case 24:
                                        e.getContactInfoByNum({
                                            phoneNumber: e.profileUserDetailNumber
                                        });
                                    case 25:
                                        T.next = 38;
                                        break;
                                    case 27:
                                        if (!(e.inVideo || e.inChat)) {
                                            T.next = 33;
                                            break
                                        }
                                        e.isLoading = !1,
                                            e.getContactInfoAndContactList(!0, function() {
                                                e.isEmailChannel ? e.handleEmailContactInfo(e.hostEmailAddress) : e.handleChatAndVideoContactInfo(e.contactInfo.customerId)
                                            }),
                                            e.autoSelectEngagementTab(),
                                            T.next = 38;
                                        break;
                                    case 33:
                                        if (!e.inMonitorVideo) {
                                            T.next = 38;
                                            break
                                        }
                                        return T.next = 36,
                                            e.getParticipantId();
                                    case 36:
                                        e.isLoading = !1,
                                            e.getContactInfoAndContactList(!0, function() {
                                                var A, N = (A = e.currentMonitorTask) === null || A === void 0 || (A = A.engagement) === null || A === void 0 ? void 0 : A.customerId;
                                                e.handleChatAndVideoContactInfo(N)
                                            });
                                    case 38:
                                    case "end":
                                        return T.stop()
                                }
                        }, n)
                    }))()
                },
                initContactInfo: function() {
                    if (this.inMonitoring) {
                        var e;
                        if (this.contactInfo = {
                            customerName: (e = this.currentMonitorTask) === null || e === void 0 ? void 0 : e.engagement.customerName
                        },
                            this.inMonitorChat) {
                            var n, l = ((n = this.currentMonitorTask) === null || n === void 0 ? void 0 : n.engagement) || {}, f = l.subChannel, g = l.channelType, I = l.userInfo;
                            fs()(this.contactInfo, {
                                channelType: g,
                                subChannel: f,
                                userInfo: I
                            })
                        }
                    }
                    this.inActivity && (this.contactInfo = Ta({}, this.currentActiveTask))
                },
                handleEmailContactInfo: function(e) {
                    var n = this;
                    return ya(zr().mark(function l() {
                        return zr().wrap(function(g) {
                            for (; ; )
                                switch (g.prev = g.next) {
                                    case 0:
                                        if (e) {
                                            g.next = 2;
                                            break
                                        }
                                        return g.abrupt("return");
                                    case 2:
                                        n.getContactInfoByNum({
                                            email: e
                                        });
                                    case 3:
                                    case "end":
                                        return g.stop()
                                }
                        }, l)
                    }))()
                },
                getParticipantId: function() {
                    var e = this;
                    return ya(zr().mark(function n() {
                        return zr().wrap(function(f) {
                            for (; ; )
                                switch (f.prev = f.next) {
                                    case 0:
                                        return f.abrupt("return", new (O())(function(g) {
                                                var I;
                                                (0,
                                                    U.tryApiCatch)(Zl, (I = e.currentMonitorTask) === null || I === void 0 ? void 0 : I.engagementId).then(function(T) {
                                                    var A = La(T, 2)
                                                        , N = A[0]
                                                        , re = A[1];
                                                    if (!N) {
                                                        var fe, ke;
                                                        e.contactInfo.contactId = (fe = D()(re).call(re, function(Ht) {
                                                            return Ht.contactId
                                                        })) === null || fe === void 0 ? void 0 : fe.contactId,
                                                            e.updateCurrentMonitorTaskContactId({
                                                                taskId: (ke = e.currentMonitorTask) === null || ke === void 0 ? void 0 : ke.taskId,
                                                                contactId: e.contactInfo.contactId
                                                            })
                                                    }
                                                    g()
                                                }).catch(function() {
                                                    g()
                                                })
                                            }
                                        ));
                                    case 1:
                                    case "end":
                                        return f.stop()
                                }
                        }, n)
                    }))()
                },
                getContactInfoAndContactList: function(e, n) {
                    this.contactId ? this.getContactInfo(this.contactId) : e && (n ? n() : this.getContactInfoByNum({
                        phoneNumber: this.profileUserDetailNumber
                    }))
                },
                handleChatAndVideoContactInfo: function(e) {
                    var n = this;
                    return ya(zr().mark(function l() {
                        var f, g, I, T, A, N, re, fe, ke, Ht, vt, Me, he, sn;
                        return zr().wrap(function(lt) {
                            for (; ; )
                                switch (lt.prev = lt.next) {
                                    case 0:
                                        if (e) {
                                            lt.next = 2;
                                            break
                                        }
                                        return lt.abrupt("return");
                                    case 2:
                                        return n.isLoading = !0,
                                            f = n.isLive ? n.currentTaskId : "",
                                            g = n.currentTaskId,
                                            lt.next = 7,
                                            (0,
                                                U.tryApiCatch)(Yl, {
                                                customerId: e
                                            });
                                    case 7:
                                        if (I = lt.sent,
                                            T = La(I, 2),
                                            A = T[0],
                                            N = T[1],
                                            n.isLoading = !1,
                                            !A) {
                                            lt.next = 16;
                                            break
                                        }
                                        return n.contactList = [],
                                            n.filterContacts = [],
                                            lt.abrupt("return");
                                    case 16:
                                        if (!(f && f !== n.currentTaskId)) {
                                            lt.next = 18;
                                            break
                                        }
                                        return lt.abrupt("return", console.warn("incorrect contactList for current task"));
                                    case 18:
                                        re = N || {},
                                            fe = re.records,
                                            ke = fe === void 0 ? [] : fe,
                                        "contactFrom"in (N || {}) && Ce()(ke).call(ke, function(Tn) {
                                            Tn.contactFrom = N.contactFrom
                                        }),
                                            n.contactList = ke,
                                            n.filterContacts = ke,
                                            n.panelVisible = ke.length > 1,
                                            Ht = ke.length,
                                            vt = ke.length === 1,
                                        n.panelVisible && !n.randomColorArray.length && Ce()(Me = N.records).call(Me, function() {
                                            n.randomColorArray.push((0,
                                                U.randomColor)())
                                        }),
                                            vt ? (n.requestedInfo = n.fixedRequestedInfo(N.records[0]),
                                                n.templateContactId = n.requestedInfo.userId,
                                                n.linkContact(n.requestedInfo.userId),
                                            g && (he = N.records[0]) !== null && he !== void 0 && he.name && n.updateContactId({
                                                tempCustomerName: (sn = N.records[0]) === null || sn === void 0 ? void 0 : sn.name,
                                                taskId: g
                                            })) : n.requestedInfo = {},
                                        n.panelVisible || (Ht || (n.templateContactId = ""),
                                            n.clearVariablesCache()),
                                        (n.inChat || n.inVideo) && (vt && n.updateSelectedContactId({
                                            contactId: n.requestedInfo.userId
                                        }),
                                        Ht || n.updateSelectedContactId({
                                            contactId: ""
                                        }));
                                    case 29:
                                    case "end":
                                        return lt.stop()
                                }
                        }, l)
                    }))()
                },
                fixedRemoveEmptyProps: function(e) {
                    for (var n in e) {
                        var l = e[n]
                            , f = typeof l == "string"
                            , g = f ? qo()(l) : l;
                        g || (e[n] = void 0)
                    }
                },
                fixedRequestedInfo: function(e) {
                    var n = this.parseEmail(e);
                    return n.sourceName = (n.sourceName || "").toLowerCase(),
                        n
                },
                fixedCRMFormBody: function(e) {
                    var n = this;
                    return ya(zr().mark(function l() {
                        return zr().wrap(function(g) {
                            for (; ; )
                                switch (g.prev = g.next) {
                                    case 0:
                                        if (!e.id && e.userId && (e.id = e.userId),
                                        e.contactSourceId && !e.sourceId && (e.sourceId = e.contactSourceId,
                                            e.contactSourceId = void 0),
                                        e.contactSource && !e.sourceName && (e.sourceName = e.contactSource,
                                            e.contactSource = void 0),
                                        e.addressBooks && !e.addressBookId && (e.addressBookId = e.addressBooks,
                                            e.addressBooks = void 0),
                                        e.directNumbers && !e.phoneNumbers && (e.phoneNumbers = e.directNumbers,
                                            e.directNumbers = void 0),
                                            e.addressBookId) {
                                            g.next = 8;
                                            break
                                        }
                                        return g.next = 8,
                                            n.fixedAddressBook(e);
                                    case 8:
                                        n.fixedRemoveEmptyProps(e);
                                    case 9:
                                    case "end":
                                        return g.stop()
                                }
                        }, l)
                    }))()
                },
                fixedAddressBook: function(e) {
                    var n = this;
                    return ya(zr().mark(function l() {
                        var f, g, I, T, A;
                        return zr().wrap(function(re) {
                            for (; ; )
                                switch (re.prev = re.next) {
                                    case 0:
                                        if (f = e.addressBooks,
                                            g = e.addressBooksName,
                                            !(f && f.length)) {
                                            re.next = 3;
                                            break
                                        }
                                        return re.abrupt("return");
                                    case 3:
                                        if (!(g && g.length)) {
                                            re.next = 10;
                                            break
                                        }
                                        return n.asyncGetAgentAddressBook || (n.asyncGetAgentAddressBook = n.getAgentAddressBook()),
                                            I = g[0],
                                            re.next = 8,
                                            n.asyncGetAgentAddressBook;
                                    case 8:
                                        T = re.sent,
                                        T && T.length && (A = D()(T).call(T, function(fe) {
                                            return fe.name === I
                                        }),
                                            e.addressBooks = A ? [A.id || ""] : [""],
                                            e.addressBookId = e.addressBooks);
                                    case 10:
                                    case "end":
                                        return re.stop()
                                }
                        }, l)
                    }))()
                },
                getAgentAddressBook: function() {
                    return ya(zr().mark(function e() {
                        var n, l, f, g;
                        return zr().wrap(function(T) {
                            for (; ; )
                                switch (T.prev = T.next) {
                                    case 0:
                                        return T.next = 2,
                                            (0,
                                                U.tryApiCatch)(Xd, {
                                                size: 10
                                            });
                                    case 2:
                                        if (n = T.sent,
                                            l = La(n, 2),
                                            f = l[0],
                                            g = l[1],
                                            !(f || !g || !g.records || !g.records.length)) {
                                            T.next = 8;
                                            break
                                        }
                                        return T.abrupt("return", []);
                                    case 8:
                                        return T.abrupt("return", g?.records[0].addressBookList || []);
                                    case 9:
                                    case "end":
                                        return T.stop()
                                }
                        }, e)
                    }))()
                },
                autoSelectEngagementTab: function() {
                    this.isShowWrapup && this.setRightTabIndex({
                        taskId: this.currentTaskId,
                        val: U.eRightBarTab.engagement
                    })
                },
                onWrapupStatus: function() {
                    (this.inPhone || this.inVideo || this.inSMS || this.inChat) && this.autoSelectEngagementTab()
                },
                clearVariablesCache: function() {
                    this.engagementCollapseActive = [],
                        this.cacheVariables = null
                },
                toggle: function(e) {
                    var n, l = this;
                    Ce()(n = q()(this.observerSize)).call(n, function(f) {
                        return l.observerSize[f] = !1
                    }),
                    e && (this.observerSize[e] = !0)
                },
                getSize: function(e) {
                    var n = this.timeMap[this.timeMap.length - 1]
                        , l = this.timeMap[this.timeMap.length - 2];
                    if (n && l)
                        if (n.time - l.time < this.WAIT) {
                            this.timeMap = [];
                            return
                        } else
                            this.timeMap.shift();
                    e > Bi.MIDDLE && this.toggle(),
                    e > Bi.SMALL && e <= Bi.MIDDLE && this.toggle("middle"),
                    e > Bi.MINI && e <= Bi.SMALL && this.toggle("small"),
                    e <= Bi.MINI && this.toggle("mini")
                },
                getEngagementData: function() {
                    var e = this;
                    return ya(zr().mark(function n() {
                        var l, f, g, I;
                        return zr().wrap(function(A) {
                            for (; ; )
                                switch (A.prev = A.next) {
                                    case 0:
                                        return A.next = 2,
                                            e.getCurrentCallEngagement({
                                                id: e.currentActiveTask.engagementId
                                            });
                                    case 2:
                                        if (l = A.sent,
                                            f = La(l, 2),
                                            g = f[0],
                                            I = f[1],
                                            !g) {
                                            A.next = 8;
                                            break
                                        }
                                        return A.abrupt("return");
                                    case 8:
                                        e.engagementData = I;
                                    case 9:
                                    case "end":
                                        return A.stop()
                                }
                        }, n)
                    }))()
                },
                updateZpnsDisplayName: function() {
                    var e, n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, l = n.displayName, f = n.engagementId, g = (e = this.activeTaskQueue) === null || e === void 0 ? void 0 : D()(e).call(e, function(I) {
                        return I.engagementId === f
                    });
                    g && l && this.updateTaskByTypeAndId({
                        variableCustomerName: l,
                        taskId: g.taskId
                    }, g.type)
                }
            }),
            activated: function() {
                this.mounted || this.initial()
            },
            deactivated: function() {
                this.editing = !1,
                    this.showMore = !1,
                    this.mounted = !1
            },
            mounted: function() {
                var e = this;
                this.mounted = !0,
                    this.initial(),
                    this.observer = new ResizeObserver(Id()(function(n) {
                        var l = Qd(n), f;
                        try {
                            for (l.s(); !(f = l.n()).done; ) {
                                var g = f.value
                                    , I = g.contentRect;
                                e.timeMap.push({
                                    width: I.width,
                                    time: ee()()
                                }),
                                    e.getSize(I.width)
                            }
                        } catch (T) {
                            l.e(T)
                        } finally {
                            l.f()
                        }
                    }, this.WAIT)),
                    this.$nextTick(function() {
                        e.observer.observe(e.$refs.profilePanel)
                    })
            },
            beforeDestroy: function() {
                this.observer && this.observer.unobserve(this.$refs.profilePanel)
            },
            components: {
                CurrentUserProfile: Mo,
                ThePanelHeader: hs,
                ZpnsRefreshGlobalVariables: Lt.ZpnsRefreshGlobalVariables,
                ResponseAssistant: Lt.ResponseAssistant
            }
        };
        var ef = (0,
            ir.A)(qd, bd, yi, !1, null, "13c863c5", null);
        const tf = ef.exports;
        var io = function() {
            var e = this
                , n = e._self._c;
            return n("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.isShow,
                    expression: "isShow"
                }],
                staticClass: "top-notify",
                style: e.styles,
                attrs: {
                    role: "alert"
                }
            }, [n("div", {
                staticClass: "top-notify__view"
            }, [n("i", {
                class: e.classes
            }), e._v(" "), n("div", {
                style: {
                    maxWidth: "350px"
                }
            }, [n("Ellipsis", {
                attrs: {
                    content: e.text
                }
            })], 1)])])
        }
            , Jl = []
            , Xl = a(84300)
            , nf = function(e, n) {
            var l = {
                monitor: e ? "#001F45" : "#F2F8FF",
                whisper: e ? "#361E00" : "#FFF9F2",
                barge: e ? "#001F45" : "#033A7D"
            };
            return l[n]
        }
            , rf = function(e, n) {
            var l = {
                monitor: e ? "#F2F8FF" : "#001F45",
                whisper: e ? "#FFF9F2" : "#361E00",
                barge: e ? "#F2F8FF" : "#ffffff"
            };
            return l[n]
        };
        const Qp = {
            mixins: [Kt.A],
            props: {
                isShow: {
                    type: Boolean,
                    default: !1
                },
                agentBeMonitorInfo: {
                    type: Object,
                    default: function() {
                        return {}
                    }
                }
            },
            components: {
                Ellipsis: Xl.A
            },
            computed: {
                monitorMode: function() {
                    return this.agentBeMonitorInfo.monitorMode
                },
                monitorUserName: function() {
                    return this.agentBeMonitorInfo.monitorUserName
                },
                styles: function() {
                    return {
                        backgroundColor: nf(this.isDark, this.monitorMode),
                        color: rf(this.isDark, this.monitorMode)
                    }
                },
                classes: function() {
                    return ["top-notify__icon", "top-notify__icon--".concat(this.monitorMode)]
                },
                text: function() {
                    var e = {
                        monitor: this.$t("callbar.monitor.agentBeingMonitor.listen", {
                            name: this.monitorUserName
                        }),
                        barge: this.$t("callbar.monitor.agentBeingMonitor.barge", {
                            name: this.monitorUserName
                        }),
                        whisper: this.$t("callbar.monitor.agentBeingMonitor.whisper", {
                            name: this.monitorUserName
                        })
                    };
                    return e["".concat(this.monitorMode)]
                }
            },
            methods: {
                join: function(e, n) {
                    if (!e.length)
                        return "";
                    var l = e.pop();
                    if (e.length === 0) {
                        var f;
                        return oa()(f = "".concat(l, " is ")).call(f, n)
                    } else {
                        var g, I;
                        return oa()(g = oa()(I = "".concat(e.join(", "), " and ")).call(I, l, " are ")).call(g, n)
                    }
                }
            }
        };
        var af = (0,
            ir.A)(Qp, io, Jl, !1, null, "72164c93", null);
        const of = af.exports;
        var sf = a(87835)
            , lf = a(19e3)
            , cf = a(570)
            , Yp = a(80241)
            , uf = a(83343)
            , df = a(8854)
            , ff = a.n(df)
            , Zp = {
            NotSupported: 1,
            DeviceNotAllowed: 2,
            DisconnectTemporarily: 3,
            Disconnect: 4,
            DeviceNotFound: 5,
            Deactive: 6
        }
            , pf = {
            Incoming: 1,
            Outbound: 2,
            Monitor: 3
        }
            , ql = a(81471)
            , hf = a(6301)
            , _s = function() {
            var e = this
                , n = e._self._c;
            return e.isRightPanelShowed ? n("right-panel", {
                attrs: {
                    "contact-info": e.contactInfo
                }
            }) : n("main-panel", {
                attrs: {
                    "contact-info": e.contactInfo,
                    "feature-options": e.featureOptions
                }
            })
        }
            , vf = []
            , ec = function() {
            var e = this
                , n = e._self._c;
            return e.rightPanelHistoryTaskData ? n("div", {
                staticClass: "session-content"
            }, [n("RecentSessionHeader", {
                attrs: {
                    "contact-info": e.contactInfo
                }
            }), e._v(" "), !e.hasRecords && !(e.chatContentListVisible && e.hasChatMessage) ? n("recent-session-content", {
                attrs: {
                    "contact-info": e.contactInfo
                }
            }) : [e.hasRecords ? n("div", {
                staticClass: "records-container"
            }, [n("div", {
                staticClass: "records-title"
            }, [e._v(`
        ` + e._s(e.$t("cci.engagement.recordingList.title")) + `
      `)]), e._v(" "), n("VoiceVideoRecords", {
                attrs: {
                    engagement: e.rightPanelHistoryTaskData,
                    "voice-list-height": "auto",
                    "video-list-height": "auto"
                }
            })], 1) : e._e(), e._v(" "), e.hasRecords && e.chatContentListVisible && e.hasChatMessage && e.hasChatMessageInit ? n("div", {
                staticClass: "divider"
            }, [e.rightPanelHistoryTaskData.channelType === "VIDEO" ? n("div", {
                staticClass: "in-video-chat-title"
            }, [e._v(`
        ` + e._s(e.$t("cci.engagement.title.inVideoChat")) + `
      `)]) : e._e()]) : e._e(), e._v(" "), e.chatContentListVisible && e.hasChatMessage ? n("ChatHistory", {
                key: e.rightPanelHistoryTaskData.sessionId,
                staticClass: "session-content__chat",
                attrs: {
                    "session-id": e.rightPanelHistoryTaskData.sessionId,
                    "enter-id": e.rightPanelHistoryTaskData.agentEnterId,
                    "channel-type": e.rightPanelHistoryTaskData.channelType,
                    "engagement-id": e.rightPanelHistoryTaskData.engagementId,
                    "customer-extra-info": e.rightPanelHistoryTaskData.customerExtraInfo,
                    "customer-id": e.rightPanelHistoryTaskData.customerId,
                    "no-scroll": !0,
                    "feature-options": e.featureOptions,
                    "is-report-source": !0
                },
                on: {
                    hasMessageChange: e.onHasChatMessage
                }
            }) : e._e()]], 2) : e._e()
        }
            , mf = []
            , bs = a(55685)
            , Jp = a.n(bs);
        const gf = Jp();
        var yf = (0,
            ir.A)(gf, ec, mf, !1, null, "b39c12dc", null);
        const _f = yf.exports;
        var oo = function() {
            var e = this
                , n = e._self._c;
            return n("div", {
                staticClass: "panel__wrapper"
            }, [n("div", {
                staticClass: "panel__header"
            }, [n("div", {
                staticClass: "panel__header-title is-center"
            }, [e._v(e._s(e.title))]), e._v(" "), n("div", {
                staticClass: "panel__header-back",
                on: {
                    click: e.clickBack
                }
            }, [n("div", {
                staticClass: "zm-icon-left"
            }), e._v(" "), n("div", {
                staticClass: "panel__header-back-text"
            }, [e._v(`
        ` + e._s(e.$t("cci.common.button.back")) + `
      `)])])]), e._v(" "), e.isRightProfileShowed ? n("CurrentUserProfile", {
                staticClass: "sidebar-view user-detail",
                attrs: {
                    "is-alive": !1,
                    "contact-info": e.contactInfo
                }
            }) : e._e(), e._v(" "), e.isRightEngagementShowed ? n("session-detail", {
                attrs: {
                    "contact-info": e.contactInfo
                }
            }) : e._e()], 1)
        }
            , tc = []
            , bf = a(85146);
        const Cf = {
            props: {
                contactInfo: Object
            },
            setup: function() {
                var e = (0,
                    Qe.getCurrentInstance)()
                    , n = (0,
                    ka.useI18n)()
                    , l = n.t
                    , f = (0,
                    Lt.useClient)()
                    , g = f.isRightProfileShowed
                    , I = f.isRightEngagementShowed
                    , T = (0,
                    Mn.useSessionPanelsActions)()
                    , A = T.setRightBarTabIndexInHistory
                    , N = (0,
                    Qe.computed)(function() {
                    return I.value ? l("cci.engagement.name.currentSession.engagementTab") : g.value ? l("cci.inbox.tab.profile") : ""
                });
                return {
                    title: N,
                    CurrentUserProfile: Mo,
                    isRightProfileShowed: g,
                    isRightEngagementShowed: I,
                    clickBack: function() {
                        A(-1),
                            e.proxy.$emit("RightPanelHeader:click-back")
                    }
                }
            },
            components: {
                CurrentUserProfile: Mo,
                sessionDetail: bf.default
            }
        };
        var Ef = (0,
            ir.A)(Cf, oo, tc, !1, null, "231a375a", null);
        const If = Ef.exports
            , wf = {
            props: {
                contactInfo: {
                    type: Object,
                    default: function() {
                        return {}
                    }
                },
                featureOptions: Object
            },
            setup: function() {
                var e = (0,
                    Lt.useClient)()
                    , n = e.isRightProfileShowed
                    , l = e.isRightEngagementShowed
                    , f = (0,
                    Qe.computed)(function() {
                    return l.value || n.value
                });
                return {
                    isRightPanelShowed: f
                }
            },
            components: {
                MainPanel: _f,
                RightPanel: If
            }
        };
        var Ii = (0,
            ir.A)(wf, _s, vf, !1, null, null, null);
        const Tf = Ii.exports;
        var nc = a(12168)
            , Vi = a(76642);
        function ti(i) {
            "@babel/helpers - typeof";
            return ti = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                ti(i)
        }
        function rc(i, e) {
            return ac(i) || so(i, e) || $a(i, e) || Sf()
        }
        function Sf() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function $a(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return Cs(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? Cs(i, e) : void 0
            }
        }
        function Cs(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function so(i, e) {
            var n = i == null ? null : typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (n != null) {
                var l, f, g, I, T = [], A = !0, N = !1;
                try {
                    if (g = (n = n.call(i)).next,
                    e === 0) {
                        if (Object(n) !== n)
                            return;
                        A = !1
                    } else
                        for (; !(A = (l = g.call(n)).done) && (T.push(l.value),
                        T.length !== e); A = !0)
                            ;
                } catch (re) {
                    N = !0,
                        f = re
                } finally {
                    try {
                        if (!A && n.return != null && (I = n.return(),
                        Object(I) !== I))
                            return
                    } finally {
                        if (N)
                            throw f
                    }
                }
                return T
            }
        }
        function ac(i) {
            if (rr()(i))
                return i
        }
        function ua() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            ua = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && ti(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(ti(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function ic(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function Fi(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            ic(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            ic(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function oc(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function ni(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = oc(Object(f), !0)).call(n, function(g) {
                    Af(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = oc(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function Af(i, e, n) {
            return (e = Lf(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function Lf(i) {
            var e = Po(i, "string");
            return ti(e) == "symbol" ? e : e + ""
        }
        function Po(i, e) {
            if (ti(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (ti(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        var eh = Zt.livevideoApi.getParticipants
            , Nf = Zt.engagementApi.saveCrmIdRequest;
        const Mf = {
            data: function() {
                return {
                    allRunningTasks: {}
                }
            },
            computed: ni(ni(ni(ni(ni({}, (0,
                zt.mapState)("cti", ["isPopOut"])), (0,
                zt.mapState)("crm", ["autoCloseTask"])), (0,
                zt.mapGetters)("sessionPanels", ["activeTasks", "currentActiveTask"])), (0,
                zt.mapGetters)({
                nacosConfig: "nacosConfig"
            })), {}, {
                currTaskEventType: function() {
                    var e;
                    return this === null || this === void 0 || (e = this.currentActiveTask) === null || e === void 0 ? void 0 : e.eventType
                },
                isAcceptedTask: function() {
                    var e = ["accepted", "v.accepted", "sms.accepted", "chat.accepted"];
                    return M()(e).call(e, (this === null || this === void 0 ? void 0 : this.currTaskEventType) || "")
                },
                isWrapup: function() {
                    var e, n = M()(e = ["call.ended", "v.ended", "sms.ended", "chat.ended"]).call(e, this.currTaskEventType);
                    return n
                }
            }),
            watch: {
                autoCloseTask: {
                    handler: function(e, n) {
                        e && n && e.engagementId && e.taskId && !this.allRunningTasks[e.taskId] && this.runAutoCloseTask(e)
                    }
                },
                isAcceptedTask: function(e) {
                    (0,
                        Bn.getCRM)() === Dt.CRMS.MsDynamics && e && ((0,
                        Vr.MSDLogger)("[crm-mixin] isAcceptedTask change createPhoneCallLog trigger"),
                        this.createPhoneCallLog())
                },
                isWrapup: function(e) {
                    (0,
                        Bn.getCRM)() === Dt.CRMS.MsDynamics && e && ((0,
                        Vr.MSDLogger)("[crm-mixin] isWrapup change autoCreateCase trigger"),
                        this.autoCreateCase())
                },
                isPopOut: {
                    handler: function() {
                        this.setSoftphonePanelVisibility()
                    }
                }
            },
            methods: ni(ni({}, (0,
                zt.mapActions)("crm", ["autoCloseActiveTask"])), {}, {
                createPhoneCallLog: function() {
                    var e = this;
                    return Fi(ua().mark(function n() {
                        var l;
                        return ua().wrap(function(g) {
                            for (; ; )
                                switch (g.prev = g.next) {
                                    case 0:
                                        return g.next = 2,
                                            (0,
                                                xa.getCRMInstance)();
                                    case 2:
                                        l = g.sent,
                                        l != null && l.createPhoneCallLog && l.createPhoneCallLog(e.currentActiveTask);
                                    case 4:
                                    case "end":
                                        return g.stop()
                                }
                        }, n)
                    }))()
                },
                autoCreateCase: function() {
                    return Fi(ua().mark(function e() {
                        var n;
                        return ua().wrap(function(f) {
                            for (; ; )
                                switch (f.prev = f.next) {
                                    case 0:
                                        return f.next = 2,
                                            (0,
                                                xa.getCRMInstance)();
                                    case 2:
                                        n = f.sent,
                                        n != null && n.autoCreateCase && n.autoCreateCase();
                                    case 4:
                                    case "end":
                                        return f.stop()
                                }
                        }, e)
                    }))()
                },
                setSoftphonePanelVisibility: function() {
                    var e = this;
                    return Fi(ua().mark(function n() {
                        var l, f, g, I, T, A;
                        return ua().wrap(function(re) {
                            for (; ; )
                                switch (re.prev = re.next) {
                                    case 0:
                                        return l = (0,
                                            Bn.getCRM)(),
                                            re.next = 3,
                                            (0,
                                                xa.getCRMInstance)();
                                    case 3:
                                        f = re.sent,
                                            g = (0,
                                                U.isInCoreTab)(),
                                            I = (0,
                                                Bn.getGlobalSettingConfiguration)() || {},
                                            T = I.enableCTIPopout,
                                            A = T === void 0 ? !1 : T,
                                            A && l === Dt.CRMS.Salesforce && f !== null && f !== void 0 && f.client && !g ? e.setSoftphonePanelVisibility = function() {
                                                    e.isPopOut ? f.client.setSoftphonePanelVisibility(!1) : f.client.setSoftphonePanelVisibility(!0)
                                                }
                                                : e.setSoftphonePanelVisibility = function() {}
                                            ,
                                            e.setSoftphonePanelVisibility();
                                    case 8:
                                    case "end":
                                        return re.stop()
                                }
                        }, n)
                    }))()
                },
                saveCrmId: function(e) {
                    var n = this;
                    return Fi(ua().mark(function l() {
                        var f, g, I, T, A, N, re;
                        return ua().wrap(function(ke) {
                            for (; ; )
                                switch (ke.prev = ke.next) {
                                    case 0:
                                        if (f = (0,
                                            Bn.getSelectedUserId)(e.engagementId),
                                            f) {
                                            ke.next = 3;
                                            break
                                        }
                                        return ke.abrupt("return");
                                    case 3:
                                        if (g = e.tkType,
                                            I = e && e[U.LINK_CONTACT_PARAMS[g].enterId] || "",
                                        g !== "video") {
                                            ke.next = 15;
                                            break
                                        }
                                        if (T = e.customerEnterId,
                                            !T) {
                                            ke.next = 11;
                                            break
                                        }
                                        ke.t0 = T,
                                            ke.next = 14;
                                        break;
                                    case 11:
                                        return ke.next = 13,
                                            n.getCustomerEnterId();
                                    case 13:
                                        ke.t0 = ke.sent;
                                    case 14:
                                        I = ke.t0;
                                    case 15:
                                        return ke.next = 17,
                                            (0,
                                                U.tryApiCatch)(Nf, {
                                                channelType: g,
                                                crmId: f,
                                                enterId: I,
                                                sessionId: e[U.LINK_CONTACT_PARAMS[g].sessionId] || ""
                                            });
                                    case 17:
                                        A = ke.sent,
                                            N = rc(A, 1),
                                            re = N[0],
                                        re && n.$message.error(re);
                                    case 21:
                                    case "end":
                                        return ke.stop()
                                }
                        }, l)
                    }))()
                },
                getCustomerEnterId: function(e) {
                    return Fi(ua().mark(function n() {
                        var l, f, g, I, T, A;
                        return ua().wrap(function(re) {
                            for (; ; )
                                switch (re.prev = re.next) {
                                    case 0:
                                        return re.next = 2,
                                            (0,
                                                U.tryApiCatch)(eh, e);
                                    case 2:
                                        if (l = re.sent,
                                            f = rc(l, 2),
                                            g = f[0],
                                            I = f[1],
                                            g) {
                                            re.next = 9;
                                            break
                                        }
                                        return A = ((T = D()(I).call(I, function(fe) {
                                            return fe.type == 2
                                        })) === null || T === void 0 ? void 0 : T.enterId) || "",
                                            re.abrupt("return", A);
                                    case 9:
                                        return re.abrupt("return", "");
                                    case 10:
                                    case "end":
                                        return re.stop()
                                }
                        }, n)
                    }))()
                },
                runAutoCloseTask: function(e) {
                    var n = this;
                    return Fi(ua().mark(function l() {
                        var f, g, I, T, A, N, re, fe, ke, Ht, vt;
                        return ua().wrap(function(he) {
                            for (; ; )
                                switch (he.prev = he.next) {
                                    case 0:
                                        if (!(0,
                                            U.isInCoreTab)()) {
                                            he.next = 2;
                                            break
                                        }
                                        return he.abrupt("return");
                                    case 2:
                                        if (f = e || {},
                                            g = f.engagementId,
                                            I = f.businessId,
                                            T = f.taskId,
                                            !n.allRunningTasks[T]) {
                                            he.next = 5;
                                            break
                                        }
                                        return he.abrupt("return");
                                    case 5:
                                        if (n.allRunningTasks[T] = !0,
                                            A = {
                                                name: "runAutoCloseTask.start",
                                                taskId: T,
                                                businessId: I,
                                                engagementId: g
                                            },
                                            U.monitor.dispatchMonitor(A, "CRM.MIXINS"),
                                            N = document.visibilityState === "visible",
                                            n.saveCrmId(e),
                                            (0,
                                                Vi.isLockExist)(g)) {
                                            he.next = 18;
                                            break
                                        }
                                        if (!N) {
                                            he.next = 16;
                                            break
                                        }
                                        fe = (0,
                                            Vi.acquireLock)(g),
                                            re = fe[0],
                                            he.next = 18;
                                        break;
                                    case 16:
                                        return he.next = 18,
                                            (0,
                                                U.sleep)(100);
                                    case 18:
                                        if ((0,
                                            Vi.isLockExist)(g) || (ke = (0,
                                            Vi.acquireLock)(g),
                                            re = ke[0]),
                                            !(re || (0,
                                                Vi.isLockCreatorTab)(g))) {
                                            he.next = 32;
                                            break
                                        }
                                        return he.next = 22,
                                            (0,
                                                xa.getCRMInstance)();
                                    case 22:
                                        if (Ht = he.sent,
                                            !(e && Ht && Ht.processWrapup)) {
                                            he.next = 31;
                                            break
                                        }
                                        return vt = Ht.processWrapup,
                                            he.next = 27,
                                            vt(e);
                                    case 27:
                                        n.autoCloseActiveTask({}),
                                            k()(function() {
                                                n.allRunningTasks[T] = !1
                                            }, 60 * 1e3),
                                            A.name = "runAutoCloseTask.end",
                                            U.monitor.dispatchMonitor(A, "CRM.MIXINS");
                                    case 31:
                                        (0,
                                            Vi.delayReleaseLock)(g);
                                    case 32:
                                    case "end":
                                        return he.stop()
                                }
                        }, l)
                    }))()
                }
            })
        };
        var Pf = a(6826)
            , wi = a.n(Pf)
            , kf = a(89662)
            , Es = a(44301)
            , Is = a(91635)
            , Of = a(95924)
            , xf = a(84795)
            , Wi = a(20125);
        function la(i) {
            "@babel/helpers - typeof";
            return la = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                la(i)
        }
        function ko(i) {
            return lc(i) || Ti(i) || sc(i) || Ba()
        }
        function Ba() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function sc(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return ws(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? ws(i, e) : void 0
            }
        }
        function Ti(i) {
            if (typeof ve() < "u" && Re()(i) != null || i["@@iterator"] != null)
                return An()(i)
        }
        function lc(i) {
            if (rr()(i))
                return ws(i)
        }
        function ws(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function Ia() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Ia = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && la(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(la(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function cc(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function Si(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            cc(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            cc(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function uc(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function da(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = uc(Object(f), !0)).call(n, function(g) {
                    Df(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = uc(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function Df(i, e, n) {
            return (e = u(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function u(i) {
            var e = t(i, "string");
            return la(e) == "symbol" ? e : e + ""
        }
        function t(i, e) {
            if (la(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (la(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        var s = U.phoneUtils.openNewTab
            , h = U.phoneUtils.getOpenTabNums
            , b = U.phoneUtils.leaveRemoveTab
            , S = U.phoneUtils.SubBroadcastHandler
            , B = U.phoneUtils.SUB_EVENT_LIST
            , se = U.phoneUtils.SUB_EVENT_LIST_FOR_PAGE
            , Z = U.phoneUtils.CORE_EVENT_LIST
            , oe = U.phoneUtils.SYNC_LOCALSTORAGE_KEYS
            , Wt = U.phoneUtils.WebPhone
            , $t = U.inboxConstant.ZPNS_VM_NOTIFICATIONS_NAME;
        const Yn = {
            mixins: [Nn.A, xf.A],
            computed: da(da(da(da(da({
                openedCoreTab: function() {
                    return this.enableCoreVoiceTab && this.coreTabReady
                }
            }, (0,
                zt.mapGetters)({
                nacosConfig: "nacosConfig"
            })), (0,
                zt.mapGetters)("device", ["speakerId", "microphoneId"])), (0,
                zt.mapGetters)("cti", ["isPopOut"])), (0,
                zt.mapState)("crm", ["globalSettingConfiguration"])), {}, {
                isInCoreTab: function() {
                    return (0,
                        U.isInCoreTab)()
                },
                showMergeWindow: function() {
                    return this.isPopOut && !this.isInCoreTab
                },
                enablePopOut: function() {
                    var e;
                    return this.nacosConfig.disableCTIPopOutFeature !== "true" && this.enableCoreVoiceTab && ((e = this.globalSettingConfiguration) === null || e === void 0 ? void 0 : e.enableCTIPopout)
                },
                enableNewZpns: function() {
                    return this.nacosConfig.disableNewZpns !== "true"
                }
            }),
            watch: {
                isPopOut: function(e) {
                    var n = this;
                    return Si(Ia().mark(function l() {
                        var f, g, I;
                        return Ia().wrap(function(A) {
                            for (; ; )
                                switch (A.prev = A.next) {
                                    case 0:
                                        if (!(n.enablePopOut && !n.isInCoreTab)) {
                                            A.next = 7;
                                            break
                                        }
                                        return A.next = 3,
                                            (0,
                                                xa.getCRMInstance)();
                                    case 3:
                                        if (f = A.sent,
                                            f) {
                                            A.next = 6;
                                            break
                                        }
                                        return A.abrupt("return");
                                    case 6:
                                        e ? f.resize(530, 190) : (g = localStorage.getItem("panelSize"),
                                            I = localStorage.getItem("panelWidth"),
                                            f.setSize(g, +I));
                                    case 7:
                                    case "end":
                                        return A.stop()
                                }
                        }, l)
                    }))()
                }
            },
            data: function() {
                return {
                    worker: null,
                    workerClient: null,
                    zpns: {},
                    zpnsWs: "",
                    zpnsJwtToken: "",
                    zpnsResourceId: "",
                    phoneInstance: null,
                    channelInstance: null,
                    enableCoreVoiceTab: !1,
                    tabId: "",
                    coreTabReady: !1,
                    isZpnsConnecting: !1,
                    zpnsStatus: "",
                    refreshTokenTimer: void 0,
                    openTab: null,
                    validationRefreshTokenTimer: void 0,
                    thirdPartyNotify: null,
                    extensionNotify: null
                }
            },
            methods: da(da(da(da(da(da(da(da(da(da(da(da(da(da(da(da({}, (0,
                zt.mapActions)("coreVoice", ["initVoiceStore", "resetState", "destroyStorePhone", "onPstnOutboundSettingsChange"])), (0,
                zt.mapActions)("device", ["updateDeviceList"])), (0,
                zt.mapActions)(["setUserInfoByZpns"])), (0,
                zt.mapActions)("monitor", ["recordMonitorAction"])), (0,
                zt.mapMutations)("coreVoice", ["updateShowPhoneAlert", "updateStateFromCoreTab", "updatePhoneDisconnected", "updatePhoneDisconnectReason", "updatePhoneContainerLoading", "updateCoreTabStatus"])), (0,
                zt.mapMutations)(["appUpdateStateFromCoreTab"])), (0,
                zt.mapMutations)("sessionPanels", ["sessionPanelsUpdateStateFromCoreTab"])), (0,
                zt.mapMutations)("CrmStatus", ["CrmStatusUpdateStateFromCoreTab"])), (0,
                zt.mapMutations)("CrmRecent", ["CrmRecentUpdateStateFromCoreTab"])), (0,
                zt.mapMutations)("livechat", ["livechatUpdateStateFromCoreTab"])), (0,
                zt.mapMutations)("cti", ["ctiUpdateStateFromCoreTab"])), (0,
                zt.mapMutations)("crm", ["crmUpdateStateFromCoreTab"])), (0,
                zt.mapMutations)("CrmChatTask", ["CrmChatTaskUpdateStateFromCoreTab"])), (0,
                zt.mapMutations)("CrmCommonModule", ["CrmCommonModuleUpdateStateFromCoreTab"])), (0,
                zt.mapActions)("device", ["deviceUpdateStateFromCoreTab"])), {}, {
                handleFocusCoreTab: function(e) {
                    var n;
                    if (!(e && e.tabId !== this.tabId))
                        if (this.openTab && !((n = this.openTab) !== null && n !== void 0 && n.closed)) {
                            var l, f;
                            (l = this.openTab) === null || l === void 0 || (f = l.focus) === null || f === void 0 || f.call(l)
                        } else {
                            var g, I = ko(((g = this.channelInstance) === null || g === void 0 || (g = g.tabMap) === null || g === void 0 ? void 0 : wi()(g).call(g)) || []), T = D()(I).call(I, function(N) {
                                return N.opener
                            });
                            if (T) {
                                var A;
                                (A = this.channelInstance) === null || A === void 0 || A.sendMessageToSub({
                                    eventType: B.FOCUS_CORE_TAB,
                                    data: {
                                        tabId: T.tabId
                                    }
                                })
                            }
                        }
                },
                rewriteLocalStorage: function() {
                    var e, n = this;
                    if ((e = window) !== null && e !== void 0 && e.zoom_zcc_chrome_extension) {
                        var l = localStorage.setItem;
                        localStorage.setItem = function(f, g) {
                            if (f !== "vuex") {
                                var I;
                                (I = n.channelInstance) === null || I === void 0 || I.sendMessageToCore({
                                    eventType: Z.SYNC_LOCALSTORAGE,
                                    data: {
                                        storages: [{
                                            key: f,
                                            value: g
                                        }]
                                    }
                                })
                            }
                            l.call(localStorage, f, g)
                        }
                    }
                },
                initBroadCast: function(e) {
                    console.log("initBroadCast", e),
                    this.enableCoreVoiceTab && e && (this.tabId = "zcc-voice-tab-".concat((0,
                        Es.A)()),
                        this.channelInstance = new S({
                            tabId: this.tabId,
                            userId: e,
                            enablePopOut: this.isInCoreTab
                        }),
                    this.isInCoreTab || s(e),
                        this.handleBindBroadCastEvents(),
                        this.bindLeaveEvent(),
                    window.__subBroadcast__ || (window.__subBroadcast__ = this.channelInstance),
                    this.enablePopOut && !this.isInCoreTab && (0,
                        Of.handleBindProxyAdapter)())
                },
                handleCheckCoreTabReay: function() {
                    var e = this;
                    return new (O())(function(n) {
                            var l, f = function() {
                                clearTimeout(g),
                                    n(e.coreTabReady)
                            };
                            (l = e.channelInstance) === null || l === void 0 || l.once(B.CORE_TAB_READY, f);
                            var g = k()(function() {
                                n(e.coreTabReady)
                            }, 2e3)
                        }
                    )
                },
                handleCheckCoreTabStatus: function() {
                    var e = this;
                    return new (O())(function(n, l) {
                            var f, g;
                            (f = e.channelInstance) === null || f === void 0 || f.sendMessageToCore({
                                eventType: B.CHECK_CORE_TAB_STATUS
                            });
                            var I = function(A) {
                                n(A)
                            };
                            (g = e.channelInstance) === null || g === void 0 || g.once(B.CHECK_CORE_TAB_STATUS, I),
                                k()(function() {
                                    l("check core tab status timeout")
                                }, 1e3)
                        }
                    )
                },
                handleOpenCoreTab: function(e) {
                    var n = this;
                    return new (O())(function(l, f) {
                            var g, I, T = e || ((g = n.userInfo) === null || g === void 0 ? void 0 : g.id);
                            if (!n.enableCoreVoiceTab) {
                                n.destoryBroadCast(T),
                                    l();
                                return
                            }
                            var A = localStorage.getItem("opening_core_tab_".concat(T));
                            if (n.coreTabReady) {
                                l();
                                return
                            }
                            var N = k()(function() {
                                if (U.monitor.dispatchMonitor({
                                    name: "[SubTab]: open core tab timeout",
                                    traceId: n.tabId
                                }),
                                    n.thirdPartyNotify)
                                    try {
                                        var hr, c;
                                        (hr = n.thirdPartyNotify) === null || hr === void 0 || (c = hr.close) === null || c === void 0 || c.call(hr),
                                            n.thirdPartyNotify = null
                                    } catch (r) {
                                        console.log(r)
                                    }
                                n.thirdPartyNotify = n.chatNotify(n.$t("cci.home.multiTab.disable.tip3"), "", {
                                    text: n.$t("cci.home.multiTab.disable.tip4"),
                                    callback: function() {
                                        window.open("https://chromewebstore.google.com/detail/zoom-contact-center-cti-e/injnkmmecojnjiiojgfgonihjpejklik", "_blank")
                                    }
                                }, -1),
                                    f(new Error("init core tab time out"))
                            }, 2e4);
                            if (!A) {
                                var re, fe, ke, Ht, vt, Me, he, sn;
                                localStorage.setItem("opening_core_tab_".concat(T), 1),
                                    U.monitor.dispatchMonitor({
                                        name: "[SubTab]: open core tab",
                                        traceId: n.tabId
                                    });
                                var ln = location
                                    , lt = ln.protocol
                                    , Tn = ln.host
                                    , Wn = "/cci/callbar/crm"
                                    , Dn = n.enablePopOut ? 640 : 540
                                    , xt = n.enablePopOut ? 640 : 540
                                    , Nr = ((re = window.ContactConfig) === null || re === void 0 || (re = re.CciConfig) === null || re === void 0 ? void 0 : re.nacos) || {}
                                    , xn = (0,
                                    nc.FE)(Nr)
                                    , wr = oa()(fe = oa()(ke = "".concat(lt, "//")).call(ke, Tn)).call(fe, Wn, "#/coreTab");
                                if (xn) {
                                    var Dr, Fr;
                                    wr = oa()(Dr = oa()(Fr = "".concat(lt, "//")).call(Fr, Tn)).call(Dr, Wn, "/coreTab")
                                }
                                var fr = window.open(oa()(Ht = oa()(vt = oa()(Me = oa()(he = "".concat(wr, "?tabId=")).call(he, n.tabId, "&userId=")).call(Me, T)).call(vt, n.enablePopOut ? "&enablePopOut=1" : "", "&crmPlatform=")).call(Ht, (0,
                                    Bn.getCRM)()), "_blank", oa()(sn = "width=".concat(Dn, ",height=")).call(sn, xt, ",top=1800,left=1800,location=no"));
                                n.openTab = fr,
                                fr || (U.monitor.dispatchMonitor({
                                    name: "[SubTab]: open core tab no permission",
                                    traceId: n.tabId
                                }),
                                    n.chatNotify(n.$t("cci.home.multiTab.disable.tip2"), "", {
                                        text: n.$t("cci.client.error.button"),
                                        callback: function() {
                                            location.reload()
                                        }
                                    }, -1),
                                    clearTimeout(N),
                                    f(new Error("init core no permission")))
                            }
                            var yr = function() {
                                clearTimeout(N),
                                    localStorage.removeItem("opening_core_tab_".concat(T)),
                                    l(n.coreTabReady)
                            };
                            (I = n.channelInstance) === null || I === void 0 || I.once(B.CORE_TAB_READY, yr)
                        }
                    )
                },
                handleVisibilityChange: function() {
                    var e, n, l = !1;
                    document.visibilityState === "visible" && (l = !0),
                    (e = this.channelInstance) === null || e === void 0 || e.handleSubVisibleChange({
                        tabId: this.tabId,
                        visible: l
                    }),
                    (n = this.channelInstance) === null || n === void 0 || n.sendMessageToSub({
                        eventType: Z.SUB_VISIBLE_CHANGE,
                        data: {
                            tabId: this.tabId,
                            visible: l
                        }
                    })
                },
                handleBindFocusCoreTab: function() {
                    var e, n = this;
                    (e = this.channelInstance) === null || e === void 0 || e.on(B.FOCUS_CORE_TAB, function(l) {
                        n.handleFocusCoreTab(l)
                    })
                },
                handleBindBroadCastEvents: function() {
                    var e, n = this, l, f, g, I, T, A, N;
                    document.addEventListener("visibilitychange", this.handleVisibilityChange),
                        this.handleBindFocusCoreTab(),
                    (e = this.channelInstance) === null || e === void 0 || e.on(B.CORE_TAB_READY, function(re) {
                        if (n.coreTabReady = !0,
                        !n.isInCoreTab && !re.isNewTabEnter) {
                            var fe, ke = [];
                            Ce()(oe).call(oe, function(he) {
                                ke.push({
                                    key: he,
                                    value: localStorage.getItem(he)
                                })
                            }),
                            (fe = n.channelInstance) === null || fe === void 0 || fe.sendMessageToCore({
                                eventType: Z.SYNC_LOCALSTORAGE,
                                data: {
                                    storages: ke
                                }
                            })
                        }
                        if (U.monitor.dispatchMonitor({
                            name: "[SubTab]: core tab ready",
                            traceId: n.tabId,
                            message: {
                                isNewTabEnter: re?.isNewTabEnter
                            }
                        }),
                        (!(re != null && re.isNewTabEnter) || re != null && re.needInit) && (n.handleInit(n.initData),
                            n.handleInitStore(),
                            window.zoom_zcc_chrome_extension)) {
                            var Ht;
                            (Ht = n.channelInstance) === null || Ht === void 0 || Ht.sendMessageToCore({
                                eventType: Z.REFRESH_TOKEN,
                                data: {
                                    token: U.ZCache.getToken() || localStorage.getItem("CCI_THIRD_TOKEN"),
                                    zAid: U.ZCache.getAid() || localStorage.getItem("CCI_THIRD_AID"),
                                    zHaid: U.ZCache.getHaid() || localStorage.getItem("CCI_THIRD_HAID"),
                                    clusterId: U.ZCache.getClusterId() || localStorage.getItem("CCI_THIRD_CLUSTER_ID"),
                                    refreshToken: U.ZCache.getRefreshToken() || localStorage.getItem("CCI_REFESH_TOKEN")
                                }
                            })
                        }
                        if (re.state) {
                            var vt, Me;
                            n.updateStateFromCoreTabForPage(re.state),
                                n.updateStateFromCoreTab(re == null || (vt = re.state) === null || vt === void 0 ? void 0 : vt.voiceState),
                                n.appUpdateStateFromCoreTab(re == null || (Me = re.state) === null || Me === void 0 ? void 0 : Me.app)
                        }
                        n.rewriteLocalStorage()
                    }),
                        this.createListenerForPages(),
                    (l = this.channelInstance) === null || l === void 0 || l.on(B.APP, function(re) {
                        n.appUpdateStateFromCoreTab(re)
                    }),
                    (f = this.channelInstance) === null || f === void 0 || f.on(B.VOICE_STATE_CHANGE, function(re) {
                        n.updateStateFromCoreTab(re)
                    }),
                    (g = this.channelInstance) === null || g === void 0 || g.on(B.CORE_TAB_LEAVE, function() {
                        var re = Si(Ia().mark(function fe(ke) {
                            var Ht, vt;
                            return Ia().wrap(function(he) {
                                for (; ; )
                                    switch (he.prev = he.next) {
                                        case 0:
                                            if (console.log("CORE_TAB_LEAVE", ke),
                                                Ht = ke || {},
                                                vt = Ht.isAutoClose,
                                                U.monitor.dispatchMonitor({
                                                    name: "[SubTab]: core tab leave",
                                                    traceId: n.tabId,
                                                    message: {
                                                        tabId: ke.tabId,
                                                        isAutoClose: vt
                                                    }
                                                }),
                                                !vt) {
                                                he.next = 5;
                                                break
                                            }
                                            return he.abrupt("return");
                                        case 5:
                                            return he.prev = 5,
                                                he.next = 8,
                                                n.handleCheckCoreTabStatus();
                                        case 8:
                                            return he.abrupt("return");
                                        case 11:
                                            he.prev = 11,
                                                he.t0 = he.catch(5),
                                                console.log(he.t0);
                                        case 14:
                                            n.resetState({
                                                onlySyncLocal: !0
                                            }),
                                                n.updateCoreTabStatus(Mn.CORE_TAB_STATUS.NOT_READY),
                                                localStorage.removeItem("opening_core_tab_".concat(n.userInfo.id)),
                                                n.coreTabReady = !1,
                                            ke.tabId === n.tabId && k()(function() {
                                                console.log("CORE_TAB_LEAVE reopen core tab", n.coreTabReady),
                                                n.coreTabReady || n.handleOpenCoreTab()
                                            }, 5e3);
                                        case 19:
                                        case "end":
                                            return he.stop()
                                    }
                            }, fe, null, [[5, 11]])
                        }));
                        return function(fe) {
                            return re.apply(this, arguments)
                        }
                    }()),
                    (I = this.channelInstance) === null || I === void 0 || I.on(B.CORE_TAB_DEACTIVE, function(re) {
                        console.log("CORE_TAB_DEACTIVE", re),
                            n.coreTabReady = !1,
                            U.monitor.dispatchMonitor({
                                name: "[SubTab]: core tab deactive",
                                traceId: n.tabId,
                                message: {
                                    tabId: re.tabId
                                }
                            }),
                        re?.tabId === n.tabId && (n.chatNotify(n.$t("cci.home.multiTab.reopenCoreTab"), "", {}, 5e3),
                            n.handleOpenCoreTab())
                    }),
                    (T = this.channelInstance) === null || T === void 0 || T.on(B.CORE_ZPNS_ERROR, function(re) {
                        console.log("CORE_ZPNS_ERROR", re),
                            n.coreWorkerEmitError = re.workerEmitError
                    }),
                    (A = this.channelInstance) === null || A === void 0 || A.on(B.UI_NOTIFY, function(re) {
                        n.handleErrorFn(re)
                    }),
                    (N = this.channelInstance) === null || N === void 0 || N.on(B.EXTENSION_UNLOAD, function() {
                        if (n.extensionNotify)
                            try {
                                var re, fe;
                                (re = n.extensionNotify) === null || re === void 0 || (fe = re.close) === null || fe === void 0 || fe.call(re),
                                    n.extensionNotify = null
                            } catch (ke) {
                                console.log(ke)
                            }
                        n.extensionNotify = n.chatNotify(n.$t("cci.home.multiTab.extension.disable"), "", {
                            text: n.$t("cci.client.error.button"),
                            callback: function() {
                                location.reload()
                            }
                        }, -1),
                            n.resetState({
                                onlySyncLocal: !0
                            }),
                            window.__subBroadcast__ = null
                    })
                },
                handleErrorFn: function(e) {
                    var n = e.showClose
                        , l = n === void 0 ? !1 : n;
                    if (e?.type === "error")
                        this.showCallError(e?.detail, l);
                    else if (e?.type === "warn") {
                        var f, g, I;
                        this.$message.warning((e == null || (f = e.detail) === null || f === void 0 ? void 0 : f.message) || this.$t(e == null || (g = e.detail) === null || g === void 0 ? void 0 : g.i18nKey, da({}, (e == null || (I = e.detail) === null || I === void 0 ? void 0 : I.i18nParams) || [])))
                    } else if (e.type === "notify") {
                        var T;
                        if (e != null && (T = e.detail) !== null && T !== void 0 && T.i18nKey) {
                            var A, N, re, fe;
                            this.chatNotify.apply(this, oa()(A = [this.$t(e == null || (N = e.detail) === null || N === void 0 ? void 0 : N.i18nKey, da({}, (e == null || (re = e.detail) === null || re === void 0 ? void 0 : re.i18nParams) || []))]).call(A, ko((e == null || (fe = e.detail) === null || fe === void 0 ? void 0 : fe.args) || [])))
                        } else {
                            var ke;
                            this.chatNotify.apply(this, ko((e == null || (ke = e.detail) === null || ke === void 0 ? void 0 : ke.args) || []))
                        }
                    } else if (e.type === "success") {
                        var Ht, vt, Me;
                        this.$message.success((e == null || (Ht = e.detail) === null || Ht === void 0 ? void 0 : Ht.message) || this.$t(e == null || (vt = e.detail) === null || vt === void 0 ? void 0 : vt.i18nKey, da({}, (e == null || (Me = e.detail) === null || Me === void 0 ? void 0 : Me.i18nParams) || [])))
                    }
                },
                onZpnsConnect: function() {
                    var e = this;
                    return Si(Ia().mark(function n() {
                        var l, f, g;
                        return Ia().wrap(function(T) {
                            for (; ; )
                                switch (T.prev = T.next) {
                                    case 0:
                                        if (!e.isZpnsConnecting) {
                                            T.next = 4;
                                            break
                                        }
                                        return e.workerEmitError = "25",
                                            e.isZpnsConnecting = !1,
                                            T.abrupt("return");
                                    case 4:
                                        return e.isZpnsConnecting = !0,
                                            T.prev = 5,
                                            console.log("onZpnsConnect called in init.mixin"),
                                            T.next = 9,
                                            (0,
                                                Wi.refeshCrmTokenWithRefreshToken)();
                                    case 9:
                                        return T.next = 11,
                                            (0,
                                                on.getUserInfo)();
                                    case 11:
                                        l = T.sent,
                                            f = l.data,
                                            g = f.result.zpnsJwtToken,
                                            e.zpnsJwtToken = g,
                                            e.zpns.reconnect({
                                                auth: {
                                                    token: g
                                                },
                                                type: "onZpnsConnect"
                                            }),
                                            T.next = 22;
                                        break;
                                    case 18:
                                        T.prev = 18,
                                            T.t0 = T.catch(5),
                                            e.isZpnsConnecting = !1,
                                            e.workerEmitError = "26";
                                    case 22:
                                    case "end":
                                        return T.stop()
                                }
                        }, n, null, [[5, 18]])
                    }))()
                },
                zpnsHanldeMessage: function() {
                    var e = this;
                    this.zpns.on("message", function() {
                        var n = Si(Ia().mark(function l(f) {
                            var g, I, T, A, N, re, fe, ke, Ht;
                            return Ia().wrap(function(Me) {
                                for (; ; )
                                    switch (Me.prev = Me.next) {
                                        case 0:
                                            if (g = f.name,
                                                I = f.content,
                                            g !== "cci/agent/status") {
                                                Me.next = 5;
                                                break
                                            }
                                            I.type === "will-offline" && (console.log("will-offline msg", I.timestamp),
                                                He().catch(function(he) {
                                                    console.log(he)
                                                })),
                                                Me.next = 38;
                                            break;
                                        case 5:
                                            if (g !== "cci/sn/interaction/create") {
                                                Me.next = 13;
                                                break
                                            }
                                            return (0,
                                                Vr.ServiceNowLogger)("Interaction Event", g, {
                                                content: I
                                            }),
                                                Me.next = 9,
                                                Is.ServiceNowAdapter.getInstance();
                                        case 9:
                                            T = Me.sent,
                                                T?.updateInteractionData(I),
                                                Me.next = 38;
                                            break;
                                        case 13:
                                            if (g !== "cci/sn/user/popup") {
                                                Me.next = 21;
                                                break
                                            }
                                            return (0,
                                                Vr.ServiceNowLogger)("user popup event ", g, {
                                                content: I
                                            }),
                                                Me.next = 17,
                                                Is.ServiceNowAdapter.getInstance();
                                        case 17:
                                            A = Me.sent,
                                                A?.updatePopupCreateData(I),
                                                Me.next = 38;
                                            break;
                                        case 21:
                                            if (g !== "cci/sn/case/popup") {
                                                Me.next = 29;
                                                break
                                            }
                                            return (0,
                                                Vr.ServiceNowLogger)("case popup event ", g, {
                                                content: I
                                            }),
                                                Me.next = 25,
                                                Is.ServiceNowAdapter.getInstance();
                                        case 25:
                                            N = Me.sent,
                                                N?.processTicketCreationFormScreenpop(I),
                                                Me.next = 38;
                                            break;
                                        case 29:
                                            if (g !== $t) {
                                                Me.next = 37;
                                                break
                                            }
                                            if (re = e.menuTab === e.eMenuName.inbox,
                                                !(!e.enableVoicemailManagement || re)) {
                                                Me.next = 33;
                                                break
                                            }
                                            return Me.abrupt("return");
                                        case 33:
                                            fe = I.updateVmStatistics,
                                                ke = fe === void 0 ? !1 : fe,
                                            ke && e.zpnsVoicemailHandler(),
                                                Me.next = 38;
                                            break;
                                        case 37:
                                            g === "cci/me/opSetting/update" ? !e.openedCoreTab && e.nacosConfig.enableNewCallerIdSelectorForCTI === "true" && (e.setUserInfoByZpns(I),
                                            (Ht = e.setCallerIdFromZPNS) === null || Ht === void 0 || Ht.call(e, I),
                                                e.updateFeatureListFromZPNS(I)) : g === "cci/task/done" ? (k()(function() {
                                                e.refreshRecentList = !0,
                                                    e.$nextTick(function() {
                                                        e.refreshRecentList = !1
                                                    })
                                            }, 1e4),
                                                e.recordMonitorAction({
                                                    key: U.eMonitorKeys.zpnsReceiveCCITaskDone,
                                                    val: Zi()({
                                                        ts: ee()(),
                                                        engagementId: I?.engagementId,
                                                        taskId: I?.taskId,
                                                        taskDoneType: I?.taskDoneType
                                                    })
                                                })) : g === "cci/pstn/outbound" && e.onPstnOutboundSettingsChange(I);
                                        case 38:
                                        case "end":
                                            return Me.stop()
                                    }
                            }, l)
                        }));
                        return function(l) {
                            return n.apply(this, arguments)
                        }
                    }())
                },
                initZpns: function(e) {
                    var n = e.zpnsWs
                        , l = e.zpnsJwtToken
                        , f = e.userInfo
                        , g = e.account
                        , I = e.userStatus
                        , T = e.instanceId
                        , A = e.clientVersion
                        , N = e.zpnsExtra;
                    if (this.openedCoreTab)
                        try {
                            var re = JSON.parse(N);
                            re.instanceId = "",
                                N = Zi()(re)
                        } catch (ke) {
                            console.error(ke)
                        }
                    this.zpnsResourceId = "zm-crm-CCI-".concat((0,
                        Es.A)());
                    var fe = (0,
                        U.zpns)(n, {
                        token: l,
                        user: f.id,
                        account: g.parentAccountId,
                        option: U.ZpnsOption.CCI_LOGOUT_CALLBACK + U.ZpnsOption.ENABLE_PERSISTENT_EVENT,
                        mail: f.mail,
                        resource: this.zpnsResourceId,
                        extra: N
                    }, this.enableNewZpns ? kf.default : null);
                    this.setupWorker({
                        id: f.id,
                        ws: fe,
                        accountId: g.id,
                        workspaceId: g.workspaceSid,
                        userStatus: I,
                        instanceId: T,
                        clientVersion: A
                    }),
                        this.zpns = fe,
                        this.zpnsHanldeMessage(),
                        this.zpns.on("log", U.onZPNSError),
                        this.zpns.on("timeout", U.onZpnsTimeout),
                        this.zpns.on("disconnect", U.onZpnsDisconnect)
                },
                coreZPNSReconnect: function() {
                    var e, n, l, f, g, I;
                    console.log("coreZPNSReconnect called"),
                    (e = this.channelInstance) === null || e === void 0 || e.sendMessageToCore({
                        eventType: Z.RECONNECT_ZPNS,
                        data: {
                            zpnsWs: this.zpnsWs,
                            zpnsJwtToken: this.zpnsJwtToken,
                            userStatus: this.status,
                            instanceId: this.instanceId,
                            userId: (n = this.userInfo) === null || n === void 0 ? void 0 : n.id,
                            meetingWebAccountId: (l = this.account) === null || l === void 0 ? void 0 : l.parentAccountId,
                            userEmail: (f = this.userInfo) === null || f === void 0 ? void 0 : f.mail,
                            accountId: (g = this.account) === null || g === void 0 ? void 0 : g.id,
                            zpnsExtra: this.zpnsExtra,
                            workspaceSid: (I = this.account) === null || I === void 0 ? void 0 : I.workspaceSid,
                            clientVersion: this.clientVersion,
                            enableNewZpns: this.enableNewZpns
                        }
                    })
                },
                getDeviceID: function() {
                    var e = localStorage.getItem(U.monitor.ZCC_DEVICE_ID);
                    if (e)
                        return e;
                    var n = "ZCC-DeviceID-".concat((0,
                        Es.A)());
                    return localStorage.setItem(U.monitor.ZCC_DEVICE_ID, n),
                        n
                },
                setupWorker: function(e) {
                    var n = this;
                    return Si(Ia().mark(function l() {
                        var f;
                        return Ia().wrap(function(I) {
                            for (; ; )
                                switch (I.prev = I.next) {
                                    case 0:
                                        f = new U.zpnsWorker(da({}, e)),
                                            f.on("ready", function(T) {
                                                console.log("RoutingEngine Worker: ".concat(T.id, " is ready")),
                                                    n.zpnsStatus = "ready",
                                                    n.worker = T
                                            }),
                                            f.on("connected", function() {
                                                var T = n.getDeviceID();
                                                U.monitor.dispatchMonitor({
                                                    name: "zpns connected",
                                                    deviceID: T,
                                                    traceId: n.zpnsResourceId
                                                }),
                                                    n.zpnsStatus = "connected",
                                                    n.workerEmitError = "",
                                                    n.isZpnsConnecting = !1,
                                                    console.log("RoutingEngine Worker: WebSocket has connected"),
                                                    Ct({
                                                        statusId: e.userStatus,
                                                        instanceId: e.instanceId,
                                                        clientVersion: e.clientVersion
                                                    }, {
                                                        resource: n.zpnsResourceId
                                                    })
                                            }),
                                            f.on("disconnected", function(T) {
                                                if (U.monitor.dispatchMonitor({
                                                    name: "zpns disconnected"
                                                }),
                                                    n.zpnsStatus = "disconnected",
                                                    console.error("RoutingEngine Worker: WebSocket has disconnected: ".concat(T)),
                                                    (0,
                                                        U.isInvalidToken)(T))
                                                    return n.onZpnsConnect();
                                                n.workerEmitError = T === "3507" ? "zpns-close-3507" : "zpns-close-".concat(T)
                                            }),
                                            f.on("zpnsError", function(T) {
                                                console.error("RoutingEngine Worker: WebSocket has error", T),
                                                    n.zpnsStatus = "error"
                                            }),
                                            f.on("token.expired", Si(Ia().mark(function T() {
                                                return Ia().wrap(function(N) {
                                                    for (; ; )
                                                        switch (N.prev = N.next) {
                                                            case 0:
                                                            case "end":
                                                                return N.stop()
                                                        }
                                                }, T)
                                            }))),
                                            n.workerClient = f;
                                    case 7:
                                    case "end":
                                        return I.stop()
                                }
                        }, l)
                    }))()
                },
                workerClientOffevents: function() {
                    var e = this;
                    this.workerClient && (this.workerClient.off("ready"),
                        this.workerClient.off("connected"),
                        this.workerClient.off("disconnected"),
                        this.workerClient.off("zpnsError"),
                        this.workerClient.off("token.expired"),
                        this.workerClient.cancelListenEvents(),
                        In().prototype.removeAllListeners.call(this.workerClient),
                        this.$nextTick(function() {
                            e.workerClient = null
                        }))
                },
                initPhone: function(e) {
                    var n = this;
                    return Si(Ia().mark(function l() {
                        var f, g, I, T, A, N;
                        return Ia().wrap(function(fe) {
                            for (; ; )
                                switch (fe.prev = fe.next) {
                                    case 0:
                                        if (n.updatePhoneContainerLoading(!0),
                                            n.updatePhoneDisconnected(!1),
                                            n.updateShowPhoneAlert(!1),
                                            n.updatePhoneDisconnectReason(0),
                                            fe.prev = 4,
                                            !((f = n.phoneInstance) !== null && f !== void 0 && f.connected)) {
                                            fe.next = 7;
                                            break
                                        }
                                        return fe.abrupt("return");
                                    case 7:
                                        if (n.phoneInstance === null) {
                                            fe.next = 12;
                                            break
                                        }
                                        return fe.next = 10,
                                            (A = n.phoneInstance) === null || A === void 0 ? void 0 : A.connect();
                                    case 10:
                                        return n.updatePhoneContainerLoading(!1),
                                            fe.abrupt("return");
                                    case 12:
                                        return n.phoneInstance = new Wt(da(da({
                                            workerClient: n.workerClient
                                        }, e), {}, {
                                            isMultipleTabs: !0,
                                            enableSyncInternational: n.nacosConfig.disableSyncInternational !== "true",
                                            enableCheckSipConfig: ((g = n.nacosConfig) === null || g === void 0 ? void 0 : g.enableCheckSipConfig) === "true"
                                        })),
                                            fe.next = 15,
                                            (I = n.phoneInstance) === null || I === void 0 ? void 0 : I.requestForMicrophone();
                                    case 15:
                                        (T = n.phoneInstance) === null || T === void 0 || T.connect(),
                                            n.initVoiceStore({
                                                phoneInstance: n.phoneInstance,
                                                sendUiNotify: function(Ht) {
                                                    var vt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "warn";
                                                    n.handleErrorFn.call(n, {
                                                        detail: vt === "error" ? Ht : da({}, Ht),
                                                        type: vt,
                                                        showClose: vt === "error"
                                                    })
                                                }
                                            }),
                                            fe.next = 28;
                                        break;
                                    case 19:
                                        fe.prev = 19,
                                            fe.t0 = fe.catch(4),
                                            console.error("initPhone error:", fe.t0.message),
                                            N = "initPhone_error",
                                        fe.t0 !== null && fe.t0 !== void 0 && fe.t0.name && (N = "initPhone_error_".concat(fe.t0.name)),
                                            U.monitor.dispatchMonitor({
                                                name: N,
                                                errorCode: fe.t0 === null || fe.t0 === void 0 ? void 0 : fe.t0.code
                                            }),
                                            n.updatePhoneDisconnected(!0),
                                            n.updateShowPhoneAlert(!0),
                                            fe.t0.code === 501 ? n.updatePhoneDisconnectReason(U.PHONE_DISCONNECT_REASON.NotSupported) : fe.t0.name === "NotAllowedError" ? n.updatePhoneDisconnectReason(U.PHONE_DISCONNECT_REASON.DeviceNotAllowed) : fe.t0.name === "NotFoundError" && n.updatePhoneDisconnectReason(U.PHONE_DISCONNECT_REASON.DeviceNotFound);
                                    case 28:
                                        return fe.prev = 28,
                                            n.updatePhoneContainerLoading(!1),
                                            fe.finish(28);
                                    case 31:
                                    case "end":
                                        return fe.stop()
                                }
                        }, l, null, [[4, 19, 28, 31]])
                    }))()
                },
                handleInitPhone: function(e) {
                    var n, l, f, g, I, T = e || this.initData, A = T.zpnsExtra, N = T.userStatus, re = T.userInfo, fe = T.account, ke = T.clientVersion, Ht = T.getIsNewInstanceId, vt = T.enableReportQOS, Me = {
                        accountId: fe?.id,
                        userId: re?.id,
                        userEmail: re?.mail,
                        clientVersion: ke,
                        connectByIp: fe?.enableNativePhoneIPConnect,
                        isNewInstanceId: Ht,
                        enableDenoise: fe?.enableWebphoneAudioDenoise,
                        enableReportQOS: vt,
                        userStatus: N,
                        zpnsExtra: A,
                        speakerId: this.speakerId,
                        microphoneId: this.microphoneId,
                        enableEnhanceRegistration: ((n = this.nacosConfig) === null || n === void 0 ? void 0 : n.disableEnhanceRegistration) !== "true",
                        enableCheckSipConfig: ((l = this.nacosConfig) === null || l === void 0 ? void 0 : l.enableCheckSipConfig) === "true",
                        reinviteWhenDisconnected: fe?.enableReinviteWhenDisconnected,
                        oldRemovePortLogic: ((f = this.nacosConfig) === null || f === void 0 ? void 0 : f.oldRemovePortLogic) === "true",
                        webphoneSdkCdn: (g = this.nacosConfig) === null || g === void 0 ? void 0 : g.webphoneSdkCdn,
                        enableLoadCdnWebPhoneSdkResource: fe?.enableZpnsDisconnectNotify,
                        enableWarmTransferRetry: ((I = this.nacosConfig) === null || I === void 0 ? void 0 : I.disableWarmTransferRetry) !== "true"
                    };
                    if (this.enableCoreVoiceTab && this.coreTabReady) {
                        var he;
                        (he = this.channelInstance) === null || he === void 0 || he.sendMessageToCore({
                            eventType: Z.REGISTER_PHONE,
                            data: Me
                        })
                    } else
                        this.initPhone(Me)
                },
                handleInitZpns: function(e) {
                    var n = e.zpnsWs
                        , l = e.zpnsJwtToken
                        , f = e.userStatus
                        , g = e.instanceId
                        , I = e.userInfo
                        , T = e.account
                        , A = e.zpnsExtra
                        , N = e.clientVersion
                        , re = e.getIsNewInstanceId
                        , fe = e.sipId;
                    if (n) {
                        if (this.enableCoreVoiceTab && this.coreTabReady) {
                            var ke;
                            (ke = this.channelInstance) === null || ke === void 0 || ke.sendMessageToCore({
                                eventType: Z.INIT_ZPNS,
                                data: {
                                    zpnsWs: n,
                                    zpnsJwtToken: l,
                                    userStatus: f,
                                    instanceId: g,
                                    userId: I?.id,
                                    meetingWebAccountId: T?.parentAccountId,
                                    userEmail: I?.mail,
                                    accountId: T?.id,
                                    zpnsExtra: A,
                                    workspaceSid: T?.workspaceSid,
                                    clientVersion: N,
                                    isNewInstanceId: re,
                                    sipId: fe,
                                    enableNewZpns: this.enableNewZpns
                                }
                            })
                        }
                        this.initZpns(e)
                    }
                },
                handleInitStore: function() {
                    var e, n, l = this, f, g = {
                        APP: (e = this.$store.state) === null || e === void 0 ? void 0 : e.app
                    };
                    this.instanceId && (g.CORE_VOICE = {
                        instanceId: this.instanceId,
                        isNewInstanceId: this.isNewInstanceId,
                        version: this.clientVersion,
                        device: this.device
                    }),
                        ma()(n = q()(se)).call(n, function(I) {
                            g[I] = l.$store.state[I]
                        }),
                    (f = this.channelInstance) === null || f === void 0 || f.sendMessageToCore({
                        eventType: Z.SUB_STORE_SYNC,
                        data: g
                    })
                },
                handleInit: function(e) {
                    e && (this.handleInitZpns(e),
                        this.handleInitPhone(e),
                        this.handleInitDeviceList())
                },
                handleInitDeviceList: function() {
                    var e = this;
                    return Si(Ia().mark(function n() {
                        var l, f, g;
                        return Ia().wrap(function(T) {
                            for (; ; )
                                switch (T.prev = T.next) {
                                    case 0:
                                        (l = e.featureOptions) !== null && l !== void 0 && l.enableMediaDeviceSelection ? (e.updateDeviceList(),
                                        (f = navigator) === null || f === void 0 || (f = f.mediaDevices) === null || f === void 0 || (g = f.addEventListener) === null || g === void 0 || g.call(f, "devicechange", e.updateDeviceListdebounce)) : U.monitor.dispatchMonitor({
                                            name: "enableMediaDeviceSelection not enabled"
                                        });
                                    case 1:
                                    case "end":
                                        return T.stop()
                                }
                        }, n)
                    }))()
                },
                updateDeviceListdebounce: Pt()(function() {
                    this.updateDeviceList()
                }, 500),
                bindLeaveEvent: function() {
                    var e = this;
                    window.addEventListener("beforeunload", function(n) {
                        var l, f;
                        (l = e.channelInstance) === null || l === void 0 || (f = l.sendMessageToCore) === null || f === void 0 || f.call(l, {
                            eventType: Z.SUB_LEAVE,
                            data: {
                                tabId: e.tabId,
                                from: "beforeunload"
                            }
                        }),
                            localStorage.removeItem("opening_core_tab_".concat(e.userInfo.id));
                        var g = h(e.userInfo.id);
                        if (b(e.userInfo.id),
                        g === 1) {
                            n.preventDefault();
                            var I = "Are you sure you want to leave the page? ";
                            return n.returnValue = I,
                                I
                        }
                    }, {
                        capture: !0
                    }),
                        window.addEventListener("unload", function() {
                            var n, l;
                            (n = e.channelInstance) === null || n === void 0 || (l = n.sendMessageToCore) === null || l === void 0 || l.call(n, {
                                eventType: Z.SUB_LEAVE,
                                data: {
                                    tabId: e.tabId,
                                    from: "unload"
                                }
                            })
                        }, {
                            capture: !0
                        })
                },
                createListenerForPages: function() {
                    var e, n = this, l, f, g;
                    U.monitor.dispatchMonitor({
                        name: "crm_init: createListenerForPages"
                    }),
                        ma()(e = q()(se)).call(e, function(I) {
                            var T;
                            (T = n.channelInstance) === null || T === void 0 || T.on(I, function(A) {
                                n["".concat(I, "UpdateStateFromCoreTab")](A)
                            })
                        }),
                    (l = this.channelInstance) === null || l === void 0 || l.on(U.CrmChatTaskCoreToLocalKey, function(I) {
                        U.eventBus.$emit(U.CrmChatTaskCoreToLocalKey, I)
                    }),
                    (f = this.channelInstance) === null || f === void 0 || f.on(U.CrmStatusCoreToLocalKey, function(I) {
                        U.eventBus.$emit(U.CrmStatusCoreToLocalKey, I)
                    }),
                    (g = this.channelInstance) === null || g === void 0 || g.on(U.CrmCommonModuleCoreToLocalKey, function(I) {
                        U.eventBus.$emit(U.CrmCommonModuleCoreToLocalKey, I)
                    })
                },
                updateStateFromCoreTabForPage: function(e) {
                    var n, l = this;
                    U.monitor.dispatchMonitor({
                        name: "crm_init: updateStateFromCoreTabForPage"
                    }),
                        ma()(n = q()(se)).call(n, function(f) {
                            l["".concat(f, "UpdateStateFromCoreTab")] && l["".concat(f, "UpdateStateFromCoreTab")](e[f])
                        })
                },
                destoryBroadCast: function(e) {
                    var n, l, f = e || ((n = this.userInfo) === null || n === void 0 ? void 0 : n.id);
                    (l = this.channelInstance) === null || l === void 0 || l.destroy(),
                        this.channelInstance = null,
                        window.__subBroadcast__ = null,
                        b(f),
                        localStorage.removeItem("opening_core_tab_".concat(f)),
                        document.removeEventListener("visibilitychange", this.handleVisibilityChange),
                        U.monitor.dispatchMonitor({
                            name: "crm_init: destoryBroadCast"
                        })
                },
                handleCloseCoreTab: function() {
                    var e;
                    (e = this.channelInstance) === null || e === void 0 || e.sendMessageToCore({
                        eventType: Z.CLOSE_SELF
                    })
                },
                refreshTokenInterval: function() {
                    var e = this;
                    if (U.eventBus.$on("CCI_REFRESH_TOKEN_CLEAR_NOTIFY", function() {
                        if (e.enableCoreVoiceTab) {
                            var g;
                            (g = e.channelInstance) === null || g === void 0 || g.sendMessageToCore({
                                eventType: Z.CORE_CLEAR_REFRESH_TOKEN_NOTIFY,
                                data: ""
                            })
                        }
                    }),
                        this.enableCoreVoiceTab) {
                        var n, l, f;
                        (n = this.channelInstance) === null || n === void 0 || n.on(B.REFRESH_TOKEN_INTERVAL, Wi.setTokenHandler),
                        (l = this.channelInstance) === null || l === void 0 || l.on(B.REFRESH_TOKEN_VALIDATION, this.validationRefreshToken),
                        (f = this.channelInstance) === null || f === void 0 || f.on(B.CLEAR_REFRESH_TOKEN_NOTIFY, function() {
                            U.eventBus.$emit("CLEAR_REFRESH_TOKEN_NOTIFY")
                        })
                    } else
                        this.refreshTokenTimer = No()(Wi.refeshCrmTokenWithRefreshToken, 1e3 * 60 * 30),
                            this.validationRefreshToken(),
                            this.validationRefreshTokenTimer = No()(this.validationRefreshToken, 1e3 * 60 * 10)
                },
                validationRefreshToken: function() {
                    U.eventBus.$emit("CCI_REFRESH_TOKEN_BY_LOGIN")
                }
            }),
            beforeDestroy: function() {
                var e, n, l;
                this.enableCoreVoiceTab && this.handleCloseCoreTab(),
                window.__subBroadcast__ || this.destroyStorePhone(),
                    b(this.userInfo.id),
                    this.destoryBroadCast(),
                    clearInterval(this.refreshTokenTimer),
                    clearInterval(this.validationRefreshTokenTimer),
                    this.workerClientOffevents(),
                    this.zpnsStatus = "",
                (e = this.zpns) !== null && e !== void 0 && e.off && (this.zpns.off("message"),
                    this.zpns.off("close"),
                    this.zpns.off("same-resource"),
                    this.zpns.off("invalid-token"),
                    this.zpns.off("log", U.onZPNSError),
                    this.zpns.off("timeout", U.onZpnsTimeout),
                    this.zpns.off("disconnect", U.onZpnsDisconnect),
                    this.zpns.close()),
                    this.$nextTick(function() {
                        ar().prototype.$socket = void 0
                    }),
                (n = navigator) === null || n === void 0 || (n = n.mediaDevices) === null || n === void 0 || (l = n.removeEventListener) === null || l === void 0 || l.call(n, "devicechange", this.updateDeviceListdebounce)
            },
            provide: function() {
                var e = this;
                return {
                    $getChannelInstance: function() {
                        return e.channelInstance
                    },
                    $getPhoneInstance: function() {
                        return e.phoneInstance
                    }
                }
            }
        };
        var Qn = 350;
        const mn = {
            data: function() {
                return {
                    isHideContent: !1,
                    isSmallModel: !1
                }
            },
            mounted: function() {
                var e = this;
                e.isSmallModel = document.body.clientWidth <= Qn,
                    window.onresize = function() {
                        var n = document.body.clientWidth;
                        e.isSmallModel = n <= Qn,
                        n > Qn && e._handleHideCont(!1)
                    }
            },
            methods: {
                _handleHideCont: function(e) {
                    this.isHideContent = e
                }
            }
        };
        var Fn = function() {
            var e, n, l, f = this, g = f._self._c;
            return g("div", {
                staticClass: "chat"
            }, [f._t("header", null, {
                engagementId: (e = f.currentEngagement) === null || e === void 0 ? void 0 : e.engagementId,
                to: ((n = f.currentEngagement) === null || n === void 0 || (n = n.rez) === null || n === void 0 || (n = n.task) === null || n === void 0 || (n = n.attributes) === null || n === void 0 || (n = n.userInfo) === null || n === void 0 ? void 0 : n.email) || "",
                channelType: (l = f.currentEngagement) === null || l === void 0 ? void 0 : l.channelType
            }), f._v(" "), g("div", {
                staticClass: "chat__inner"
            }, f._l(f.engagementList, function(I) {
                return g("ChatContentV2", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: f.currentEngagement && f.currentEngagement.engagementId === I.engagementId,
                        expression: `
        currentEngagement &&
        currentEngagement.engagementId === item.engagementId
      `
                    }],
                    key: I.engagementId,
                    attrs: {
                        "is-chat-show": f.currentEngagement && f.currentEngagement.engagementId === I.engagementId,
                        engagement: I,
                        "engagement-id": I.engagementId,
                        "chat-session-id": I.chatSessionId,
                        "channel-type": I.channelType,
                        "enter-id": I.enterId,
                        "feature-options": f.featureOptions,
                        "enable-s-m-s-editor": I.enableSMSEditor
                    }
                })
            }), 1)], 2)
        }
            , Vt = []
            , Ir = a(15094)
            , Cr = a.n(Ir)
            , On = a(4302)
            , Br = a.n(On)
            , Sr = function() {
            var e = this
                , n = e._self._c;
            return n("div", {
                staticClass: "chat-content"
            }, [n("ChatLinkConfirm", {
                ref: "chatLink"
            }), e._v(" "), e.isNewUI ? e._e() : n("ChatHead", {
                attrs: {
                    engagement: e.engagement,
                    "chat-instance": e.chatInstance
                }
            }), e._v(" "), n("div", {
                ref: "list",
                staticClass: "chat-content__body"
            }, [e.isDropIn ? n("DropInNotify") : e._e(), e._v(" "), n("div", {
                staticClass: "chat-content__bar"
            }, [e.isWrapup ? e._e() : n("SurveyIndicator", {
                attrs: {
                    params: e.surveyNoticeParams
                }
            }), e._v(" "), e.isBarge || e.loading ? [e.isBarge && e.showSupervisorBar ? n("SupervisorBar", {
                attrs: {
                    text: e.$t("chat.monitor.bargeBar.text")
                },
                on: {
                    close: e.onHideSupervisorBar
                }
            }) : e._e(), e._v(" "), e.loading ? n("div", {
                staticClass: "chat-content__loading"
            }, [n("i", {
                staticClass: "zm-icon-loading"
            })]) : e._e()] : e._e()], 2), e._v(" "), e.enableZendeskTicketToEmail ? n("div", {
                staticClass: "chat-content__chat-sdk"
            }, [n("EmailIncomingMessage")], 1) : n("div", {
                ref: "chat",
                staticClass: "chat-content__chat-sdk",
                style: e.chatRootDomHeight
            }), e._v(" "), e.showDropInLoad ? n("DropInLoading") : e._e()], 1), e._v(" "), e.isView && !e.isEmail ? n("SupervisorPanel") : e.showDropInLoad ? n("DropInTips", {
                attrs: {
                    engagement: e.engagement
                }
            }) : e._e(), e._v(" "), e.isNewUI ? n("ChatHead", {
                attrs: {
                    engagement: e.engagement,
                    "chat-instance": e.chatInstance
                }
            }) : e._e()], 1)
        }
            , jr = []
            , dr = a(65335)
            , Kr = a(98608)
            , Ar = a(40222)
            , ta = a.n(Ar)
            , Qr = a(29500)
            , ea = a(63290)
            , Wr = function() {
            var e = this
                , n = e._self._c;
            return !e.hideActions && !e.isView ? n("div", {
                staticClass: "chat-head",
                class: {
                    hideActions: e.hideActions,
                    "legacy-ui": !e.isNewUI,
                    "new-ui": e.isNewUI
                }
            }, [!e.hideActions && !e.hideActionInEmail ? n("div", {
                ref: "container",
                staticClass: "chat-head__actions"
            }, [n("div", {
                staticClass: "chat-head__action-buttons"
            }, [e._l(e.visibleButtons, function(l) {
                return n("zm-tooltip", {
                    key: l.type,
                    attrs: {
                        content: l.tip,
                        placement: e.isNewUI ? "top" : "bottom"
                    }
                }, [n("button", {
                    ref: "buttons",
                    refInFor: !0,
                    staticClass: "chat-head__icon",
                    attrs: {
                        "aria-label": l.label,
                        disabled: l.disabled,
                        tabindex: "0",
                        "data-type": l.type
                    },
                    on: {
                        click: l.handler
                    }
                }, [n(l.icon, {
                    tag: "component",
                    attrs: {
                        height: e.isNewUI ? 24 : 16,
                        width: e.isNewUI ? 24 : 16
                    }
                }), e._v(" "), e.isNewUI ? n("span", [e._v(e._s(l.label))]) : e._e()], 1)])
            }), e._v(" "), e.overflowButtons.length ? n("zm-dropdown", {
                attrs: {
                    placement: "top"
                },
                on: {
                    command: function(f) {
                        return e.onActionCommand(f)
                    }
                }
            }, [n("button", {
                ref: "moreButton",
                staticClass: "chat-head__icon",
                attrs: {
                    "aria-label": e.$t("cci.client.voice.newUi.action.more"),
                    tabindex: "0"
                }
            }, [n("MoreIcon", {
                attrs: {
                    height: e.isNewUI ? 24 : 16,
                    width: e.isNewUI ? 24 : 16
                }
            }), e._v(" "), e.isNewUI ? n("span", [e._v(e._s(e.$t("cci.client.voice.newUi.action.more")))]) : e._e()], 1), e._v(" "), n("zm-dropdown-menu", {
                attrs: {
                    slot: "dropdown"
                },
                slot: "dropdown"
            }, e._l(e.overflowButtons, function(l) {
                return n("zm-dropdown-item", {
                    key: l.type,
                    attrs: {
                        command: l.type,
                        disabled: l.disabled
                    }
                }, [e._v(`
            ` + e._s(l.label) + `
          `)])
            }), 1)], 1) : e._e()], 2)]) : e._e(), e._v(" "), e.hideActions ? e._e() : n("div", {
                staticClass: "chat-head__buttons",
                staticStyle: {
                    "margin-left": "14px"
                }
            }, [e.isView ? e._e() : n("End", {
                attrs: {
                    engagement: e.currentEngagement,
                    name: e.name,
                    "is-barge": e.isBarge,
                    "is-drop-in": e.isDropIn
                },
                on: {
                    backToActiveList: e.backToActiveList
                }
            })], 1), e._v(" "), e.showTransfer ? n("TransferDialog", {
                attrs: {
                    engagement: e.currentEngagement
                },
                on: {
                    close: e.onCloseTransfer
                }
            }) : e._e(), e._v(" "), e.showRelease ? n("Release", {
                attrs: {
                    engagement: e.currentEngagement
                },
                on: {
                    close: e.onCloseRelease
                }
            }) : e._e(), e._v(" "), e.showUpgradeChat ? n("UpgradeToVideoDialog", {
                attrs: {
                    engagement: e.currentEngagement
                },
                on: {
                    close: e.onCloseUpgradeChat
                }
            }) : e._e(), e._v(" "), n("UpgradeVoice", {
                ref: "smsUpgradeVoice",
                attrs: {
                    "queue-id": e.currentEngagement && e.currentEngagement.queueId
                }
            }), e._v(" "), n("CustomDialog", {
                attrs: {
                    title: e.$t("cci.chat.takeover.title"),
                    text: e.$t("cci.chat.takeover.message"),
                    "ok-text": e.$t("cci.chat.takeover.confirm"),
                    visible: e.showTakeOver,
                    loading: e.takeOverLoading
                },
                on: {
                    ok: e.onTakeOver,
                    close: e.onCloseTakeOver
                }
            }), e._v(" "), n("SmsUpgradeToVideo", {
                attrs: {
                    "is-collapse": e.collapse,
                    visible: e.showUpgradeSMS
                },
                on: {
                    cancel: e.onCloseUpgradeSMS,
                    confirm: e.onCloseUpgradeSMS
                }
            })], 1) : e._e()
        }
            , $r = []
            , Er = a(73979)
            , m = a.n(Er)
            , d = a(29101)
            , v = a.n(d)
            , C = a(54019)
            , L = a.n(C)
            , w = a(96869)
            , ge = a.n(w)
            , qe = a(69195)
            , ft = a.n(qe)
            , Xn = a(42195)
            , Un = a.n(Xn)
            , er = a(35893)
            , zh = a.n(er)
            , Hh = a(73557)
            , Kh = a.n(Hh)
            , Qh = a(63850)
            , Yh = function() {
            var e = this
                , n = e._self._c;
            return n("div", {
                staticClass: "chat-end"
            }, [e.isBarge ? n("div", {
                staticClass: "chat-end__barge"
            }, [e.showMenu ? n("zm-button", {
                attrs: {
                    disabled: e.leaveLoading
                },
                on: {
                    click: e.onToggleMenu
                }
            }, [e._v(e._s(e.$t("agents.button.cancel")))]) : n("zm-button", {
                attrs: {
                    type: "danger"
                },
                on: {
                    click: e.onToggleMenu
                }
            }, [e._v(e._s(e.$t("cci.chatEnd.leave")))]), e._v(" "), n("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.showMenu,
                    expression: "showMenu"
                }],
                staticClass: "chat-end__menu"
            }, [n("zm-button", {
                staticClass: "chat-end__menu-item",
                attrs: {
                    type: "danger",
                    loading: e.isLeaving && e.loading,
                    disabled: e.loading,
                    title: e.$t("cci.chatEnd.leaveEngagement")
                },
                on: {
                    click: e.onClickLeave
                }
            }, [e._v(e._s(e.$t("cci.chatEnd.leaveEngagement")))]), e._v(" "), n("zm-button", {
                staticClass: "chat-end__menu-item",
                attrs: {
                    loading: !e.isLeaving && e.loading,
                    disabled: e.loading,
                    title: e.$t("cci.chatEnd.endEngagementForAll")
                },
                on: {
                    click: e.onClickEnd
                }
            }, [e._v(e._s(e.$t("cci.chatEnd.endEngagementForAll")))])], 1)], 1) : e.isDropIn ? n("zm-button", {
                attrs: {
                    type: "danger",
                    loading: e.isLeaving
                },
                on: {
                    click: e.onClickDropInLeave
                }
            }, [e._v(e._s(e.$t("cci.chatEnd.leave")))]) : n("zm-button", {
                attrs: {
                    type: "danger",
                    disabled: e.isCalling
                },
                on: {
                    click: e.onClickEnd
                }
            }, [e._v(e._s(e.$t("cci.common.placeholder.endTime")))]), e._v(" "), n("EndModal", {
                attrs: {
                    show: e.showEnd,
                    "customer-name": e.name,
                    loading: e.loading,
                    "is-leaving": e.isLeaving
                },
                on: {
                    "update:show": function(f) {
                        e.showEnd = f
                    },
                    end: e.onEnd,
                    close: e.hideEndModal
                }
            }), e._v(" "), e.showDropInAgentAcceptDialog ? n("DropInBargeModal", {
                attrs: {
                    "accepting-agent-name": e.acceptingAgentName,
                    show: e.showDropInAgentAcceptDialog
                },
                on: {
                    "update:show": function(f) {
                        e.showDropInAgentAcceptDialog = f
                    },
                    leave: e.leaveDropInBargeModal,
                    close: e.closeDropInBargeModal
                }
            }) : e._e()], 1)
        }
            , Zh = []
            , Jh = function() {
            var e = this
                , n = e._self._c;
            return n("ZccDialog", {
                staticClass: "chat-end-modal",
                attrs: {
                    "custom-class": "chat-end-modal",
                    title: e.isLeaving ? e.$t("cci.engagement.leaveEngagement") : e.$t("cci.engagement.endEngagement"),
                    modal: !1,
                    "aria-label": e.isLeaving ? e.$t("cci.engagement.leaveEngagement") : e.$t("cci.engagement.endEngagement"),
                    visible: e.show,
                    "mini-screen-enlargement": !1
                },
                on: {
                    "update:visible": function(f) {
                        e.show = f
                    }
                }
            }, [n("div", {
                staticClass: "chat-end-modal__text"
            }, [e._v(`
    ` + e._s(e.$t("cci.engagement.leaveAndEnd.confirm", {
                action: e.isLeaving ? e.$t("cci.engagement.action.leave") : e.$t("cci.engagement.action.end"),
                customerName: e.customerName
            })) + `
  `)]), e._v(" "), n("div", {
                staticClass: "dialog-footer",
                attrs: {
                    slot: "footer"
                },
                slot: "footer"
            }, [n("zm-button", {
                attrs: {
                    "focus-first": "",
                    plain: ""
                },
                on: {
                    click: e.onClose
                }
            }, [e._v(e._s(e.$t("cci.common.button.cancel")))]), e._v(" "), n("zm-button", {
                attrs: {
                    type: "danger",
                    loading: e.loading
                },
                on: {
                    click: e.onEnd
                }
            }, [e._v(e._s(e.isLeaving ? e.$t("cci.chatEnd.leave") : e.$t("cci.common.engagements.status.end")))])], 1)])
        }
            , Xh = [];
        function Ts(i) {
            "@babel/helpers - typeof";
            return Ts = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                Ts(i)
        }
        function th(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function qh(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = th(Object(f), !0)).call(n, function(g) {
                    ev(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = th(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function ev(i, e, n) {
            return (e = tv(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function tv(i) {
            var e = nv(i, "string");
            return Ts(e) == "symbol" ? e : e + ""
        }
        function nv(i, e) {
            if (Ts(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (Ts(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        const rv = {
            props: ["loading", "isLeaving", "customerName", "show", "engagement"],
            data: function() {
                return {
                    emailSendLoading: !1
                }
            },
            methods: {
                onEnd: function() {
                    this.$emit("end")
                },
                onClose: function() {
                    this.$emit("close")
                }
            },
            computed: qh({}, (0,
                zt.mapGetters)({
                user: "user"
            }))
        };
        var av = (0,
            ir.A)(rv, Jh, Xh, !1, null, "a7bde71e", null);
        const iv = av.exports;
        var ov = function() {
            var e = this
                , n = e._self._c;
            return n("ZccDialog", {
                staticClass: "dropin-barge-modal",
                attrs: {
                    modal: !1,
                    top: "calc(50vh - 100px)",
                    visible: e.show,
                    "mini-screen-enlargement": !1
                },
                on: {
                    "update:visible": function(f) {
                        e.show = f
                    }
                }
            }, [n("div", {
                staticClass: "dialog-title-barge",
                attrs: {
                    slot: "title",
                    "aria-label": e.$t("callbar.monitor.dropinBargeConfirm.title", {
                        acceptingAgentName: e.acceptingAgentName
                    }),
                    role: "alert"
                },
                slot: "title"
            }, [e._v(`
    ` + e._s(e.$t("callbar.monitor.dropinBargeConfirm.title", {
                acceptingAgentName: e.acceptingAgentName
            })) + `
  `)]), e._v(" "), n("div", {
                staticClass: "chat-end-modal__text",
                attrs: {
                    role: "alert",
                    "aria-live": "polite",
                    "aria-label": e.$t("callbar.monitor.dropinBargeConfirm.message", {
                        time: e.time
                    })
                }
            }, [e._v(`
    ` + e._s(e.$t("callbar.monitor.dropinBargeConfirm.message", {
                time: e.time
            })) + `
  `)]), e._v(" "), n("div", {
                staticClass: "dialog-footer",
                attrs: {
                    slot: "footer"
                },
                slot: "footer"
            }, [n("zm-button", {
                attrs: {
                    type: "primary",
                    loading: e.loading
                },
                on: {
                    click: e.goBarge
                }
            }, [e._v(`
      ` + e._s(e.$t("callbar.monitor.bargeConfirm.confirm")) + `
    `)]), e._v(" "), n("zm-button", {
                attrs: {
                    "focus-first": "",
                    plain: ""
                },
                on: {
                    click: e.onLeave
                }
            }, [e._v(e._s(e.$t("cci.chatEnd.leave")))])], 1)])
        }
            , sv = [];
        function lo(i) {
            "@babel/helpers - typeof";
            return lo = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                lo(i)
        }
        function lv(i, e) {
            return fv(i) || dv(i, e) || uv(i, e) || cv()
        }
        function cv() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function uv(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return nh(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? nh(i, e) : void 0
            }
        }
        function nh(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function dv(i, e) {
            var n = i == null ? null : typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (n != null) {
                var l, f, g, I, T = [], A = !0, N = !1;
                try {
                    if (g = (n = n.call(i)).next,
                    e === 0) {
                        if (Object(n) !== n)
                            return;
                        A = !1
                    } else
                        for (; !(A = (l = g.call(n)).done) && (T.push(l.value),
                        T.length !== e); A = !0)
                            ;
                } catch (re) {
                    N = !0,
                        f = re
                } finally {
                    try {
                        if (!A && n.return != null && (I = n.return(),
                        Object(I) !== I))
                            return
                    } finally {
                        if (N)
                            throw f
                    }
                }
                return T
            }
        }
        function fv(i) {
            if (rr()(i))
                return i
        }
        function Ss() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Ss = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && lo(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(lo(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function rh(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function ah(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            rh(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            rh(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function ih(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function ri(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = ih(Object(f), !0)).call(n, function(g) {
                    pv(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = ih(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function pv(i, e, n) {
            return (e = hv(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function hv(i) {
            var e = vv(i, "string");
            return lo(e) == "symbol" ? e : e + ""
        }
        function vv(i, e) {
            if (lo(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (lo(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        var mv = Zt.livevideoApi.postAction
            , oh = Zt.livevideoApi.dropInLeave;
        const gv = {
            props: ["show", "videoBargeData", "acceptingAgentName"],
            inject: ["$agent"],
            mixins: [Qr.A],
            data: function() {
                return {
                    loading: !1,
                    time: 30,
                    timer: null,
                    countTimer: null
                }
            },
            mounted: function() {
                var e = this;
                this.timer = k()(function() {
                    e.onLeave()
                }, 3e4)
            },
            beforeDestroy: function() {
                clearTimeout(this.timer)
            },
            methods: ri(ri(ri(ri(ri({}, (0,
                zt.mapActions)("video", ["changeCurrentEngagement", "changeCurrentVideoChat"])), (0,
                zt.mapActions)("livechat", ["clearEngagement"])), (0,
                zt.mapActions)("sessionPanels", ["createMonitorTask", "updateCurrentMonitorTaskId"])), (0,
                zt.mapGetters)("sessionPanels", ["monitorTaskQueue"])), {}, {
                startCount: function() {
                    var e = this;
                    this.time > 0 && (this.countTimer = k()(function() {
                        e.time = e.time - 1,
                            e.startCount()
                    }, 1e3))
                },
                goToEngagementView: function() {
                    var e = this;
                    return ah(Ss().mark(function n() {
                        var l, f, g, I, T;
                        return Ss().wrap(function(N) {
                            for (; ; )
                                switch (N.prev = N.next) {
                                    case 0:
                                        return l = e.currentEngagement,
                                            f = l.engagementId,
                                            g = l.rowData,
                                            I = e.$agent(),
                                            T = I.userInfo,
                                            N.next = 4,
                                            (0,
                                                U.tryApiCatch)(oh, f, T?.id);
                                    case 4:
                                        e.clearEngagement(f),
                                            console.log(g, "rowData"),
                                            e.$bus.$emit("home-menu-select", 6, {
                                                viewingEngagement: ri(ri({
                                                    engagementId: f
                                                }, g), {}, {
                                                    agentNames: [e.acceptingAgentName],
                                                    tkType: "video",
                                                    eventType: "monitor.start",
                                                    channel: "video",
                                                    type: "video"
                                                }),
                                                active: "active"
                                            });
                                    case 7:
                                    case "end":
                                        return N.stop()
                                }
                        }, n)
                    }))()
                },
                goBarge: function() {
                    var e = this;
                    return ah(Ss().mark(function n() {
                        var l, f, g, I, T, A, N, re, fe, ke, Ht, vt, Me, he, sn, ln, lt;
                        return Ss().wrap(function(Wn) {
                            for (; ; )
                                switch (Wn.prev = Wn.next) {
                                    case 0:
                                        return l = e.currentEngagement,
                                            f = l.engagementId,
                                            g = l.queueName,
                                            I = l.customerName,
                                            T = l.source,
                                            A = {
                                                engagementId: f,
                                                queueName: g,
                                                source: T,
                                                customerName: I,
                                                queueNames: [g],
                                                agentNames: [e.acceptingAgentName]
                                            },
                                            e.loading = !0,
                                            N = e.$agent(),
                                            re = N.userInfo,
                                            Wn.next = 6,
                                            (0,
                                                U.tryApiCatch)(oh, f, re?.id);
                                    case 6:
                                        return e.clearEngagement(f),
                                            Wn.next = 9,
                                            (0,
                                                U.tryApiCatch)(function() {
                                                return mv(f, "BARGE")
                                            });
                                    case 9:
                                        if (fe = Wn.sent,
                                            ke = lv(fe, 2),
                                            Ht = ke[0],
                                            vt = ke[1],
                                            !Ht) {
                                            Wn.next = 16;
                                            break
                                        }
                                        return e.nativeNotify(Ht, "error"),
                                            Wn.abrupt("return");
                                    case 16:
                                        Me = (0,
                                            U.generateBargeEngagement)(vt, e.currentEngagement),
                                            he = vt.liveVideoChatSessionId,
                                            sn = vt.customerId,
                                            ln = he ? {
                                                chatId: he,
                                                engagementId: f,
                                                chatSessionId: he,
                                                customerId: sn,
                                                from: re?.id
                                            } : {},
                                            lt = function() {
                                                e.createVideoMonitorTask(vt, A),
                                                    e.changeCurrentEngagement(Me),
                                                    e.updateCurrentMonitorTaskId(vt.taskId)
                                            }
                                            ,
                                            e.loading = !1,
                                            e.$emit("close"),
                                            Lt.VideoCoreTask.startVideo(vt.taskId, ln, lt);
                                    case 23:
                                    case "end":
                                        return Wn.stop()
                                }
                        }, n)
                    }))()
                },
                createVideoMonitorTask: function(e, n) {
                    var l, f = e.taskId;
                    f && D()(l = this.monitorTaskQueue()).call(l, function(g) {
                        return g.taskId === f
                    }) || this.createMonitorTask(ri(ri({
                        tkType: "video",
                        eventType: "monitor.start",
                        channel: "video",
                        type: "video",
                        monitorStartTs: n.startTime || n.start_time || ee()()
                    }, n), e))
                },
                onLeave: function() {
                    this.$emit("leave")
                }
            }),
            computed: ri({}, (0,
                zt.mapGetters)("livechat", ["currentEngagement"]))
        };
        var yv = (0,
            ir.A)(gv, ov, sv, !1, null, "8ac070de", null);
        const _v = yv.exports;
        function co(i) {
            "@babel/helpers - typeof";
            return co = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                co(i)
        }
        function Rf(i, e) {
            return Iv(i) || Ev(i, e) || Cv(i, e) || bv()
        }
        function bv() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Cv(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return sh(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? sh(i, e) : void 0
            }
        }
        function sh(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function Ev(i, e) {
            var n = i == null ? null : typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (n != null) {
                var l, f, g, I, T = [], A = !0, N = !1;
                try {
                    if (g = (n = n.call(i)).next,
                    e === 0) {
                        if (Object(n) !== n)
                            return;
                        A = !1
                    } else
                        for (; !(A = (l = g.call(n)).done) && (T.push(l.value),
                        T.length !== e); A = !0)
                            ;
                } catch (re) {
                    N = !0,
                        f = re
                } finally {
                    try {
                        if (!A && n.return != null && (I = n.return(),
                        Object(I) !== I))
                            return
                    } finally {
                        if (N)
                            throw f
                    }
                }
                return T
            }
        }
        function Iv(i) {
            if (rr()(i))
                return i
        }
        function Na() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Na = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && co(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(co(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function lh(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function uo(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            lh(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            lh(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function uy(i) {
            throw new TypeError('"' + i + '" is read-only')
        }
        function ch(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function Gi(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = ch(Object(f), !0)).call(n, function(g) {
                    wv(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = ch(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function wv(i, e, n) {
            return (e = Tv(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function Tv(i) {
            var e = Sv(i, "string");
            return co(e) == "symbol" ? e : e + ""
        }
        function Sv(i, e) {
            if (co(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (co(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        var uh = Zt.chatApi.endChat
            , Av = Zt.chatApi.leaveEngagement
            , Lv = Zt.livevideoApi.dropInLeave;
        const Nv = {
            props: ["engagement", "isBarge", "name", "isDropIn"],
            inject: ["$agent", "$endChat"],
            mixins: [Qr.A],
            components: {
                EndModal: iv,
                DropInBargeModal: _v
            },
            data: function() {
                return {
                    showEnd: !1,
                    showMenu: !1,
                    loading: !1,
                    isLeaving: !1,
                    isCalling: !1,
                    showDropInAgentAcceptDialog: !1,
                    acceptingAgentName: "Agent"
                }
            },
            mounted: function() {
                this.bindZpnsEvt(),
                    this.updateCalling()
            },
            beforeDestroy: function() {
                this.showEnd = !1,
                    this.showMenu = !1,
                    this.loading = !1,
                    this.unBindZpnsEvt()
            },
            computed: Gi(Gi(Gi(Gi({}, (0,
                zt.mapGetters)("sessionPanels", ["currentActiveTask", "activeTasks"])), (0,
                zt.mapGetters)("livechat", ["currentEngagement"])), (0,
                zt.mapGetters)("coreVoice", ["getIsCalling", "currentCall"])), {}, {
                customerName: function() {
                    var e = this.currentActiveTask || {}
                        , n = e.customerName
                        , l = n === void 0 ? "Unknown" : n;
                    return l
                },
                leaveLoading: function() {
                    return this.isLeaving && this.loading
                }
            }),
            watch: {
                engagement: function() {
                    this.updateCalling()
                },
                getIsCalling: function() {
                    this.updateCalling()
                }
            },
            methods: Gi(Gi(Gi(Gi({}, (0,
                zt.mapActions)("sessionPanels", ["updateSMSTask", "updateChatTask"])), (0,
                zt.mapActions)("livechat", ["createSuperVisorJoin", "receiveCustomerAccept"])), (0,
                zt.mapActions)("callbar", ["getCall"])), {}, {
                onClickLeave: function() {
                    var e = this;
                    return uo(Na().mark(function n() {
                        var l, f, g, I;
                        return Na().wrap(function(A) {
                            for (; ; )
                                switch (A.prev = A.next) {
                                    case 0:
                                        if (e.isLeaving = !0,
                                            l = e.engagement || {},
                                            f = l.superVisor,
                                            g = l.prevSuperVisor,
                                        f !== "barge") {
                                            A.next = 13;
                                            break
                                        }
                                        if (g !== "view") {
                                            A.next = 7;
                                            break
                                        }
                                        e.downgrade(),
                                            A.next = 11;
                                        break;
                                    case 7:
                                        return A.next = 9,
                                            e.onEnd();
                                    case 9:
                                        I = A.sent,
                                        !I && e.$emit("backToActiveList");
                                    case 11:
                                        A.next = 14;
                                        break;
                                    case 13:
                                        e.onEnd();
                                    case 14:
                                    case "end":
                                        return A.stop()
                                }
                        }, n)
                    }))()
                },
                zpnsDropInEventCallback: function(e) {
                    var n = e.name
                        , l = e.content;
                    if (n === "cci/live_video/drop_in_chat/accept") {
                        var f, g;
                        this.receiveCustomerAccept((f = this.engagement) === null || f === void 0 ? void 0 : f.engagementId),
                            this.nativeNotify("".concat((this === null || this === void 0 || (g = this.engagement) === null || g === void 0 ? void 0 : g.customerName) || "Consumer", " accept your chat invite"))
                    }
                    if (n === "cci/live_video/drop_in_chat/reject") {
                        var I;
                        this.nativeNotify("".concat((this === null || this === void 0 || (I = this.engagement) === null || I === void 0 ? void 0 : I.customerName) || "Consumer", " rejected your chat invite")),
                            this.onClickDropInLeave()
                    }
                    if ((n === "cci/live_video/drop_in_chat/end" || n === "cci/live_video/drop_in_chat/agent_accepted") && (this.showDropInAgentAcceptDialog = !0,
                        this.acceptingAgentName = l?.acceptingAgentName || "Agent"),
                    n === "cci/engagement/end") {
                        var T;
                        if (this.isDropIn && l?.engagement_id === ((T = this.engagement) === null || T === void 0 ? void 0 : T.engagementId)) {
                            var A, N;
                            this.$endChat((A = this.engagement) === null || A === void 0 ? void 0 : A.engagementId),
                                this.$emit("backToActiveList"),
                                this.nativeNotify("".concat((this === null || this === void 0 || (N = this.engagement) === null || N === void 0 ? void 0 : N.customerName) || "Consumer", " left the video call. The engagement was ended."))
                        }
                    }
                },
                onClickDropInLeave: function() {
                    var e = this;
                    return uo(Na().mark(function n() {
                        var l, f, g, I;
                        return Na().wrap(function(A) {
                            for (; ; )
                                switch (A.prev = A.next) {
                                    case 0:
                                        return e.isLeaving = !0,
                                            g = e.$agent(),
                                            I = g.userInfo,
                                            A.next = 4,
                                            (0,
                                                U.tryApiCatch)(Lv, (l = e.engagement) === null || l === void 0 ? void 0 : l.engagementId, I?.id);
                                    case 4:
                                        e.$endChat((f = e.engagement) === null || f === void 0 ? void 0 : f.engagementId),
                                            e.isLeaving = !1,
                                            e.$emit("backToActiveList");
                                    case 7:
                                    case "end":
                                        return A.stop()
                                }
                        }, n)
                    }))()
                },
                bindZpnsEvt: function() {
                    var e = this.$agent()
                        , n = e.zpns;
                    n.on("message", this.zpnsDropInEventCallback)
                },
                unBindZpnsEvt: function() {
                    var e = this.$agent()
                        , n = e.zpns;
                    n.off("message", this.zpnsDropInEventCallback)
                },
                onClickEnd: function() {
                    this.isLeaving = !1,
                        this.showEndModal()
                },
                showEndModal: function() {
                    this.showEnd = !0,
                        this.showMenu = !1
                },
                hideEndModal: function() {
                    this.showEnd = !1
                },
                leaveDropInBargeModal: function() {
                    this.showDropInAgentAcceptDialog = !1,
                        this.onClickDropInLeave()
                },
                closeDropInBargeModal: function() {
                    this.showDropInAgentAcceptDialog = !1
                },
                onToggleMenu: function() {
                    this.showMenu = !this.showMenu
                },
                downgrade: function() {
                    var e = this;
                    return uo(Na().mark(function n() {
                        var l, f, g, I, T;
                        return Na().wrap(function(N) {
                            for (; ; )
                                switch (N.prev = N.next) {
                                    case 0:
                                        if (!(!e.engagement || e.loading)) {
                                            N.next = 2;
                                            break
                                        }
                                        return N.abrupt("return");
                                    case 2:
                                        return l = e.$agent(),
                                            f = l.userInfo,
                                            g = e.engagement,
                                            I = g.engagementId,
                                            T = g.channelType,
                                            e.loading = !0,
                                            N.next = 7,
                                            e.createSuperVisorJoin({
                                                engagementId: I,
                                                eventType: "view_chat",
                                                userId: f.id,
                                                channelType: T
                                            });
                                    case 7:
                                        e.loading = !1,
                                            e.showMenu = !1,
                                            e.hideEndModal();
                                    case 10:
                                    case "end":
                                        return N.stop()
                                }
                        }, n)
                    }))()
                },
                onEnd: function() {
                    var e = this;
                    return uo(Na().mark(function n() {
                        var l, f, g, I, T, A, N, re, fe, ke;
                        return Na().wrap(function(vt) {
                            for (; ; )
                                switch (vt.prev = vt.next) {
                                    case 0:
                                        if (!(!e.engagement || e.loading)) {
                                            vt.next = 2;
                                            break
                                        }
                                        return vt.abrupt("return");
                                    case 2:
                                        if (e.loading = !0,
                                            !e.isLeaving) {
                                            vt.next = 9;
                                            break
                                        }
                                        return vt.next = 6,
                                            e.leaveChat();
                                    case 6:
                                        f = vt.sent,
                                            vt.next = 12;
                                        break;
                                    case 9:
                                        return vt.next = 11,
                                            e.endChat();
                                    case 11:
                                        f = vt.sent;
                                    case 12:
                                        if (e.loading = !1,
                                            e.showMenu = !1,
                                            e.hideEndModal(),
                                            console.log("onEnd in cha-end"),
                                            g = e.engagement || {},
                                            I = g.engagementId,
                                            T = I === void 0 ? "" : I,
                                            A = g.channelType,
                                            T) {
                                            vt.next = 19;
                                            break
                                        }
                                        return vt.abrupt("return");
                                    case 19:
                                        return N = (l = e.engagement) === null || l === void 0 || (l = l.rez) === null || l === void 0 || (l = l.task) === null || l === void 0 ? void 0 : l.id,
                                        N || (fe = D()(re = ra()(e.activeTasks)).call(re, function(Me) {
                                            return Me.engagementId === T
                                        }),
                                            N = fe?.taskId),
                                            N ? A === "SMS" ? e.updateSMSTask({
                                                taskId: N,
                                                engagementId: e.engagement.engagementId,
                                                completeTs: ee()(),
                                                eventType: "sms.ended",
                                                hangupCause: "MANUALLY_END"
                                            }) : A.toLowerCase() === "chat" && e.updateChatTask({
                                                taskId: N,
                                                engagementId: e.engagement.engagementId,
                                                completeTs: ee()(),
                                                eventType: "chat.ended",
                                                hangupCause: "MANUALLY_END"
                                            }) : e.$endChat((ke = e.engagement) === null || ke === void 0 ? void 0 : ke.engagementId),
                                            vt.abrupt("return", f);
                                    case 23:
                                    case "end":
                                        return vt.stop()
                                }
                        }, n)
                    }))()
                },
                endChat: function() {
                    var e = this;
                    return uo(Na().mark(function n() {
                        var l, f, g, I, T, A, N, re, fe, ke, Ht, vt, Me;
                        return Na().wrap(function(sn) {
                            for (; ; )
                                switch (sn.prev = sn.next) {
                                    case 0:
                                        if (l = e.engagement,
                                            f = l.chatId,
                                            g = l.chatSessionId,
                                            I = l.engagementId,
                                            T = l.channelType,
                                            A = l.subChannel,
                                        A !== U.CHANNEL_KEYS.email.keyUpper) {
                                            sn.next = 11;
                                            break
                                        }
                                        return sn.next = 4,
                                            (0,
                                                U.tryApiCatch)(uh, "Email", {
                                                sessionId: g,
                                                engagementId: I
                                            });
                                    case 4:
                                        return N = sn.sent,
                                            re = Rf(N, 1),
                                            fe = re[0],
                                            U.monitor.dispatchMonitor({
                                                chatSessionId: g,
                                                engagementId: I,
                                                name: "email_ended",
                                                message: {
                                                    err: fe
                                                },
                                                err: fe
                                            }, U.monitor.MONITOR_CHAT_CHANEL),
                                            sn.abrupt("return", fe);
                                    case 11:
                                        return ke = {
                                            chatId: f,
                                            chatSessionId: g,
                                            engagementId: I
                                        },
                                        T === "Chat" && (ke.source = A),
                                            sn.next = 15,
                                            (0,
                                                U.tryApiCatch)(uh, T, ke);
                                    case 15:
                                        return Ht = sn.sent,
                                            vt = Rf(Ht, 1),
                                            Me = vt[0],
                                            U.monitor.dispatchMonitor({
                                                chatSessionId: g,
                                                engagementId: I,
                                                name: "chat_ended",
                                                message: {
                                                    err: Me
                                                },
                                                err: Me
                                            }, U.monitor.MONITOR_CHAT_CHANEL),
                                            sn.abrupt("return", Me);
                                    case 20:
                                    case "end":
                                        return sn.stop()
                                }
                        }, n)
                    }))()
                },
                leaveChat: function() {
                    var e = this;
                    return uo(Na().mark(function n() {
                        var l, f, g, I, T, A, N, re;
                        return Na().wrap(function(ke) {
                            for (; ; )
                                switch (ke.prev = ke.next) {
                                    case 0:
                                        return l = e.$agent(),
                                            f = l.userInfo,
                                            g = e.engagement,
                                            I = g.engagementId,
                                            T = g.channelType,
                                            ke.next = 4,
                                            (0,
                                                U.tryApiCatch)(Av, T, {
                                                engagementId: I,
                                                participantId: f.id,
                                                type: 3
                                            });
                                    case 4:
                                        return A = ke.sent,
                                            N = Rf(A, 1),
                                            re = N[0],
                                            ke.abrupt("return", re);
                                    case 8:
                                    case "end":
                                        return ke.stop()
                                }
                        }, n)
                    }))()
                },
                updateCalling: function() {
                    var e = this;
                    return uo(Na().mark(function n() {
                        var l, f, g, I, T, A, N;
                        return Na().wrap(function(fe) {
                            for (; ; )
                                switch (fe.prev = fe.next) {
                                    case 0:
                                        if (e.isCalling = !1,
                                            !e.currentCall) {
                                            fe.next = 8;
                                            break
                                        }
                                        return fe.next = 4,
                                            e.getCall(e.currentCall.id);
                                    case 4:
                                        g = fe.sent,
                                            I = g || {},
                                            T = I.engagementId,
                                            A = (g == null || (l = g.rez) === null || l === void 0 ? void 0 : l.task) || {},
                                            N = A.isSmsToVoice,
                                        T && ((f = e.engagement) === null || f === void 0 ? void 0 : f.engagementId) === T && N && (e.isCalling = !0);
                                    case 8:
                                    case "end":
                                        return fe.stop()
                                }
                        }, n)
                    }))()
                }
            })
        };
        var Mv = (0,
            ir.A)(Nv, Yh, Zh, !1, null, "c82d5e64", null);
        const Pv = Mv.exports;
        var dh = a(47276)
            , kv = function() {
            var e = this
                , n = e._self._c;
            return n("ZccDialog", {
                staticClass: "release",
                attrs: {
                    title: e.$t("cci.client.livevideo.release.title"),
                    "custom-class": "chat-release-modal",
                    modal: !1,
                    visible: "",
                    "mini-screen-enlargement": !1
                }
            }, [n("div", {
                staticClass: "release__text"
            }, [e._v(`
    ` + e._s(e.$t("cci.client.livevideo.release.description")) + `
  `)]), e._v(" "), n("div", {
                staticClass: "dialog-footer",
                attrs: {
                    slot: "footer"
                },
                slot: "footer"
            }, [n("zm-button", {
                attrs: {
                    plain: ""
                },
                on: {
                    click: e.onClose
                }
            }, [e._v(e._s(e.$t("cci.common.button.cancel")))]), e._v(" "), n("zm-button", {
                attrs: {
                    type: "primary",
                    loading: e.loading
                },
                on: {
                    click: e.onRelease
                }
            }, [e._v(e._s(e.$t("cci.common.button.release")))])], 1)])
        }
            , Ov = [];
        function dc(i) {
            "@babel/helpers - typeof";
            return dc = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                dc(i)
        }
        function jf() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            jf = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && dc(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(dc(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function xv(i, e) {
            return Uv(i) || jv(i, e) || Rv(i, e) || Dv()
        }
        function Dv() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Rv(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return fh(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? fh(i, e) : void 0
            }
        }
        function fh(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function jv(i, e) {
            var n = i == null ? null : typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (n != null) {
                var l, f, g, I, T = [], A = !0, N = !1;
                try {
                    if (g = (n = n.call(i)).next,
                    e === 0) {
                        if (Object(n) !== n)
                            return;
                        A = !1
                    } else
                        for (; !(A = (l = g.call(n)).done) && (T.push(l.value),
                        T.length !== e); A = !0)
                            ;
                } catch (re) {
                    N = !0,
                        f = re
                } finally {
                    try {
                        if (!A && n.return != null && (I = n.return(),
                        Object(I) !== I))
                            return
                    } finally {
                        if (N)
                            throw f
                    }
                }
                return T
            }
        }
        function Uv(i) {
            if (rr()(i))
                return i
        }
        function ph(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function $v(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            ph(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            ph(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        var Bv = Zt.chatApi.releaseChat;
        const Vv = {
            props: ["engagement"],
            inject: ["$endChat"],
            mixins: [Qr.A],
            data: function() {
                return {
                    loading: !1
                }
            },
            mounted: function() {
                window.addEventListener("keydown", this.onKeyDown)
            },
            beforeDestroy: function() {
                window.removeEventListener("keydown", this.onKeyDown)
            },
            methods: {
                onKeyDown: function(e) {
                    e.key === "Escape" && this.onClose()
                },
                onRelease: function() {
                    var e = this;
                    return $v(jf().mark(function n() {
                        var l, f, g, I, T, A, N, re, fe, ke, Ht, vt, Me, he, sn;
                        return jf().wrap(function(lt) {
                            for (; ; )
                                switch (lt.prev = lt.next) {
                                    case 0:
                                        if (!(!e.engagement || e.loading)) {
                                            lt.next = 2;
                                            break
                                        }
                                        return lt.abrupt("return");
                                    case 2:
                                        return e.loading = !0,
                                            f = e.engagement,
                                            g = f.chatId,
                                            I = f.chatSessionId,
                                            T = f.engagementId,
                                            A = f.channelType,
                                            lt.next = 6,
                                            (0,
                                                U.tryApiCatch)(Bv, {
                                                chatId: g,
                                                sessionId: I,
                                                engagementId: T
                                            }, ((l = e.engagement) === null || l === void 0 ? void 0 : l.subChannel) === U.CHANNEL_KEYS.email.keyUpper ? "email" : A);
                                    case 6:
                                        N = lt.sent,
                                            re = xv(N, 2),
                                            fe = re[0],
                                            ke = re[1],
                                            e.loading = !1,
                                            fe ? M()(Ht = ["592101"]).call(Ht, ke == null || (vt = ke.data) === null || vt === void 0 ? void 0 : vt.errorCode) ? e.nativeNotify(ke == null || (Me = ke.data) === null || Me === void 0 ? void 0 : Me.errorMessage, "error") : e.nativeNotify(U.RELEASE_ERROR_CODE[ke == null || (he = ke.data) === null || he === void 0 ? void 0 : he.errorCode] ? e.$t(U.RELEASE_ERROR_CODE[ke == null || (sn = ke.data) === null || sn === void 0 ? void 0 : sn.errorCode]) : fe, "error") : (e.nativeNotify(e.$t("cci.client.livevideo.release.success")),
                                                e.$endChat(e.engagement.engagementId)),
                                            e.onClose();
                                    case 13:
                                    case "end":
                                        return lt.stop()
                                }
                        }, n)
                    }))()
                },
                onClose: function() {
                    this.$emit("close")
                }
            }
        };
        var Fv = (0,
            ir.A)(Vv, kv, Ov, !1, null, "0c47ded0", null);
        const Wv = Fv.exports;
        var Gv = function() {
            var e = this
                , n = e._self._c;
            return n("ZccDialog", {
                staticClass: "sms-upgrade-voice",
                attrs: {
                    visible: e.visible,
                    "custom-class": "sms-upgrade-voice",
                    title: e.title,
                    "append-to-body": "",
                    "mini-screen-enlargement": !1
                }
            }, [n("p", {
                staticClass: "sms-upgrade-voice__desc",
                attrs: {
                    id: "sms-upgrade-voice__desc"
                }
            }, [e._v(`
    ` + e._s(e.description) + `
  `)]), e._v(" "), n("zm-form", {
                directives: [{
                    name: "loading",
                    rawName: "v-loading",
                    value: e.loading,
                    expression: "loading"
                }]
            }, [e.customerNumbers.length > 0 ? n("zm-radio-group", {
                attrs: {
                    vertical: "",
                    "aria-labelledby": "sms-upgrade-voice__desc",
                    name: "vertical-radios"
                },
                on: {
                    change: e.onTypeChange
                },
                model: {
                    value: e.type,
                    callback: function(f) {
                        e.type = f
                    },
                    expression: "type"
                }
            }, [n("div", {
                staticClass: "sms-upgrade-voice__radio-item"
            }, [n("zm-radio", {
                attrs: {
                    label: "select",
                    name: "vertical-radios"
                }
            }, [n("span", {
                staticStyle: {
                    display: "none"
                }
            }, [e._v(e._s(e.$t("cci.upgrade.to.voice.radio.select")))])]), e._v(" "), e.customerNumbers.length <= 1 ? n("span", [e._v(e._s(e.customerNumbers[0]))]) : n("zm-select", {
                on: {
                    change: e.onNumberSelect
                },
                model: {
                    value: e.selectNumber,
                    callback: function(f) {
                        e.selectNumber = f
                    },
                    expression: "selectNumber"
                }
            }, e._l(e.customerNumbers, function(l) {
                return n("zm-option", {
                    key: l,
                    attrs: {
                        "option-id": l,
                        label: l,
                        value: l
                    }
                })
            }), 1)], 1), e._v(" "), n("div", {
                staticClass: "sms-upgrade-voice__radio-item"
            }, [n("zm-radio", {
                attrs: {
                    label: "input",
                    name: "vertical-radios"
                }
            }, [n("span", {
                staticStyle: {
                    display: "none"
                }
            }, [e._v(e._s(e.$t("cci.upgrade.to.voice.radio.input")))])]), e._v(" "), n("zm-form-item", [n("zm-input", {
                staticClass: "number-input-radio",
                attrs: {
                    placeholder: e.$t("cci.upgrade.to.voice.input.placeholder"),
                    label: e.$t("cci.upgrade.to.voice.input.placeholder"),
                    type: "tel"
                },
                on: {
                    focus: e.handleInputFocus
                },
                model: {
                    value: e.inputNumber,
                    callback: function(f) {
                        e.inputNumber = e._n(f)
                    },
                    expression: "inputNumber"
                }
            }, [n("zm-select", {
                staticClass: "sms-upgrade-voice__country",
                attrs: {
                    slot: "prepend",
                    "aria-label": "Country calling code ".concat(e.country, " menu button collapsed subMenu")
                },
                on: {
                    change: e.onCountrySelect
                },
                slot: "prepend",
                model: {
                    value: e.selectedCountry,
                    callback: function(f) {
                        e.selectedCountry = f
                    },
                    expression: "selectedCountry"
                }
            }, e._l(e.countries, function(l) {
                var f, g;
                return n("zm-option", {
                    key: l.name,
                    attrs: {
                        value: oa()(f = "".concat(l.code, " ")).call(f, l.name),
                        label: l.code,
                        "aria-label": oa()(g = "".concat(l.name, " ")).call(g, l.code)
                    }
                }, [n("div", {
                    staticClass: "sms-upgrade-voice__country-item"
                }, [n("span", {
                    staticClass: "zm-dropdown__item-title",
                    attrs: {
                        title: l.name
                    }
                }, [e._v(e._s(l.name))]), e._v(" "), n("span", {
                    staticClass: "zm-dropdown__item-desc",
                    staticStyle: {
                        "font-size": "13px"
                    }
                }, [e._v(e._s(l.code))])])])
            }), 1)], 1)], 1)], 1)]) : n("zm-input", {
                staticClass: "number-input",
                attrs: {
                    placeholder: e.$t("cci.upgrade.to.voice.input.placeholder"),
                    label: e.$t("cci.upgrade.to.voice.input.placeholder"),
                    type: "tel"
                },
                model: {
                    value: e.inputNumber,
                    callback: function(f) {
                        e.inputNumber = e._n(f)
                    },
                    expression: "inputNumber"
                }
            }, [n("zm-select", {
                staticClass: "sms-upgrade-voice__country",
                attrs: {
                    slot: "prepend",
                    "aria-label": "Country calling code ".concat(e.country, " menu button collapsed subMenu")
                },
                slot: "prepend",
                model: {
                    value: e.selectedCountry,
                    callback: function(f) {
                        e.selectedCountry = f
                    },
                    expression: "selectedCountry"
                }
            }, e._l(e.countries, function(l) {
                var f, g;
                return n("zm-option", {
                    key: l.name,
                    attrs: {
                        value: oa()(f = "".concat(l.code, " ")).call(f, l.name),
                        label: l.code,
                        "aria-label": oa()(g = "".concat(l.name, " ")).call(g, l.code)
                    }
                }, [n("div", {
                    staticClass: "sms-upgrade-voice__country-item"
                }, [n("span", {
                    staticClass: "zm-dropdown__item-title",
                    attrs: {
                        title: l.name
                    }
                }, [e._v(e._s(l.name))]), e._v(" "), n("span", {
                    staticClass: "zm-dropdown__item-desc",
                    staticStyle: {
                        "font-size": "13px"
                    }
                }, [e._v(e._s(l.code))])])])
            }), 1)], 1)], 1), e._v(" "), n("span", {
                staticClass: "sms-upgrade-voice__footer",
                attrs: {
                    slot: "footer"
                },
                slot: "footer"
            }, [n("span", {
                staticClass: "sms-upgrade-voice__caller-id",
                attrs: {
                    title: e.$t("cci.upgrade.to.voice.callerId", {
                        callerId: e.formatFromNumber
                    }),
                    "aria-label": e.$t("cci.upgrade.to.voice.callerId", {
                        callerId: e.formatFromNumber
                    })
                }
            }, [e._v(e._s(e.$t("cci.upgrade.to.voice.callerId", {
                callerId: e.formatFromNumber
            })))]), e._v(" "), n("zm-button", {
                on: {
                    click: e.close
                }
            }, [e._v(e._s(e.$t("cci.common.button.cancel")))]), e._v(" "), n("zm-button", {
                attrs: {
                    type: "primary",
                    disabled: !e.formatFromNumber || !e.allowCall,
                    loading: e.upgrading
                },
                on: {
                    click: e.call
                }
            }, [e._v(e._s(e.$t("cci.callBar.call")))])], 1)], 1)
        }
            , zv = []
            , Hv = a(34788)
            , Kv = a.n(Hv)
            , py = a(36149)
            , fc = a(19598);
        function fo(i) {
            "@babel/helpers - typeof";
            return fo = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                fo(i)
        }
        function hh(i) {
            return Zv(i) || Yv(i) || vh(i) || Qv()
        }
        function Qv() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Yv(i) {
            if (typeof ve() < "u" && Re()(i) != null || i["@@iterator"] != null)
                return An()(i)
        }
        function Zv(i) {
            if (rr()(i))
                return Uf(i)
        }
        function Ai() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Ai = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && fo(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(fo(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function pc(i, e) {
            return qv(i) || Xv(i, e) || vh(i, e) || Jv()
        }
        function Jv() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function vh(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return Uf(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? Uf(i, e) : void 0
            }
        }
        function Uf(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function Xv(i, e) {
            var n = i == null ? null : typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (n != null) {
                var l, f, g, I, T = [], A = !0, N = !1;
                try {
                    if (g = (n = n.call(i)).next,
                    e === 0) {
                        if (Object(n) !== n)
                            return;
                        A = !1
                    } else
                        for (; !(A = (l = g.call(n)).done) && (T.push(l.value),
                        T.length !== e); A = !0)
                            ;
                } catch (re) {
                    N = !0,
                        f = re
                } finally {
                    try {
                        if (!A && n.return != null && (I = n.return(),
                        Object(I) !== I))
                            return
                    } finally {
                        if (N)
                            throw f
                    }
                }
                return T
            }
        }
        function qv(i) {
            if (rr()(i))
                return i
        }
        function mh(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function hc(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            mh(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            mh(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function gh(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function yh(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = gh(Object(f), !0)).call(n, function(g) {
                    em(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = gh(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function em(i, e, n) {
            return (e = tm(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function tm(i) {
            var e = nm(i, "string");
            return fo(e) == "symbol" ? e : e + ""
        }
        function nm(i, e) {
            if (fo(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (fo(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        var rm = Zt.queueApi.getUpgradeNumbers
            , am = Zt.addressbookApi.getContactById
            , im = Zt.voiceApi.getCountries
            , om = Zt.voiceApi.preValidateEngagement;
        const sm = {
            props: ["queueId"],
            mixins: [Nn.A, Lt.nativeNotifyMixin],
            inject: ["$smsUpgradeToVoice"],
            data: function() {
                var e = this
                    , n = /^\d+$/
                    , l = function(g, I, T) {
                    var A = n.test(I);
                    e.isPhoneNumber = A ? !(T() && !1) : T(new Error(e.$t("numbers.BYOC.phoneNumbersError"))) && !1
                };
                return {
                    visible: !1,
                    type: "select",
                    selectedCountry: "+1 ",
                    channel: "",
                    fromNumber: "",
                    formatFromNumber: "",
                    inputNumber: "",
                    selectNumber: "",
                    addressbook: [],
                    loading: !1,
                    isPhoneNumber: !1,
                    countries: [],
                    rules: [{
                        validator: l,
                        trigger: "change"
                    }],
                    upgrading: !1
                }
            },
            computed: yh(yh({}, (0,
                zt.mapGetters)("sessionPanels", ["currentActiveTask"])), {}, {
                profileUserDetailNumber: function() {
                    var e = this.currentActiveTask || {}
                        , n = e.tkType
                        , l = e.direction;
                    if (n === "phone")
                        return l === "outbound" ? this.currentActiveTask.to : this.currentActiveTask.from;
                    if (n === "video" || n === "sms")
                        return this.currentActiveTask.customerName
                },
                customerNumbers: function() {
                    return this.addressbook.length === 0 && this.profileUserDetailNumber ? [this.profileUserDetailNumber] : this.addressbook
                },
                allowCall: function() {
                    return this.type === "input" ? this.fromNumber && this.inputNumber && this.country.length > 0 : this.formatFromNumber && this.selectNumber && this.fromNumber
                },
                title: function() {
                    return this.$t("cci.".concat(this.channel || "chat", ".upgradeVoice.title"))
                },
                description: function() {
                    return this.$t("cci.".concat(this.channel || "chat", ".upgradeVoice.desc"))
                },
                country: function() {
                    return this.selectedCountry.split(" ")[0]
                }
            }),
            watch: {
                visible: function(e) {
                    e ? window.addEventListener("keydown", this.handleEscKey) : window.removeEventListener("keydown", this.handleEscKey)
                }
            },
            methods: {
                onNumberSelect: function() {
                    this.type = "select"
                },
                onCountrySelect: function() {
                    this.type = "input"
                },
                handleEscKey: function(e) {
                    e.key === "Escape" && this.close()
                },
                open: function(e) {
                    var n = this;
                    this.channel = e,
                        this.visible = !0,
                        this.selectNumber = this.profileUserDetailNumber,
                        this.loading = !0,
                        O().all([this.getCallerId(), this.getContact(), this.getContires(), this.preValidateEngagement()]).finally(function() {
                            var l;
                            n.loading = !1,
                            ((l = n.customerNumbers) === null || l === void 0 ? void 0 : l.length) === 0 && (n.type = "input")
                        })
                },
                close: function() {
                    this.visible = !1,
                        this.type = "select",
                        this.selectedCountry = "+1 ",
                        this.fromNumber = "",
                        this.formatFromNumber = "",
                        this.inputNumber = "",
                        this.selectNumber = "",
                        this.addressbook = [],
                        this.loading = !1,
                        this.isPhoneNumber = !1,
                        this.countries = []
                },
                call: function() {
                    var e, n, l, f, g, I, T = this;
                    if (this.allowCall) {
                        var A = {
                            callFrom: this.fromNumber,
                            callTo: this.type === "input" ? oa()(e = "".concat(this.country)).call(e, this.inputNumber) : this.selectNumber,
                            instanceId: "",
                            queueId: this.queueId,
                            queueName: (n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.queueName,
                            taskId: (l = this.currentActiveTask) === null || l === void 0 ? void 0 : l.taskId,
                            engagementId: (f = this.currentActiveTask) === null || f === void 0 ? void 0 : f.engagementId,
                            upgradeDirection: ((g = this.currentActiveTask) === null || g === void 0 ? void 0 : g.direction) === "inbound" || ((I = this.currentActiveTask) === null || I === void 0 ? void 0 : I.direction) === "IN_BOUND" ? "Inbound" : "Outbound"
                        };
                        this.$smsUpgradeToVoice && (this.upgrading = !0,
                            this.$smsUpgradeToVoice(A).then(function() {
                                T.close()
                            }).finally(function() {
                                T.upgrading = !1
                            }))
                    }
                },
                onTypeChange: function() {
                    if (this.type === "select" && this.customerNumbers.length <= 1) {
                        var e;
                        this.selectNumber = (e = this.customerNumbers[0]) !== null && e !== void 0 ? e : ""
                    }
                },
                getCallerId: function() {
                    var e = this;
                    return hc(Ai().mark(function n() {
                        var l, f, g, I, T, A, N, re;
                        return Ai().wrap(function(ke) {
                            for (; ; )
                                switch (ke.prev = ke.next) {
                                    case 0:
                                        return ke.next = 2,
                                            (0,
                                                fc.tryApiCatch)(rm, e.queueId);
                                    case 2:
                                        if (f = ke.sent,
                                            g = pc(f, 2),
                                            I = g[0],
                                            T = g[1],
                                            !I) {
                                            ke.next = 8;
                                            break
                                        }
                                        return ke.abrupt("return");
                                    case 8:
                                        A = (l = T?.[0]) !== null && l !== void 0 ? l : {},
                                            N = A.number,
                                            re = A.formatNumber,
                                            e.fromNumber = N,
                                            e.formatFromNumber = re;
                                    case 11:
                                    case "end":
                                        return ke.stop()
                                }
                        }, n)
                    }))()
                },
                getContact: function() {
                    var e = this;
                    return hc(Ai().mark(function n() {
                        var l, f, g, I, T, A, N, re, fe, ke;
                        return Ai().wrap(function(vt) {
                            for (; ; )
                                switch (vt.prev = vt.next) {
                                    case 0:
                                        if (e.channel !== "chat") {
                                            vt.next = 3;
                                            break
                                        }
                                        return e.type = "input",
                                            vt.abrupt("return");
                                    case 3:
                                        return vt.next = 5,
                                            (0,
                                                fc.tryApiCatch)(am, {
                                                phoneNumber: e.profileUserDetailNumber
                                            });
                                    case 5:
                                        if (f = vt.sent,
                                            g = pc(f, 2),
                                            I = g[0],
                                            T = g[1],
                                            !I) {
                                            vt.next = 11;
                                            break
                                        }
                                        return vt.abrupt("return");
                                    case 11:
                                        T?.totalSize >= 1 && (T == null || (l = T.items) === null || l === void 0 ? void 0 : l.length) >= 1 && (e.addressbook = Oe()(A = (N = hh(new (Kv())(oa()(re = [e.profileUserDetailNumber || ""]).call(re, hh(rr()(T == null || (fe = T.items) === null || fe === void 0 || (fe = fe[0]) === null || fe === void 0 ? void 0 : fe.directNumbers) ? Oe()(ke = T.items[0].directNumbers).call(ke, function(Me) {
                                            return !!(Me != null && Rl()(Me).call(Me))
                                        }) : []))))) !== null && N !== void 0 ? N : []).call(A, function(Me) {
                                            return !!Me
                                        }),
                                            e.selectNumber = e.addressbook[0]);
                                    case 12:
                                    case "end":
                                        return vt.stop()
                                }
                        }, n)
                    }))()
                },
                getContires: function() {
                    var e = this;
                    return hc(Ai().mark(function n() {
                        var l, f, g, I, T, A;
                        return Ai().wrap(function(re) {
                            for (; ; )
                                switch (re.prev = re.next) {
                                    case 0:
                                        return re.next = 2,
                                            (0,
                                                fc.tryApiCatch)(im);
                                    case 2:
                                        if (f = re.sent,
                                            g = pc(f, 2),
                                            I = g[0],
                                            T = g[1],
                                            !I) {
                                            re.next = 8;
                                            break
                                        }
                                        return re.abrupt("return");
                                    case 8:
                                        e.countries = ma()(T).call(T, function(fe) {
                                            return {
                                                name: fe.name,
                                                code: "+".concat(fe.code)
                                            }
                                        }),
                                            A = D()(l = e.countries).call(l, function(fe) {
                                                return fe.code === "+1"
                                            }),
                                            e.selectedCountry = "+1 " + A?.name;
                                    case 11:
                                    case "end":
                                        return re.stop()
                                }
                        }, n)
                    }))()
                },
                preValidateEngagement: function() {
                    var e = this;
                    return hc(Ai().mark(function n() {
                        var l, f, g, I, T, A;
                        return Ai().wrap(function(re) {
                            for (; ; )
                                switch (re.prev = re.next) {
                                    case 0:
                                        return re.prev = 0,
                                            re.next = 3,
                                            (0,
                                                fc.tryApiCatch)(om, {
                                                engagementId: (l = e.currentActiveTask) === null || l === void 0 ? void 0 : l.engagementId,
                                                queueId: e.queueId
                                            });
                                    case 3:
                                        if (g = re.sent,
                                            I = pc(g, 2),
                                            T = I[0],
                                            A = I[1],
                                            !(A != null && (f = A.data) !== null && f !== void 0 && f.status)) {
                                            re.next = 9;
                                            break
                                        }
                                        return re.abrupt("return");
                                    case 9:
                                        if (!T) {
                                            re.next = 13;
                                            break
                                        }
                                        return e.close(),
                                            e.nativeNotify(T, "error"),
                                            re.abrupt("return", new Error(T));
                                    case 13:
                                        re.next = 19;
                                        break;
                                    case 15:
                                        return re.prev = 15,
                                            re.t0 = re.catch(0),
                                            console.log(re.t0),
                                            re.abrupt("return", O().resolve());
                                    case 19:
                                    case "end":
                                        return re.stop()
                                }
                        }, n, null, [[0, 15]])
                    }))()
                },
                handleInputFocus: function() {
                    this.type = "input"
                }
            }
        };
        var lm = (0,
            ir.A)(sm, Gv, zv, !1, null, "e5ae4cf2", null);
        const cm = lm.exports;
        function po(i) {
            "@babel/helpers - typeof";
            return po = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                po(i)
        }
        function um(i, e) {
            return pm(i) || fm(i, e) || $f(i, e) || dm()
        }
        function dm() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function fm(i, e) {
            var n = i == null ? null : typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (n != null) {
                var l, f, g, I, T = [], A = !0, N = !1;
                try {
                    if (g = (n = n.call(i)).next,
                    e === 0) {
                        if (Object(n) !== n)
                            return;
                        A = !1
                    } else
                        for (; !(A = (l = g.call(n)).done) && (T.push(l.value),
                        T.length !== e); A = !0)
                            ;
                } catch (re) {
                    N = !0,
                        f = re
                } finally {
                    try {
                        if (!A && n.return != null && (I = n.return(),
                        Object(I) !== I))
                            return
                    } finally {
                        if (N)
                            throw f
                    }
                }
                return T
            }
        }
        function pm(i) {
            if (rr()(i))
                return i
        }
        function _h(i) {
            return mm(i) || vm(i) || $f(i) || hm()
        }
        function hm() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function vm(i) {
            if (typeof ve() < "u" && Re()(i) != null || i["@@iterator"] != null)
                return An()(i)
        }
        function mm(i) {
            if (rr()(i))
                return Bf(i)
        }
        function vy(i) {
            throw new TypeError('"' + i + '" is read-only')
        }
        function bh(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function ai(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = bh(Object(f), !0)).call(n, function(g) {
                    gm(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = bh(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function gm(i, e, n) {
            return (e = ym(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function ym(i) {
            var e = _m(i, "string");
            return po(e) == "symbol" ? e : e + ""
        }
        function _m(i, e) {
            if (po(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (po(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        function Ch(i, e) {
            var n = typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (!n) {
                if (rr()(i) || (n = $f(i)) || e && i && typeof i.length == "number") {
                    n && (i = n);
                    var l = 0
                        , f = function() {};
                    return {
                        s: f,
                        n: function() {
                            return l >= i.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: i[l++]
                            }
                        },
                        e: function(N) {
                            throw N
                        },
                        f
                    }
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
            }
            var g, I = !0, T = !1;
            return {
                s: function() {
                    n = n.call(i)
                },
                n: function() {
                    var N = n.next();
                    return I = N.done,
                        N
                },
                e: function(N) {
                    T = !0,
                        g = N
                },
                f: function() {
                    try {
                        I || n.return == null || n.return()
                    } finally {
                        if (T)
                            throw g
                    }
                }
            }
        }
        function $f(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return Bf(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? Bf(i, e) : void 0
            }
        }
        function Bf(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function ho() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            ho = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && po(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(po(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function Eh(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function Vf(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            Eh(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            Eh(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        var bm = Zt.chatApi.leaveEngagement
            , Ih = [U.CHANNEL_KEYS.facebook.keyUpper, U.CHANNEL_KEYS.whatsapp.keyUpper];
        const Cm = {
            name: "ChatHead",
            props: ["engagement", "chatInstance"],
            inject: ["$agent"],
            provide: function() {
                return {
                    callFnByUsingVDI: function(n) {
                        return Vf(ho().mark(function l() {
                            return ho().wrap(function(g) {
                                for (; ; )
                                    switch (g.prev = g.next) {
                                        case 0:
                                            if (typeof n == "function") {
                                                g.next = 2;
                                                break
                                            }
                                            throw new Error("invalid arguments!");
                                        case 2:
                                            return g.next = 4,
                                                n();
                                        case 4:
                                            return g.abrupt("return", g.sent);
                                        case 5:
                                        case "end":
                                            return g.stop()
                                    }
                            }, l)
                        }))()
                    }
                }
            },
            mixins: [Qr.A, vn.A, Ca.A],
            components: {
                TransferDialog: Lt.TransferDialog,
                Release: Wv,
                End: Pv,
                UpgradeToVideoDialog: Lt.UpgradeToVideoDialog,
                CustomDialog: dh.default,
                SmsUpgradeToVideo: Lt.SmsUpgradeToVideo,
                UpgradeVoice: cm,
                PhoneIcon: ge(),
                ReleaseIcon: ft(),
                TakeOverIcon: Un(),
                TransferIcon: zh(),
                VideoIcon: Kh(),
                MarkAwaitingReplyIcon: v(),
                MoreIcon: L()
            },
            setup: function() {
                var e = (0,
                    St.useCollapse)()
                    , n = e.collapse;
                return {
                    collapse: n
                }
            },
            data: function() {
                return {
                    showTransfer: !1,
                    showRelease: !1,
                    showUpgradeChat: !1,
                    showUpgradeSMS: !1,
                    backLoading: !1,
                    showTakeOver: !1,
                    takeOverLoading: !1,
                    hideActionInEmail: !1,
                    markAwaitingReplyLoading: !1,
                    width: 0,
                    visibleButtons: [],
                    overflowButtons: [],
                    moreButtonWidth: 60
                }
            },
            mounted: function() {
                var e = this
                    , n = 0
                    , l = 5;
                if (this.resizeObserver = new ResizeObserver(Qh(function(g) {
                    var I = Ch(g), T;
                    try {
                        for (I.s(); !(T = I.n()).done; ) {
                            var A = T.value
                                , N = A.contentRect.width;
                            Math.abs(n - N) > l && (n = N,
                                e.resizeToolbar())
                        }
                    } catch (re) {
                        I.e(re)
                    } finally {
                        I.f()
                    }
                }, 100),{
                    box: "border-box"
                }),
                    this.resizeObserver.observe(this.$refs.container),
                    this.resizeToolbar(),
                    this.allowMarkAwaitingReply) {
                    var f;
                    this.hideActionInEmail = (f = this.engagement) === null || f === void 0 ? void 0 : f.markAwaitingReply,
                        this.chatInstance.on(Mt.EmailEvents.AWAITING_REPLY_CHANGE, function(g) {
                            var I = g.type
                                , T = g.result;
                            if ((0,
                                Vr.safelog)(function(vt) {
                                var Me = vt.log;
                                return Me("on mark awaiting:", T, new Date(T?.startTime || ee()()).getTime() > ee()(), e.engagement)
                            }),
                                e.markAwaitingReplyLoading = !1,
                            T != null && T.success) {
                                var A, N, re = ((A = e.engagement) === null || A === void 0 ? void 0 : A.taskId) || ((N = e.engagement) === null || N === void 0 || (N = N.rez) === null || N === void 0 || (N = N.task) === null || N === void 0 ? void 0 : N.id), fe = I === "mark", ke = T?.startTime || ee()(), Ht = new Date(ke).getTime() > ee()() ? ee()() : ke;
                                e.updateChatTask({
                                    taskId: re,
                                    markAwaitingReply: fe,
                                    emailAssignTime: I === "cancel" ? Ht : void 0,
                                    upsert: !1
                                }),
                                    e.markWaitingReply4ActiveTaskQueue({
                                        taskId: re,
                                        markAwaitingReply: fe
                                    }),
                                    e.hideActionInEmail = fe
                            } else
                                e.nativeNotify("".concat(I === "mark" ? "mark awaiting reply" : "continue engagement", " fail"), "error")
                        })
                }
            },
            computed: ai(ai(ai(ai(ai(ai(ai({}, (0,
                zt.mapGetters)("livechat", ["currentEngagement", "currentEnableEditor"])), (0,
                zt.mapGetters)("sessionPanels", ["currentActiveTask", "activeTaskDurationList", "currentTaskId", "engagementIsBackClicked", "menuTab", "currentMonitorTask"])), (0,
                zt.mapGetters)(["settings", "piiSettings"])), (0,
                zt.mapGetters)({
                currentAgent: "user"
            })), (0,
                zt.mapGetters)("coreVoice", ["getIsOnCall", "getIsCalling"])), (0,
                zt.mapGetters)("video", ["hasAccepted"])), {}, {
                isNewUI: function() {
                    return !0
                },
                name: function() {
                    if (!this.currentEngagement)
                        return "";
                    var e = this.currentEngagement, n = e.customerId, l = e.customerName, f = e.channelType, g = f === void 0 ? "" : f, I = e.agent, T = e.superVisorList, A = T === void 0 ? [] : T, N = this.currentActiveTask || {}, re = N.tempCustomerName, fe, ke = this.piiSettings || {}, Ht = ke.maskPiiInfo, vt = Ht === void 0 ? !1 : Ht;
                    g === "SMS" && (l || re) ? re ? fe = this.calcNameWithPhiMask(re, {
                        scene: "active"
                    }) : fe = this.calcPhoneWithPhiMask(l, {
                        scene: "active"
                    }) : l ? fe = this.calcNameWithPhiMask(l, {
                        scene: "active"
                    }) : fe = vt ? n?.replace(U.phiReg, "*") : n;
                    var Me = fe;
                    if (I && (this.isView || this.isBarge)) {
                        var he;
                        return oa()(he = "".concat(I.name, " & ")).call(he, Me)
                    }
                    if (A.length) {
                        var sn, ln, lt = ma()(sn = Oe()(A).call(A, function(Tn) {
                            return Tn.event === "barge"
                        })).call(sn, function(Tn) {
                            return Tn.supervisor.name
                        });
                        return oa()(ln = [Me]).call(ln, _h(lt)).join(" & ")
                    }
                    return Me
                },
                isView: function() {
                    var e;
                    return ((e = this.currentEngagement) === null || e === void 0 ? void 0 : e.superVisor) === "view"
                },
                isBarge: function() {
                    var e, n;
                    return ((e = this.currentEngagement) === null || e === void 0 ? void 0 : e.superVisor) === "barge" && ((n = this.currentEngagement) === null || n === void 0 || (n = n.feature) === null || n === void 0 ? void 0 : n.disableBarge) !== !0
                },
                isTakeOver: function() {
                    var e, n;
                    return ((e = this.currentEngagement) === null || e === void 0 ? void 0 : e.superVisor) === "takeover" && ((n = this.currentEngagement) === null || n === void 0 || (n = n.feature) === null || n === void 0 ? void 0 : n.disableTakeOver) !== !0
                },
                isDropIn: function() {
                    var e;
                    return ((e = this.currentEngagement) === null || e === void 0 ? void 0 : e.superVisor) === "dropin"
                },
                allowRelease: function() {
                    var e;
                    return ((e = this.currentEngagement) === null || e === void 0 ? void 0 : e.allowRelease) !== !1
                },
                allowUpgradeChat: function() {
                    var e, n, l, f, g, I, T;
                    if (!((e = this.account) !== null && e !== void 0 && e.enableVideoChannel) || ((n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.isEnableUpgradeToVideo) === !1 || this.isBarge || this.isView || ((l = this.currentEngagement) === null || l === void 0 ? void 0 : l.channelType) !== "Chat")
                        return !1;
                    var A = (f = this.settings) === null || f === void 0 ? void 0 : D()(f).call(f, function(Wn) {
                        return Wn.settingId === "upgrade-engagements"
                    });
                    if (!(A != null && A.enabled))
                        return !1;
                    var N = null
                        , re = null
                        , fe = null
                        , ke = null
                        , Ht = null;
                    Ce()(g = A.childs).call(g, function(Wn) {
                        Wn.settingId === "upgrade-facebook-video" && (N = Wn),
                        Wn.settingId === "upgrade-whatsapp-video" && (re = Wn),
                        Wn.settingId === "upgrade-chat-video" && (fe = Wn),
                        Wn.settingId === "upgrade-instagram-video" && (ke = Wn),
                        Wn.settingId === "upgrade-team-chat-video" && (Ht = Wn)
                    });
                    var vt = (I = this.currentEngagement) === null || I === void 0 ? void 0 : I.subChannel
                        , Me = !1;
                    if (vt === U.CHANNEL_KEYS.facebook.keyUpper) {
                        var he;
                        Me = !!(!((he = N) === null || he === void 0) && he.enabled)
                    } else if (vt === U.CHANNEL_KEYS.whatsapp.keyUpper) {
                        var sn;
                        Me = !!(!((sn = re) === null || sn === void 0) && sn.enabled)
                    } else if (vt === U.CHANNEL_KEYS.instagram.keyUpper) {
                        var ln;
                        Me = !!(!((ln = ke) === null || ln === void 0) && ln.enabled)
                    } else if (vt === U.CHANNEL_KEYS.teamchat.keyUpper) {
                        var lt;
                        Me = !!(!((lt = Ht) === null || lt === void 0) && lt.enabled)
                    } else {
                        var Tn;
                        Me = !!(!((Tn = fe) === null || Tn === void 0) && Tn.enabled)
                    }
                    return !((T = this.currentEngagement) !== null && T !== void 0 && T.superVisor) && Me
                },
                allowUpgradeToVoice: function() {
                    var e, n, l, f, g, I;
                    if (((e = this.currentActiveTask) === null || e === void 0 ? void 0 : e.isEnableUpgradeToVoice) === !1 || !((n = this.account) !== null && n !== void 0 && n.enableUpgradeToVoice) || this.isBarge || this.isView)
                        return !1;
                    var T = (l = this.settings) === null || l === void 0 ? void 0 : D()(l).call(l, function(he) {
                        return he.settingId === "upgrade-engagements"
                    });
                    if (!(T != null && T.enabled))
                        return !1;
                    var A = (f = this.currentEngagement) === null || f === void 0 ? void 0 : f.subChannel
                        , N = (g = this.currentEngagement) === null || g === void 0 ? void 0 : g.channelType
                        , re = A === "WHATS_APP" && this.isUpgradeEnabled(T, "WHATS_APP")
                        , fe = A === "FACEBOOK_MESSENGER" && this.isUpgradeEnabled(T, "FACEBOOK_MESSENGER")
                        , ke = A === "INSTAGRAM" && this.isUpgradeEnabled(T, "INSTAGRAM")
                        , Ht = A === "TEAM_CHAT" && this.isUpgradeEnabled(T, "TEAM_CHAT")
                        , vt = N === "Chat" && this.isUpgradeEnabled(T, "Chat") && !M()(I = ["WHATS_APP", "FACEBOOK_MESSENGER", "INSTAGRAM"]).call(I, A)
                        , Me = N === "SMS" && this.isUpgradeEnabled(T, "SMS");
                    return (vt || Me || re || fe || Ht || ke) && !M()(Ih).call(Ih, A)
                },
                allowUpgradeSMS: function() {
                    var e, n, l, f, g, I;
                    if (!((e = this.account) !== null && e !== void 0 && e.enableVideoChannel) || ((n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.isEnableUpgradeToVideo) === !1 || this.isBarge || this.isView)
                        return !1;
                    var T = (l = this.settings) === null || l === void 0 ? void 0 : D()(l).call(l, function(N) {
                        return N.settingId === "upgrade-engagements"
                    });
                    if (!(T != null && T.enabled))
                        return !1;
                    var A = D()(f = T.childs).call(f, function(N) {
                        return N.settingId === "upgrade-sms-video"
                    });
                    return !((g = this.currentEngagement) !== null && g !== void 0 && g.superVisor) && ((I = this.currentEngagement) === null || I === void 0 ? void 0 : I.channelType) === "SMS" && A?.enabled
                },
                allowMarkAwaitingReply: function() {
                    return !1
                },
                hideActions: function() {
                    var e, n = this.currentActiveTask || {}, l = n.eventType, f = n.engagementId, g = this.currentEngagement || {}, I = g.engagementId;
                    return I === f && M()(e = ["chat.ended", "sms.ended"]).call(e, l)
                },
                inMonitorChat: function() {
                    var e;
                    return this.menuTab === U.eMenuName.sessionMonitorChatSMS && ((e = this.currentMonitorTask) === null || e === void 0 ? void 0 : e.type) === "chat"
                },
                inMonitorSMS: function() {
                    var e;
                    return this.menuTab === U.eMenuName.sessionMonitorChatSMS && ((e = this.currentMonitorTask) === null || e === void 0 ? void 0 : e.type) === "sms"
                },
                currentActionButtonsStatus: function() {
                    var e;
                    return ((e = this.engagement) === null || e === void 0 ? void 0 : e.channelType) === "SMS" ? this.currentEnableEditor : !0
                },
                isIngoingOutbound: function() {
                    return this.getIsOnCall || this.getIsCalling || this.hasAccepted
                },
                actionButtons: function() {
                    var e, n, l, f, g, I, T, A, N = {
                        type: "transfer",
                        label: this.$t("cci.common.transfer"),
                        tip: this.currentActionButtonsStatus ? this.$t("cci.common.transfer") : this.$t("cci.transferCall.tip.notResponse"),
                        icon: "TransferIcon",
                        handler: m()(e = this.onToggleTransfer).call(e, this),
                        enable: !this.isView && !this.isDropIn && this.getSettingEnabled("transfer-engagement"),
                        disabled: this.getIsCalling || !this.currentActionButtonsStatus
                    }, re = {
                        type: "release",
                        label: this.$t("cci.common.release"),
                        tip: this.currentActionButtonsStatus ? this.$t("cci.common.release") : this.$t("cci.transferCall.tip.notRelease"),
                        icon: "ReleaseIcon",
                        handler: m()(n = this.onToggleRelease).call(n, this),
                        enable: this.allowRelease && !this.isView,
                        disabled: this.getIsCalling || !this.currentActionButtonsStatus
                    }, fe = oa()(l = [{
                        type: "takeover",
                        label: this.$t("cci.common.takeover"),
                        tip: this.$t("cci.common.takeover"),
                        icon: "TakeOverIcon",
                        handler: m()(f = this.onToggleTakeOver).call(f, this),
                        enable: this.isBarge && this.getSettingEnabled("takeover-video-engagement"),
                        disabled: this.getIsCalling
                    }]).call(l, _h(this.isNewUI ? [N, re] : [re, N]), [{
                        type: "markAwaitingReply",
                        label: this.$t("cci.common.markAwaitingReply"),
                        tip: this.$t("cci.common.markAwaitingReply"),
                        icon: "MarkAwaitingReplyIcon",
                        handler: m()(g = this.onToggleMarkAwaitingReply).call(g, this),
                        enable: !this.isView && !this.isDropIn && this.allowMarkAwaitingReply,
                        disabled: this.getIsCalling || this.markAwaitingReplyLoading
                    }, {
                        type: "upgradeVoice",
                        label: this.$t("cci.analytics.label.VoiceCall"),
                        tip: this.currentActionButtonsStatus ? this.$t("cci.upgrade.to.voice") : this.$t("cci.VoiceCall.tip.notResponse"),
                        icon: "PhoneIcon",
                        handler: m()(I = this.onUpgradeVoice).call(I, this),
                        enable: this.allowUpgradeToVoice,
                        disabled: this.isIngoingOutbound || !this.currentActionButtonsStatus
                    }, {
                        type: "chatUpgradeVideo",
                        label: this.$t("cci.analytics.label.VideoCall"),
                        tip: this.currentActionButtonsStatus ? this.$t("cci.upgrade.to.video") : this.$t("cci.VideoCall.tip.notResponse"),
                        icon: "VideoIcon",
                        handler: m()(T = this.onToggleUpgradeChat).call(T, this),
                        enable: this.allowUpgradeChat,
                        disabled: this.isIngoingOutbound || !this.currentActionButtonsStatus
                    }, {
                        type: "smsUpgradeVideo",
                        label: this.$t("cci.analytics.label.VideoCall"),
                        tip: this.currentActionButtonsStatus ? this.$t("cci.upgrade.to.video") : this.$t("cci.VideoCall.tip.notResponse"),
                        icon: "VideoIcon",
                        handler: m()(A = this.onToggleUpgradeSMS).call(A, this),
                        enable: this.allowUpgradeSMS,
                        disabled: this.isIngoingOutbound || !this.currentActionButtonsStatus
                    }]);
                    return fe
                }
            }),
            watch: {
                currentEngagement: function(e, n) {
                    var l;
                    (l = this.$refs.smsUpgradeVoice) === null || l === void 0 || l.close(),
                    (!e || e.engagementId !== n?.engagementId) && this.clearShow()
                },
                engagementIsBackClicked: function(e) {
                    e && this.isView && (this.inMonitorChat || this.inMonitorSMS) && this.onBack()
                },
                actionButtons: {
                    immediate: !0,
                    handler: "resizeToolbar"
                }
            },
            methods: ai(ai(ai({}, (0,
                zt.mapActions)("livechat", ["createSuperVisorJoin"])), (0,
                zt.mapMutations)("sessionPanels", ["markWaitingReply4ActiveTaskQueue", "updateChatTask"])), {}, {
                onToggleTransfer: function() {
                    var e;
                    U.monitor.dispatchMonitor({
                        engagementId: (e = this.engagement) === null || e === void 0 ? void 0 : e.engagementId,
                        name: "agent_click_transfer"
                    }, U.monitor.MONITOR_CHAT_CHANEL),
                        this.showTransfer = !this.showTransfer
                },
                onCloseTransfer: function() {
                    this.showTransfer = !1
                },
                onToggleRelease: function() {
                    var e;
                    U.monitor.dispatchMonitor({
                        engagementId: (e = this.engagement) === null || e === void 0 ? void 0 : e.engagementId,
                        name: "agent_click_release"
                    }, U.monitor.MONITOR_CHAT_CHANEL),
                        this.showRelease = !this.showRelease
                },
                onCloseRelease: function() {
                    this.showRelease = !1
                },
                onToggleUpgradeChat: function() {
                    var e;
                    U.monitor.dispatchMonitor({
                        engagementId: (e = this.engagement) === null || e === void 0 ? void 0 : e.engagementId,
                        name: "agent_click_upgrade_to_video"
                    }, U.monitor.MONITOR_CHAT_CHANEL),
                        this.showUpgradeChat = !this.showUpgradeChat
                },
                onCloseUpgradeChat: function() {
                    this.showUpgradeChat = !1
                },
                onUpgradeVoice: function() {
                    var e;
                    U.monitor.dispatchMonitor({
                        engagementId: (e = this.engagement) === null || e === void 0 ? void 0 : e.engagementId,
                        name: "agent_click_upgrade_to_voice"
                    }, U.monitor.MONITOR_CHAT_CHANEL);
                    var n = this.currentEngagement || {}
                        , l = n.channelType;
                    this.$refs.smsUpgradeVoice.open(l === "SMS" ? "sms" : "chat")
                },
                onToggleTakeOver: function() {
                    this.showTakeOver = !this.showTakeOver
                },
                onToggleMarkAwaitingReply: function() {
                    var e, n, l;
                    U.monitor.dispatchMonitor({
                        engagementId: (e = this.engagement) === null || e === void 0 ? void 0 : e.engagementId,
                        name: "agent_click_mark_awaiting_reply"
                    }, U.monitor.MONITOR_CHAT_CHANEL),
                        this.markAwaitingReplyLoading = !0,
                    (n = this.chatInstance) === null || n === void 0 || (n = n.emailEditor) === null || n === void 0 || (l = n.changeAwaitingReplyStatus) === null || l === void 0 || l.call(n, !0)
                },
                onCloseTakeOver: function() {
                    this.showTakeOver = !1
                },
                clearShow: function() {
                    this.showTransfer = !1,
                        this.showRelease = !1,
                        this.showUpgradeChat = !1,
                        this.showUpgradeSMS = !1,
                        this.showTakeOver = !1
                },
                backToActiveList: function() {
                    this.$bus.$emit("home-menu-select", 6, {
                        tab: "active"
                    })
                },
                onToggleUpgradeSMS: function() {
                    var e;
                    U.monitor.dispatchMonitor({
                        engagementId: (e = this.engagement) === null || e === void 0 ? void 0 : e.engagementId,
                        name: "agent_click_upgrade_to_video"
                    }, U.monitor.MONITOR_CHAT_CHANEL),
                        this.showUpgradeSMS = !this.showUpgradeSMS
                },
                onCloseUpgradeSMS: function() {
                    this.showUpgradeSMS = !1
                },
                onTakeOver: function() {
                    var e = this;
                    return Vf(ho().mark(function n() {
                        var l, f, g, I, T, A;
                        return ho().wrap(function(re) {
                            for (; ; )
                                switch (re.prev = re.next) {
                                    case 0:
                                        return l = e.$agent(),
                                            f = l.userInfo,
                                            g = e.currentEngagement,
                                            I = g.engagementId,
                                            T = g.channelType,
                                            e.takeOverLoading = !0,
                                            re.next = 5,
                                            e.createSuperVisorJoin({
                                                engagementId: I,
                                                eventType: "tack_over_chat",
                                                userId: f.id,
                                                channelType: T
                                            });
                                    case 5:
                                        A = re.sent,
                                            e.takeOverLoading = !1,
                                        A && e.nativeNotify(A, "error"),
                                            e.showTakeOver = !1;
                                    case 9:
                                    case "end":
                                        return re.stop()
                                }
                        }, n)
                    }))()
                },
                onBack: function() {
                    var e = this;
                    return Vf(ho().mark(function n() {
                        var l, f, g, I, T, A, N, re;
                        return ho().wrap(function(ke) {
                            for (; ; )
                                switch (ke.prev = ke.next) {
                                    case 0:
                                        if (l = e.$agent(),
                                            f = l.userInfo,
                                            g = e.currentEngagement,
                                            I = g.engagementId,
                                            T = g.channelType,
                                            !e.backLoading) {
                                            ke.next = 4;
                                            break
                                        }
                                        return ke.abrupt("return");
                                    case 4:
                                        return e.backLoading = !0,
                                            ke.next = 7,
                                            (0,
                                                U.tryApiCatch)(bm, T, {
                                                engagementId: I,
                                                participantId: f.id,
                                                type: 3
                                            });
                                    case 7:
                                        A = ke.sent,
                                            N = um(A, 1),
                                            re = N[0],
                                            e.backLoading = !1,
                                        re || e.backToActiveList();
                                    case 12:
                                    case "end":
                                        return ke.stop()
                                }
                        }, n)
                    }))()
                },
                onActionCommand: function(e) {
                    var n, l = D()(n = this.actionButtons).call(n, function(f) {
                        return f.type === e
                    });
                    l && l.handler()
                },
                resizeToolbar: function() {
                    var e = this;
                    this.$nextTick(function() {
                        var n = e.$refs.container ? e.$refs.container.offsetWidth : 0;
                        e.$refs.moreButton && (e.moreButtonWidth = e.$refs.moreButton.offsetWidth);
                        var l = e.moreButtonWidth + 14, f = [], g = [], I = e.$refs.buttons || [], T = !1, A = Ch(e.actionButtons), N;
                        try {
                            var re = function() {
                                var ke = N.value;
                                if (ke.enable) {
                                    var Ht, vt, Me = (Ht = (vt = D()(I).call(I, function(he) {
                                        return he.dataset.type === ke.type
                                    })) === null || vt === void 0 ? void 0 : vt.offsetWidth) !== null && Ht !== void 0 ? Ht : 80;
                                    if (T)
                                        return g.push(ke),
                                            1;
                                    l + Me < n ? (f.push(ke),
                                        l += Me) : (g.push(ke),
                                        T = !0)
                                }
                            };
                            for (A.s(); !(N = A.n()).done; )
                                re()
                        } catch (fe) {
                            A.e(fe)
                        } finally {
                            A.f()
                        }
                        e.visibleButtons = f,
                            e.overflowButtons = g
                    })
                },
                isUpgradeEnabled: function(e, n) {
                    var l, f = {
                        WHATS_APP: "upgrade-whatsapp-voice",
                        FACEBOOK_MESSENGER: "upgrade-facebook-voice",
                        INSTAGRAM: "upgrade-instagram-voice",
                        Chat: "upgrade-chat-voice",
                        SMS: "upgrade-sms-voice",
                        TEAM_CHAT: "upgrade-team-chat-voice"
                    }, g = f[n], I = e == null ? void 0 : D()(l = e.childs).call(l, function(T) {
                        return T.settingId === g
                    });
                    return I?.enabled || !1
                }
            }),
            beforeDestroy: function() {
                var e;
                this.clearShow(),
                (e = this.resizeObserver) === null || e === void 0 || e.disconnect()
            }
        };
        var Em = (0,
            ir.A)(Cm, Wr, $r, !1, null, "7ef529ac", null);
        const Im = Em.exports;
        var wm = function() {
            var e = this
                , n = e._self._c;
            return e._m(0)
        }
            , Tm = [function() {
            var i = this
                , e = i._self._c;
            return e("div", {
                staticClass: "dropin-loading"
            }, [e("i", {
                staticClass: "dropin-loading__image"
            })])
        }
        ];
        const Sm = {
            computed: {},
            methods: {}
        };
        var Am = (0,
            ir.A)(Sm, wm, Tm, !1, null, "38bbf850", null);
        const Lm = Am.exports;
        var Nm = function() {
            var e = this
                , n = e._self._c;
            return n("div", {
                staticClass: "dropin-notify",
                attrs: {
                    role: "alert",
                    "aria-label": e.$t("cci.analytics.label.dropInChatInfo")
                }
            }, [n("i", {
                staticClass: "dropin-notify__icon dropin-notify__icon--info"
            }), e._v(`
  ` + e._s(e.$t("cci.analytics.label.dropInChatInfo")) + `
`)])
        }
            , Mm = [];
        const Pm = {
            computed: {},
            methods: {}
        };
        var km = (0,
            ir.A)(Pm, Nm, Mm, !1, null, "394a82e5", null);
        const Om = km.exports;
        var xm = function() {
            var e = this
                , n = e._self._c;
            return n("div", {
                staticClass: "dropin-tips"
            }, [e._v(`
  ` + e._s(e.$t("cci.analytics.label.dropInChatInfoTips", {
                customerName: e.customerName
            })) + `
`)])
        }
            , Dm = [];
        const Rm = {
            props: ["engagement"],
            computed: {
                customerName: function() {
                    var e;
                    return (this === null || this === void 0 || (e = this.engagement) === null || e === void 0 ? void 0 : e.customerName) || "Consumer"
                }
            },
            methods: {}
        };
        var jm = (0,
            ir.A)(Rm, xm, Dm, !1, null, "69f90799", null);
        const Um = jm.exports;
        var $m = function() {
            var e = this
                , n = e._self._c
                , l = e._self._setupProxy;
            return n("div", {
                staticClass: "chat-content__emailicon"
            }, [n(l.EmailIncomingIcon, {
                staticClass: "chat-content__emailSvg"
            }), e._v(" "), n("p", {
                staticClass: "chat-content__emaildesc"
            }, [e._v(`
    ` + e._s(l.$t("cci.crm.email.inComingText", {
                name: l.displayName,
                CRM: l.crmPlateform || ""
            })) + `
  `)])], 1)
        }
            , Bm = []
            , Vm = a(50771)
            , Fm = a.n(Vm);
        const Wm = {
            __name: "email-incoming",
            setup: function(e) {
                var n = (0,
                    ka.useI18n)()
                    , l = n.t
                    , f = (0,
                    Mn.useSessionPanelsGetters)()
                    , g = f.currentActiveTask
                    , I = (0,
                    Qe.computed)(function() {
                    return (0,
                        Bn.getCRM)() || (0,
                        U.getCoreTabCrmPlatform)()
                })
                    , T = (0,
                    Qe.computed)(function() {
                    var A = g.value || {}
                        , N = A.crmName
                        , re = A.customerName
                        , fe = N || re || l("cci.common.table.customer");
                    return fe
                });
                return {
                    __sfc: !0,
                    $t: l,
                    currentActiveTask: g,
                    crmPlateform: I,
                    displayName: T,
                    EmailIncomingIcon: Fm()
                }
            }
        };
        var Gm = (0,
            ir.A)(Wm, $m, Bm, !1, null, "2249c74a", null);
        const zm = Gm.exports;
        var Hm = function() {
            var e = this
                , n = e._self._c;
            return !e.disableBarge || !e.disableTakeOver ? n("div", {
                staticClass: "supervisor-panel"
            }, [!e.disableBarge && e.getSettingEnabled("barge-on-engagement") ? n("div", {
                staticClass: "supervisor-panel__btn",
                attrs: {
                    role: "button"
                },
                on: {
                    click: e.toggleBarge
                }
            }, [e.isDark ? n("BargeIconDark", {
                staticClass: "supervisor-panel__icon"
            }) : n("BargeIcon", {
                staticClass: "supervisor-panel__icon"
            }), e._v(" "), n("span", {
                staticClass: "supervisor-panel__text"
            }, [e._v("Barge")])], 1) : e._e(), e._v(" "), !e.disableTakeOver && e.getSettingEnabled("takeover-video-engagement") ? n("div", {
                staticClass: "supervisor-panel__btn",
                attrs: {
                    role: "button"
                },
                on: {
                    click: e.toggleTakeOver
                }
            }, [e.isDark ? n("TakeOverIconDark", {
                staticClass: "supervisor-panel__icon"
            }) : n("TakeOverIcon", {
                staticClass: "supervisor-panel__icon"
            }), e._v(" "), n("span", {
                staticClass: "supervisor-panel__text"
            }, [e._v("Takeover")])], 1) : e._e(), e._v(" "), n("Dialog", {
                attrs: {
                    title: "Barge into the Chat",
                    text: "You will join this chat and the consumer will see your name.",
                    "ok-text": "Barge",
                    visible: e.showBarge,
                    loading: e.loading
                },
                on: {
                    ok: function(f) {
                        return e.onAction("barge_chat")
                    },
                    close: e.closeBarge
                }
            }), e._v(" "), n("Dialog", {
                attrs: {
                    title: "Take Over the Chat",
                    text: "The agent will leave the chat, and you will be able to end it yourself. The engagement will also display in your Active list.",
                    "ok-text": "Take Over",
                    visible: e.showTakeOver,
                    loading: e.loading
                },
                on: {
                    ok: function(f) {
                        return e.onAction("tack_over_chat")
                    },
                    close: e.closeTakeOver
                }
            })], 1) : e._e()
        }
            , Km = []
            , Qm = a(83494)
            , Ym = a.n(Qm)
            , Zm = a(5467)
            , Jm = a.n(Zm)
            , Xm = a(71974)
            , qm = a.n(Xm)
            , eg = a(74715)
            , tg = a.n(eg);
        function vo(i) {
            "@babel/helpers - typeof";
            return vo = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                vo(i)
        }
        function Ff() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Ff = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && vo(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(vo(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function wh(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function ng(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            wh(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            wh(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function Th(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function vc(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = Th(Object(f), !0)).call(n, function(g) {
                    rg(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = Th(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function rg(i, e, n) {
            return (e = ag(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function ag(i) {
            var e = ig(i, "string");
            return vo(e) == "symbol" ? e : e + ""
        }
        function ig(i, e) {
            if (vo(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (vo(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        const og = {
            inject: ["$agent"],
            mixins: [Qr.A, Kt.A, vn.A],
            components: {
                Dialog: dh.default,
                BargeIcon: Jm(),
                BargeIconDark: Ym(),
                TakeOverIcon: tg(),
                TakeOverIconDark: qm()
            },
            data: function() {
                return {
                    showBarge: !1,
                    showTakeOver: !1,
                    loading: !1
                }
            },
            computed: vc(vc({}, (0,
                zt.mapGetters)("livechat", ["currentEngagement"])), {}, {
                disableBarge: function() {
                    var e;
                    return ((e = this.currentEngagement) === null || e === void 0 || (e = e.feature) === null || e === void 0 ? void 0 : e.disableBarge) === !0
                },
                disableTakeOver: function() {
                    var e;
                    return ((e = this.currentEngagement) === null || e === void 0 || (e = e.feature) === null || e === void 0 ? void 0 : e.disableTakeOver) === !0
                }
            }),
            methods: vc(vc({}, (0,
                zt.mapActions)("livechat", ["createSuperVisorJoin"])), {}, {
                closeBarge: function() {
                    this.showBarge = !1
                },
                closeTakeOver: function() {
                    this.showTakeOver = !1
                },
                toggleBarge: function() {
                    this.showBarge = !this.showBarge
                },
                toggleTakeOver: function() {
                    this.showTakeOver = !this.showTakeOver
                },
                onAction: function(e) {
                    var n = this;
                    return ng(Ff().mark(function l() {
                        var f, g, I, T, A, N;
                        return Ff().wrap(function(fe) {
                            for (; ; )
                                switch (fe.prev = fe.next) {
                                    case 0:
                                        return f = n.$agent(),
                                            g = f.userInfo,
                                            I = n.currentEngagement,
                                            T = I.engagementId,
                                            A = I.channelType,
                                            n.loading = !0,
                                            fe.next = 5,
                                            n.createSuperVisorJoin({
                                                engagementId: T,
                                                eventType: e,
                                                userId: g.id,
                                                channelType: A
                                            });
                                    case 5:
                                        N = fe.sent,
                                            n.loading = !1,
                                        N && n.nativeNotify(N, "error");
                                    case 8:
                                    case "end":
                                        return fe.stop()
                                }
                        }, l)
                    }))()
                }
            })
        };
        var sg = (0,
            ir.A)(og, Hm, Km, !1, null, "434fbbd1", null);
        const lg = sg.exports;
        var cg = function() {
            var e, n = this, l = n._self._c;
            return n.show ? l("div", {
                staticClass: "survey-indicator"
            }, [l("ChatSurveyIcon"), n._v(" "), l("span", {
                staticClass: "survey-indicator-text",
                attrs: {
                    role: "alert"
                }
            }, [n._v(n._s(n.text))]), n._v(" "), l("zm-button", {
                staticClass: "close-icon",
                attrs: {
                    icon: "zm-icon-close",
                    "aria-label": oa()(e = "".concat(n.text, " ")).call(e, n.$t("cci.common.button.close")),
                    type: "icon",
                    ghost: ""
                },
                on: {
                    click: function(g) {
                        n.show = !1
                    }
                }
            })], 1) : n._e()
        }
            , ug = []
            , dg = a(41771)
            , fg = a.n(dg);
        function mc(i) {
            "@babel/helpers - typeof";
            return mc = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                mc(i)
        }
        function Wf() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Wf = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && mc(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(mc(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function Sh(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function pg(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            Sh(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            Sh(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        var hg = Zt.chatApi.getSurveyNotice;
        const vg = {
            props: {
                params: {
                    required: !0,
                    type: Object,
                    default: function() {}
                }
            },
            components: {
                ChatSurveyIcon: fg()
            },
            data: function() {
                return {
                    show: !1,
                    text: this.$t("cci.chat.indicator.survey")
                }
            },
            mounted: function() {
                this.getSurveyStatus(this.params)
            },
            beforeDestroy: function() {
                this.show = !1
            },
            methods: {
                getSurveyStatus: function(e) {
                    var n = this;
                    return pg(Wf().mark(function l() {
                        var f, g;
                        return Wf().wrap(function(T) {
                            for (; ; )
                                switch (T.prev = T.next) {
                                    case 0:
                                        if (!(!(e != null && e.sessionId) || !(e != null && e.engagementId))) {
                                            T.next = 2;
                                            break
                                        }
                                        return T.abrupt("return");
                                    case 2:
                                        return T.next = 4,
                                            hg(e);
                                    case 4:
                                        f = T.sent,
                                        f && (g = f.needShow,
                                            n.show = g,
                                            n.text = n.$t("cci.chat.indicator.survey"));
                                    case 6:
                                    case "end":
                                        return T.stop()
                                }
                        }, l)
                    }))()
                }
            },
            watch: {
                params: {
                    handler: function(e) {
                        this.getSurveyStatus(e)
                    },
                    deep: !0
                }
            }
        };
        var mg = (0,
            ir.A)(vg, cg, ug, !1, null, "4302269f", null);
        const gg = mg.exports;
        function mo(i) {
            "@babel/helpers - typeof";
            return mo = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                mo(i)
        }
        function Ah(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function Li(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = Ah(Object(f), !0)).call(n, function(g) {
                    yg(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = Ah(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function yg(i, e, n) {
            return (e = _g(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function _g(i) {
            var e = bg(i, "string");
            return mo(e) == "symbol" ? e : e + ""
        }
        function bg(i, e) {
            if (mo(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (mo(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        function Ma() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            Ma = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && mo(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(mo(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function Lh(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function go(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            Lh(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            Lh(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        const Cg = {
            name: "ChatContent",
            props: ["engagement", "engagementId", "chatSessionId", "channelType", "enterId", "featureOptions", "isChatShow", "enableSMSEditor"],
            components: {
                ChatHead: Im,
                SupervisorPanel: lg,
                SupervisorBar: Lt.SupervisorBar,
                DropInNotify: Om,
                DropInLoading: Lm,
                DropInTips: Um,
                ChatLinkConfirm: Lt.ChatLinkConfirm,
                SurveyIndicator: gg,
                EmailIncomingMessage: zm
            },
            inject: ["$agent", "$getCapabilities"],
            mixins: [Qr.A],
            setup: function(e) {
                var n = (0,
                    Lt.useAgentAssist)()
                    , l = n.getEnableValue
                    , f = (0,
                    Lt.useMessagingRightBar)()
                    , g = f.getShowResponseAssistant
                    , I = (0,
                    Qe.computed)(function() {
                    var A;
                    return (A = e.engagement) === null || A === void 0 ? void 0 : A.engagementId
                })
                    , T = (0,
                    Lt.useEnableEngagementLanguage)(I);
                return {
                    enableUsingEngagementLanguage: T,
                    getShowResponseAssistant: g,
                    getEnableValue: l
                }
            },
            data: function() {
                return {
                    loading: !1,
                    chatInstance: null,
                    settings: null,
                    capabilities: {},
                    showSupervisorBar: !0,
                    CHANNEL_KEYS: U.CHANNEL_KEYS
                }
            },
            mounted: function() {
                this.isEmail || ((0,
                    Vr.safelog)(function(e) {
                    var n = e.log;
                    return n("[Chat channel] <ChatContent /> mounted")
                }),
                    this.chatInstance.render(this.$refs.chat))
            },
            created: function() {
                var e = this;
                return go(Ma().mark(function n() {
                    var l, f, g, I, T, A, N, re, fe, ke, Ht, vt, Me, he, sn, ln, lt, Tn, Wn, Dn, xt, Nr, xn, wr, Dr, Fr, fr, yr, hr, c, r, o, p;
                    return Ma().wrap(function(y) {
                        for (; ; )
                            switch (y.prev = y.next) {
                                case 0:
                                    if (!e.isEmail) {
                                        y.next = 2;
                                        break
                                    }
                                    return y.abrupt("return");
                                case 2:
                                    return ea.z.$on("THEME_MODE_CHANGE", e.darkModeChange),
                                        e.$bus.$on("clearExtensionStatus", e.clearExtensionStatus),
                                        e.$bus.$on("getAgentAssistLastMessage", e.getAgentAssistLastMessage),
                                        e.$bus.$on("jumpByHighlight", e.jumpByHighlight),
                                        e.$bus.$on("activeExtension", e.activeExtension),
                                        e.$bus.$on("changeChatInstance", e.changeChatInstance),
                                        e.$bus.$on("insertTextToEditorByAI", e.insertTextToEditorByAI),
                                        he = e.$agent(),
                                        sn = he.userInfo,
                                        ln = he.zpns,
                                        lt = e.piiSettings || {},
                                        Tn = lt.maskPiiInfo,
                                        Wn = Tn === void 0 ? !1 : Tn,
                                        Dn = lt.detailSettings,
                                        xt = Dn === void 0 ? {} : Dn,
                                        Nr = xt.displayName || {},
                                        xn = Nr.toggle,
                                        wr = xn === void 0 ? !1 : xn,
                                        e.chatInstance = (0,
                                            Mt.createAgentChat)({
                                            env: (0,
                                                U.getEnv)(),
                                            domains: {
                                                ccizp: dr.Domain
                                            },
                                            getAuthData: function() {
                                                return {
                                                    token: U.ZCache.getToken() || localStorage.getItem("CCI_THIRD_TOKEN"),
                                                    tokenExpire: e.calcExpTimeToMs(U.ZCache.getToken() || localStorage.getItem("CCI_THIRD_TOKEN")),
                                                    zmAid: U.ZCache.getAid() || localStorage.getItem("CCI_THIRD_AID"),
                                                    zmHAid: U.ZCache.getHaid() || localStorage.getItem("CCI_THIRD_HAID")
                                                }
                                            },
                                            refresh: function() {
                                                var j = go(Ma().mark(function le() {
                                                    return Ma().wrap(function(Ye) {
                                                        for (; ; )
                                                            switch (Ye.prev = Ye.next) {
                                                                case 0:
                                                                    return Ye.next = 2,
                                                                        (0,
                                                                            Wi.debounceRefreshToken)();
                                                                case 2:
                                                                case "end":
                                                                    return Ye.stop()
                                                            }
                                                    }, le)
                                                }));
                                                function ue() {
                                                    return j.apply(this, arguments)
                                                }
                                                return ue
                                            }(),
                                            savedReplySettings: {
                                                enabledSavedReply: !!((l = e.getShowResponseAssistant) !== null && l !== void 0 && l.call(e, e.engagement)),
                                                queueId: (f = e.engagement) === null || f === void 0 ? void 0 : f.queueId
                                            },
                                            zpns: ln,
                                            userId: sn.id,
                                            parentAccountId: e.accountInfo.parentAccountId,
                                            fileUploadCloud: e.accountInfo.fileUploadCloud,
                                            opFlag: {
                                                systemEnableReplaceMessageFile: ((g = e.accountInfo) === null || g === void 0 ? void 0 : g.systemEnableReplaceMessageFile) || !1,
                                                enableEmailAsyncFile: ((I = e.accountInfo) === null || I === void 0 ? void 0 : I.enableEmailAsyncFile) || !1,
                                                expertAssistUseRedesignUi: ((T = e.accountInfo) === null || T === void 0 ? void 0 : T.expertAssistUseRedesignUi) || !1,
                                                restrictScroll2bottom: ((A = e.nacosConfig) === null || A === void 0 ? void 0 : A.disableRestrictScroll2bottom) !== "true",
                                                enableSdkNewRender: ((N = e.nacosConfig) === null || N === void 0 ? void 0 : N.disableChatSdkNewRenderClient) !== "true" && !e.isEmail,
                                                enableSdkNewRender4autoResize: ((re = e.nacosConfig) === null || re === void 0 ? void 0 : re.disableChatSdkNewRenderClient) !== "true" && !e.isEmail
                                            },
                                            dotenv: {
                                                ENABLE_MESSAGE_ORDER_V2: ((fe = e.featureOptions) === null || fe === void 0 ? void 0 : fe.enableRefactorMessagingOrder) === !0
                                            }
                                        }),
                                        U.monitor.dispatchMonitor({
                                            engagementId: e.engagement.engagementId,
                                            chatSessionId: e.chatSessionId,
                                            name: "chatInstance_created"
                                        }, U.monitor.MONITOR_CHAT_CHANEL),
                                    (ke = e.chatInstance) === null || ke === void 0 || (ke = ke.http) === null || ke === void 0 || ke.afterResponse(function(j) {
                                        try {
                                            var ue;
                                            (j == null || (ue = j.data) === null || ue === void 0 ? void 0 : ue.errorCode) === U.ERROR_CODE.ENGAGEMENT_HAS_BEEN_ENDED && (e.$bus.$emit("engagementHasBeenEnded"),
                                                e.nativeNotify(e.$t("cci.engagement.error.autoclosed"), "error"))
                                        } catch (le) {
                                            console.error("afterResponse error", le)
                                        }
                                        return j
                                    }),
                                    (Ht = e.chatInstance) === null || Ht === void 0 || (Ht = Ht.http) === null || Ht === void 0 || Ht.beforeRequest(U.setHeaderInRequestInterceptor),
                                        e.chatInstance.theme.mode = (0,
                                            U.getThemeMode)(),
                                        e.chatInstance.setChatOptions({
                                            enableRichTextEditor: !e.engagement.disableMessagingRichText && e.channelType !== "SMS" && !e.isSpecialSubChannel,
                                            disableMessageExtension: e.channelDisableAAICon,
                                            readonly: e.isView || e.isWrapup
                                        }),
                                    Wn && wr && (e.chatInstance.piiHandler = function(j) {
                                            var ue = j.text;
                                            return ue.replace(/[^@\-\s.,()]/g, "*")
                                        }
                                    ),
                                    e.disableInput && e.chatInstance.editor.disable(),
                                        e.chatInstance.on(Mt.AgentChatEvents.EXTENSION_INTENT, function() {
                                            var j = go(Ma().mark(function ue(le) {
                                                var At, Ye, Rt;
                                                return Ma().wrap(function(ia) {
                                                    for (; ; )
                                                        switch (ia.prev = ia.next) {
                                                            case 0:
                                                                return At = le.messageContent,
                                                                    Ye = le.messageId,
                                                                    ia.next = 3,
                                                                    e.getEnableValue("enableEaIntent");
                                                            case 3:
                                                                if (Rt = ia.sent,
                                                                    Rt) {
                                                                    ia.next = 6;
                                                                    break
                                                                }
                                                                return ia.abrupt("return");
                                                            case 6:
                                                                e.onExtensionClick({
                                                                    type: "intent",
                                                                    message: At,
                                                                    messageId: Ye
                                                                });
                                                            case 7:
                                                            case "end":
                                                                return ia.stop()
                                                        }
                                                }, ue)
                                            }));
                                            return function(ue) {
                                                return j.apply(this, arguments)
                                            }
                                        }()),
                                        e.chatInstance.on(Mt.AgentChatEvents.EXTENSION_KB, function() {
                                            var j = go(Ma().mark(function ue(le) {
                                                var At, Ye, Rt;
                                                return Ma().wrap(function(ia) {
                                                    for (; ; )
                                                        switch (ia.prev = ia.next) {
                                                            case 0:
                                                                return At = le.messageContent,
                                                                    Ye = le.messageId,
                                                                    ia.next = 3,
                                                                    e.getEnableValue("enableEaKb");
                                                            case 3:
                                                                if (Rt = ia.sent,
                                                                    Rt) {
                                                                    ia.next = 6;
                                                                    break
                                                                }
                                                                return ia.abrupt("return");
                                                            case 6:
                                                                e.onExtensionClick({
                                                                    type: "knowledgeBase",
                                                                    message: At,
                                                                    messageId: Ye
                                                                });
                                                            case 7:
                                                            case "end":
                                                                return ia.stop()
                                                        }
                                                }, ue)
                                            }));
                                            return function(ue) {
                                                return j.apply(this, arguments)
                                            }
                                        }()),
                                        e.chatInstance.on(Mt.AgentChatEvents.EXTENSION_BEST_ACTION, function() {
                                            var j = go(Ma().mark(function ue(le) {
                                                var At, Ye, Rt;
                                                return Ma().wrap(function(ia) {
                                                    for (; ; )
                                                        switch (ia.prev = ia.next) {
                                                            case 0:
                                                                At = le.messageContent,
                                                                    Ye = le.messageId,
                                                                    Rt = le.bestAction,
                                                                    e.onExtensionClick({
                                                                        type: "bestAction",
                                                                        bestAction: Rt,
                                                                        message: At,
                                                                        messageId: Ye
                                                                    });
                                                            case 2:
                                                            case "end":
                                                                return ia.stop()
                                                        }
                                                }, ue)
                                            }));
                                            return function(ue) {
                                                return j.apply(this, arguments)
                                            }
                                        }()),
                                        e.chatInstance.on(Mt.AgentChatEvents.SMS_WARNING, function(j) {
                                            var ue = j.smsCampaignAlert;
                                            ue === !0 && e.changeShowSMSWarning({
                                                isSMSWarningVisible: !0,
                                                okText: !1
                                            })
                                        }),
                                        e.chatInstance.startChatSession({
                                            engagementId: e.engagementId,
                                            chatSessionId: e.chatSessionId,
                                            enterId: e.enterId,
                                            source: e.channelType === "SMS" ? Mt.FlowTypes.SMS : (vt = Mt.FlowTypes[(Me = e.engagement) === null || Me === void 0 ? void 0 : Me.subChannel]) !== null && vt !== void 0 ? vt : Mt.FlowTypes.CHAT
                                        }),
                                        U.monitor.dispatchMonitor({
                                            engagementId: e.engagement.engagementId,
                                            chatSessionId: e.chatSessionId,
                                            name: "chatSession_Created"
                                        }, U.monitor.MONITOR_CHAT_CHANEL),
                                    e.isWrapup || e.chatInstance.loadSettings(),
                                    e.isEmail && (e.chatInstance.enableEmail({
                                        emailSignature: (Dr = e.engagement) === null || Dr === void 0 ? void 0 : Dr.emailSignatureV2,
                                        emailSubject: (Fr = e.engagement) === null || Fr === void 0 ? void 0 : Fr.emailSubject,
                                        emailAddress: (fr = e.engagement) === null || fr === void 0 ? void 0 : fr.emailAddress,
                                        emailName: (yr = e.engagement) === null || yr === void 0 ? void 0 : yr.emailName,
                                        replyInEngagement: (hr = e.engagement) === null || hr === void 0 ? void 0 : hr.replyInEngagement,
                                        markAwaitingReply: (c = e.engagement) === null || c === void 0 ? void 0 : c.markAwaitingReply,
                                        emailSignatureInlineFiles: (r = e.engagement) === null || r === void 0 ? void 0 : r.emailSignatureInlineFilesV2
                                    }),
                                    (o = e.engagement) !== null && o !== void 0 && o.emailOutboundFirstMessage && e.chatInstance.setEmailOutBoundFirstMessage(e.engagement.emailOutboundFirstMessage)),
                                        e.chatInstance.on(Mt.AgentChatEvents.CHANGE_EDITOR_STATUS, function(j) {
                                            var ue = j.engagementId
                                                , le = j.enableEditor
                                                , At = j.channel
                                                , Ye = At === "SMS" ? e.enableSMSEditor : "";
                                            (0,
                                                Vr.safelog)(function(Rt) {
                                                var va, ia, Pa, Ni = Rt.log;
                                                return Ni(oa()(va = oa()(ia = oa()(Pa = "CHANGE_SMS_EDITOR_STATU: engagementId: ".concat(ue, " enableSMSEditor: ")).call(Pa, le, " curEnableSMSEditor: ")).call(ia, Ye, " channel: ")).call(va, At))
                                            }),
                                            Ye !== le && e.changeEditorStatus({
                                                engagementId: ue,
                                                enableEditor: le,
                                                channel: At
                                            })
                                        }),
                                    e.channelType === "SMS" && (e.chatInstance.enableSMS(),
                                    (p = e.engagement) !== null && p !== void 0 && p.smsOutboundFirstMessage && e.chatInstance.setSMSOutBoundFirstMessage(e.engagement.smsOutboundFirstMessage),
                                        e.chatInstance.setSMSEditorOptions({
                                            enableSMSEditor: e.enableSMSEditor
                                        })),
                                        e.setSavedReplyLanguage(),
                                        e.chatInstance.notification.handler = function(j) {
                                            var ue = j.type
                                                , le = j.message;
                                            e.nativeNotify(le, ue)
                                        }
                                        ,
                                        e.chatInstance.chatHandlers.linkClickHandler = function(j) {
                                            e.$refs.chatLink.openLink(j)
                                        }
                                        ,
                                        e.chatInstance.changeChatStatus("chatting"),
                                        U.monitor.dispatchMonitor({
                                            engagementId: e.engagement.engagementId,
                                            chatSessionId: e.chatSessionId,
                                            name: "loadHistory_started"
                                        }, U.monitor.MONITOR_CHAT_CHANEL),
                                        y.next = 37,
                                        e.chatInstance.loadHistory();
                                case 37:
                                    return U.monitor.dispatchMonitor({
                                        engagementId: e.engagement.engagementId,
                                        chatSessionId: e.chatSessionId,
                                        name: "loadHistory_ended"
                                    }, U.monitor.MONITOR_CHAT_CHANEL),
                                        y.next = 40,
                                        e.chatInstance.loadMembers();
                                case 40:
                                    U.monitor.dispatchMonitor({
                                        engagementId: e.engagement.engagementId,
                                        chatSessionId: e.chatSessionId,
                                        name: "loadMembers_ended"
                                    }, U.monitor.MONITOR_CHAT_CHANEL);
                                case 41:
                                case "end":
                                    return y.stop()
                            }
                    }, n)
                }))()
            },
            computed: Li(Li(Li(Li(Li({}, (0,
                zt.mapGetters)("sessionPanels", ["currentActiveTask", "chatWrapupTaskQueue"])), (0,
                zt.mapGetters)({
                accountInfo: "account",
                userOptions: "userOptions",
                nacosConfig: "nacosConfig"
            })), (0,
                zt.mapGetters)({
                piiSettings: "piiSettings"
            })), (0,
                zt.mapGetters)("sms", ["isSMSWarningVisible"])), {}, {
                surveyNoticeParams: function() {
                    return {
                        sessionId: this.chatSessionId,
                        engagementId: this.engagementId
                    }
                },
                isNewUI: function() {
                    return !0
                },
                isView: function() {
                    var e;
                    return ((e = this.engagement) === null || e === void 0 ? void 0 : e.superVisor) === "view"
                },
                isDropIn: function() {
                    var e;
                    return ((e = this.engagement) === null || e === void 0 ? void 0 : e.superVisor) === "dropin"
                },
                showDropInLoad: function() {
                    var e;
                    return this.isDropIn && !((e = this.engagement) !== null && e !== void 0 && e.isCustomerAcceptDropIn)
                },
                chatEnded: function() {
                    var e, n, l = this.currentActiveTask || {}, f = l.engagementId, g = l.eventType;
                    return ((e = this.engagement) === null || e === void 0 ? void 0 : e.engagementId) === f && M()(n = ["chat.ended", "sms.ended"]).call(n, g)
                },
                disableInput: function() {
                    return this.isView || this.chatEnded
                },
                isBarge: function() {
                    var e;
                    return ((e = this.engagement) === null || e === void 0 ? void 0 : e.superVisor) === "barge"
                },
                isClient: function() {
                    return (0,
                        U.isClient)()
                },
                isEmail: function() {
                    var e;
                    return ((e = this.engagement) === null || e === void 0 ? void 0 : e.subChannel) === U.CHANNEL_KEYS.email.keyUpper
                },
                enableZendeskTicketToEmail: function() {
                    var e;
                    return this.isEmail && ((e = this.accountInfo) === null || e === void 0 ? void 0 : e.enableZendeskTicketToEmail)
                },
                isSpecialSubChannel: function() {
                    var e, n;
                    return M()(e = [U.CHANNEL_KEYS.email.keyUpper, U.CHANNEL_KEYS.facebook.keyUpper, U.CHANNEL_KEYS.whatsapp.keyUpper, U.CHANNEL_KEYS.instagram.keyUpper, U.CHANNEL_KEYS.teamchat.keyUpper]).call(e, (n = this.engagement) === null || n === void 0 ? void 0 : n.subChannel)
                },
                isWrapup: function() {
                    var e, n;
                    return this.engagement && M()(e = ma()(n = this.chatWrapupTaskQueue).call(n, function(l) {
                        return l?.engagementId
                    })).call(e, this.engagement.engagementId)
                },
                chatRootDomHeight: function() {
                    return this.isDropIn ? {
                        height: "calc(100% - 32px)"
                    } : {
                        height: "100%"
                    }
                },
                channelDisableAAICon: function() {
                    var e, n;
                    return !((e = this.accountInfo) !== null && e !== void 0 && e.enableZvaAgentAssist) || !((n = this.userOptions) !== null && n !== void 0 && n.enableAIExpertAssist) || this.nacosConfig.disableAieaInCTI === "true"
                }
            }),
            watch: {
                channelDisableAAICon: function(e) {
                    this.chatInstance && this.chatInstance.setChatOptions({
                        disableMessageExtension: e
                    })
                },
                disableInput: function() {
                    this.chatInstance && (this.disableInput ? this.chatInstance.editor.disable() : this.chatInstance.editor.enable())
                },
                enableSMSEditor: function(e) {
                    this.chatInstance.setSMSEditorOptions({
                        enableSMSEditor: e
                    })
                },
                isWrapup: function(e) {
                    e && this.chatInstance.setChatOptions({
                        readonly: !!e
                    })
                }
            },
            methods: Li(Li(Li(Li({}, (0,
                zt.mapActions)("sms", ["changeShowSMSWarning"])), (0,
                zt.mapActions)("livechat", ["changeEditorStatus"])), (0,
                zt.mapActions)("responseAssistant", {
                getLanguageList: "getLanguageList"
            })), {}, {
                calcExpTimeToMs: function(e) {
                    var n = (0,
                        Kr.s)(e);
                    if (!n.exp)
                        return 0;
                    var l = Math.floor(ee()() / 1e3)
                        , f = n.exp - l;
                    return f > 0 ? f * 1e3 : 0
                },
                activeExtension: function(e) {
                    this.chatInstance && this.chatInstance.messageExtension && this.chatInstance.messageExtension.activeExtension(e)
                },
                setSavedReplyLanguage: function() {
                    var e = this;
                    return go(Ma().mark(function n() {
                        var l, f, g, I, T, A, N;
                        return Ma().wrap(function(fe) {
                            for (; ; )
                                switch (fe.prev = fe.next) {
                                    case 0:
                                        if (fe.prev = 0,
                                            !((l = e.getShowResponseAssistant) !== null && l !== void 0 && l.call(e, e.engagement))) {
                                            fe.next = 7;
                                            break
                                        }
                                        return A = e.enableUsingEngagementLanguage || e.isEmail ? (f = e.engagement) === null || f === void 0 ? void 0 : f.engagementLanguage : (g = e.engagement) === null || g === void 0 ? void 0 : g.originalCustomerLanguage,
                                            fe.next = 5,
                                            e.getLanguageList(A);
                                    case 5:
                                        N = fe.sent,
                                        N?.defaultLanguageCode && ((I = e.chatInstance) === null || I === void 0 || (T = I.setSavedReplyLanguage) === null || T === void 0 || T.call(I, N?.defaultLanguageCode));
                                    case 7:
                                        fe.next = 12;
                                        break;
                                    case 9:
                                        fe.prev = 9,
                                            fe.t0 = fe.catch(0),
                                            console.error("setSavedReplyLanguage error", fe.t0);
                                    case 12:
                                    case "end":
                                        return fe.stop()
                                }
                        }, n, null, [[0, 9]])
                    }))()
                },
                jumpByHighlight: function(e) {
                    var n = this;
                    return go(Ma().mark(function l() {
                        var f, g, I, T, A, N, re, fe, ke;
                        return Ma().wrap(function(vt) {
                            for (; ; )
                                switch (vt.prev = vt.next) {
                                    case 0:
                                        if (I = e.messageId,
                                            T = e.messageTimestamp,
                                            A = e.engagementId,
                                        ((f = n.engagement) === null || f === void 0 ? void 0 : f.engagementId) === A) {
                                            vt.next = 3;
                                            break
                                        }
                                        return vt.abrupt("return");
                                    case 3:
                                        N = (g = n.chatInstance) === null || g === void 0 ? void 0 : g.startTimestamp;
                                    case 4:
                                        if (!(N && N > T)) {
                                            vt.next = 13;
                                            break
                                        }
                                        return vt.next = 7,
                                            (re = n.chatInstance) === null || re === void 0 ? void 0 : re.loadPreviousHistory();
                                    case 7:
                                        if (N !== ((fe = n.chatInstance) === null || fe === void 0 ? void 0 : fe.startTimestamp)) {
                                            vt.next = 9;
                                            break
                                        }
                                        return vt.abrupt("break", 13);
                                    case 9:
                                        N = (ke = n.chatInstance) === null || ke === void 0 ? void 0 : ke.startTimestamp,
                                            (0,
                                                Vr.safelog)(function(Me) {
                                                var he = Me.log;
                                                return he("timeStamp: ".concat(N))
                                            }),
                                            vt.next = 4;
                                        break;
                                    case 13:
                                        k()(function() {
                                            var Me;
                                            (Me = n.chatInstance) === null || Me === void 0 || Me.scrollToSpecialMessage(I)
                                        }, 1e3);
                                    case 14:
                                    case "end":
                                        return vt.stop()
                                }
                        }, l)
                    }))()
                },
                changeChatInstance: function(e) {
                    var n = e || {}
                        , l = n.engagementId
                        , f = n.type
                        , g = n.data
                        , I = g === void 0 ? {} : g;
                    if (!(!l || l !== this.engagementId)) {
                        if ((0,
                            Vr.safelog)(function(ke) {
                            var Ht = ke.log;
                            return Ht("changeChatInstance: ".concat(Zi()(e)))
                        }),
                        f === "insertSavedReply") {
                            var T, A, N = this.isEmail ? ["savedReplyRichText", "savedReply", "files", "inlineFiles", "subject"] : ["savedReplyRichText", "savedReply"];
                            (T = this.chatInstance) === null || T === void 0 || (A = T.insertSavedReply) === null || A === void 0 || A.call(T, ta()(I, N))
                        } else if (f === "setSavedReplyLanguage") {
                            var re, fe;
                            (re = this.chatInstance) === null || re === void 0 || (fe = re.setSavedReplyLanguage) === null || fe === void 0 || fe.call(re, I?.language)
                        }
                    }
                },
                insertTextToEditorByAI: function(e) {
                    var n = e || {}
                        , l = n.engagementId
                        , f = n.data
                        , g = f === void 0 ? {} : f;
                    if (!(!l || l !== this.engagementId)) {
                        var I = g || {}
                            , T = I.text;
                        if (T) {
                            var A, N;
                            (A = this.chatInstance) === null || A === void 0 || (N = A.insertTextToEditor) === null || N === void 0 || N.call(A, T)
                        }
                    }
                },
                clearExtensionStatus: function() {
                    this.chatInstance && this.chatInstance.messageExtension && this.chatInstance.messageExtension.deactive(["Intent", "KnowledgeBase", "BestAction"])
                },
                onHideSupervisorBar: function() {
                    this.showSupervisorBar = !1
                },
                onExtensionClick: function(e) {
                    var n = e.type
                        , l = e.message
                        , f = e.bestAction
                        , g = e.messageId;
                    this.$bus.$emit("SELECTICON", {
                        type: "expertAssist",
                        message: l,
                        messageId: g,
                        bestAction: f,
                        sr: "click",
                        operated: !0
                    }),
                        this.chatInstance.messageExtension.deactive(["Intent", "KnowledgeBase", "BestAction"]);
                    var I = this.chatInstance.messageExtension.get(g);
                    I && (n === "knowledgeBase" ? I.KnowledgeBase.active = !0 : n === "intent" ? I.Intent.active = !0 : n === "bestAction" && (I.BestAction.active = !0))
                },
                darkModeChange: function() {
                    this.chatInstance && this.chatInstance.theme.mode !== (0,
                        U.getThemeMode)() && (this.chatInstance.theme.mode = (0,
                        U.getThemeMode)())
                }
            }),
            beforeDestroy: function() {
                var e;
                ea.z.$off("THEME_MODE_CHANGE", this.darkModeChange),
                (e = this.chatInstance) === null || e === void 0 || e.dispose(),
                    this.$bus.$off("clearExtensionStatus", this.clearExtensionStatus),
                    this.$bus.$off("getAgentAssistLastMessage", this.getAgentAssistLastMessage),
                    this.$bus.$off("jumpByHighlight", this.jumpByHighlight),
                    this.$bus.$off("changeChatInstance", this.changeChatInstance),
                    this.$bus.$off("activeExtension", this.activeExtension),
                    this.$bus.$off("insertTextToEditorByAI", this.insertTextToEditorByAI)
            },
            provide: function() {
                var e = this;
                return {
                    $engagementId: function() {
                        return e.engagementId
                    }
                }
            }
        };
        var Eg = (0,
            ir.A)(Cg, Sr, jr, !1, null, "742be382", null);
        const Ig = Eg.exports;
        function Nh(i, e) {
            return Ag(i) || Sg(i, e) || Tg(i, e) || wg()
        }
        function wg() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Tg(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return Mh(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? Mh(i, e) : void 0
            }
        }
        function Mh(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function Sg(i, e) {
            var n = i == null ? null : typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (n != null) {
                var l, f, g, I, T = [], A = !0, N = !1;
                try {
                    if (g = (n = n.call(i)).next,
                    e === 0) {
                        if (Object(n) !== n)
                            return;
                        A = !1
                    } else
                        for (; !(A = (l = g.call(n)).done) && (T.push(l.value),
                        T.length !== e); A = !0)
                            ;
                } catch (re) {
                    N = !0,
                        f = re
                } finally {
                    try {
                        if (!A && n.return != null && (I = n.return(),
                        Object(I) !== I))
                            return
                    } finally {
                        if (N)
                            throw f
                    }
                }
                return T
            }
        }
        function Ag(i) {
            if (rr()(i))
                return i
        }
        function As() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            As = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && zi(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(zi(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function zi(i) {
            "@babel/helpers - typeof";
            return zi = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                zi(i)
        }
        function Ph(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function kh(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            Ph(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            Ph(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        function Oh(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function Oo(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = Oh(Object(f), !0)).call(n, function(g) {
                    Lg(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = Oh(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function Lg(i, e, n) {
            return (e = Ng(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function Ng(i) {
            var e = Mg(i, "string");
            return zi(e) == "symbol" ? e : e + ""
        }
        function Mg(i, e) {
            if (zi(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (zi(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        var xh = Zt.chatApi.endChat;
        const Pg = {
            name: "Chat",
            props: ["featureOptions"],
            components: {
                ChatContentV2: Ig
            },
            provide: function() {
                return {
                    $endChat: this.endChat
                }
            },
            setup: function() {
                (0,
                    Lt.useLossMessagePrevent)()
            },
            data: function() {
                return {
                    eventHandling: new (Cr())
                }
            },
            computed: Oo(Oo(Oo(Oo({}, (0,
                zt.mapGetters)("livechat", ["engagements", "currentEngagement"])), (0,
                zt.mapGetters)("sessionPanels", ["activeTaskQueue"])), (0,
                zt.mapGetters)({
                nacosConfig: "nacosConfig"
            })), {}, {
                engagementList: function() {
                    return ra()(this.engagements)
                }
            }),
            mounted: function() {
                U.eventBus.$on("SE_TERMINATE_ENGAGEMENT_REQUEST", this.handleTerminateEngagementRequest)
            },
            beforeDestroy: function() {
                U.eventBus.$off("SE_TERMINATE_ENGAGEMENT_REQUEST", this.handleTerminateEngagementRequest)
            },
            created: function() {
                window[Br()("LIVESDK_GLOBAL_ENV")] || (window[Br()("LIVESDK_GLOBAL_ENV")] = {}),
                    window[Br()("LIVESDK_GLOBAL_ENV")].COMMON_REFRESH_TOKEN_WHEN_EXPIRED_IN = "5m"
            },
            methods: Oo(Oo({}, (0,
                zt.mapActions)("livechat", ["clearEngagement"])), {}, {
                endChat: function(e) {
                    this.$emit("end"),
                        this.clearEngagement(e)
                },
                handleTerminateEngagementRequest: function(e) {
                    var n = this;
                    return kh(As().mark(function l() {
                        var f, g, I, T, A, N, re, fe, ke, Ht;
                        return As().wrap(function(Me) {
                            for (; ; )
                                switch (Me.prev = Me.next) {
                                    case 0:
                                        if (((f = n.nacosConfig) === null || f === void 0 ? void 0 : f.disableEndChatByThirdPart) !== "true") {
                                            Me.next = 2;
                                            break
                                        }
                                        return Me.abrupt("return");
                                    case 2:
                                        if (!(zi(e) !== "object" || e === null)) {
                                            Me.next = 5;
                                            break
                                        }
                                        return console.error("data is not object", e),
                                            Me.abrupt("return");
                                    case 5:
                                        if (g = e.engagementId,
                                            I = e.requestId,
                                            T = e.channelType,
                                            !(T !== "chat" && T !== "sms")) {
                                            Me.next = 8;
                                            break
                                        }
                                        return Me.abrupt("return");
                                    case 8:
                                        if (!n.eventHandling.has(g)) {
                                            Me.next = 10;
                                            break
                                        }
                                        return Me.abrupt("return");
                                    case 10:
                                        if (n.eventHandling.set(g, !0),
                                            Me.prev = 11,
                                            re = n.engagements[g],
                                            re) {
                                            Me.next = 15;
                                            break
                                        }
                                        throw new Error("engagement is not found");
                                    case 15:
                                        if (D()(A = n.activeTaskQueue).call(A, function(he) {
                                            return he.engagementId === g
                                        })) {
                                            Me.next = 17;
                                            break
                                        }
                                        throw new Error("engagement is not in active task queue");
                                    case 17:
                                        if (fe = (N = re.channelType) === null || N === void 0 ? void 0 : N.toLowerCase(),
                                            ke = T?.toLowerCase(),
                                            !(fe !== ke || fe !== "chat" && fe !== "sms")) {
                                            Me.next = 21;
                                            break
                                        }
                                        throw new Error("channel type is not supported");
                                    case 21:
                                        return Me.next = 23,
                                            n.endEngagement(g);
                                    case 23:
                                        if (Ht = Me.sent,
                                            Ht) {
                                            Me.next = 29;
                                            break
                                        }
                                        n.$bus.$emit("home-menu-select", 6, {
                                            tab: "active"
                                        }),
                                            U.eventBus.$emit("SE_TERMINATE_ENGAGEMENT_RESPONSE", {
                                                status: !0,
                                                requestId: I
                                            }),
                                            Me.next = 30;
                                        break;
                                    case 29:
                                        throw new Error(Ht);
                                    case 30:
                                        Me.next = 36;
                                        break;
                                    case 32:
                                        Me.prev = 32,
                                            Me.t0 = Me.catch(11),
                                            U.monitor.dispatchMonitor({
                                                engagementId: g,
                                                name: "engagement_ended_error_byThirdPart",
                                                err: Me.t0
                                            }, U.monitor.MONITOR_CHAT_CHANEL),
                                            U.eventBus.$emit("SE_TERMINATE_ENGAGEMENT_RESPONSE", {
                                                status: !1,
                                                error: (Me.t0 === null || Me.t0 === void 0 ? void 0 : Me.t0.message) || "unknown error",
                                                requestId: I
                                            });
                                    case 36:
                                        return Me.prev = 36,
                                            n.eventHandling.delete(g),
                                            Me.finish(36);
                                    case 39:
                                    case "end":
                                        return Me.stop()
                                }
                        }, l, null, [[11, 32, 36, 39]])
                    }))()
                },
                endEngagement: function(e) {
                    var n = this;
                    return kh(As().mark(function l() {
                        var f, g, I, T, A, N, re, fe, ke, Ht, vt, Me;
                        return As().wrap(function(sn) {
                            for (; ; )
                                switch (sn.prev = sn.next) {
                                    case 0:
                                        if (f = n.engagements[e],
                                            g = f.chatId,
                                            I = f.chatSessionId,
                                            T = f.channelType,
                                            A = f.subChannel,
                                        A !== U.CHANNEL_KEYS.email.keyUpper) {
                                            sn.next = 12;
                                            break
                                        }
                                        return sn.next = 5,
                                            (0,
                                                U.tryApiCatch)(xh, "Email", {
                                                sessionId: I,
                                                engagementId: e
                                            });
                                    case 5:
                                        return N = sn.sent,
                                            re = Nh(N, 1),
                                            fe = re[0],
                                            U.monitor.dispatchMonitor({
                                                chatSessionId: I,
                                                engagementId: e,
                                                name: "email_ended_byThirdPart",
                                                err: fe
                                            }, U.monitor.MONITOR_CHAT_CHANEL),
                                            sn.abrupt("return", fe);
                                    case 12:
                                        return ke = {
                                            chatId: g,
                                            chatSessionId: I,
                                            engagementId: e
                                        },
                                        T === "Chat" && (ke.source = A),
                                            sn.next = 16,
                                            (0,
                                                U.tryApiCatch)(xh, T, ke);
                                    case 16:
                                        return Ht = sn.sent,
                                            vt = Nh(Ht, 1),
                                            Me = vt[0],
                                            U.monitor.dispatchMonitor({
                                                chatSessionId: I,
                                                engagementId: e,
                                                name: "chat_ended_byThirdPart",
                                                err: Me
                                            }, U.monitor.MONITOR_CHAT_CHANEL),
                                            sn.abrupt("return", Me);
                                    case 21:
                                    case "end":
                                        return sn.stop()
                                }
                        }, l)
                    }))()
                }
            })
        };
        var kg = (0,
            ir.A)(Pg, Fn, Vt, !1, null, "0b8ce256", null);
        const Og = kg.exports;
        var xg = function() {
            var e = this
                , n = e._self._c;
            return n("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.isVideoShowed,
                    expression: "isVideoShowed"
                }],
                staticClass: "livevideo"
            }, [e._t("header", null, {
                engagementId: e.engagementId,
                to: ""
            }), e._v(" "), e.currentEngagement ? n("VideoHead", {
                ref: "videoHead",
                attrs: {
                    "engagement-id": e.engagementId,
                    "is-barge": e.isBargeLikeVideo,
                    "is-drop-in-video": e.isDropInVideo,
                    "super-visor-names": e.superVisorNames
                },
                on: {
                    leave: e.handleDropInLeave
                }
            }) : e._e(), e._v(" "), n("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.currentEngagement,
                    expression: "currentEngagement"
                }],
                ref: "container",
                staticClass: "livevideo__container"
            }), e._v(" "), n("div", {
                ref: "vdi_chat_container"
            }), e._v(" "), e.currentEngagement && e.showTransfer ? n("Transfer", {
                attrs: {
                    "enable-native-video": e.enableNativeVideo,
                    "show-transfer": e.showTransfer,
                    "task-sid": e.taskSid,
                    "enable-warm-transfer": e.enableWarmTransfer,
                    "enable-forced-queue-selection": e.enableForcedQueueSelection,
                    "is-support-v-d-i-video": !1
                },
                on: {
                    close: function(f) {
                        e.showTransfer = !1
                    },
                    transfer: e.handleTransfer
                }
            }) : e._e(), e._v(" "), !e.currentEngagement && e.hasSubBroadcast ? n("zm-alert", {
                staticClass: "crm-video-other-tabs",
                attrs: {
                    title: e.$t("cci.client.video.otherTabs"),
                    type: "warning",
                    "show-icon": "",
                    closable: !1
                }
            }) : e._e(), e._v(" "), n("ReleaseDialog", {
                attrs: {
                    "show-release": e.showRelease,
                    "request-func": e.handleRelease
                },
                on: {
                    close: function(f) {
                        e.showRelease = !1
                    }
                }
            }), e._v(" "), n("Dialog", {
                attrs: {
                    title: e.$t("video.monitor.bargeEnd.title"),
                    text: e.$t("video.monitor.bargeEnd.description"),
                    "ok-text": e.$t("video.monitor.bargeEnd.confirm"),
                    type: "danger",
                    visible: e.showBargeEndDialog,
                    loading: e.bargeEndLoading
                },
                on: {
                    ok: e.handleBargeEnd,
                    close: e.closeBargeEndDialog
                }
            }), e._v(" "), n("audio", {
                ref: "ringAudio",
                attrs: {
                    preload: "auto"
                }
            }, [n("source", {
                attrs: {
                    src: e.ding,
                    type: "audio/wav"
                }
            })]), e._v(" "), e.showInviteDialog ? n("InviteDialog", {
                attrs: {
                    "video-meeting-client": e.video
                },
                on: {
                    close: function(f) {
                        e.showInviteDialog = !1
                    }
                }
            }) : e._e()], 2)
        }
            , Dg = []
            , Rg = a(47115)
            , jg = a.n(Rg);
        const Ug = jg();
        var $g = (0,
            ir.A)(Ug, xg, Dg, !1, null, "7ef57fdc", null);
        const Bg = $g.exports;
        var Vg = function() {
            var e = this
                , n = e._self._c
                , l = e._self._setupProxy;
            return n("div", {
                staticClass: "merge-window-container"
            }, [n("div", {
                staticClass: "merge-window-header"
            }, [n(l.Logo, {
                staticClass: "logo-icon"
            }), e._v(`
    ` + e._s(e.$t("cci.callBar.login.title")) + `
  `)], 1), e._v(" "), n("div", {
                staticClass: "merge-window-body"
            }, [e._v(`
    ` + e._s(e.$t("cci.crm.cti.webrtc.popout.poppedout")) + `
    `), n("zm-button", {
                class: {
                    "merge-window-button": !0,
                    disabled: l.hasOngoingVideoTask
                },
                attrs: {
                    ghost: ""
                },
                on: {
                    click: l.handleMergeWindow
                }
            }, [e._v(`
      ` + e._s(e.$t("cci.zccapp.merge.window")) + `
      `), n(l.popInIcon, {
                staticClass: "popOut-icon"
            })], 1)], 1)])
        }
            , Fg = []
            , Wg = a(49621)
            , Gg = a.n(Wg);
        const zg = Gg();
        var Hg = (0,
            ir.A)(zg, Vg, Fg, !1, null, "6e8f7cc6", null);
        const Kg = Hg.exports;
        function yo(i) {
            "@babel/helpers - typeof";
            return yo = typeof ve() == "function" && typeof gn() == "symbol" ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && typeof ve() == "function" && e.constructor === ve() && e !== ve().prototype ? "symbol" : typeof e
                }
                ,
                yo(i)
        }
        function Dh(i, e) {
            return Jg(i) || Zg(i, e) || Yg(i, e) || Qg()
        }
        function Qg() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function Yg(i, e) {
            if (i) {
                var n;
                if (typeof i == "string")
                    return Rh(i, e);
                var l = Tt()(n = {}.toString.call(i)).call(n, 8, -1);
                return l === "Object" && i.constructor && (l = i.constructor.name),
                    l === "Map" || l === "Set" ? An()(i) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? Rh(i, e) : void 0
            }
        }
        function Rh(i, e) {
            (e == null || e > i.length) && (e = i.length);
            for (var n = 0, l = Array(e); n < e; n++)
                l[n] = i[n];
            return l
        }
        function Zg(i, e) {
            var n = i == null ? null : typeof ve() < "u" && Re()(i) || i["@@iterator"];
            if (n != null) {
                var l, f, g, I, T = [], A = !0, N = !1;
                try {
                    if (g = (n = n.call(i)).next,
                    e === 0) {
                        if (Object(n) !== n)
                            return;
                        A = !1
                    } else
                        for (; !(A = (l = g.call(n)).done) && (T.push(l.value),
                        T.length !== e); A = !0)
                            ;
                } catch (re) {
                    N = !0,
                        f = re
                } finally {
                    try {
                        if (!A && n.return != null && (I = n.return(),
                        Object(I) !== I))
                            return
                    } finally {
                        if (N)
                            throw f
                    }
                }
                return T
            }
        }
        function Jg(i) {
            if (rr()(i))
                return i
        }
        function ha() {
            "use strict";
            /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            ha = function() {
                return e
            }
            ;
            var i, e = {}, n = Object.prototype, l = n.hasOwnProperty, f = x() || function(c, r, o) {
                c[r] = o.value
            }
                , g = typeof ve() == "function" ? ve() : {}, I = g.iterator || "@@iterator", T = g.asyncIterator || "@@asyncIterator", A = g.toStringTag || "@@toStringTag";
            function N(c, r, o) {
                return x()(c, r, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                    c[r]
            }
            try {
                N({}, "")
            } catch {
                N = function(o, p, _) {
                    return o[p] = _
                }
            }
            function re(c, r, o, p) {
                var _ = r && r.prototype instanceof sn ? r : sn
                    , y = pt()(_.prototype)
                    , j = new yr(p || []);
                return f(y, "_invoke", {
                    value: wr(c, o, j)
                }),
                    y
            }
            function fe(c, r, o) {
                try {
                    return {
                        type: "normal",
                        arg: c.call(r, o)
                    }
                } catch (p) {
                    return {
                        type: "throw",
                        arg: p
                    }
                }
            }
            e.wrap = re;
            var ke = "suspendedStart"
                , Ht = "suspendedYield"
                , vt = "executing"
                , Me = "completed"
                , he = {};
            function sn() {}
            function ln() {}
            function lt() {}
            var Tn = {};
            N(Tn, I, function() {
                return this
            });
            var Wn = Ke()
                , Dn = Wn && Wn(Wn(hr([])));
            Dn && Dn !== n && l.call(Dn, I) && (Tn = Dn);
            var xt = lt.prototype = sn.prototype = pt()(Tn);
            function Nr(c) {
                var r;
                Ce()(r = ["next", "throw", "return"]).call(r, function(o) {
                    N(c, o, function(p) {
                        return this._invoke(o, p)
                    })
                })
            }
            function xn(c, r) {
                function o(_, y, j, ue) {
                    var le = fe(c[_], c, y);
                    if (le.type !== "throw") {
                        var At = le.arg
                            , Ye = At.value;
                        return Ye && yo(Ye) == "object" && l.call(Ye, "__await") ? r.resolve(Ye.__await).then(function(Rt) {
                            o("next", Rt, j, ue)
                        }, function(Rt) {
                            o("throw", Rt, j, ue)
                        }) : r.resolve(Ye).then(function(Rt) {
                            At.value = Rt,
                                j(At)
                        }, function(Rt) {
                            return o("throw", Rt, j, ue)
                        })
                    }
                    ue(le.arg)
                }
                var p;
                f(this, "_invoke", {
                    value: function(y, j) {
                        function ue() {
                            return new r(function(le, At) {
                                    o(y, j, le, At)
                                }
                            )
                        }
                        return p = p ? p.then(ue, ue) : ue()
                    }
                })
            }
            function wr(c, r, o) {
                var p = ke;
                return function(_, y) {
                    if (p === vt)
                        throw Error("Generator is already running");
                    if (p === Me) {
                        if (_ === "throw")
                            throw y;
                        return {
                            value: i,
                            done: !0
                        }
                    }
                    for (o.method = _,
                             o.arg = y; ; ) {
                        var j = o.delegate;
                        if (j) {
                            var ue = Dr(j, o);
                            if (ue) {
                                if (ue === he)
                                    continue;
                                return ue
                            }
                        }
                        if (o.method === "next")
                            o.sent = o._sent = o.arg;
                        else if (o.method === "throw") {
                            if (p === ke)
                                throw p = Me,
                                    o.arg;
                            o.dispatchException(o.arg)
                        } else
                            o.method === "return" && o.abrupt("return", o.arg);
                        p = vt;
                        var le = fe(c, r, o);
                        if (le.type === "normal") {
                            if (p = o.done ? Me : Ht,
                            le.arg === he)
                                continue;
                            return {
                                value: le.arg,
                                done: o.done
                            }
                        }
                        le.type === "throw" && (p = Me,
                            o.method = "throw",
                            o.arg = le.arg)
                    }
                }
            }
            function Dr(c, r) {
                var o = r.method
                    , p = c.iterator[o];
                if (p === i)
                    return r.delegate = null,
                    o === "throw" && c.iterator.return && (r.method = "return",
                        r.arg = i,
                        Dr(c, r),
                    r.method === "throw") || o !== "return" && (r.method = "throw",
                        r.arg = new TypeError("The iterator does not provide a '" + o + "' method")),
                        he;
                var _ = fe(p, c.iterator, r.arg);
                if (_.type === "throw")
                    return r.method = "throw",
                        r.arg = _.arg,
                        r.delegate = null,
                        he;
                var y = _.arg;
                return y ? y.done ? (r[c.resultName] = y.value,
                    r.next = c.nextLoc,
                r.method !== "return" && (r.method = "next",
                    r.arg = i),
                    r.delegate = null,
                    he) : y : (r.method = "throw",
                    r.arg = new TypeError("iterator result is not an object"),
                    r.delegate = null,
                    he)
            }
            function Fr(c) {
                var r = {
                    tryLoc: c[0]
                };
                1 in c && (r.catchLoc = c[1]),
                2 in c && (r.finallyLoc = c[2],
                    r.afterLoc = c[3]),
                    this.tryEntries.push(r)
            }
            function fr(c) {
                var r = c.completion || {};
                r.type = "normal",
                    delete r.arg,
                    c.completion = r
            }
            function yr(c) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                    Ce()(c).call(c, Fr, this),
                    this.reset(!0)
            }
            function hr(c) {
                if (c || c === "") {
                    var r = c[I];
                    if (r)
                        return r.call(c);
                    if (typeof c.next == "function")
                        return c;
                    if (!isNaN(c.length)) {
                        var o = -1
                            , p = function _() {
                            for (; ++o < c.length; )
                                if (l.call(c, o))
                                    return _.value = c[o],
                                        _.done = !1,
                                        _;
                            return _.value = i,
                                _.done = !0,
                                _
                        };
                        return p.next = p
                    }
                }
                throw new TypeError(yo(c) + " is not iterable")
            }
            return ln.prototype = lt,
                f(xt, "constructor", {
                    value: lt,
                    configurable: !0
                }),
                f(lt, "constructor", {
                    value: ln,
                    configurable: !0
                }),
                ln.displayName = N(lt, A, "GeneratorFunction"),
                e.isGeneratorFunction = function(c) {
                    var r = typeof c == "function" && c.constructor;
                    return !!r && (r === ln || (r.displayName || r.name) === "GeneratorFunction")
                }
                ,
                e.mark = function(c) {
                    return Ne() ? Ne()(c, lt) : (c.__proto__ = lt,
                        N(c, A, "GeneratorFunction")),
                        c.prototype = pt()(xt),
                        c
                }
                ,
                e.awrap = function(c) {
                    return {
                        __await: c
                    }
                }
                ,
                Nr(xn.prototype),
                N(xn.prototype, T, function() {
                    return this
                }),
                e.AsyncIterator = xn,
                e.async = function(c, r, o, p, _) {
                    _ === void 0 && (_ = O());
                    var y = new xn(re(c, r, o, p),_);
                    return e.isGeneratorFunction(r) ? y : y.next().then(function(j) {
                        return j.done ? j.value : y.next()
                    })
                }
                ,
                Nr(xt),
                N(xt, A, "Generator"),
                N(xt, I, function() {
                    return this
                }),
                N(xt, "toString", function() {
                    return "[object Generator]"
                }),
                e.keys = function(c) {
                    var r = Object(c)
                        , o = [];
                    for (var p in r)
                        o.push(p);
                    return en()(o).call(o),
                        function _() {
                            for (; o.length; ) {
                                var y = o.pop();
                                if (y in r)
                                    return _.value = y,
                                        _.done = !1,
                                        _
                            }
                            return _.done = !0,
                                _
                        }
                }
                ,
                e.values = hr,
                yr.prototype = {
                    constructor: yr,
                    reset: function(r) {
                        var o;
                        if (this.prev = 0,
                            this.next = 0,
                            this.sent = this._sent = i,
                            this.done = !1,
                            this.delegate = null,
                            this.method = "next",
                            this.arg = i,
                            Ce()(o = this.tryEntries).call(o, fr),
                            !r)
                            for (var p in this)
                                p.charAt(0) === "t" && l.call(this, p) && !isNaN(+Tt()(p).call(p, 1)) && (this[p] = i)
                    },
                    stop: function() {
                        this.done = !0;
                        var r = this.tryEntries[0].completion;
                        if (r.type === "throw")
                            throw r.arg;
                        return this.rval
                    },
                    dispatchException: function(r) {
                        if (this.done)
                            throw r;
                        var o = this;
                        function p(At, Ye) {
                            return j.type = "throw",
                                j.arg = r,
                                o.next = At,
                            Ye && (o.method = "next",
                                o.arg = i),
                                !!Ye
                        }
                        for (var _ = this.tryEntries.length - 1; _ >= 0; --_) {
                            var y = this.tryEntries[_]
                                , j = y.completion;
                            if (y.tryLoc === "root")
                                return p("end");
                            if (y.tryLoc <= this.prev) {
                                var ue = l.call(y, "catchLoc")
                                    , le = l.call(y, "finallyLoc");
                                if (ue && le) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0);
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                } else if (ue) {
                                    if (this.prev < y.catchLoc)
                                        return p(y.catchLoc, !0)
                                } else {
                                    if (!le)
                                        throw Error("try statement without catch or finally");
                                    if (this.prev < y.finallyLoc)
                                        return p(y.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(r, o) {
                        for (var p = this.tryEntries.length - 1; p >= 0; --p) {
                            var _ = this.tryEntries[p];
                            if (_.tryLoc <= this.prev && l.call(_, "finallyLoc") && this.prev < _.finallyLoc) {
                                var y = _;
                                break
                            }
                        }
                        y && (r === "break" || r === "continue") && y.tryLoc <= o && o <= y.finallyLoc && (y = null);
                        var j = y ? y.completion : {};
                        return j.type = r,
                            j.arg = o,
                            y ? (this.method = "next",
                                this.next = y.finallyLoc,
                                he) : this.complete(j)
                    },
                    complete: function(r, o) {
                        if (r.type === "throw")
                            throw r.arg;
                        return r.type === "break" || r.type === "continue" ? this.next = r.arg : r.type === "return" ? (this.rval = this.arg = r.arg,
                            this.method = "return",
                            this.next = "end") : r.type === "normal" && o && (this.next = o),
                            he
                    },
                    finish: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.finallyLoc === r)
                                return this.complete(p.completion, p.afterLoc),
                                    fr(p),
                                    he
                        }
                    },
                    catch: function(r) {
                        for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                            var p = this.tryEntries[o];
                            if (p.tryLoc === r) {
                                var _ = p.completion;
                                if (_.type === "throw") {
                                    var y = _.arg;
                                    fr(p)
                                }
                                return y
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(r, o, p) {
                        return this.delegate = {
                            iterator: hr(r),
                            resultName: o,
                            nextLoc: p
                        },
                        this.method === "next" && (this.arg = i),
                            he
                    }
                },
                e
        }
        function jh(i, e) {
            var n = q()(i);
            if (ie()) {
                var l = ie()(i);
                e && (l = Oe()(l).call(l, function(f) {
                    return at()(i, f).enumerable
                })),
                    n.push.apply(n, l)
            }
            return n
        }
        function _a(i) {
            for (var e = 1; e < arguments.length; e++) {
                var n, l, f = arguments[e] != null ? arguments[e] : {};
                e % 2 ? Ce()(n = jh(Object(f), !0)).call(n, function(g) {
                    Uh(i, g, f[g])
                }) : Ae() ? mt()(i, Ae()(f)) : Ce()(l = jh(Object(f))).call(l, function(g) {
                    x()(i, g, at()(f, g))
                })
            }
            return i
        }
        function Uh(i, e, n) {
            return (e = Xg(e))in i ? x()(i, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : i[e] = n,
                i
        }
        function Xg(i) {
            var e = qg(i, "string");
            return yo(e) == "symbol" ? e : e + ""
        }
        function qg(i, e) {
            if (yo(i) != "object" || !i)
                return i;
            var n = i[ne()];
            if (n !== void 0) {
                var l = n.call(i, e || "default");
                if (yo(l) != "object")
                    return l;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (e === "string" ? String : Number)(i)
        }
        function $h(i, e, n, l, f, g, I) {
            try {
                var T = i[g](I)
                    , A = T.value
            } catch (N) {
                return void n(N)
            }
            T.done ? e(A) : O().resolve(A).then(l, f)
        }
        function Ga(i) {
            return function() {
                var e = this
                    , n = arguments;
                return new (O())(function(l, f) {
                        var g = i.apply(e, n);
                        function I(A) {
                            $h(g, l, f, I, T, "next", A)
                        }
                        function T(A) {
                            $h(g, l, f, I, T, "throw", A)
                        }
                        I(void 0)
                    }
                )
            }
        }
        var ey = Zt.appApi.getFeatureList
            , ty = {
            phone_monitor: "enableVoiceMonitorBannerListening",
            phone_whisper: "enableVoiceMonitorBannerWhispering",
            phone_barge: "enableVoiceMonitorBannerBarging"
        }
            , ny = Zt.smsApi.getNumberAndQueue;
        const ry = {
            name: "CallbarCti",
            mixins: [vn.A, mn, Ft, ff(), U.checkVersionMixin, Ca.A, Mf, Yn, Lt.nativeNotifyMixin],
            data: function() {
                return {
                    smsOutboundHasDraft: !1,
                    showTicketSelect: !1,
                    loading: !1,
                    status: "0",
                    scheduleStatusIdRecord: "",
                    worker: null,
                    workerEmitError: "",
                    coreWorkerEmitError: "",
                    ErrorTip: null,
                    coreErrorTip: null,
                    ready: !1,
                    userInfo: {},
                    tab: 0,
                    eMenuName: U.eMenuName,
                    wrapupDoneFlag: !1,
                    refreshRecentList: !1,
                    enableGlobalDial: !1,
                    bcChannel: {},
                    menuComponentsMap: U.MENU_COMPONENTS_MAP,
                    featureOptions: {},
                    enableNativeVideo: !1,
                    errorOccurred: !1,
                    initData: null,
                    isShowVideoOutbound: !1,
                    integrationConfiguration: null,
                    statusModifyTime: "",
                    started: !1,
                    lastToastMessage: null,
                    lastToastTime: 0
                }
            },
            setup: function() {
                (0,
                    Lt.useWindowInFocusStatus)();
                var e = (0,
                    Lt.useCallerIdFromZPNS)()
                    , n = e.setCallerIdFromZPNS
                    , l = (0,
                    Lt.useFeatureListFromZPNS)()
                    , f = l.updateFeatureListFromZPNS
                    , g = (0,
                    Mn.useCrmActions)()
                    , I = g.setClientAttributes
                    , T = (0,
                    Lt.useSMSOutboundPermission)()
                    , A = T.enabledSMSOutBoundNumber
                    , N = (0,
                    ql.useCachedCrmName)()
                    , re = N.setLocalStorageCachedNameToStore
                    , fe = (0,
                    Mn.useCrmRecentGetters)()
                    , ke = fe.sessionRow
                    , Ht = (0,
                    Lt.useLogger)()
                    , vt = Ht.startInitLogger
                    , Me = (0,
                    Mn.useAppGetters)()
                    , he = Me.nacosConfig
                    , sn = (0,
                    Mn.useAppActions)()
                    , ln = sn.saveUserBaseInfo
                    , lt = (0,
                    cf.useClickToDial)()
                    , Tn = lt.clickToDial
                    , Wn = (0,
                    Lt.useUncompleteTask)()
                    , Dn = Wn.checkIsActiveTaskEnded
                    , xt = Wn.getWrappingTask
                    , Nr = (0,
                    uf.f)()
                    , xn = Nr.handleVendorDispositionRequest
                    , wr = (0,
                    Qe.ref)(null)
                    , Dr = (0,
                    Lt.useAgentAssist)()
                    , Fr = Dr.getEnableValue
                    , fr = (0,
                    Qe.ref)({});
                (0,
                    Yp.X)();
                var yr = (0,
                    Lt.useMemoryMonitor)()
                    , hr = yr.checkMemoryNow;
                function c() {
                    var o = (0,
                        Mn.getNacos)("enableOCIMMSCollection")
                        , p = (0,
                        Mn.getNacos)("disableMMSCollection")
                        , _ = (0,
                        Mn.getNacos)("enableEuMMSCollection");
                    U.mmsTracker.setEnableOCICollectionFlag(o),
                        U.mmsTracker.setDisableMMSCollectionFlag(p),
                        U.mmsTracker.setEnableEuCollectionFlag(_)
                }
                c(),
                    (0,
                        Lt.useComponentRemountMonitor)("index");
                var r = function() {
                    var o = Ga(ha().mark(function p(_) {
                        var y, j, ue, le, At, Ye, Rt, va, ia, Pa;
                        return ha().wrap(function(Sa) {
                            for (; ; )
                                switch (Sa.prev = Sa.next) {
                                    case 0:
                                        if (y = _.name,
                                            j = _.content,
                                        y !== "send_extension_msg") {
                                            Sa.next = 10;
                                            break
                                        }
                                        if (ue = j.type,
                                            le = j.transparentData,
                                            At = le === void 0 ? {} : le,
                                            Ye = j.engagementId,
                                        ue !== "Sentiment") {
                                            Sa.next = 10;
                                            break
                                        }
                                        return Sa.next = 6,
                                            Fr("enableAicSentiment");
                                    case 6:
                                        if (Rt = Sa.sent,
                                            Rt) {
                                            Sa.next = 9;
                                            break
                                        }
                                        return Sa.abrupt("return");
                                    case 9:
                                        try {
                                            va = JSON.parse(At),
                                                ia = va.sessionPolarity,
                                                Pa = ia === void 0 ? "" : ia,
                                                fr.value = _a(_a({}, fr.value), {}, Uh({}, Ye, "".concat(Pa)))
                                        } catch {
                                            console.error("sentiment msg error")
                                        }
                                    case 10:
                                    case "end":
                                        return Sa.stop()
                                }
                        }, p)
                    }));
                    return function(_) {
                        return o.apply(this, arguments)
                    }
                }();
                return {
                    setCallerIdFromZPNS: n,
                    updateFeatureListFromZPNS: f,
                    enabledSMSOutBoundNumber: A,
                    sessionRow: ke,
                    setClientAttributes: I,
                    startInitLogger: vt,
                    phone: wr,
                    setLocalStorageCachedNameToStore: re,
                    checkIsActiveTaskEnded: Dn,
                    getWrappingTask: xt,
                    saveUserBaseInfo: ln,
                    clickToDial: Tn,
                    sentimentScoreMap: fr,
                    handleSentimentUpdate: r,
                    useSafeFormatMsDurationOver24Hours: Lt.useSafeFormatMsDurationOver24Hours,
                    nacosConfig: he,
                    handleVendorDispositionRequest: xn,
                    checkMemoryNow: hr
                }
            },
            beforeMount: function() {
                var e = this;
                return Ga(ha().mark(function n() {
                    return ha().wrap(function(f) {
                        for (; ; )
                            switch (f.prev = f.next) {
                                case 0:
                                    e.initMenuTab(),
                                        e.setupGlobalDial(),
                                        document.body.style.backgroundColor = "#FFFFFF",
                                        e.embededWebIntial();
                                case 4:
                                case "end":
                                    return f.stop()
                            }
                    }, n)
                }))()
            },
            mounted: function() {
                var e = new BroadcastChannel("logout");
                this.bcChannel = e,
                    e.addEventListener("message", function(n) {
                        n.data.event === "syncLogout" && window.location.reload()
                    }),
                    this.setLocalStorageCachedNameToStore(),
                    document.addEventListener("visibilitychange", this.reportVisibilityChange),
                    (0,
                        sf.initializeInterceptor)(this),
                    this.$bus.$on("SE_SELECT_DISPOSITION_REQUEST", this.handleVendorDispositionRequest)
            },
            beforeDestroy: function() {
                this.offBusEventsAfterStarted(),
                    this.offSentimentMsg(),
                    document.removeEventListener("visibilitychange", this.reportVisibilityChange),
                    this.$bus.$off("SE_SELECT_DISPOSITION_REQUEST", this.handleVendorDispositionRequest)
            },
            methods: _a(_a(_a(_a(_a(_a(_a(_a(_a(_a({}, (0,
                zt.mapActions)("livechat", ["resetCurrentEngagement"])), (0,
                zt.mapActions)("sessionPanels", ["updateCallTask", "switchActiveTask", "resetMenuTarget", "setResetAgentStatus", "setRefreshRecentList", "setMenuTab", "setRightTabIndex", "setHistoryIsInDetailPage", "setToastNotify"])), (0,
                zt.mapActions)("callbar", {
                setCallbarClientInfo: "setClientInfo"
            })), (0,
                zt.mapActions)("coreVoice", {
                setCoreVoiceClientInfo: "setClientInfo",
                setSalesforcePackageVersion: "setSalesforcePackageVersion"
            })), (0,
                zt.mapActions)("inbox", ["getVMNotifications"])), (0,
                zt.mapMutations)("common", ["setFeatures"])), (0,
                zt.mapActions)("CrmCommonModule", ["setCrmCommonFeatures"])), (0,
                zt.mapMutations)("sms", ["setOutboundNumbersAndQueues"])), (0,
                zt.mapActions)("crm", ["setIntegrationConfiguration"])), {}, {
                handleStart: function() {
                    this.started = !0
                },
                setClientInfo: function(e) {
                    this.setCoreVoiceClientInfo(e),
                        this.setCallbarClientInfo(e)
                },
                initMenuTab: function() {
                    var e = this.eMenuName.phonePanel;
                    this.setMenuTab(e)
                },
                formatE164Number: function(e) {
                    return this.$options.filters.E164Number(e, this.currentAgent.countryOrRegion)
                },
                hideUserPanels: function() {
                    this.showEngagement = !1,
                        this.showTicketSelect = !1,
                        this.setRightTabIndex({
                            taskId: this.currentTaskId,
                            val: -1
                        })
                },
                handleIncommingCall: function(e, n) {
                    this.$emit("in-coming-call", e, n)
                },
                setupGlobalDial: function() {
                    var e = this;
                    this.$on("in-coming-call", function(n) {
                        n === 1 && (e.hideUserPanels(),
                            e.enableGlobalDial = !0)
                    }),
                        this.$watch(function(n) {
                            return [n.isMenuRecentSessionSelected, n.sessionRow]
                        }, function() {
                            e.enableGlobalDial = !1
                        })
                },
                queryFeatureOptions: function() {
                    var e = this;
                    return Ga(ha().mark(function n() {
                        var l, f, g, I;
                        return ha().wrap(function(A) {
                            for (; ; )
                                switch (A.prev = A.next) {
                                    case 0:
                                        return A.next = 2,
                                            (0,
                                                U.tryApiCatch)(ey);
                                    case 2:
                                        if (l = A.sent,
                                            f = Dh(l, 2),
                                            g = f[0],
                                            I = f[1],
                                            !g) {
                                            A.next = 8;
                                            break
                                        }
                                        return A.abrupt("return", e.$message.error(g));
                                    case 8:
                                        e.setFeatures(I),
                                            e.featureOptions = I,
                                            e.setCrmCommonFeatures(I),
                                            window.zoom_zcc_chrome_extension = window.zoom_zcc_chrome_extension && !!(I != null && I.enableWebRtcExtension),
                                            e.setClientInfo({
                                                isNewUI: I.enable_new_voice_ui,
                                                isNewInstanceId: I.enable_voice_new_instance_id,
                                                syncLocal: !0
                                            }),
                                            e.setupLivesdk(I);
                                    case 14:
                                    case "end":
                                        return A.stop()
                                }
                        }, n)
                    }))()
                },
                setupLivesdk: function() {
                    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                    (0,
                        Mt.writeGlobalChatEnv)(function(n) {
                        e.enableRefactorMessagingOrder && (n.CHAT_ENABLE_MESSAGE_ORDER_V2 = !0)
                    })
                },
                embededWebIntial: function() {
                    var e = this;
                    return Ga(ha().mark(function n() {
                        var l, f;
                        return ha().wrap(function(I) {
                            for (; ; )
                                switch (I.prev = I.next) {
                                    case 0:
                                        if (!(0,
                                            Bn.inIframe)()) {
                                            I.next = 6;
                                            break
                                        }
                                        if (l = (0,
                                            Bn.getCRM)(),
                                        l !== Dt.CRMS.MsDynamics) {
                                            I.next = 6;
                                            break
                                        }
                                        return (0,
                                            Vr.CrmLogger)("MSD setup call"),
                                            I.next = 6,
                                            (0,
                                                xa.getCRMInstance)();
                                    case 6:
                                        if (f = window.localStorage.getItem("CCI_THIRD_TOKEN") || "",
                                        f !== "") {
                                            I.next = 11;
                                            break
                                        }
                                        e.setPageStatus(an.PageStatus.NotLoggedIn),
                                            I.next = 29;
                                        break;
                                    case 11:
                                        return e.setPageStatus(an.PageStatus.AuthTokenValidationRequired),
                                            I.prev = 12,
                                            U.monitor.dispatchMonitor({
                                                name: "crm_login: embededWebIntial start"
                                            }),
                                            e._setLoading(!0),
                                            e.pageLoading = e.$globalLoading(),
                                            I.next = 18,
                                            e.callbarIntial();
                                    case 18:
                                        I.next = 25;
                                        break;
                                    case 20:
                                        I.prev = 20,
                                            I.t0 = I.catch(12),
                                            e.removeAuthData(),
                                            U.monitor.dispatchMonitor({
                                                name: "crm_login: embededWebIntial failed",
                                                message: I.t0
                                            }),
                                        I.t0 !== null && I.t0 !== void 0 && I.t0.message && e.$message.error(I.t0.message);
                                    case 25:
                                        return I.prev = 25,
                                            e._setLoading(!1),
                                            e.pageLoading.close(),
                                            I.finish(25);
                                    case 29:
                                    case "end":
                                        return I.stop()
                                }
                        }, n, null, [[12, 20, 25, 29]])
                    }))()
                },
                callbarIntial: function() {
                    var e = this;
                    return Ga(ha().mark(function n() {
                        var l, f, g, I, T, A, N, re, fe, ke, Ht, vt, Me, he, sn, ln, lt, Tn, Wn, Dn, xt, Nr, xn, wr, Dr, Fr, fr, yr, hr, c, r, o, p, _, y, j;
                        return ha().wrap(function(le) {
                            for (; ; )
                                switch (le.prev = le.next) {
                                    case 0:
                                        return N = (0,
                                            Bn.getCRM)(),
                                            re = new (In()),
                                            re.on("voice-dialout", e.clickToDial),
                                            re.on("notify", function(At, Ye) {
                                                Ye === "success" ? e.$message.success(At) : Ye === "error" ? e.$message.error(At) : Ye === "info" && e.$message.info(At)
                                            }),
                                            re.on("add-users", function(At, Ye) {
                                                e.$store.dispatch("crm/setContactsMap", {
                                                    users: At,
                                                    engagementId: Ye
                                                })
                                            }),
                                            re.on("set-width", function(At) {
                                                e.$store.commit("crm/setAppPanelWidth", At)
                                            }),
                                            re.on("set-panel-size", function(At) {
                                                e.$store.commit("crm/setAppPanelSize", At)
                                            }),
                                            e.queryFeatureOptions(),
                                            le.next = 10,
                                            (0,
                                                on.getUserInfo)();
                                    case 10:
                                        return fe = le.sent,
                                            ke = fe.data,
                                            Ht = ke.result,
                                            vt = Ht.user,
                                            Me = vt === void 0 ? {} : vt,
                                            he = Ht.zpnsJwtToken,
                                            sn = Ht.zpnsWs,
                                            U.mmsTracker.initMMSTrackerContext({
                                                userEntity: {
                                                    user_id: Me?.id || "",
                                                    account_id: Me?.accountId || ""
                                                },
                                                zccProductEntity: {
                                                    zoom_client_version: "WEB"
                                                }
                                            }),
                                            (0,
                                                Lt.setTimestampDifferenceServerAndLocal)(Me?.currentTime),
                                            e.statusModifyTime = Me.statusMergedModifyTime || Me.statusModifyTime,
                                            le.prev = 16,
                                            le.next = 19,
                                            e.saveUserBaseInfo(ke.result);
                                    case 19:
                                        le.next = 24;
                                        break;
                                    case 21:
                                        le.prev = 21,
                                            le.t0 = le.catch(16),
                                            console.log(le.t0);
                                    case 24:
                                        return U.monitor.dispatchMonitor({
                                            name: "crm_login: user info interface init success"
                                        }),
                                            le.next = 27,
                                            (0,
                                                xa.getCRMInstance)();
                                    case 27:
                                        if (ln = le.sent,
                                            !(ln && ln.init)) {
                                            le.next = 46;
                                            break
                                        }
                                        return U.monitor.dispatchMonitor({
                                            name: "crm_login: getCRMInstance and init success"
                                        }),
                                            e.setClientAttributes(ln),
                                            le.next = 33,
                                            e.validateIntegration();
                                    case 33:
                                        if (lt = le.sent,
                                            Tn = Dh(lt, 2),
                                            Wn = Tn[0],
                                            Dn = Tn[1],
                                            Wn) {
                                            le.next = 45;
                                            break
                                        }
                                        return U.monitor.dispatchMonitor({
                                            name: "crm_login: validateIntegration valid failed",
                                            error: Dn
                                        }),
                                            e._setLoading(!1),
                                            e.setPageStatus(an.PageStatus.NotLoggedIn),
                                            e.ready = !1,
                                            e.$bus.$emit("crmIntegrateInvalid"),
                                            e.$message.error({
                                                message: Dn,
                                                duration: 6e3,
                                                showClose: !0
                                            }),
                                            le.abrupt("return");
                                    case 45:
                                        ln.init({
                                            crmBus: re
                                        });
                                    case 46:
                                        if (!(ln != null && ln.authenticationInterceptor)) {
                                            le.next = 54;
                                            break
                                        }
                                        return le.next = 49,
                                            ln.authenticationInterceptor();
                                    case 49:
                                        if (xt = le.sent,
                                            xt) {
                                            le.next = 54;
                                            break
                                        }
                                        return U.monitor.dispatchMonitor({
                                            name: "crm_login: authenticationInterceptor failed"
                                        }),
                                            e._setLoading(!1),
                                            le.abrupt("return");
                                    case 54:
                                        if (N === "salesforce" && e.setSalesforcePackageVersion(ln == null || (Nr = ln.client) === null || Nr === void 0 ? void 0 : Nr.SalesforcePackageVersion),
                                            U.monitor.dispatchMonitor({
                                                name: "crm_login: CRM init finished"
                                            }),
                                            xn = (0,
                                                nc.Mo)(e.$route),
                                            console.log("inCloudService:", xn),
                                            wr = !!localStorage.getItem("enableWebRTC"),
                                            e.enableCoreVoiceTab = (!!((l = ke.result) !== null && l !== void 0 && (l = l.account) !== null && l !== void 0 && l.enableWebrtcInCTI) && !!((f = e.featureOptions) !== null && f !== void 0 && f.enable_webrtc_in_cti) || wr) && !xn,
                                            e.startInitLogger(),
                                            e.onBusEventsAfterStarted(),
                                            Dr = !1,
                                            !e.enableCoreVoiceTab) {
                                            le.next = 81;
                                            break
                                        }
                                        return e.initBroadCast((Fr = ke.result) === null || Fr === void 0 || (Fr = Fr.user) === null || Fr === void 0 ? void 0 : Fr.id),
                                            le.next = 67,
                                            e.handleCheckCoreTabReay();
                                    case 67:
                                        if (fr = le.sent,
                                            console.log("handleCheckCoreTabReay", fr),
                                            fr) {
                                            le.next = 80;
                                            break
                                        }
                                        return Dr = !0,
                                            le.prev = 71,
                                            le.next = 74,
                                            e.handleOpenCoreTab((yr = ke.result) === null || yr === void 0 || (yr = yr.user) === null || yr === void 0 ? void 0 : yr.id);
                                    case 74:
                                        le.next = 80;
                                        break;
                                    case 76:
                                        le.prev = 76,
                                            le.t1 = le.catch(71),
                                            e.destoryBroadCast((hr = ke.result) === null || hr === void 0 || (hr = hr.user) === null || hr === void 0 ? void 0 : hr.id),
                                            console.log(le.t1);
                                    case 80:
                                        e.integrationConfiguration && e.setIntegrationConfiguration(e.integrationConfiguration);
                                    case 81:
                                        e.status = Me.status,
                                            e.scheduleStatusIdRecord = Me.scheduleStatus,
                                            e.zpnsWs = sn,
                                            e.zpnsJwtToken = he,
                                            c = Me.id,
                                            r = Me.email,
                                            o = Me.name,
                                            p = Me.parentUserId,
                                            _ = {
                                                version: "WEB",
                                                device: {
                                                    platform: "crm",
                                                    crmEnv: (0,
                                                        Bn.getCRM)(),
                                                    crmVersion: "v3",
                                                    os: (0,
                                                        U.getOSType)()
                                                },
                                                syncLocal: !0
                                            },
                                        e.openedCoreTab || (_.instanceId = U.phoneUtils.Phone.getInstanceId(Me.sipId, (y = e.featureOptions) === null || y === void 0 ? void 0 : y.enable_voice_new_instance_id)),
                                            e.setClientInfo(_),
                                            e.userInfo = {
                                                id: c,
                                                mail: r,
                                                name: o,
                                                parentUserId: p
                                            },
                                            j = {
                                                account: (g = ke.result) === null || g === void 0 ? void 0 : g.account,
                                                userInfo: {
                                                    id: c,
                                                    mail: r,
                                                    name: o,
                                                    parentUserId: p
                                                },
                                                clientVersion: "WEB",
                                                zpnsWs: e.zpnsWs,
                                                zpnsJwtToken: e.zpnsJwtToken,
                                                userStatus: e.status,
                                                instanceId: U.phoneUtils.Phone.getInstanceId(Me.sipId, (I = e.featureOptions) === null || I === void 0 ? void 0 : I.enable_voice_new_instance_id),
                                                sipId: Me.sipId,
                                                zpnsExtra: e.zpnsExtra,
                                                enableReportQOS: ((T = e.featureOptions) === null || T === void 0 ? void 0 : T.enable_report_qos_log) || e.isReportingQOSEnabled,
                                                getIsNewInstanceId: (A = e.featureOptions) === null || A === void 0 ? void 0 : A.enable_voice_new_instance_id
                                            },
                                            e.initData = j,
                                            k()(function() {
                                                U.monitor.dispatchMonitor({
                                                    name: "crm_login: Finish loading and ready to work"
                                                }),
                                                    e._setLoading(!1),
                                                    e.ready = !0,
                                                    console.log("this.ready======", e.ready),
                                                    e.handleInit(j),
                                                    e.getWrappingTask(Dr),
                                                    e.onSentimentMsg()
                                            }),
                                            e.updateVMNotifications(),
                                            e.getOutboundCallNumbers(),
                                            e.getSMSOutboundNumbers(),
                                            e.refreshTokenInterval(),
                                            U.monitor.dispatchMonitor({
                                                name: "crm_login: callbarIntial success"
                                            }),
                                        ln && ln.ready && ln.ready();
                                    case 99:
                                    case "end":
                                        return le.stop()
                                }
                        }, n, null, [[16, 21], [71, 76]])
                    }))()
                },
                onSentimentMsg: function() {
                    var e, n;
                    (e = this.zpns) === null || e === void 0 || (n = e.on) === null || n === void 0 || n.call(e, "message", this.handleSentimentUpdate)
                },
                offSentimentMsg: function() {
                    var e, n;
                    (e = this.zpns) === null || e === void 0 || (n = e.off) === null || n === void 0 || n.call(e, "message", this.handleSentimentUpdate)
                },
                onBusEventsAfterStarted: function() {
                    this.$bus.$on("engagementHasBeenEnded", this.checkIsActiveTaskEnded)
                },
                offBusEventsAfterStarted: function() {
                    this.$bus.$off("engagementHasBeenEnded", this.checkIsActiveTaskEnded)
                },
                handleMenuClick: function(e) {
                    var n = this, l, f;
                    if (this.showEngagement = !1,
                        this._handleHideCont(!1),
                    e === U.eMenuName.videoOutbound) {
                        this.isShowVideoOutbound = !0;
                        return
                    }
                    this.isShowVideoOutbound = !1,
                        e === U.eMenuName.report ? (this.setMenuTab(void 0),
                            this.$nextTick(function() {
                                n.setMenuTab(e)
                            })) : this.setMenuTab(e),
                    M()(l = [U.eMenuName.sessionMonitor, U.eMenuName.sessionMonitorChatSMS, U.eMenuName.chatPanel, U.eMenuName.chatWrapup]).call(l, e) || this.resetCurrentEngagement(),
                    M()(f = [U.eMenuName.chatPanel, U.eMenuName.sessionActive, U.eMenuName.sessionMonitor, U.eMenuName.sessionMonitorChatSMS, U.eMenuName.chatWrapup]).call(f, e) || this.switchActiveTask(null)
                },
                debounceChangeStatus: function(e, n) {
                    var l = this;
                    return Ga(ha().mark(function f() {
                        var g, I, T, A, N, re, fe, ke, Ht;
                        return ha().wrap(function(Me) {
                            for (; ; )
                                switch (Me.prev = Me.next) {
                                    case 0:
                                        return console.log("debounceChangeStatus called in cti: ".concat(e)),
                                            g = !0,
                                            I = !1,
                                            T = !1,
                                            A = {},
                                            Me.prev = 5,
                                            Me.next = 8,
                                            Le(e, "", "", l.clientVersion, l.instanceId);
                                    case 8:
                                        if (A = Me.sent,
                                            A.status) {
                                            Me.next = 13;
                                            break
                                        }
                                        throw new Error(A.errorMessage);
                                    case 13:
                                        ((N = A) === null || N === void 0 || (N = N.result) === null || N === void 0 || (N = N.from) === null || N === void 0 ? void 0 : N.id) === ((re = A) === null || re === void 0 || (re = re.result) === null || re === void 0 || (re = re.to) === null || re === void 0 ? void 0 : re.id) && (I = !0);
                                    case 14:
                                        Me.next = 23;
                                        break;
                                    case 16:
                                        Me.prev = 16,
                                            Me.t0 = Me.catch(5),
                                            g = !1,
                                            l.$message.error(Me.t0.message),
                                            ke = Me.t0 === null || Me.t0 === void 0 || (fe = Me.t0.data) === null || fe === void 0 ? void 0 : fe.errorCode,
                                        Number(ke) === vs.STATUS_ERROR_CODE.NOT_FOUND && (T = !0),
                                            console.error("debounceChangeStatus error", Me.t0);
                                    case 23:
                                        return Ht = _a({
                                            id: e,
                                            parentId: n,
                                            changeRes: g,
                                            changeReplica: I,
                                            statusNotFound: T
                                        }, A),
                                            Me.abrupt("return", Ht);
                                    case 25:
                                    case "end":
                                        return Me.stop()
                                }
                        }, f, null, [[5, 16]])
                    }))()
                },
                $updateCallInfo: function() {},
                handleWrapupDone: function() {
                    var e = this;
                    if (this.currentCall) {
                        this.switchActiveTask(this.currentCall.state.taskId);
                        var n = this.currentCall.type === pf.Monitor ? U.eMenuName.sessionMonitor : U.eMenuName.sessionActive;
                        this.handleMenuClick(n)
                    } else
                        this.handleMenuClick(U.eMenuName.phonePanel);
                    this.wrapupDoneFlag = !0,
                        this.$nextTick(function() {
                            e.wrapupDoneFlag = !1
                        })
                },
                getOutboundCallNumbers: function() {
                    var e = this;
                    return Ga(ha().mark(function n() {
                        var l;
                        return ha().wrap(function(g) {
                            for (; ; )
                                switch (g.prev = g.next) {
                                    case 0:
                                        return g.next = 2,
                                            (0,
                                                Fe.I9)();
                                    case 2:
                                        l = g.sent,
                                            e.$store.dispatch("voice/setOutboundNumbers", l.data.result);
                                    case 4:
                                    case "end":
                                        return g.stop()
                                }
                        }, n)
                    }))()
                },
                getSMSOutboundNumbers: function() {
                    var e = this;
                    return Ga(ha().mark(function n() {
                        var l, f, g;
                        return ha().wrap(function(T) {
                            for (; ; )
                                switch (T.prev = T.next) {
                                    case 0:
                                        if (!e.enabledSMSOutBoundNumber) {
                                            T.next = 6;
                                            break
                                        }
                                        return T.next = 3,
                                            ny();
                                    case 3:
                                        g = T.sent,
                                            e.hasOutBoundNumber = (g == null || (l = g.data) === null || l === void 0 ? void 0 : l.result.length) !== 0,
                                            e.setOutboundNumbersAndQueues((g == null || (f = g.data) === null || f === void 0 ? void 0 : f.result) || []);
                                    case 6:
                                    case "end":
                                        return T.stop()
                                }
                        }, n)
                    }))()
                },
                removeAuthData: hf.Jx,
                removeRefeshData: hf.Ew,
                handleLogout: function() {
                    var e = this;
                    return Ga(ha().mark(function n() {
                        return ha().wrap(function(f) {
                            for (; ; )
                                switch (f.prev = f.next) {
                                    case 0:
                                        return f.prev = 0,
                                            f.next = 3,
                                            e.$confirm("Are you sure you want to logout?", "Confirmation", {
                                                confirmButtonClass: "zm-button--danger"
                                            });
                                    case 3:
                                        f.next = 8;
                                        break;
                                    case 5:
                                        return f.prev = 5,
                                            f.t0 = f.catch(0),
                                            f.abrupt("return");
                                    case 8:
                                        e.performLogout();
                                    case 9:
                                    case "end":
                                        return f.stop()
                                }
                        }, n, null, [[0, 5]])
                    }))()
                },
                performLogout: function() {
                    var e = this;
                    return Ga(ha().mark(function n() {
                        var l, f, g;
                        return ha().wrap(function(T) {
                            for (; ; )
                                switch (T.prev = T.next) {
                                    case 0:
                                        return l = U.ZCache.getRefreshToken() || localStorage.getItem("CCI_REFESH_TOKEN"),
                                            T.next = 3,
                                            O().all([(0,
                                                U.tryApiCatch)(yn), (0,
                                                U.tryApiCatch)(dn, {
                                                headers: {
                                                    "x-zcc-refresh-token": l
                                                }
                                            })]);
                                    case 3:
                                        return e.removeAuthData(),
                                            e.removeRefeshData(),
                                            e.bcChannel.postMessage({
                                                event: "syncLogout"
                                            }),
                                        e.enableCoreVoiceTab && e.handleCloseCoreTab(),
                                            f = (0,
                                                Bn.getCRM)(),
                                        f === Dt.CRMS.SalesforceServiceCloud && (0,
                                            lf.letServiceCloudLogout)(),
                                            T.next = 11,
                                            (0,
                                                xa.getCRMInstance)();
                                    case 11:
                                        g = T.sent,
                                        g && g.logout && g.logout(),
                                            window.location.reload();
                                    case 14:
                                    case "end":
                                        return T.stop()
                                }
                        }, n)
                    }))()
                },
                _setLoading: function(e) {
                    this.loading = e
                },
                handleEndChat: function() {
                    var e = this;
                    return Ga(ha().mark(function n() {
                        return ha().wrap(function(f) {
                            for (; ; )
                                switch (f.prev = f.next) {
                                    case 0:
                                        return f.next = 2,
                                            (0,
                                                U.sleep)(1e4);
                                    case 2:
                                        e.refreshRecentList = !0,
                                            e.$nextTick(function() {
                                                e.refreshRecentList = !1
                                            });
                                    case 4:
                                    case "end":
                                        return f.stop()
                                }
                        }, n)
                    }))()
                },
                queryCurrentStatus: function() {},
                smsUpgradeToVoice: function(e) {
                    var n = this;
                    return Ga(ha().mark(function l() {
                        var f, g;
                        return ha().wrap(function(T) {
                            for (; ; )
                                switch (T.prev = T.next) {
                                    case 0:
                                        return T.prev = 0,
                                            T.next = 3,
                                            (f = n.phone) === null || f === void 0 || (g = f.smsOutboundCall) === null || g === void 0 ? void 0 : g.call(f, e);
                                    case 3:
                                        T.next = 8;
                                        break;
                                    case 5:
                                        T.prev = 5,
                                            T.t0 = T.catch(0),
                                            console.error(T.t0);
                                    case 8:
                                    case "end":
                                        return T.stop()
                                }
                        }, l, null, [[0, 5]])
                    }))()
                },
                zpnsVoicemailHandler: Pt()(function() {
                    this.updateVMNotifications()
                }, U.inboxConstant.VM_NOTIFICATION_WAIT),
                updateVMNotifications: function() {
                    this.inboxReadPermission && this.getVMNotifications()
                },
                handleShowToastMessage: function() {
                    var e = this.messageToast.message;
                    e === "wrap-up.save.ok" ? this.nativeNotify(this.$t("cci.client.wrapup.save.ok"), "success") : e === "wrap-up.save.failed" && this.nativeNotify(this.$t("cci.client.wrapup.save.fail"), "error")
                },
                reportVisibilityChange: function() {
                    U.monitor.dispatchMonitor({
                        name: "visibility change",
                        traceId: this.tabId,
                        message: {
                            visible: document.visibilityState
                        }
                    })
                }
            }),
            computed: _a(_a(_a(_a(_a(_a(_a(_a({}, (0,
                zt.mapGetters)("livechat", ["currentEngagement"])), (0,
                zt.mapGetters)("sessionPanels", ["currentTask", "currentActiveTask", "rightPanelHistoryTaskData", "rightPanelHistoryHasRecord", "switchSessionTo", "resetAgentStatus", "needRefreshRecentList", "currentTaskId", "activeTaskDurationList", "agentBeMonitorInfo", "messageToast", "menuTab"])), (0,
                zt.mapGetters)({
                account: "account",
                currentAgent: "user",
                isWorkSessionClickStart: "isWorkSessionClickStart"
            })), (0,
                zt.mapState)("coreVoice", {
                clientVersion: "version",
                instanceId: "instanceId",
                isNewInstanceId: "isNewInstanceId",
                calls: "calls",
                device: "device",
                coreTabStatus: "coreTabStatus"
            })), (0,
                zt.mapGetters)("coreVoice", ["callReservation", "callStatus", "enableCTIStartTip"])), (0,
                zt.mapGetters)("cti", ["isReportingQOSEnabled"])), {}, {
                needStart: function() {
                    var e;
                    return !this.enableCoreVoiceTab && !this.started && !((e = window) !== null && e !== void 0 && e.__subBroadcast__) && this.enableCTIStartTip && !this.isWorkSessionClickStart && (0,
                        U.isSafari)()
                },
                hidePhonePanelWhenIncomingRinging: function() {
                    var e, n, l = (e = (n = this.callReservation) === null || n === void 0 || (n = n.task) === null || n === void 0 ? void 0 : n.attributes) !== null && e !== void 0 ? e : {}, f = l?.mDirection;
                    return !f || this.isChatPanelShowed || this.isVideoShowed || this.needShowSideBarViewer ? !1 : this.menuTab !== U.eMenuName.phonePanel && f !== "outbound" && this.callStatus === 1
                },
                connectingToCore: function() {
                    var e;
                    return this.coreTabStatus === Mn.CORE_TAB_STATUS.NOT_READY && ((e = window) === null || e === void 0 ? void 0 : e.__subBroadcast__) && !this.isInCoreTab
                },
                coreNotStarted: function() {
                    var e;
                    return this.coreTabStatus === Mn.CORE_TAB_STATUS.READY && ((e = window) === null || e === void 0 ? void 0 : e.__subBroadcast__) && !this.isInCoreTab
                },
                isShowPhoneMonitorForAgent: function() {
                    var e, n = this.currentActiveTask, l = n === void 0 ? {} : n, f = this.agentBeMonitorInfo, g = f === void 0 ? {} : f, I = this.currentEngagement, T = I === void 0 ? {} : I, A = g.monitorMode, N = g.monitorUserName;
                    return l.tkType === "phone" && l.taskId === g.taskId && !!A && !!N && (0,
                        tn.isEmpty)(T) && ((e = this.currentCall) === null || e === void 0 || (e = e.state) === null || e === void 0 || (e = e.monitorSettings) === null || e === void 0 ? void 0 : e[ty[l.tkType + "_" + A]])
                },
                needShowSideBarViewer: function() {
                    return this.showSideBarViewer && !this.warmConferenceNotMerge
                },
                needShowAIEASideBarViwer: function() {
                    return this.showAieaSideBarViwer && !this.warmConferenceNotMerge
                },
                needShowRightBar: function() {
                    return this.isRightBarShowed && !this.warmConferenceNotMerge
                },
                warmConferenceNotMerge: function() {
                    var e, n = this, l, f, g = (e = this.calls) === null || e === void 0 ? void 0 : D()(e).call(e, function(I) {
                        var T;
                        return n.currentTaskId === (I == null || (T = I.state) === null || T === void 0 ? void 0 : T.taskId)
                    });
                    return (g == null || (l = g.state) === null || l === void 0 ? void 0 : l.conferenceType) === "warm" && (g == null || (f = g.state) === null || f === void 0 ? void 0 : f.merged) === !1
                },
                showPanelContainer: function() {
                    var e;
                    return G()(e = [this.isPhonePanelShowed, this.isChatPanelShowed, this.isVideoShowed, this.showSideBarViewer, this.showAieaSideBarViwer]).call(e, function(n) {
                        return n
                    })
                }
            }, (0,
                zt.mapGetters)("coreVoice", ["zpnsExtra", "currentCall"])), {}, {
                isRightBarShowed: function() {
                    return this.isLive && !this.isWrapupStatus || this.isMenuRecentSessionSelected
                },
                showSideBarViewer: function() {
                    var e;
                    if (this.isLive)
                        return G()(e = [this.isRightProfileShowed, this.isRightEngagementShowed, this.isRightTicketShowed, this.showTicketSelect, this.isResponseAssistantShowed]).call(e, function(n) {
                            return n
                        })
                },
                showAieaSideBarViwer: function() {
                    if (this.isLive)
                        return this.isExpertAssistPanelShowed
                },
                contactInfo: function() {
                    var e = this.callInfo.reservation;
                    return !e || !e.task || !e.task.attributes ? {} : {
                        from: e.task.attributes.to,
                        callSid: e.task.attributes.customerChannelSid,
                        queueName: e.task.attributes.queueName,
                        userName: this.userInfo.name
                    }
                },
                isOutBoundCall: function() {
                    var e;
                    return ((e = this.currentActiveTask) === null || e === void 0 ? void 0 : e.direction) === "outbound"
                },
                showConferenceNumber: function() {
                    var e, n = this, l, f, g, I = (e = this.calls) === null || e === void 0 ? void 0 : D()(e).call(e, function(T) {
                        var A;
                        return n.currentTaskId === (T == null || (A = T.state) === null || A === void 0 ? void 0 : A.taskId)
                    });
                    return (I == null || (l = I.state) === null || l === void 0 ? void 0 : l.conferenceType) === "warm" && (I == null || (f = I.state) === null || f === void 0 ? void 0 : f.merged) || (I == null || (g = I.state) === null || g === void 0 ? void 0 : g.conferenceType) === "direct"
                },
                wrapupNumber: function() {
                    var e = this.currentActiveTask || {}
                        , n = e.from
                        , l = e.to
                        , f = e.sfdcAddressBooks
                        , g = e.callerIdInfoBO
                        , I = this.isOutBoundCall ? l : n;
                    if (f) {
                        var T;
                        return I = (T = f[0]) === null || T === void 0 ? void 0 : T.Name,
                            I
                    }
                    return this.showConferenceNumber && (I = g?.origNumber),
                        this.calcPhoneWithPhiMask(I)
                },
                wrapDuration: function() {
                    var e;
                    return ((e = this.activeTaskDurationList[this.currentTaskId]) === null || e === void 0 ? void 0 : e.newDuration) || 0
                },
                wraupDisplayTime: function() {
                    return (0,
                        Lt.useSafeFormatMsDurationOver24Hours)(Math.abs(this.wrapDuration))
                },
                chatVideoName: function() {
                    var e = this.currentActiveTask || {}
                        , n = e.customerName
                        , l = e.crmName;
                    return l || n || this.$t("cci.common.table.customer")
                },
                isMenuLogSettingsSelected: function() {
                    return this.menuTab === U.eMenuName.crmSettings
                },
                isMenuNotificationCenterSelected: function() {
                    return this.menuTab === U.eMenuName.crmNotificationCenter
                },
                isMenuRecentSessionSelected: function() {
                    return this.menuTab === U.eMenuName.sessionRecent
                },
                isMenuTeamsSelected: function() {
                    return this.menuTab === U.eMenuName.teams
                },
                isMenuReportSelected: function() {
                    return this.menuTab === U.eMenuName.report
                },
                isMenuActiveSessionPhoneSelected: function() {
                    var e;
                    return this.menuTab === U.eMenuName.sessionActive && ((e = this.currentTask) === null || e === void 0 ? void 0 : e.eventType) === "call.ended"
                },
                isPhoneShowed: function() {
                    var e, n;
                    return this.enableGlobalDial || this.menuTab === U.eMenuName.phonePanel || this.menuTab === U.eMenuName.sessionActive && K()(e = ["created", "accepted", "takeover.accepted"]).call(e, (n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.eventType) > -1
                },
                isInZendesk: function() {
                    return (0,
                        Bn.getCRM)() === "zendesk"
                },
                isVideoShowed: function() {
                    var e, n;
                    return this.menuTab === U.eMenuName.sessionActive && K()(e = ["v.created", "v.accepted"]).call(e, (n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.eventType) > -1 || this.inMonitorVideo
                },
                isPhonePanelShowed: function() {
                    return this.isPhoneShowed || this.isPhoneInfoPanelShowed
                },
                isChatPanelShowed: function() {
                    var e;
                    return M()(e = [U.eMenuName.chatPanel, U.eMenuName.chatWrapup, U.eMenuName.sessionMonitorChatSMS]).call(e, this.menuTab)
                },
                isPhoneInfoPanelShowed: function() {
                    var e, n;
                    return this.menuTab === U.eMenuName.sessionActive && K()(e = ["accepted", "takeover.accepted", "call.ended"]).call(e, (n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.eventType) > -1
                },
                isOnCallStatus: function() {
                    var e, n;
                    return K()(e = ["accepted", "takeover.accepted"]).call(e, (n = this.currentActiveTask) === null || n === void 0 ? void 0 : n.eventType) > -1
                },
                enableZvaAgentAssist: function() {
                    var e, n;
                    return ((e = this.account) === null || e === void 0 ? void 0 : e.enableZvaAgentAssist) && ((n = this.userOptions) === null || n === void 0 ? void 0 : n.enableAIExpertAssist)
                },
                enableVoicemailManagement: function() {
                    return this.getChildSettingEnabled("voicemail-management")
                },
                inboxReadPermission: function() {
                    return this.featureOptions.enable_client_setting ? this.getSettingEnabled("inbox-tab") : this.getPermissionEnabled("VecVoicemail:Read")
                }
            }),
            watch: {
                coreTabReady: function(e) {
                    e && this.menuTab === -1 && this.initMenuTab()
                },
                workerEmitError: function(e) {
                    if (this.ErrorTip && (this.ErrorTip.close(),
                        this.ErrorTip = null),
                        e) {
                        var n = this.$createElement
                            , l = [n("span", null, "Connection error")];
                        if (M()(e).call(e, "zpns-close-")) {
                            var f = e.split("zpns-close-")[1];
                            l.push(n("span", null, ": Code: ".concat(f, ". Please ")))
                        } else
                            l.push(n("span", null, ": Code: ".concat(e, ". Please ")));
                        l.push(n("a", {
                            style: "color: #0E72ED; cursor: pointer",
                            on: {
                                click: function() {
                                    window.location.reload()
                                }
                            }
                        }, "reload the page")),
                            l.push(n("span", null, ".")),
                            this.ErrorTip = this.$message({
                                showClose: !1,
                                duration: 0,
                                type: "warning",
                                message: n("p", null, l)
                            })
                    }
                },
                coreWorkerEmitError: function(e) {
                    var n = this;
                    if (this.coreErrorTip && (this.coreErrorTip.close(),
                        this.coreErrorTip = null),
                        e) {
                        var l = this.$createElement
                            , f = [l("span", null, "Core service connection error")];
                        if (M()(e).call(e, "zpns-close-")) {
                            var g = e.split("zpns-close-")[1];
                            f.push(l("span", null, ": Code: ".concat(g, ". ")))
                        } else
                            f.push(l("span", null, ": Code: ".concat(e, ". ")));
                        f.push(l("a", {
                            style: "color: #0E72ED; cursor: pointer",
                            on: {
                                click: function() {
                                    n.coreZPNSReconnect(),
                                        n.coreErrorTip.close(),
                                        n.coreErrorTip = null
                                }
                            }
                        }, "Reconnect")),
                            f.push(l("span", null, ".")),
                            this.coreErrorTip = this.$message({
                                showClose: !1,
                                duration: 0,
                                type: "warning",
                                message: l("p", null, f)
                            })
                    }
                },
                switchSessionTo: function(e) {
                    e > -1 && (this.handleMenuClick(e),
                        this.resetMenuTarget())
                },
                resetAgentStatus: function(e) {
                    var n = this;
                    e && (this.wrapupDoneFlag = !0,
                        this.$nextTick(function() {
                            n.wrapupDoneFlag = !1
                        }),
                        this.setResetAgentStatus(!1))
                },
                needRefreshRecentList: function(e) {
                    var n = this;
                    console.log(e),
                    e && (this.refreshRecentList = !0,
                        this.$nextTick(function() {
                            n.refreshRecentList = !1
                        }),
                        this.setRefreshRecentList(!1))
                },
                "messageToast.needShow": function(e) {
                    var n = this;
                    if (e) {
                        var l = this.messageToast.message
                            , f = ee()();
                        if (l === this.lastToastMessage && f - this.lastToastTime < 2e3) {
                            this.setToastNotify({
                                needShow: !1
                            });
                            return
                        }
                        this.lastToastMessage = l,
                            this.lastToastTime = f,
                            this.handleShowToastMessage(),
                            this.$nextTick(function() {
                                n.setToastNotify({
                                    needShow: !1
                                })
                            })
                    }
                },
                isMenuRecentSessionSelected: function(e) {
                    this.setHistoryIsInDetailPage(e)
                }
            },
            provide: function() {
                var e = this;
                return {
                    $agent: function() {
                        return {
                            workerClient: e.workerClient,
                            userInfo: e.userInfo,
                            zpns: e.zpns
                        }
                    },
                    $tab: function(l) {
                        l !== e.tab && (e.tab = l)
                    },
                    $getChannelInstance: function() {
                        return e.channelInstance
                    },
                    $debounceChangeStatus: this.debounceChangeStatus,
                    $updateCallInfo: this.$updateCallInfo,
                    $handleMenuClick: this.handleMenuClick,
                    $getCapabilities: function() {
                        return {}
                    },
                    $handleInitPhone: this.handleInitPhone,
                    $smsUpgradeToVoice: this.smsUpgradeToVoice,
                    $featureOptions: function() {
                        return e.featureOptions
                    }
                }
            },
            inject: {
                setPageStatus: "setPageStatus"
            },
            destroyed: function() {
                window.onresize = null
            },
            components: {
                Chat: Og,
                ChatTask: Nc,
                LiveVideoTask: Du,
                LiveVideoV3: Bg,
                VideoOutboundDialog: gr.VideoOutboundDialog,
                Engagements: Op,
                Inbox: pl,
                RecentSessionContent: Tf,
                TopBar: _d,
                LeftSideBar: td,
                RightSideBar: us,
                SmsOutboundContent: Lt.SmsOutboundContent,
                TheSideBarViewer: tf,
                TheAieaSideBarView: Zr,
                phonePanel: pi,
                logSettings: Fu,
                notificationCenter: zu,
                ThePanelHeader: hs,
                MonitorIndicator: of,
                SMSWarning: Lt.SMSWarning,
                MergeWindow: Kg,
                GlobalRing: Lt.GlobalRing,
                NotifyUnsolvedVoicemails: Lt.inboxComponents.NotifyUnsolvedVoicemails
            }
        };
        var ay = (0,
            ir.A)(ry, Y, J, !1, null, "2b5bbf02", null);
        const iy = ay.exports
    }
    ,
    65335: pn => {
        "use strict";
        pn.exports = ContactConfig
    }
    ,
    74061: pn => {
        "use strict";
        pn.exports = Vue
    }
}, pn => {
    pn.O(0, [883], () => {
            [327, 480, 809].map(pn.E)
        }
        , 5);
    var E = Y => pn(pn.s = Y);
    pn.O(0, [836, 589, 184, 412, 894, 693, 268, 4, 577, 839, 997, 309, 829, 482], () => E(50920));
    var a = pn.O()
}
]);
